
regbits.elf:     file format elf64-x86-64


Disassembly of section .text:

00000000004007a0 <main>:
  4007a0:	55                   	push   %rbp
  4007a1:	bf 00 00 80 00       	mov    $0x800000,%edi
  4007a6:	53                   	push   %rbx
  4007a7:	48 83 ec 28          	sub    $0x28,%rsp
  4007ab:	e8 c0 ff ff ff       	callq  400770 <brk@plt>
  4007b0:	85 c0                	test   %eax,%eax
  4007b2:	89 c5                	mov    %eax,%ebp
  4007b4:	75 33                	jne    4007e9 <main+0x49>
  4007b6:	48 89 e6             	mov    %rsp,%rsi
  4007b9:	31 ff                	xor    %edi,%edi
  4007bb:	bb a0 86 01 00       	mov    $0x186a0,%ebx
  4007c0:	e8 5b ff ff ff       	callq  400720 <clock_gettime@plt>
  4007c5:	0f 1f 00             	nopl   (%rax)
  4007c8:	31 c0                	xor    %eax,%eax
  4007ca:	e8 01 18 00 00       	callq  401fd0 <run>
  4007cf:	83 eb 01             	sub    $0x1,%ebx
  4007d2:	75 f4                	jne    4007c8 <main+0x28>
  4007d4:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  4007d9:	31 ff                	xor    %edi,%edi
  4007db:	e8 40 ff ff ff       	callq  400720 <clock_gettime@plt>
  4007e0:	48 83 c4 28          	add    $0x28,%rsp
  4007e4:	89 e8                	mov    %ebp,%eax
  4007e6:	5b                   	pop    %rbx
  4007e7:	5d                   	pop    %rbp
  4007e8:	c3                   	retq   
  4007e9:	e8 72 ff ff ff       	callq  400760 <__errno_location@plt>
  4007ee:	8b 18                	mov    (%rax),%ebx
  4007f0:	bd 01 00 00 00       	mov    $0x1,%ebp
  4007f5:	89 df                	mov    %ebx,%edi
  4007f7:	e8 54 ff ff ff       	callq  400750 <strerror@plt>
  4007fc:	48 8b 3d 7d 48 20 00 	mov    0x20487d(%rip),%rdi        # 605080 <stdout@@GLIBC_2.2.5>
  400803:	48 89 c1             	mov    %rax,%rcx
  400806:	41 89 d8             	mov    %ebx,%r8d
  400809:	ba 00 00 80 00       	mov    $0x800000,%edx
  40080e:	be f4 29 40 00       	mov    $0x4029f4,%esi
  400813:	31 c0                	xor    %eax,%eax
  400815:	e8 66 ff ff ff       	callq  400780 <fprintf@plt>
  40081a:	eb c4                	jmp    4007e0 <main+0x40>

000000000040081c <_start>:
  40081c:	31 ed                	xor    %ebp,%ebp
  40081e:	49 89 d1             	mov    %rdx,%r9
  400821:	5e                   	pop    %rsi
  400822:	48 89 e2             	mov    %rsp,%rdx
  400825:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400829:	50                   	push   %rax
  40082a:	54                   	push   %rsp
  40082b:	49 c7 c0 e0 29 40 00 	mov    $0x4029e0,%r8
  400832:	48 c7 c1 70 29 40 00 	mov    $0x402970,%rcx
  400839:	48 c7 c7 a0 07 40 00 	mov    $0x4007a0,%rdi
  400840:	e8 eb fe ff ff       	callq  400730 <__libc_start_main@plt>
  400845:	f4                   	hlt    
  400846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40084d:	00 00 00 

0000000000400850 <deregister_tm_clones>:
  400850:	b8 6f 50 60 00       	mov    $0x60506f,%eax
  400855:	55                   	push   %rbp
  400856:	48 2d 68 50 60 00    	sub    $0x605068,%rax
  40085c:	48 83 f8 0e          	cmp    $0xe,%rax
  400860:	48 89 e5             	mov    %rsp,%rbp
  400863:	77 02                	ja     400867 <deregister_tm_clones+0x17>
  400865:	5d                   	pop    %rbp
  400866:	c3                   	retq   
  400867:	b8 00 00 00 00       	mov    $0x0,%eax
  40086c:	48 85 c0             	test   %rax,%rax
  40086f:	74 f4                	je     400865 <deregister_tm_clones+0x15>
  400871:	5d                   	pop    %rbp
  400872:	bf 68 50 60 00       	mov    $0x605068,%edi
  400877:	ff e0                	jmpq   *%rax
  400879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400880 <register_tm_clones>:
  400880:	b8 68 50 60 00       	mov    $0x605068,%eax
  400885:	55                   	push   %rbp
  400886:	48 2d 68 50 60 00    	sub    $0x605068,%rax
  40088c:	48 c1 f8 03          	sar    $0x3,%rax
  400890:	48 89 e5             	mov    %rsp,%rbp
  400893:	48 89 c2             	mov    %rax,%rdx
  400896:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40089a:	48 01 d0             	add    %rdx,%rax
  40089d:	48 d1 f8             	sar    %rax
  4008a0:	75 02                	jne    4008a4 <register_tm_clones+0x24>
  4008a2:	5d                   	pop    %rbp
  4008a3:	c3                   	retq   
  4008a4:	ba 00 00 00 00       	mov    $0x0,%edx
  4008a9:	48 85 d2             	test   %rdx,%rdx
  4008ac:	74 f4                	je     4008a2 <register_tm_clones+0x22>
  4008ae:	5d                   	pop    %rbp
  4008af:	48 89 c6             	mov    %rax,%rsi
  4008b2:	bf 68 50 60 00       	mov    $0x605068,%edi
  4008b7:	ff e2                	jmpq   *%rdx
  4008b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004008c0 <__do_global_dtors_aux>:
  4008c0:	80 3d c1 47 20 00 00 	cmpb   $0x0,0x2047c1(%rip)        # 605088 <completed.6337>
  4008c7:	75 11                	jne    4008da <__do_global_dtors_aux+0x1a>
  4008c9:	55                   	push   %rbp
  4008ca:	48 89 e5             	mov    %rsp,%rbp
  4008cd:	e8 7e ff ff ff       	callq  400850 <deregister_tm_clones>
  4008d2:	5d                   	pop    %rbp
  4008d3:	c6 05 ae 47 20 00 01 	movb   $0x1,0x2047ae(%rip)        # 605088 <completed.6337>
  4008da:	f3 c3                	repz retq 
  4008dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004008e0 <frame_dummy>:
  4008e0:	48 83 3d f8 44 20 00 	cmpq   $0x0,0x2044f8(%rip)        # 604de0 <__JCR_END__>
  4008e7:	00 
  4008e8:	74 1e                	je     400908 <frame_dummy+0x28>
  4008ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4008ef:	48 85 c0             	test   %rax,%rax
  4008f2:	74 14                	je     400908 <frame_dummy+0x28>
  4008f4:	55                   	push   %rbp
  4008f5:	bf e0 4d 60 00       	mov    $0x604de0,%edi
  4008fa:	48 89 e5             	mov    %rsp,%rbp
  4008fd:	ff d0                	callq  *%rax
  4008ff:	5d                   	pop    %rbp
  400900:	e9 7b ff ff ff       	jmpq   400880 <register_tm_clones>
  400905:	0f 1f 00             	nopl   (%rax)
  400908:	e9 73 ff ff ff       	jmpq   400880 <register_tm_clones>
  40090d:	0f 1f 00             	nopl   (%rax)

0000000000400910 <zero_reg()>:
  400910:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
  400917:	00 00 00 00 
  40091b:	c3                   	retq   
  40091c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400920 <zero_array()>:
  400920:	c7 04 25 2c 01 70 00 	movl   $0x0,0x70012c
  400927:	00 00 00 00 
  40092b:	c3                   	retq   
  40092c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400930 <set_singl_bits_operator()>:
  400930:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400937:	83 c8 40             	or     $0x40,%eax
  40093a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400941:	c3                   	retq   
  400942:	0f 1f 40 00          	nopl   0x0(%rax)
  400946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40094d:	00 00 00 

0000000000400950 <set_singl_bits_method()>:
  400950:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400957:	83 c8 40             	or     $0x40,%eax
  40095a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400961:	c3                   	retq   
  400962:	0f 1f 40 00          	nopl   0x0(%rax)
  400966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40096d:	00 00 00 

0000000000400970 <clr_singl_bits_operator()>:
  400970:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400977:	83 e0 bf             	and    $0xffffffbf,%eax
  40097a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400981:	c3                   	retq   
  400982:	0f 1f 40 00          	nopl   0x0(%rax)
  400986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40098d:	00 00 00 

0000000000400990 <clr_singl_bits_method()>:
  400990:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400997:	83 e0 bf             	and    $0xffffffbf,%eax
  40099a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4009a1:	c3                   	retq   
  4009a2:	0f 1f 40 00          	nopl   0x0(%rax)
  4009a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009ad:	00 00 00 

00000000004009b0 <set_singl_mskd_operator()>:
  4009b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4009b7:	83 c8 02             	or     $0x2,%eax
  4009ba:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4009c1:	c3                   	retq   
  4009c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4009c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009cd:	00 00 00 

00000000004009d0 <set_singl_mskd_method()>:
  4009d0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4009d7:	83 c8 02             	or     $0x2,%eax
  4009da:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4009e1:	c3                   	retq   
  4009e2:	0f 1f 40 00          	nopl   0x0(%rax)
  4009e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009ed:	00 00 00 

00000000004009f0 <clr_singl_mskd_operator()>:
  4009f0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4009f7:	83 e0 fd             	and    $0xfffffffd,%eax
  4009fa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400a01:	c3                   	retq   
  400a02:	0f 1f 40 00          	nopl   0x0(%rax)
  400a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a0d:	00 00 00 

0000000000400a10 <clr_singl_mskd_method()>:
  400a10:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400a17:	83 e0 fd             	and    $0xfffffffd,%eax
  400a1a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400a21:	c3                   	retq   
  400a22:	0f 1f 40 00          	nopl   0x0(%rax)
  400a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a2d:	00 00 00 

0000000000400a30 <equ_singl_bits_operator()>:
  400a30:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400a37:	40 00 00 00 
  400a3b:	c3                   	retq   
  400a3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a40 <equ_singl_bits_method()>:
  400a40:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400a47:	40 00 00 00 
  400a4b:	c3                   	retq   
  400a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a50 <equ_singl_mskd_operator()>:
  400a50:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400a57:	02 00 00 00 
  400a5b:	c3                   	retq   
  400a5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a60 <equ_singl_mskd_method()>:
  400a60:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400a67:	02 00 00 00 
  400a6b:	c3                   	retq   
  400a6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a70 <flp_singl_bits_operator()>:
  400a70:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400a77:	83 f0 40             	xor    $0x40,%eax
  400a7a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400a81:	c3                   	retq   
  400a82:	0f 1f 40 00          	nopl   0x0(%rax)
  400a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a8d:	00 00 00 

0000000000400a90 <flp_singl_bits_method()>:
  400a90:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400a97:	83 f0 40             	xor    $0x40,%eax
  400a9a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400aa1:	c3                   	retq   
  400aa2:	0f 1f 40 00          	nopl   0x0(%rax)
  400aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400aad:	00 00 00 

0000000000400ab0 <flp_singl_mskd_operator()>:
  400ab0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400ab7:	83 f0 02             	xor    $0x2,%eax
  400aba:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400ac1:	c3                   	retq   
  400ac2:	0f 1f 40 00          	nopl   0x0(%rax)
  400ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400acd:	00 00 00 

0000000000400ad0 <flp_singl_mskd_method()>:
  400ad0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400ad7:	83 f0 02             	xor    $0x2,%eax
  400ada:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400ae1:	c3                   	retq   
  400ae2:	0f 1f 40 00          	nopl   0x0(%rax)
  400ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400aed:	00 00 00 

0000000000400af0 <ins_singl_mskd_operator()>:
  400af0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400af7:	83 e0 f9             	and    $0xfffffff9,%eax
  400afa:	83 c8 04             	or     $0x4,%eax
  400afd:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b04:	c3                   	retq   
  400b05:	90                   	nop
  400b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b0d:	00 00 00 

0000000000400b10 <ins_singl_mskd_method()>:
  400b10:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b17:	83 e0 f9             	and    $0xfffffff9,%eax
  400b1a:	83 c8 04             	or     $0x4,%eax
  400b1d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b24:	c3                   	retq   
  400b25:	90                   	nop
  400b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b2d:	00 00 00 

0000000000400b30 <set_multi_bits_operator()>:
  400b30:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b37:	83 c8 21             	or     $0x21,%eax
  400b3a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b41:	c3                   	retq   
  400b42:	0f 1f 40 00          	nopl   0x0(%rax)
  400b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b4d:	00 00 00 

0000000000400b50 <set_multi_bits_method()>:
  400b50:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b57:	83 c8 21             	or     $0x21,%eax
  400b5a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b61:	c3                   	retq   
  400b62:	0f 1f 40 00          	nopl   0x0(%rax)
  400b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b6d:	00 00 00 

0000000000400b70 <ins_multi_mskd_operator()>:
  400b70:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b77:	25 79 f0 ff ff       	and    $0xfffff079,%eax
  400b7c:	0d 82 01 00 00       	or     $0x182,%eax
  400b81:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b88:	c3                   	retq   
  400b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400b90 <ins_multi_mskd_method()>:
  400b90:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b97:	25 79 f0 ff ff       	and    $0xfffff079,%eax
  400b9c:	0d 82 01 00 00       	or     $0x182,%eax
  400ba1:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400ba8:	c3                   	retq   
  400ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400bb0 <equ_multi_bits_operator()>:
  400bb0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
  400bb7:	60 00 00 00 
  400bbb:	c3                   	retq   
  400bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bc0 <equ_multi_bits_method()>:
  400bc0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
  400bc7:	60 00 00 00 
  400bcb:	c3                   	retq   
  400bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bd0 <equ_multi_mskd_operator()>:
  400bd0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
  400bd7:	08 03 00 00 
  400bdb:	c3                   	retq   
  400bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400be0 <equ_multi_mskd_method()>:
  400be0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
  400be7:	08 03 00 00 
  400beb:	c3                   	retq   
  400bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bf0 <equ_bits_mskd_operator()>:
  400bf0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400bf7:	22 00 00 00 
  400bfb:	c3                   	retq   
  400bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c00 <equ_bits_mskd_method()>:
  400c00:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400c07:	22 00 00 00 
  400c0b:	c3                   	retq   
  400c0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c10 <equ_mskd_bits_operator()>:
  400c10:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
  400c17:	44 00 00 00 
  400c1b:	c3                   	retq   
  400c1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c20 <equ_mskd_bits_method()>:
  400c20:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
  400c27:	44 00 00 00 
  400c2b:	c3                   	retq   
  400c2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c30 <equ_bits_var()>:
  400c30:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400c37:	40 00 00 00 
  400c3b:	c7 04 25 c4 02 70 00 	movl   $0x1,0x7002c4
  400c42:	01 00 00 00 
  400c46:	c3                   	retq   
  400c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400c4e:	00 00 

0000000000400c50 <equ_mskd_var()>:
  400c50:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400c57:	02 00 00 00 
  400c5b:	c7 04 25 c4 02 70 00 	movl   $0x180,0x7002c4
  400c62:	80 01 00 00 
  400c66:	c3                   	retq   
  400c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400c6e:	00 00 

0000000000400c70 <cmp_equ_zero()>:
  400c70:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
  400c77:	00 00 00 00 
  400c7b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400c82:	85 c0                	test   %eax,%eax
  400c84:	74 12                	je     400c98 <cmp_equ_zero()+0x28>
  400c86:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  400c8d:	00 00 00 22 
  400c91:	c3                   	retq   
  400c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400c98:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
  400c9f:	00 00 00 3a 
  400ca3:	c3                   	retq   
  400ca4:	66 90                	xchg   %ax,%ax
  400ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400cad:	00 00 00 

0000000000400cb0 <cmp_neq_zero()>:
  400cb0:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
  400cb7:	00 00 00 00 
  400cbb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400cc2:	85 c0                	test   %eax,%eax
  400cc4:	75 12                	jne    400cd8 <cmp_neq_zero()+0x28>
  400cc6:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  400ccd:	20 00 00 00 
  400cd1:	c3                   	retq   
  400cd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400cd8:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  400cdf:	04 00 00 00 
  400ce3:	c3                   	retq   
  400ce4:	66 90                	xchg   %ax,%ax
  400ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ced:	00 00 00 

0000000000400cf0 <cmp_equ_bits()>:
  400cf0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400cf7:	40 00 00 00 
  400cfb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400d02:	a8 40                	test   $0x40,%al
  400d04:	75 12                	jne    400d18 <cmp_equ_bits()+0x28>
  400d06:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
  400d0d:	00 00 00 1a 
  400d11:	c3                   	retq   
  400d12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400d18:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  400d1f:	00 00 00 16 
  400d23:	c3                   	retq   
  400d24:	66 90                	xchg   %ax,%ax
  400d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d2d:	00 00 00 

0000000000400d30 <cmp_neq_bits()>:
  400d30:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400d37:	40 00 00 00 
  400d3b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400d42:	a8 40                	test   $0x40,%al
  400d44:	74 12                	je     400d58 <cmp_neq_bits()+0x28>
  400d46:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  400d4d:	20 00 00 00 
  400d51:	c3                   	retq   
  400d52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400d58:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400d5f:	02 00 00 00 
  400d63:	c3                   	retq   
  400d64:	66 90                	xchg   %ax,%ax
  400d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d6d:	00 00 00 

0000000000400d70 <cmp_equ_mskd()>:
  400d70:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
  400d77:	00 d0 01 00 
  400d7b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400d82:	25 00 f0 01 00       	and    $0x1f000,%eax
  400d87:	3d 00 10 01 00       	cmp    $0x11000,%eax
  400d8c:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400d93:	74 1b                	je     400db0 <cmp_equ_mskd()+0x40>
  400d95:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
  400d9a:	0d 00 00 00 22       	or     $0x22000000,%eax
  400d9f:	89 04 25 24 02 70 00 	mov    %eax,0x700224
  400da6:	c3                   	retq   
  400da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400dae:	00 00 
  400db0:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
  400db5:	0d 00 00 00 0e       	or     $0xe000000,%eax
  400dba:	89 04 25 24 02 70 00 	mov    %eax,0x700224
  400dc1:	c3                   	retq   
  400dc2:	0f 1f 40 00          	nopl   0x0(%rax)
  400dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400dcd:	00 00 00 

0000000000400dd0 <cmp_neq_mskd()>:
  400dd0:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
  400dd7:	00 d0 01 00 
  400ddb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400de2:	25 00 f0 01 00       	and    $0x1f000,%eax
  400de7:	3d 00 10 01 00       	cmp    $0x11000,%eax
  400dec:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400df3:	74 13                	je     400e08 <cmp_neq_mskd()+0x38>
  400df5:	83 e0 f9             	and    $0xfffffff9,%eax
  400df8:	83 c8 04             	or     $0x4,%eax
  400dfb:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400e02:	c3                   	retq   
  400e03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400e08:	83 c8 40             	or     $0x40,%eax
  400e0b:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400e12:	c3                   	retq   
  400e13:	0f 1f 00             	nopl   (%rax)
  400e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e1d:	00 00 00 

0000000000400e20 <cmp_equ_reg()>:
  400e20:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400e27:	22 00 00 00 
  400e2b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400e32:	83 f8 22             	cmp    $0x22,%eax
  400e35:	74 11                	je     400e48 <cmp_equ_reg()+0x28>
  400e37:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  400e3e:	00 00 00 2e 
  400e42:	c3                   	retq   
  400e43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400e48:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
  400e4f:	00 00 00 2a 
  400e53:	c3                   	retq   
  400e54:	66 90                	xchg   %ax,%ax
  400e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e5d:	00 00 00 

0000000000400e60 <cmp_neq_reg()>:
  400e60:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400e67:	22 00 00 00 
  400e6b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400e72:	83 f8 22             	cmp    $0x22,%eax
  400e75:	74 11                	je     400e88 <cmp_neq_reg()+0x28>
  400e77:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400e7e:	02 00 00 00 
  400e82:	c3                   	retq   
  400e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400e88:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  400e8f:	20 00 00 00 
  400e93:	c3                   	retq   
  400e94:	66 90                	xchg   %ax,%ax
  400e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e9d:	00 00 00 

0000000000400ea0 <constexpr_bits_array()>:
  400ea0:	c7 04 25 2c 01 70 00 	movl   $0x6,0x70012c
  400ea7:	06 00 00 00 
  400eab:	c7 04 25 a0 01 70 00 	movl   $0x2000,0x7001a0
  400eb2:	00 20 00 00 
  400eb6:	c3                   	retq   
  400eb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400ebe:	00 00 

0000000000400ec0 <runtime_bits_array()>:
  400ec0:	c7 44 24 fc 03 00 00 	movl   $0x3,-0x4(%rsp)
  400ec7:	00 
  400ec8:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
  400ecc:	c7 04 85 20 01 70 00 	movl   $0x21,0x700120(,%rax,4)
  400ed3:	21 00 00 00 
  400ed7:	c7 44 24 fc 07 00 00 	movl   $0x7,-0x4(%rsp)
  400ede:	00 
  400edf:	b8 01 00 00 00       	mov    $0x1,%eax
  400ee4:	8b 4c 24 fc          	mov    -0x4(%rsp),%ecx
  400ee8:	d3 e0                	shl    %cl,%eax
  400eea:	89 04 25 a0 01 70 00 	mov    %eax,0x7001a0
  400ef1:	c3                   	retq   
  400ef2:	0f 1f 40 00          	nopl   0x0(%rax)
  400ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400efd:	00 00 00 

0000000000400f00 <prescaler_low()>:
  400f00:	c7 04 25 24 02 70 00 	movl   $0x77,0x700224
  400f07:	77 00 00 00 
  400f0b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400f12:	83 e0 7f             	and    $0x7f,%eax
  400f15:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  400f1c:	c3                   	retq   
  400f1d:	0f 1f 00             	nopl   (%rax)

0000000000400f20 <prescaler_high()>:
  400f20:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
  400f27:	00 00 00 3a 
  400f2b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400f32:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400f37:	c1 e8 19             	shr    $0x19,%eax
  400f3a:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  400f41:	c3                   	retq   
  400f42:	0f 1f 40 00          	nopl   0x0(%rax)
  400f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400f4d:	00 00 00 

0000000000400f50 <reg_mskd_lss()>:
  400f50:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
  400f57:	00 00 00 36 
  400f5b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400f62:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400f67:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
  400f6c:	76 12                	jbe    400f80 <reg_mskd_lss()+0x30>
  400f6e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  400f75:	04 00 00 00 
  400f79:	c3                   	retq   
  400f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400f80:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400f87:	02 00 00 00 
  400f8b:	c3                   	retq   
  400f8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400f90 <reg_mskd_leq()>:
  400f90:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  400f97:	00 00 00 2e 
  400f9b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400fa2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400fa7:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
  400fac:	77 22                	ja     400fd0 <reg_mskd_leq()+0x40>
  400fae:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400fb5:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400fba:	3d 00 00 00 30       	cmp    $0x30000000,%eax
  400fbf:	77 0f                	ja     400fd0 <reg_mskd_leq()+0x40>
  400fc1:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400fc8:	02 00 00 00 
  400fcc:	c3                   	retq   
  400fcd:	0f 1f 00             	nopl   (%rax)
  400fd0:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  400fd7:	04 00 00 00 
  400fdb:	c3                   	retq   
  400fdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400fe0 <reg_mskd_gtr()>:
  400fe0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  400fe7:	00 00 00 26 
  400feb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400ff2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400ff7:	3d 00 00 00 24       	cmp    $0x24000000,%eax
  400ffc:	77 12                	ja     401010 <reg_mskd_gtr()+0x30>
  400ffe:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401005:	04 00 00 00 
  401009:	c3                   	retq   
  40100a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401010:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401017:	02 00 00 00 
  40101b:	c3                   	retq   
  40101c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401020 <reg_mskd_geq()>:
  401020:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  401027:	00 00 00 22 
  40102b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401032:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401037:	3d ff ff ff 1f       	cmp    $0x1fffffff,%eax
  40103c:	76 22                	jbe    401060 <reg_mskd_geq()+0x40>
  40103e:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401045:	25 00 00 00 3e       	and    $0x3e000000,%eax
  40104a:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
  40104f:	76 0f                	jbe    401060 <reg_mskd_geq()+0x40>
  401051:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401058:	02 00 00 00 
  40105c:	c3                   	retq   
  40105d:	0f 1f 00             	nopl   (%rax)
  401060:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401067:	04 00 00 00 
  40106b:	c3                   	retq   
  40106c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401070 <pos_cmp_eq()>:
  401070:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401077:	02 00 00 00 
  40107b:	c3                   	retq   
  40107c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401080 <pos_cmp_ne()>:
  401080:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401087:	02 00 00 00 
  40108b:	c3                   	retq   
  40108c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401090 <bits_extract_eq()>:
  401090:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401097:	40 00 00 00 
  40109b:	83 3c 25 c4 02 70 00 	cmpl   $0x40,0x7002c4
  4010a2:	40 
  4010a3:	74 13                	je     4010b8 <bits_extract_eq()+0x28>
  4010a5:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4010ac:	04 00 00 00 
  4010b0:	c3                   	retq   
  4010b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4010b8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4010bf:	02 00 00 00 
  4010c3:	c3                   	retq   
  4010c4:	66 90                	xchg   %ax,%ax
  4010c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4010cd:	00 00 00 

00000000004010d0 <mskd_extract_eq()>:
  4010d0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4010d7:	02 00 00 00 
  4010db:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4010e2:	83 f8 02             	cmp    $0x2,%eax
  4010e5:	74 11                	je     4010f8 <mskd_extract_eq()+0x28>
  4010e7:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4010ee:	40 00 00 00 
  4010f2:	c3                   	retq   
  4010f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4010f8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  4010ff:	20 00 00 00 
  401103:	c3                   	retq   
  401104:	66 90                	xchg   %ax,%ax
  401106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40110d:	00 00 00 

0000000000401110 <mskd_extract_ne()>:
  401110:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401117:	04 00 00 00 
  40111b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401122:	83 f8 04             	cmp    $0x4,%eax
  401125:	74 11                	je     401138 <mskd_extract_ne()+0x28>
  401127:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  40112e:	20 00 00 00 
  401132:	c3                   	retq   
  401133:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401138:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  40113f:	40 00 00 00 
  401143:	c3                   	retq   
  401144:	66 90                	xchg   %ax,%ax
  401146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40114d:	00 00 00 

0000000000401150 <mskd_extract_lss()>:
  401150:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  401157:	00 00 00 16 
  40115b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401162:	3d ff ff ff 17       	cmp    $0x17ffffff,%eax
  401167:	76 0f                	jbe    401178 <mskd_extract_lss()+0x28>
  401169:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401170:	40 00 00 00 
  401174:	c3                   	retq   
  401175:	0f 1f 00             	nopl   (%rax)
  401178:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  40117f:	20 00 00 00 
  401183:	c3                   	retq   
  401184:	66 90                	xchg   %ax,%ax
  401186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40118d:	00 00 00 

0000000000401190 <mskd_extract_leq()>:
  401190:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401197:	00 00 00 2e 
  40119b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4011a2:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
  4011a7:	77 0f                	ja     4011b8 <mskd_extract_leq()+0x28>
  4011a9:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  4011b0:	20 00 00 00 
  4011b4:	c3                   	retq   
  4011b5:	0f 1f 00             	nopl   (%rax)
  4011b8:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4011bf:	40 00 00 00 
  4011c3:	c3                   	retq   
  4011c4:	66 90                	xchg   %ax,%ax
  4011c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4011cd:	00 00 00 

00000000004011d0 <mskd_extract_gtr()>:
  4011d0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  4011d7:	00 00 00 26 
  4011db:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4011e2:	3d 00 00 00 24       	cmp    $0x24000000,%eax
  4011e7:	77 0f                	ja     4011f8 <mskd_extract_gtr()+0x28>
  4011e9:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4011f0:	40 00 00 00 
  4011f4:	c3                   	retq   
  4011f5:	0f 1f 00             	nopl   (%rax)
  4011f8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  4011ff:	20 00 00 00 
  401203:	c3                   	retq   
  401204:	66 90                	xchg   %ax,%ax
  401206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40120d:	00 00 00 

0000000000401210 <set_bits_global()>:
  401210:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401217:	83 c8 40             	or     $0x40,%eax
  40121a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401221:	c3                   	retq   
  401222:	0f 1f 40 00          	nopl   0x0(%rax)
  401226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40122d:	00 00 00 

0000000000401230 <ins_mskd_global()>:
  401230:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401237:	83 e0 f9             	and    $0xfffffff9,%eax
  40123a:	83 c8 02             	or     $0x2,%eax
  40123d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401244:	c3                   	retq   
  401245:	90                   	nop
  401246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40124d:	00 00 00 

0000000000401250 <assign_array_global()>:
  401250:	c7 04 25 2c 01 70 00 	movl   $0xbd,0x70012c
  401257:	bd 00 00 00 
  40125b:	c3                   	retq   
  40125c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401260 <shifted_global()>:
  401260:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401267:	00 00 00 2e 
  40126b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401272:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401277:	c1 e8 19             	shr    $0x19,%eax
  40127a:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  401281:	c3                   	retq   
  401282:	0f 1f 40 00          	nopl   0x0(%rax)
  401286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40128d:	00 00 00 

0000000000401290 <assign_register_global()>:
  401290:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401297:	04 00 00 00 
  40129b:	c3                   	retq   
  40129c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004012a0 <copy_bits_equ()>:
  4012a0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4012a7:	40 00 00 00 
  4012ab:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4012b2:	a8 40                	test   $0x40,%al
  4012b4:	75 12                	jne    4012c8 <copy_bits_equ()+0x28>
  4012b6:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4012bd:	04 00 00 00 
  4012c1:	c3                   	retq   
  4012c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4012c8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4012cf:	02 00 00 00 
  4012d3:	c3                   	retq   
  4012d4:	66 90                	xchg   %ax,%ax
  4012d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4012dd:	00 00 00 

00000000004012e0 <copy_bits_neq()>:
  4012e0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4012e7:	40 00 00 00 
  4012eb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4012f2:	a8 40                	test   $0x40,%al
  4012f4:	74 12                	je     401308 <copy_bits_neq()+0x28>
  4012f6:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4012fd:	04 00 00 00 
  401301:	c3                   	retq   
  401302:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401308:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  40130f:	02 00 00 00 
  401313:	c3                   	retq   
  401314:	66 90                	xchg   %ax,%ax
  401316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40131d:	00 00 00 

0000000000401320 <copy_mskd_equ()>:
  401320:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  401327:	00 00 00 16 
  40132b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401332:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401337:	3d 00 00 00 16       	cmp    $0x16000000,%eax
  40133c:	74 12                	je     401350 <copy_mskd_equ()+0x30>
  40133e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401345:	04 00 00 00 
  401349:	c3                   	retq   
  40134a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401350:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401357:	02 00 00 00 
  40135b:	c3                   	retq   
  40135c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401360 <copy_mskd_neq()>:
  401360:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
  401367:	00 00 00 1a 
  40136b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401372:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401377:	3d 00 00 00 1a       	cmp    $0x1a000000,%eax
  40137c:	74 12                	je     401390 <copy_mskd_neq()+0x30>
  40137e:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401385:	02 00 00 00 
  401389:	c3                   	retq   
  40138a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401390:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401397:	04 00 00 00 
  40139b:	c3                   	retq   
  40139c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013a0 <copy_mskd_lss()>:
  4013a0:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
  4013a7:	00 00 00 36 
  4013ab:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4013b2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4013b7:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
  4013bc:	76 12                	jbe    4013d0 <copy_mskd_lss()+0x30>
  4013be:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4013c5:	04 00 00 00 
  4013c9:	c3                   	retq   
  4013ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4013d0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4013d7:	02 00 00 00 
  4013db:	c3                   	retq   
  4013dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013e0 <copy_mskd_leq()>:
  4013e0:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  4013e7:	00 00 00 2e 
  4013eb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4013f2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4013f7:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
  4013fc:	77 12                	ja     401410 <copy_mskd_leq()+0x30>
  4013fe:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401405:	02 00 00 00 
  401409:	c3                   	retq   
  40140a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401410:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401417:	04 00 00 00 
  40141b:	c3                   	retq   
  40141c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401420 <copy_mskd_gtr()>:
  401420:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401427:	00 00 00 26 
  40142b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401432:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401437:	3d 00 00 00 24       	cmp    $0x24000000,%eax
  40143c:	77 12                	ja     401450 <copy_mskd_gtr()+0x30>
  40143e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401445:	04 00 00 00 
  401449:	c3                   	retq   
  40144a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401450:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401457:	02 00 00 00 
  40145b:	c3                   	retq   
  40145c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401460 <copy_mskd_geq()>:
  401460:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  401467:	00 00 00 22 
  40146b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401472:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401477:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
  40147c:	76 12                	jbe    401490 <copy_mskd_geq()+0x30>
  40147e:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401485:	02 00 00 00 
  401489:	c3                   	retq   
  40148a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401490:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401497:	04 00 00 00 
  40149b:	c3                   	retq   
  40149c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014a0 <copy_shifted()>:
  4014a0:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  4014a7:	00 00 00 16 
  4014ab:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4014b2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4014b7:	3d 00 00 00 16       	cmp    $0x16000000,%eax
  4014bc:	74 12                	je     4014d0 <copy_shifted()+0x30>
  4014be:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4014c5:	04 00 00 00 
  4014c9:	c3                   	retq   
  4014ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4014d0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4014d7:	02 00 00 00 
  4014db:	c3                   	retq   
  4014dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014e0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>:
  4014e0:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
  4014e7:	66 00 00 00 
  4014eb:	c3                   	retq   
  4014ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014f0 <call_pos_ref()>:
  4014f0:	48 83 ec 18          	sub    $0x18,%rsp
  4014f4:	48 89 e7             	mov    %rsp,%rdi
  4014f7:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
  4014fe:	e8 dd ff ff ff       	callq  4014e0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
  401503:	48 89 e7             	mov    %rsp,%rdi
  401506:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
  40150d:	e8 ce ff ff ff       	callq  4014e0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
  401512:	48 83 c4 18          	add    $0x18,%rsp
  401516:	c3                   	retq   
  401517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40151e:	00 00 

0000000000401520 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>:
  401520:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
  401527:	77 00 00 00 
  40152b:	c3                   	retq   
  40152c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401530 <call_pos_ref_global()>:
  401530:	48 83 ec 18          	sub    $0x18,%rsp
  401534:	48 89 e7             	mov    %rsp,%rdi
  401537:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  40153e:	e8 dd ff ff ff       	callq  401520 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>
  401543:	48 83 c4 18          	add    $0x18,%rsp
  401547:	c3                   	retq   
  401548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40154f:	00 

0000000000401550 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>:
  401550:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
  401557:	33 00 00 00 
  40155b:	c3                   	retq   
  40155c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401560 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>:
  401560:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
  401567:	44 00 00 00 
  40156b:	c3                   	retq   
  40156c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401570 <call_pos_val()>:
  401570:	48 83 ec 08          	sub    $0x8,%rsp
  401574:	bf 05 00 00 00       	mov    $0x5,%edi
  401579:	e8 d2 ff ff ff       	callq  401550 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>
  40157e:	bf 06 00 00 00       	mov    $0x6,%edi
  401583:	e8 d8 ff ff ff       	callq  401560 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
  401588:	48 83 c4 08          	add    $0x8,%rsp
  40158c:	c3                   	retq   
  40158d:	0f 1f 00             	nopl   (%rax)

0000000000401590 <call_pos_val_global()>:
  401590:	48 83 ec 08          	sub    $0x8,%rsp
  401594:	bf 06 00 00 00       	mov    $0x6,%edi
  401599:	e8 c2 ff ff ff       	callq  401560 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
  40159e:	48 83 c4 08          	add    $0x8,%rsp
  4015a2:	c3                   	retq   
  4015a3:	0f 1f 00             	nopl   (%rax)
  4015a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4015ad:	00 00 00 

00000000004015b0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>:
  4015b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4015b7:	83 e0 f9             	and    $0xfffffff9,%eax
  4015ba:	0b 47 04             	or     0x4(%rdi),%eax
  4015bd:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4015c4:	c3                   	retq   
  4015c5:	90                   	nop
  4015c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4015cd:	00 00 00 

00000000004015d0 <call_mskd_ref_const()>:
  4015d0:	48 83 ec 18          	sub    $0x18,%rsp
  4015d4:	48 89 e7             	mov    %rsp,%rdi
  4015d7:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  4015de:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%rsp)
  4015e5:	00 
  4015e6:	e8 c5 ff ff ff       	callq  4015b0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
  4015eb:	48 83 c4 18          	add    $0x18,%rsp
  4015ef:	c3                   	retq   

00000000004015f0 <call_mskd_ref_var()>:
  4015f0:	48 83 ec 18          	sub    $0x18,%rsp
  4015f4:	48 89 e7             	mov    %rsp,%rdi
  4015f7:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  4015fe:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
  401605:	00 
  401606:	e8 a5 ff ff ff       	callq  4015b0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
  40160b:	48 83 c4 18          	add    $0x18,%rsp
  40160f:	c3                   	retq   

0000000000401610 <call_mskd_ref_global()>:
  401610:	48 83 ec 18          	sub    $0x18,%rsp
  401614:	48 89 e7             	mov    %rsp,%rdi
  401617:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  40161e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
  401625:	00 
  401626:	e8 85 ff ff ff       	callq  4015b0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
  40162b:	48 83 c4 18          	add    $0x18,%rsp
  40162f:	c3                   	retq   

0000000000401630 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>:
  401630:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401637:	83 e0 f9             	and    $0xfffffff9,%eax
  40163a:	83 c8 02             	or     $0x2,%eax
  40163d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401644:	c3                   	retq   
  401645:	90                   	nop
  401646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40164d:	00 00 00 

0000000000401650 <call_mskd_val_const()>:
  401650:	48 83 ec 08          	sub    $0x8,%rsp
  401654:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
  40165b:	00 00 00 
  40165e:	e8 cd ff ff ff       	callq  401630 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
  401663:	48 83 c4 08          	add    $0x8,%rsp
  401667:	c3                   	retq   
  401668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40166f:	00 

0000000000401670 <call_mskd_val_var()>:
  401670:	48 83 ec 08          	sub    $0x8,%rsp
  401674:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
  40167b:	00 00 00 
  40167e:	e8 ad ff ff ff       	callq  401630 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
  401683:	48 83 c4 08          	add    $0x8,%rsp
  401687:	c3                   	retq   
  401688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40168f:	00 

0000000000401690 <call_mskd_val_global()>:
  401690:	48 83 ec 08          	sub    $0x8,%rsp
  401694:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
  40169b:	00 00 00 
  40169e:	e8 8d ff ff ff       	callq  401630 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
  4016a3:	48 83 c4 08          	add    $0x8,%rsp
  4016a7:	c3                   	retq   
  4016a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4016af:	00 

00000000004016b0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>:
  4016b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4016b7:	83 c8 40             	or     $0x40,%eax
  4016ba:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4016c1:	c3                   	retq   
  4016c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4016c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4016cd:	00 00 00 

00000000004016d0 <call_bits_val_const()>:
  4016d0:	48 83 ec 08          	sub    $0x8,%rsp
  4016d4:	bf 40 00 00 00       	mov    $0x40,%edi
  4016d9:	e8 d2 ff ff ff       	callq  4016b0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
  4016de:	48 83 c4 08          	add    $0x8,%rsp
  4016e2:	c3                   	retq   
  4016e3:	0f 1f 00             	nopl   (%rax)
  4016e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4016ed:	00 00 00 

00000000004016f0 <call_bits_val_var()>:
  4016f0:	48 83 ec 08          	sub    $0x8,%rsp
  4016f4:	bf 40 00 00 00       	mov    $0x40,%edi
  4016f9:	e8 b2 ff ff ff       	callq  4016b0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
  4016fe:	48 83 c4 08          	add    $0x8,%rsp
  401702:	c3                   	retq   
  401703:	0f 1f 00             	nopl   (%rax)
  401706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40170d:	00 00 00 

0000000000401710 <call_bits_val_global()>:
  401710:	48 83 ec 08          	sub    $0x8,%rsp
  401714:	bf 40 00 00 00       	mov    $0x40,%edi
  401719:	e8 92 ff ff ff       	callq  4016b0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
  40171e:	48 83 c4 08          	add    $0x8,%rsp
  401722:	c3                   	retq   
  401723:	0f 1f 00             	nopl   (%rax)
  401726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40172d:	00 00 00 

0000000000401730 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>)>:
  401730:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401737:	09 c7                	or     %eax,%edi
  401739:	89 3c 25 c4 02 70 00 	mov    %edi,0x7002c4
  401740:	c3                   	retq   
  401741:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40174d:	00 00 00 

0000000000401750 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
  401750:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401757:	0b 07                	or     (%rdi),%eax
  401759:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401760:	c3                   	retq   
  401761:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40176d:	00 00 00 

0000000000401770 <call_bits_ref_var()>:
  401770:	48 83 ec 18          	sub    $0x18,%rsp
  401774:	48 89 e7             	mov    %rsp,%rdi
  401777:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
  40177e:	e8 cd ff ff ff       	callq  401750 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  401783:	48 83 c4 18          	add    $0x18,%rsp
  401787:	c3                   	retq   
  401788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40178f:	00 

0000000000401790 <call_bits_ref_const()>:
  401790:	48 83 ec 18          	sub    $0x18,%rsp
  401794:	48 89 e7             	mov    %rsp,%rdi
  401797:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
  40179e:	e8 ad ff ff ff       	callq  401750 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  4017a3:	48 83 c4 18          	add    $0x18,%rsp
  4017a7:	c3                   	retq   
  4017a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4017af:	00 

00000000004017b0 <call_bits_ref_global()>:
  4017b0:	48 83 ec 18          	sub    $0x18,%rsp
  4017b4:	48 89 e7             	mov    %rsp,%rdi
  4017b7:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
  4017be:	e8 8d ff ff ff       	callq  401750 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  4017c3:	48 83 c4 18          	add    $0x18,%rsp
  4017c7:	c3                   	retq   
  4017c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4017cf:	00 

00000000004017d0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  4017d0:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  4017d7:	89 f8                	mov    %edi,%eax
  4017d9:	48 c1 ef 20          	shr    $0x20,%rdi
  4017dd:	f7 d0                	not    %eax
  4017df:	21 d0                	and    %edx,%eax
  4017e1:	09 f8                	or     %edi,%eax
  4017e3:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4017ea:	c3                   	retq   
  4017eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004017f0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&)>:
  4017f0:	8b 07                	mov    (%rdi),%eax
  4017f2:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  4017f9:	f7 d0                	not    %eax
  4017fb:	21 d0                	and    %edx,%eax
  4017fd:	0b 47 04             	or     0x4(%rdi),%eax
  401800:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401807:	c3                   	retq   
  401808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40180f:	00 

0000000000401810 <periph_bits(mcu::Serial*)>:
  401810:	8b 47 04             	mov    0x4(%rdi),%eax
  401813:	83 c8 40             	or     $0x40,%eax
  401816:	89 47 04             	mov    %eax,0x4(%rdi)
  401819:	c3                   	retq   
  40181a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401820 <call_periph_bits()>:
  401820:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  401825:	eb e9                	jmp    401810 <periph_bits(mcu::Serial*)>
  401827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40182e:	00 00 

0000000000401830 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
  401830:	8b 47 04             	mov    0x4(%rdi),%eax
  401833:	09 c6                	or     %eax,%esi
  401835:	89 77 04             	mov    %esi,0x4(%rdi)
  401838:	c3                   	retq   
  401839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401840 <call_periph_bits_val()>:
  401840:	48 83 ec 08          	sub    $0x8,%rsp
  401844:	be 40 00 00 00       	mov    $0x40,%esi
  401849:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  40184e:	e8 dd ff ff ff       	callq  401830 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config>)>
  401853:	48 83 c4 08          	add    $0x8,%rsp
  401857:	c3                   	retq   
  401858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40185f:	00 

0000000000401860 <reg_bits_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
  401860:	8b 07                	mov    (%rdi),%eax
  401862:	09 c6                	or     %eax,%esi
  401864:	89 37                	mov    %esi,(%rdi)
  401866:	c3                   	retq   
  401867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40186e:	00 00 

0000000000401870 <call_reg_bits_val()>:
  401870:	48 83 ec 08          	sub    $0x8,%rsp
  401874:	be 40 00 00 00       	mov    $0x40,%esi
  401879:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  40187e:	e8 dd ff ff ff       	callq  401860 <reg_bits_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config>)>
  401883:	48 83 c4 08          	add    $0x8,%rsp
  401887:	c3                   	retq   
  401888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40188f:	00 

0000000000401890 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
  401890:	8b 47 04             	mov    0x4(%rdi),%eax
  401893:	0b 06                	or     (%rsi),%eax
  401895:	89 47 04             	mov    %eax,0x4(%rdi)
  401898:	c3                   	retq   
  401899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004018a0 <call_periph_bits_ref()>:
  4018a0:	48 83 ec 18          	sub    $0x18,%rsp
  4018a4:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  4018a9:	48 89 e6             	mov    %rsp,%rsi
  4018ac:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
  4018b3:	e8 d8 ff ff ff       	callq  401890 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  4018b8:	48 83 c4 18          	add    $0x18,%rsp
  4018bc:	c3                   	retq   
  4018bd:	0f 1f 00             	nopl   (%rax)

00000000004018c0 <reg_bits_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
  4018c0:	8b 07                	mov    (%rdi),%eax
  4018c2:	0b 06                	or     (%rsi),%eax
  4018c4:	89 07                	mov    %eax,(%rdi)
  4018c6:	c3                   	retq   
  4018c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4018ce:	00 00 

00000000004018d0 <call_reg_bits_ref()>:
  4018d0:	48 83 ec 18          	sub    $0x18,%rsp
  4018d4:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  4018d9:	48 89 e6             	mov    %rsp,%rsi
  4018dc:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
  4018e3:	e8 d8 ff ff ff       	callq  4018c0 <reg_bits_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  4018e8:	48 83 c4 18          	add    $0x18,%rsp
  4018ec:	c3                   	retq   
  4018ed:	0f 1f 00             	nopl   (%rax)

00000000004018f0 <periph_mskd(mcu::Serial*)>:
  4018f0:	8b 47 04             	mov    0x4(%rdi),%eax
  4018f3:	83 e0 f9             	and    $0xfffffff9,%eax
  4018f6:	83 c8 02             	or     $0x2,%eax
  4018f9:	89 47 04             	mov    %eax,0x4(%rdi)
  4018fc:	c3                   	retq   
  4018fd:	0f 1f 00             	nopl   (%rax)

0000000000401900 <call_periph_mskd()>:
  401900:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  401905:	eb e9                	jmp    4018f0 <periph_mskd(mcu::Serial*)>
  401907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40190e:	00 00 

0000000000401910 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401910:	8b 57 04             	mov    0x4(%rdi),%edx
  401913:	89 f0                	mov    %esi,%eax
  401915:	48 c1 ee 20          	shr    $0x20,%rsi
  401919:	f7 d0                	not    %eax
  40191b:	21 d0                	and    %edx,%eax
  40191d:	09 f0                	or     %esi,%eax
  40191f:	89 47 04             	mov    %eax,0x4(%rdi)
  401922:	c3                   	retq   
  401923:	0f 1f 00             	nopl   (%rax)
  401926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40192d:	00 00 00 

0000000000401930 <call_periph_mskd_val()>:
  401930:	48 83 ec 08          	sub    $0x8,%rsp
  401934:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  40193b:	00 00 00 
  40193e:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  401943:	e8 c8 ff ff ff       	callq  401910 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401948:	48 83 c4 08          	add    $0x8,%rsp
  40194c:	c3                   	retq   
  40194d:	0f 1f 00             	nopl   (%rax)

0000000000401950 <reg_mskd_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401950:	8b 17                	mov    (%rdi),%edx
  401952:	89 f0                	mov    %esi,%eax
  401954:	48 c1 ee 20          	shr    $0x20,%rsi
  401958:	f7 d0                	not    %eax
  40195a:	21 d0                	and    %edx,%eax
  40195c:	09 f0                	or     %esi,%eax
  40195e:	89 07                	mov    %eax,(%rdi)
  401960:	c3                   	retq   
  401961:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40196d:	00 00 00 

0000000000401970 <call_reg_mskd_val()>:
  401970:	48 83 ec 08          	sub    $0x8,%rsp
  401974:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  40197b:	00 00 00 
  40197e:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  401983:	e8 c8 ff ff ff       	callq  401950 <reg_mskd_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401988:	48 83 c4 08          	add    $0x8,%rsp
  40198c:	c3                   	retq   
  40198d:	0f 1f 00             	nopl   (%rax)

0000000000401990 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401990:	8b 57 04             	mov    0x4(%rdi),%edx
  401993:	89 f0                	mov    %esi,%eax
  401995:	48 c1 ee 20          	shr    $0x20,%rsi
  401999:	f7 d0                	not    %eax
  40199b:	21 d0                	and    %edx,%eax
  40199d:	09 f0                	or     %esi,%eax
  40199f:	89 47 04             	mov    %eax,0x4(%rdi)
  4019a2:	c3                   	retq   
  4019a3:	0f 1f 00             	nopl   (%rax)
  4019a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ad:	00 00 00 

00000000004019b0 <call_periph_mskd_ref()>:
  4019b0:	48 83 ec 08          	sub    $0x8,%rsp
  4019b4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  4019bb:	00 00 00 
  4019be:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  4019c3:	e8 c8 ff ff ff       	callq  401990 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  4019c8:	48 83 c4 08          	add    $0x8,%rsp
  4019cc:	c3                   	retq   
  4019cd:	0f 1f 00             	nopl   (%rax)

00000000004019d0 <reg_mskd_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  4019d0:	8b 17                	mov    (%rdi),%edx
  4019d2:	89 f0                	mov    %esi,%eax
  4019d4:	48 c1 ee 20          	shr    $0x20,%rsi
  4019d8:	f7 d0                	not    %eax
  4019da:	21 d0                	and    %edx,%eax
  4019dc:	09 f0                	or     %esi,%eax
  4019de:	89 07                	mov    %eax,(%rdi)
  4019e0:	c3                   	retq   
  4019e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4019e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ed:	00 00 00 

00000000004019f0 <call_reg_mskd_ref()>:
  4019f0:	48 83 ec 08          	sub    $0x8,%rsp
  4019f4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  4019fb:	00 00 00 
  4019fe:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  401a03:	e8 c8 ff ff ff       	callq  4019d0 <reg_mskd_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401a08:	48 83 c4 08          	add    $0x8,%rsp
  401a0c:	c3                   	retq   
  401a0d:	0f 1f 00             	nopl   (%rax)

0000000000401a10 <return_bits()>:
  401a10:	b8 20 00 00 00       	mov    $0x20,%eax
  401a15:	c3                   	retq   
  401a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a1d:	00 00 00 

0000000000401a20 <call_return_bits()>:
  401a20:	48 83 ec 08          	sub    $0x8,%rsp
  401a24:	e8 e7 ff ff ff       	callq  401a10 <return_bits()>
  401a29:	83 f8 20             	cmp    $0x20,%eax
  401a2c:	74 12                	je     401a40 <call_return_bits()+0x20>
  401a2e:	c7 04 25 24 02 70 00 	movl   $0x6000000,0x700224
  401a35:	00 00 00 06 
  401a39:	48 83 c4 08          	add    $0x8,%rsp
  401a3d:	c3                   	retq   
  401a3e:	66 90                	xchg   %ax,%ax
  401a40:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
  401a47:	00 00 00 2a 
  401a4b:	48 83 c4 08          	add    $0x8,%rsp
  401a4f:	c3                   	retq   

0000000000401a50 <return_mskd()>:
  401a50:	48 b8 18 00 00 00 08 	movabs $0x800000018,%rax
  401a57:	00 00 00 
  401a5a:	c3                   	retq   
  401a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401a60 <call_return_mskd()>:
  401a60:	48 83 ec 08          	sub    $0x8,%rsp
  401a64:	e8 e7 ff ff ff       	callq  401a50 <return_mskd()>
  401a69:	83 f8 18             	cmp    $0x18,%eax
  401a6c:	74 12                	je     401a80 <call_return_mskd()+0x20>
  401a6e:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401a75:	00 00 00 26 
  401a79:	48 83 c4 08          	add    $0x8,%rsp
  401a7d:	c3                   	retq   
  401a7e:	66 90                	xchg   %ax,%ax
  401a80:	48 c1 e8 20          	shr    $0x20,%rax
  401a84:	83 f8 08             	cmp    $0x8,%eax
  401a87:	75 e5                	jne    401a6e <call_return_mskd()+0xe>
  401a89:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  401a90:	00 00 00 22 
  401a94:	eb e3                	jmp    401a79 <call_return_mskd()+0x19>
  401a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a9d:	00 00 00 

0000000000401aa0 <return_reg()>:
  401aa0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401aa7:	40 00 00 00 
  401aab:	b8 c4 02 70 00       	mov    $0x7002c4,%eax
  401ab0:	c3                   	retq   
  401ab1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401abd:	00 00 00 

0000000000401ac0 <call_return_reg()>:
  401ac0:	e8 db ff ff ff       	callq  401aa0 <return_reg()>
  401ac5:	8b 00                	mov    (%rax),%eax
  401ac7:	a8 40                	test   $0x40,%al
  401ac9:	75 15                	jne    401ae0 <call_return_reg()+0x20>
  401acb:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401ad2:	00 00 00 2e 
  401ad6:	c3                   	retq   
  401ad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401ade:	00 00 
  401ae0:	c7 04 25 24 02 70 00 	movl   $0x1e000000,0x700224
  401ae7:	00 00 00 1e 
  401aeb:	c3                   	retq   
  401aec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401af0 <return_periph()>:
  401af0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401af7:	40 00 00 00 
  401afb:	b8 c0 02 70 00       	mov    $0x7002c0,%eax
  401b00:	c3                   	retq   
  401b01:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b0d:	00 00 00 

0000000000401b10 <call_return_periph()>:
  401b10:	e8 db ff ff ff       	callq  401af0 <return_periph()>
  401b15:	8b 40 04             	mov    0x4(%rax),%eax
  401b18:	a8 40                	test   $0x40,%al
  401b1a:	75 14                	jne    401b30 <call_return_periph()+0x20>
  401b1c:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
  401b23:	00 00 00 2a 
  401b27:	c3                   	retq   
  401b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401b2f:	00 
  401b30:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401b37:	00 00 00 26 
  401b3b:	c3                   	retq   
  401b3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401b40 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)>:
  401b40:	83 ff 05             	cmp    $0x5,%edi
  401b43:	74 1b                	je     401b60 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x20>
  401b45:	83 ff 06             	cmp    $0x6,%edi
  401b48:	74 26                	je     401b70 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x30>
  401b4a:	c7 04 25 2c 01 70 00 	movl   $0x55,0x70012c
  401b51:	55 00 00 00 
  401b55:	c3                   	retq   
  401b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b5d:	00 00 00 
  401b60:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
  401b67:	33 00 00 00 
  401b6b:	c3                   	retq   
  401b6c:	0f 1f 40 00          	nopl   0x0(%rax)
  401b70:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
  401b77:	44 00 00 00 
  401b7b:	c3                   	retq   
  401b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401b80 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)>:
  401b80:	8b 07                	mov    (%rdi),%eax
  401b82:	83 f8 05             	cmp    $0x5,%eax
  401b85:	74 19                	je     401ba0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x20>
  401b87:	83 f8 06             	cmp    $0x6,%eax
  401b8a:	74 24                	je     401bb0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x30>
  401b8c:	c7 04 25 2c 01 70 00 	movl   $0x88,0x70012c
  401b93:	88 00 00 00 
  401b97:	c3                   	retq   
  401b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401b9f:	00 
  401ba0:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
  401ba7:	66 00 00 00 
  401bab:	c3                   	retq   
  401bac:	0f 1f 40 00          	nopl   0x0(%rax)
  401bb0:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
  401bb7:	77 00 00 00 
  401bbb:	c3                   	retq   
  401bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401bc0 <runtime_range_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401bc0:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  401bc7:	89 f8                	mov    %edi,%eax
  401bc9:	48 c1 ef 20          	shr    $0x20,%rdi
  401bcd:	f7 d0                	not    %eax
  401bcf:	21 d0                	and    %edx,%eax
  401bd1:	09 f8                	or     %edi,%eax
  401bd3:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401bda:	c3                   	retq   
  401bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401be0 <call_range_val(unsigned int)>:
  401be0:	c1 e7 0c             	shl    $0xc,%edi
  401be3:	48 83 ec 08          	sub    $0x8,%rsp
  401be7:	48 c1 e7 20          	shl    $0x20,%rdi
  401beb:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
  401bf2:	e8 c9 ff ff ff       	callq  401bc0 <runtime_range_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401bf7:	48 83 c4 08          	add    $0x8,%rsp
  401bfb:	c3                   	retq   
  401bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401c00 <call_range_val_port()>:
  401c00:	bf 1f 00 00 00       	mov    $0x1f,%edi
  401c05:	eb d9                	jmp    401be0 <call_range_val(unsigned int)>
  401c07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401c0e:	00 00 

0000000000401c10 <runtime_range_ref(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401c10:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  401c17:	89 f8                	mov    %edi,%eax
  401c19:	48 c1 ef 20          	shr    $0x20,%rdi
  401c1d:	f7 d0                	not    %eax
  401c1f:	21 d0                	and    %edx,%eax
  401c21:	09 f8                	or     %edi,%eax
  401c23:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401c2a:	c3                   	retq   
  401c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401c30 <call_range_ref(unsigned int)>:
  401c30:	c1 e7 0c             	shl    $0xc,%edi
  401c33:	48 83 ec 08          	sub    $0x8,%rsp
  401c37:	48 c1 e7 20          	shl    $0x20,%rdi
  401c3b:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
  401c42:	e8 c9 ff ff ff       	callq  401c10 <runtime_range_ref(regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401c47:	48 83 c4 08          	add    $0x8,%rsp
  401c4b:	c3                   	retq   
  401c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401c50 <call_range_ref_port()>:
  401c50:	bf 0c 00 00 00       	mov    $0xc,%edi
  401c55:	eb d9                	jmp    401c30 <call_range_ref(unsigned int)>
  401c57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401c5e:	00 00 

0000000000401c60 <check_array_range_pass(unsigned int)>:
  401c60:	83 ff 16             	cmp    $0x16,%edi
  401c63:	76 13                	jbe    401c78 <check_array_range_pass(unsigned int)+0x18>
  401c65:	c7 04 25 2c 01 70 00 	movl   $0x83,0x70012c
  401c6c:	83 00 00 00 
  401c70:	c3                   	retq   
  401c71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401c78:	c7 04 25 2c 01 70 00 	movl   $0x7f,0x70012c
  401c7f:	7f 00 00 00 
  401c83:	c3                   	retq   
  401c84:	66 90                	xchg   %ax,%ax
  401c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401c8d:	00 00 00 

0000000000401c90 <check_array_range_fail(unsigned int)>:
  401c90:	83 ff 16             	cmp    $0x16,%edi
  401c93:	76 13                	jbe    401ca8 <check_array_range_fail(unsigned int)+0x18>
  401c95:	c7 04 25 2c 01 70 00 	movl   $0x97,0x70012c
  401c9c:	97 00 00 00 
  401ca0:	c3                   	retq   
  401ca1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401ca8:	c7 04 25 2c 01 70 00 	movl   $0x95,0x70012c
  401caf:	95 00 00 00 
  401cb3:	c3                   	retq   
  401cb4:	66 90                	xchg   %ax,%ax
  401cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401cbd:	00 00 00 

0000000000401cc0 <check_bits_range_pass(unsigned int)>:
  401cc0:	83 ff 0f             	cmp    $0xf,%edi
  401cc3:	76 13                	jbe    401cd8 <check_bits_range_pass(unsigned int)+0x18>
  401cc5:	c7 04 25 2c 01 70 00 	movl   $0xa3,0x70012c
  401ccc:	a3 00 00 00 
  401cd0:	c3                   	retq   
  401cd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401cd8:	c7 04 25 2c 01 70 00 	movl   $0x9d,0x70012c
  401cdf:	9d 00 00 00 
  401ce3:	c3                   	retq   
  401ce4:	66 90                	xchg   %ax,%ax
  401ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401ced:	00 00 00 

0000000000401cf0 <check_bits_range_fail(unsigned int)>:
  401cf0:	83 ff 0f             	cmp    $0xf,%edi
  401cf3:	76 13                	jbe    401d08 <check_bits_range_fail(unsigned int)+0x18>
  401cf5:	c7 04 25 2c 01 70 00 	movl   $0xad,0x70012c
  401cfc:	ad 00 00 00 
  401d00:	c3                   	retq   
  401d01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401d08:	c7 04 25 2c 01 70 00 	movl   $0xa7,0x70012c
  401d0f:	a7 00 00 00 
  401d13:	c3                   	retq   
  401d14:	66 90                	xchg   %ax,%ax
  401d16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d1d:	00 00 00 

0000000000401d20 <check_mskd_range_pass(unsigned int)>:
  401d20:	83 ff 1f             	cmp    $0x1f,%edi
  401d23:	76 13                	jbe    401d38 <check_mskd_range_pass(unsigned int)+0x18>
  401d25:	c7 04 25 2c 01 70 00 	movl   $0xb5,0x70012c
  401d2c:	b5 00 00 00 
  401d30:	c3                   	retq   
  401d31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401d38:	c7 04 25 2c 01 70 00 	movl   $0xb3,0x70012c
  401d3f:	b3 00 00 00 
  401d43:	c3                   	retq   
  401d44:	66 90                	xchg   %ax,%ax
  401d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d4d:	00 00 00 

0000000000401d50 <check_mskd_range_fail(unsigned int)>:
  401d50:	83 ff 1f             	cmp    $0x1f,%edi
  401d53:	76 13                	jbe    401d68 <check_mskd_range_fail(unsigned int)+0x18>
  401d55:	c7 04 25 2c 01 70 00 	movl   $0xc1,0x70012c
  401d5c:	c1 00 00 00 
  401d60:	c3                   	retq   
  401d61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401d68:	c7 04 25 2c 01 70 00 	movl   $0xbf,0x70012c
  401d6f:	bf 00 00 00 
  401d73:	c3                   	retq   
  401d74:	66 90                	xchg   %ax,%ax
  401d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d7d:	00 00 00 

0000000000401d80 <bits_extract_ne()>:
  401d80:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  401d87:	20 00 00 00 
  401d8b:	83 3c 25 c4 02 70 00 	cmpl   $0x20,0x7002c4
  401d92:	20 
  401d93:	74 13                	je     401da8 <bits_extract_ne()+0x28>
  401d95:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401d9c:	02 00 00 00 
  401da0:	c3                   	retq   
  401da1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401da8:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401daf:	04 00 00 00 
  401db3:	c3                   	retq   
  401db4:	66 90                	xchg   %ax,%ax
  401db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401dbd:	00 00 00 

0000000000401dc0 <mskd_extract_geq()>:
  401dc0:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  401dc7:	00 00 00 16 
  401dcb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401dd2:	3d ff ff ff 15       	cmp    $0x15ffffff,%eax
  401dd7:	76 0f                	jbe    401de8 <mskd_extract_geq()+0x28>
  401dd9:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  401de0:	20 00 00 00 
  401de4:	c3                   	retq   
  401de5:	0f 1f 00             	nopl   (%rax)
  401de8:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401def:	40 00 00 00 
  401df3:	c3                   	retq   
  401df4:	66 90                	xchg   %ax,%ax
  401df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401dfd:	00 00 00 

0000000000401e00 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>:
  401e00:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401e07:	00 00 00 2e 
  401e0b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401e12:	48 89 f9             	mov    %rdi,%rcx
  401e15:	48 c1 e9 20          	shr    $0x20,%rcx
  401e19:	21 f8                	and    %edi,%eax
  401e1b:	d3 e8                	shr    %cl,%eax
  401e1d:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  401e24:	c3                   	retq   
  401e25:	90                   	nop
  401e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e2d:	00 00 00 

0000000000401e30 <call_shifted_const_val()>:
  401e30:	48 83 ec 08          	sub    $0x8,%rsp
  401e34:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
  401e3b:	00 00 00 
  401e3e:	e8 bd ff ff ff       	callq  401e00 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>
  401e43:	48 83 c4 08          	add    $0x8,%rsp
  401e47:	c3                   	retq   
  401e48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401e4f:	00 

0000000000401e50 <call_shifted_var_val()>:
  401e50:	48 83 ec 08          	sub    $0x8,%rsp
  401e54:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
  401e5b:	00 00 00 
  401e5e:	e8 9d ff ff ff       	callq  401e00 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>
  401e63:	48 83 c4 08          	add    $0x8,%rsp
  401e67:	c3                   	retq   
  401e68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401e6f:	00 

0000000000401e70 <call_shifted_global_val()>:
  401e70:	48 83 ec 08          	sub    $0x8,%rsp
  401e74:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
  401e7b:	00 00 00 
  401e7e:	e8 7d ff ff ff       	callq  401e00 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>
  401e83:	48 83 c4 08          	add    $0x8,%rsp
  401e87:	c3                   	retq   
  401e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401e8f:	00 

0000000000401e90 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>:
  401e90:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401e97:	00 00 00 2e 
  401e9b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401ea2:	23 07                	and    (%rdi),%eax
  401ea4:	8b 4f 04             	mov    0x4(%rdi),%ecx
  401ea7:	d3 e8                	shr    %cl,%eax
  401ea9:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  401eb0:	c3                   	retq   
  401eb1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401ebd:	00 00 00 

0000000000401ec0 <call_shifted_const_ref()>:
  401ec0:	48 83 ec 18          	sub    $0x18,%rsp
  401ec4:	48 89 e7             	mov    %rsp,%rdi
  401ec7:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
  401ece:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
  401ed5:	00 
  401ed6:	e8 b5 ff ff ff       	callq  401e90 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>
  401edb:	48 83 c4 18          	add    $0x18,%rsp
  401edf:	c3                   	retq   

0000000000401ee0 <call_shifted_var_ref()>:
  401ee0:	48 83 ec 18          	sub    $0x18,%rsp
  401ee4:	48 89 e7             	mov    %rsp,%rdi
  401ee7:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
  401eee:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
  401ef5:	00 
  401ef6:	e8 95 ff ff ff       	callq  401e90 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>
  401efb:	48 83 c4 18          	add    $0x18,%rsp
  401eff:	c3                   	retq   

0000000000401f00 <call_shifted_global_ref()>:
  401f00:	48 83 ec 18          	sub    $0x18,%rsp
  401f04:	48 89 e7             	mov    %rsp,%rdi
  401f07:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
  401f0e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
  401f15:	00 
  401f16:	e8 75 ff ff ff       	callq  401e90 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>
  401f1b:	48 83 c4 18          	add    $0x18,%rsp
  401f1f:	c3                   	retq   

0000000000401f20 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)>:
  401f20:	83 e7 40             	and    $0x40,%edi
  401f23:	75 13                	jne    401f38 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)+0x18>
  401f25:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401f2c:	04 00 00 00 
  401f30:	c3                   	retq   
  401f31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401f38:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401f3f:	02 00 00 00 
  401f43:	c3                   	retq   
  401f44:	66 90                	xchg   %ax,%ax
  401f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401f4d:	00 00 00 

0000000000401f50 <call_copy_bits_val()>:
  401f50:	48 83 ec 08          	sub    $0x8,%rsp
  401f54:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401f5b:	40 00 00 00 
  401f5f:	8b 3c 25 c4 02 70 00 	mov    0x7002c4,%edi
  401f66:	e8 b5 ff ff ff       	callq  401f20 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)>
  401f6b:	48 83 c4 08          	add    $0x8,%rsp
  401f6f:	c3                   	retq   

0000000000401f70 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)>:
  401f70:	f6 07 40             	testb  $0x40,(%rdi)
  401f73:	75 13                	jne    401f88 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)+0x18>
  401f75:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401f7c:	04 00 00 00 
  401f80:	c3                   	retq   
  401f81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401f88:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401f8f:	02 00 00 00 
  401f93:	c3                   	retq   
  401f94:	66 90                	xchg   %ax,%ax
  401f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401f9d:	00 00 00 

0000000000401fa0 <call_copy_bits_ref()>:
  401fa0:	48 83 ec 18          	sub    $0x18,%rsp
  401fa4:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401fab:	40 00 00 00 
  401faf:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401fb6:	48 89 e7             	mov    %rsp,%rdi
  401fb9:	89 04 24             	mov    %eax,(%rsp)
  401fbc:	e8 af ff ff ff       	callq  401f70 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)>
  401fc1:	48 83 c4 18          	add    $0x18,%rsp
  401fc5:	c3                   	retq   
  401fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401fcd:	00 00 00 

0000000000401fd0 <run>:
  401fd0:	48 83 ec 08          	sub    $0x8,%rsp
  401fd4:	80 3d c5 30 20 00 00 	cmpb   $0x0,0x2030c5(%rip)        # 6050a0 <guard variable for run::gpio1_words_3>
  401fdb:	0f 84 0f 09 00 00    	je     4028f0 <run+0x920>
  401fe1:	31 d2                	xor    %edx,%edx
  401fe3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  401fe8:	bf 10 09 40 00       	mov    $0x400910,%edi
  401fed:	e8 2e 09 00 00       	callq  402920 <do_test>
  401ff2:	ba 01 00 00 00       	mov    $0x1,%edx
  401ff7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  401ffc:	bf 20 09 40 00       	mov    $0x400920,%edi
  402001:	e8 1a 09 00 00       	callq  402920 <do_test>
  402006:	ba 02 00 00 00       	mov    $0x2,%edx
  40200b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402010:	bf 30 09 40 00       	mov    $0x400930,%edi
  402015:	e8 06 09 00 00       	callq  402920 <do_test>
  40201a:	ba 03 00 00 00       	mov    $0x3,%edx
  40201f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402024:	bf 50 09 40 00       	mov    $0x400950,%edi
  402029:	e8 f2 08 00 00       	callq  402920 <do_test>
  40202e:	ba 04 00 00 00       	mov    $0x4,%edx
  402033:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402038:	bf 70 09 40 00       	mov    $0x400970,%edi
  40203d:	e8 de 08 00 00       	callq  402920 <do_test>
  402042:	ba 05 00 00 00       	mov    $0x5,%edx
  402047:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40204c:	bf 90 09 40 00       	mov    $0x400990,%edi
  402051:	e8 ca 08 00 00       	callq  402920 <do_test>
  402056:	ba 06 00 00 00       	mov    $0x6,%edx
  40205b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402060:	bf b0 09 40 00       	mov    $0x4009b0,%edi
  402065:	e8 b6 08 00 00       	callq  402920 <do_test>
  40206a:	ba 07 00 00 00       	mov    $0x7,%edx
  40206f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402074:	bf d0 09 40 00       	mov    $0x4009d0,%edi
  402079:	e8 a2 08 00 00       	callq  402920 <do_test>
  40207e:	ba 08 00 00 00       	mov    $0x8,%edx
  402083:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402088:	bf f0 09 40 00       	mov    $0x4009f0,%edi
  40208d:	e8 8e 08 00 00       	callq  402920 <do_test>
  402092:	ba 09 00 00 00       	mov    $0x9,%edx
  402097:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40209c:	bf 10 0a 40 00       	mov    $0x400a10,%edi
  4020a1:	e8 7a 08 00 00       	callq  402920 <do_test>
  4020a6:	ba 0a 00 00 00       	mov    $0xa,%edx
  4020ab:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020b0:	bf 30 0a 40 00       	mov    $0x400a30,%edi
  4020b5:	e8 66 08 00 00       	callq  402920 <do_test>
  4020ba:	ba 0b 00 00 00       	mov    $0xb,%edx
  4020bf:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020c4:	bf 40 0a 40 00       	mov    $0x400a40,%edi
  4020c9:	e8 52 08 00 00       	callq  402920 <do_test>
  4020ce:	ba 0c 00 00 00       	mov    $0xc,%edx
  4020d3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020d8:	bf 50 0a 40 00       	mov    $0x400a50,%edi
  4020dd:	e8 3e 08 00 00       	callq  402920 <do_test>
  4020e2:	ba 0d 00 00 00       	mov    $0xd,%edx
  4020e7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020ec:	bf 60 0a 40 00       	mov    $0x400a60,%edi
  4020f1:	e8 2a 08 00 00       	callq  402920 <do_test>
  4020f6:	ba 0e 00 00 00       	mov    $0xe,%edx
  4020fb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402100:	bf 70 0a 40 00       	mov    $0x400a70,%edi
  402105:	e8 16 08 00 00       	callq  402920 <do_test>
  40210a:	ba 0f 00 00 00       	mov    $0xf,%edx
  40210f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402114:	bf 90 0a 40 00       	mov    $0x400a90,%edi
  402119:	e8 02 08 00 00       	callq  402920 <do_test>
  40211e:	ba 10 00 00 00       	mov    $0x10,%edx
  402123:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402128:	bf b0 0a 40 00       	mov    $0x400ab0,%edi
  40212d:	e8 ee 07 00 00       	callq  402920 <do_test>
  402132:	ba 11 00 00 00       	mov    $0x11,%edx
  402137:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40213c:	bf d0 0a 40 00       	mov    $0x400ad0,%edi
  402141:	e8 da 07 00 00       	callq  402920 <do_test>
  402146:	ba 12 00 00 00       	mov    $0x12,%edx
  40214b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402150:	bf f0 0a 40 00       	mov    $0x400af0,%edi
  402155:	e8 c6 07 00 00       	callq  402920 <do_test>
  40215a:	ba 13 00 00 00       	mov    $0x13,%edx
  40215f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402164:	bf 10 0b 40 00       	mov    $0x400b10,%edi
  402169:	e8 b2 07 00 00       	callq  402920 <do_test>
  40216e:	ba 14 00 00 00       	mov    $0x14,%edx
  402173:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402178:	bf 30 0b 40 00       	mov    $0x400b30,%edi
  40217d:	e8 9e 07 00 00       	callq  402920 <do_test>
  402182:	ba 15 00 00 00       	mov    $0x15,%edx
  402187:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40218c:	bf 50 0b 40 00       	mov    $0x400b50,%edi
  402191:	e8 8a 07 00 00       	callq  402920 <do_test>
  402196:	ba 16 00 00 00       	mov    $0x16,%edx
  40219b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021a0:	bf 70 0b 40 00       	mov    $0x400b70,%edi
  4021a5:	e8 76 07 00 00       	callq  402920 <do_test>
  4021aa:	ba 17 00 00 00       	mov    $0x17,%edx
  4021af:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021b4:	bf 90 0b 40 00       	mov    $0x400b90,%edi
  4021b9:	e8 62 07 00 00       	callq  402920 <do_test>
  4021be:	ba 18 00 00 00       	mov    $0x18,%edx
  4021c3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021c8:	bf b0 0b 40 00       	mov    $0x400bb0,%edi
  4021cd:	e8 4e 07 00 00       	callq  402920 <do_test>
  4021d2:	ba 19 00 00 00       	mov    $0x19,%edx
  4021d7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021dc:	bf c0 0b 40 00       	mov    $0x400bc0,%edi
  4021e1:	e8 3a 07 00 00       	callq  402920 <do_test>
  4021e6:	ba 1a 00 00 00       	mov    $0x1a,%edx
  4021eb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021f0:	bf d0 0b 40 00       	mov    $0x400bd0,%edi
  4021f5:	e8 26 07 00 00       	callq  402920 <do_test>
  4021fa:	ba 1b 00 00 00       	mov    $0x1b,%edx
  4021ff:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402204:	bf e0 0b 40 00       	mov    $0x400be0,%edi
  402209:	e8 12 07 00 00       	callq  402920 <do_test>
  40220e:	ba 1c 00 00 00       	mov    $0x1c,%edx
  402213:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402218:	bf f0 0b 40 00       	mov    $0x400bf0,%edi
  40221d:	e8 fe 06 00 00       	callq  402920 <do_test>
  402222:	ba 1d 00 00 00       	mov    $0x1d,%edx
  402227:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40222c:	bf 00 0c 40 00       	mov    $0x400c00,%edi
  402231:	e8 ea 06 00 00       	callq  402920 <do_test>
  402236:	ba 1e 00 00 00       	mov    $0x1e,%edx
  40223b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402240:	bf 10 0c 40 00       	mov    $0x400c10,%edi
  402245:	e8 d6 06 00 00       	callq  402920 <do_test>
  40224a:	ba 1f 00 00 00       	mov    $0x1f,%edx
  40224f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402254:	bf 20 0c 40 00       	mov    $0x400c20,%edi
  402259:	e8 c2 06 00 00       	callq  402920 <do_test>
  40225e:	ba 20 00 00 00       	mov    $0x20,%edx
  402263:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402268:	bf 30 0c 40 00       	mov    $0x400c30,%edi
  40226d:	e8 ae 06 00 00       	callq  402920 <do_test>
  402272:	ba 21 00 00 00       	mov    $0x21,%edx
  402277:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40227c:	bf 50 0c 40 00       	mov    $0x400c50,%edi
  402281:	e8 9a 06 00 00       	callq  402920 <do_test>
  402286:	ba 22 00 00 00       	mov    $0x22,%edx
  40228b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402290:	bf 70 0c 40 00       	mov    $0x400c70,%edi
  402295:	e8 86 06 00 00       	callq  402920 <do_test>
  40229a:	ba 23 00 00 00       	mov    $0x23,%edx
  40229f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022a4:	bf b0 0c 40 00       	mov    $0x400cb0,%edi
  4022a9:	e8 72 06 00 00       	callq  402920 <do_test>
  4022ae:	ba 24 00 00 00       	mov    $0x24,%edx
  4022b3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022b8:	bf f0 0c 40 00       	mov    $0x400cf0,%edi
  4022bd:	e8 5e 06 00 00       	callq  402920 <do_test>
  4022c2:	ba 25 00 00 00       	mov    $0x25,%edx
  4022c7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022cc:	bf 30 0d 40 00       	mov    $0x400d30,%edi
  4022d1:	e8 4a 06 00 00       	callq  402920 <do_test>
  4022d6:	ba 26 00 00 00       	mov    $0x26,%edx
  4022db:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022e0:	bf 70 0d 40 00       	mov    $0x400d70,%edi
  4022e5:	e8 36 06 00 00       	callq  402920 <do_test>
  4022ea:	ba 27 00 00 00       	mov    $0x27,%edx
  4022ef:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022f4:	bf d0 0d 40 00       	mov    $0x400dd0,%edi
  4022f9:	e8 22 06 00 00       	callq  402920 <do_test>
  4022fe:	ba 28 00 00 00       	mov    $0x28,%edx
  402303:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402308:	bf 20 0e 40 00       	mov    $0x400e20,%edi
  40230d:	e8 0e 06 00 00       	callq  402920 <do_test>
  402312:	ba 29 00 00 00       	mov    $0x29,%edx
  402317:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40231c:	bf 60 0e 40 00       	mov    $0x400e60,%edi
  402321:	e8 fa 05 00 00       	callq  402920 <do_test>
  402326:	ba 2a 00 00 00       	mov    $0x2a,%edx
  40232b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402330:	bf a0 0e 40 00       	mov    $0x400ea0,%edi
  402335:	e8 e6 05 00 00       	callq  402920 <do_test>
  40233a:	ba 2b 00 00 00       	mov    $0x2b,%edx
  40233f:	be a0 01 70 00       	mov    $0x7001a0,%esi
  402344:	bf c0 0e 40 00       	mov    $0x400ec0,%edi
  402349:	e8 d2 05 00 00       	callq  402920 <do_test>
  40234e:	ba 2c 00 00 00       	mov    $0x2c,%edx
  402353:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402358:	bf d0 16 40 00       	mov    $0x4016d0,%edi
  40235d:	e8 be 05 00 00       	callq  402920 <do_test>
  402362:	ba 2d 00 00 00       	mov    $0x2d,%edx
  402367:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40236c:	bf f0 16 40 00       	mov    $0x4016f0,%edi
  402371:	e8 aa 05 00 00       	callq  402920 <do_test>
  402376:	ba 2e 00 00 00       	mov    $0x2e,%edx
  40237b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402380:	bf 90 17 40 00       	mov    $0x401790,%edi
  402385:	e8 96 05 00 00       	callq  402920 <do_test>
  40238a:	ba 2f 00 00 00       	mov    $0x2f,%edx
  40238f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402394:	bf 70 17 40 00       	mov    $0x401770,%edi
  402399:	e8 82 05 00 00       	callq  402920 <do_test>
  40239e:	ba 30 00 00 00       	mov    $0x30,%edx
  4023a3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023a8:	bf 50 16 40 00       	mov    $0x401650,%edi
  4023ad:	e8 6e 05 00 00       	callq  402920 <do_test>
  4023b2:	ba 31 00 00 00       	mov    $0x31,%edx
  4023b7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023bc:	bf 70 16 40 00       	mov    $0x401670,%edi
  4023c1:	e8 5a 05 00 00       	callq  402920 <do_test>
  4023c6:	ba 32 00 00 00       	mov    $0x32,%edx
  4023cb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023d0:	bf d0 15 40 00       	mov    $0x4015d0,%edi
  4023d5:	e8 46 05 00 00       	callq  402920 <do_test>
  4023da:	ba 33 00 00 00       	mov    $0x33,%edx
  4023df:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023e4:	bf f0 15 40 00       	mov    $0x4015f0,%edi
  4023e9:	e8 32 05 00 00       	callq  402920 <do_test>
  4023ee:	ba 34 00 00 00       	mov    $0x34,%edx
  4023f3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023f8:	bf 20 18 40 00       	mov    $0x401820,%edi
  4023fd:	e8 1e 05 00 00       	callq  402920 <do_test>
  402402:	ba 35 00 00 00       	mov    $0x35,%edx
  402407:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40240c:	bf 40 18 40 00       	mov    $0x401840,%edi
  402411:	e8 0a 05 00 00       	callq  402920 <do_test>
  402416:	ba 36 00 00 00       	mov    $0x36,%edx
  40241b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402420:	bf 70 18 40 00       	mov    $0x401870,%edi
  402425:	e8 f6 04 00 00       	callq  402920 <do_test>
  40242a:	ba 37 00 00 00       	mov    $0x37,%edx
  40242f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402434:	bf a0 18 40 00       	mov    $0x4018a0,%edi
  402439:	e8 e2 04 00 00       	callq  402920 <do_test>
  40243e:	ba 38 00 00 00       	mov    $0x38,%edx
  402443:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402448:	bf d0 18 40 00       	mov    $0x4018d0,%edi
  40244d:	e8 ce 04 00 00       	callq  402920 <do_test>
  402452:	ba 39 00 00 00       	mov    $0x39,%edx
  402457:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40245c:	bf 00 19 40 00       	mov    $0x401900,%edi
  402461:	e8 ba 04 00 00       	callq  402920 <do_test>
  402466:	ba 3a 00 00 00       	mov    $0x3a,%edx
  40246b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402470:	bf 30 19 40 00       	mov    $0x401930,%edi
  402475:	e8 a6 04 00 00       	callq  402920 <do_test>
  40247a:	ba 3b 00 00 00       	mov    $0x3b,%edx
  40247f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402484:	bf 70 19 40 00       	mov    $0x401970,%edi
  402489:	e8 92 04 00 00       	callq  402920 <do_test>
  40248e:	ba 3c 00 00 00       	mov    $0x3c,%edx
  402493:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402498:	bf b0 19 40 00       	mov    $0x4019b0,%edi
  40249d:	e8 7e 04 00 00       	callq  402920 <do_test>
  4024a2:	ba 3d 00 00 00       	mov    $0x3d,%edx
  4024a7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024ac:	bf f0 19 40 00       	mov    $0x4019f0,%edi
  4024b1:	e8 6a 04 00 00       	callq  402920 <do_test>
  4024b6:	ba 3e 00 00 00       	mov    $0x3e,%edx
  4024bb:	be 24 02 70 00       	mov    $0x700224,%esi
  4024c0:	bf 20 1a 40 00       	mov    $0x401a20,%edi
  4024c5:	e8 56 04 00 00       	callq  402920 <do_test>
  4024ca:	ba 3f 00 00 00       	mov    $0x3f,%edx
  4024cf:	be 24 02 70 00       	mov    $0x700224,%esi
  4024d4:	bf 60 1a 40 00       	mov    $0x401a60,%edi
  4024d9:	e8 42 04 00 00       	callq  402920 <do_test>
  4024de:	ba 40 00 00 00       	mov    $0x40,%edx
  4024e3:	be 24 02 70 00       	mov    $0x700224,%esi
  4024e8:	bf c0 1a 40 00       	mov    $0x401ac0,%edi
  4024ed:	e8 2e 04 00 00       	callq  402920 <do_test>
  4024f2:	ba 41 00 00 00       	mov    $0x41,%edx
  4024f7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024fc:	bf 10 1b 40 00       	mov    $0x401b10,%edi
  402501:	e8 1a 04 00 00       	callq  402920 <do_test>
  402506:	48 8b 35 83 2b 20 00 	mov    0x202b83(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40250d:	ba 42 00 00 00       	mov    $0x42,%edx
  402512:	bf 70 15 40 00       	mov    $0x401570,%edi
  402517:	e8 04 04 00 00       	callq  402920 <do_test>
  40251c:	48 8b 35 6d 2b 20 00 	mov    0x202b6d(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402523:	ba 43 00 00 00       	mov    $0x43,%edx
  402528:	bf f0 14 40 00       	mov    $0x4014f0,%edi
  40252d:	e8 ee 03 00 00       	callq  402920 <do_test>
  402532:	ba 44 00 00 00       	mov    $0x44,%edx
  402537:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40253c:	bf 00 1c 40 00       	mov    $0x401c00,%edi
  402541:	e8 da 03 00 00       	callq  402920 <do_test>
  402546:	ba 45 00 00 00       	mov    $0x45,%edx
  40254b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402550:	bf 50 1c 40 00       	mov    $0x401c50,%edi
  402555:	e8 c6 03 00 00       	callq  402920 <do_test>
  40255a:	48 8b 35 2f 2b 20 00 	mov    0x202b2f(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402561:	ba 46 00 00 00       	mov    $0x46,%edx
  402566:	bf 00 0f 40 00       	mov    $0x400f00,%edi
  40256b:	e8 b0 03 00 00       	callq  402920 <do_test>
  402570:	48 8b 35 19 2b 20 00 	mov    0x202b19(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402577:	ba 47 00 00 00       	mov    $0x47,%edx
  40257c:	bf 20 0f 40 00       	mov    $0x400f20,%edi
  402581:	e8 9a 03 00 00       	callq  402920 <do_test>
  402586:	ba 48 00 00 00       	mov    $0x48,%edx
  40258b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402590:	bf 50 0f 40 00       	mov    $0x400f50,%edi
  402595:	e8 86 03 00 00       	callq  402920 <do_test>
  40259a:	ba 49 00 00 00       	mov    $0x49,%edx
  40259f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025a4:	bf 90 0f 40 00       	mov    $0x400f90,%edi
  4025a9:	e8 72 03 00 00       	callq  402920 <do_test>
  4025ae:	ba 4a 00 00 00       	mov    $0x4a,%edx
  4025b3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025b8:	bf e0 0f 40 00       	mov    $0x400fe0,%edi
  4025bd:	e8 5e 03 00 00       	callq  402920 <do_test>
  4025c2:	ba 4b 00 00 00       	mov    $0x4b,%edx
  4025c7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025cc:	bf 20 10 40 00       	mov    $0x401020,%edi
  4025d1:	e8 4a 03 00 00       	callq  402920 <do_test>
  4025d6:	ba 4c 00 00 00       	mov    $0x4c,%edx
  4025db:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025e0:	bf 70 10 40 00       	mov    $0x401070,%edi
  4025e5:	e8 36 03 00 00       	callq  402920 <do_test>
  4025ea:	ba 4d 00 00 00       	mov    $0x4d,%edx
  4025ef:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025f4:	bf 80 10 40 00       	mov    $0x401080,%edi
  4025f9:	e8 22 03 00 00       	callq  402920 <do_test>
  4025fe:	ba 4e 00 00 00       	mov    $0x4e,%edx
  402603:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402608:	bf 90 10 40 00       	mov    $0x401090,%edi
  40260d:	e8 0e 03 00 00       	callq  402920 <do_test>
  402612:	ba 4f 00 00 00       	mov    $0x4f,%edx
  402617:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40261c:	bf 90 10 40 00       	mov    $0x401090,%edi
  402621:	e8 fa 02 00 00       	callq  402920 <do_test>
  402626:	ba 50 00 00 00       	mov    $0x50,%edx
  40262b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402630:	bf d0 10 40 00       	mov    $0x4010d0,%edi
  402635:	e8 e6 02 00 00       	callq  402920 <do_test>
  40263a:	ba 51 00 00 00       	mov    $0x51,%edx
  40263f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402644:	bf 10 11 40 00       	mov    $0x401110,%edi
  402649:	e8 d2 02 00 00       	callq  402920 <do_test>
  40264e:	ba 52 00 00 00       	mov    $0x52,%edx
  402653:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402658:	bf 50 11 40 00       	mov    $0x401150,%edi
  40265d:	e8 be 02 00 00       	callq  402920 <do_test>
  402662:	ba 53 00 00 00       	mov    $0x53,%edx
  402667:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40266c:	bf 90 11 40 00       	mov    $0x401190,%edi
  402671:	e8 aa 02 00 00       	callq  402920 <do_test>
  402676:	ba 54 00 00 00       	mov    $0x54,%edx
  40267b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402680:	bf d0 11 40 00       	mov    $0x4011d0,%edi
  402685:	e8 96 02 00 00       	callq  402920 <do_test>
  40268a:	ba 55 00 00 00       	mov    $0x55,%edx
  40268f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402694:	bf 90 11 40 00       	mov    $0x401190,%edi
  402699:	e8 82 02 00 00       	callq  402920 <do_test>
  40269e:	ba 56 00 00 00       	mov    $0x56,%edx
  4026a3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026a8:	bf 10 12 40 00       	mov    $0x401210,%edi
  4026ad:	e8 6e 02 00 00       	callq  402920 <do_test>
  4026b2:	ba 57 00 00 00       	mov    $0x57,%edx
  4026b7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026bc:	bf 30 12 40 00       	mov    $0x401230,%edi
  4026c1:	e8 5a 02 00 00       	callq  402920 <do_test>
  4026c6:	48 8b 35 c3 29 20 00 	mov    0x2029c3(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4026cd:	ba 58 00 00 00       	mov    $0x58,%edx
  4026d2:	bf 50 12 40 00       	mov    $0x401250,%edi
  4026d7:	e8 44 02 00 00       	callq  402920 <do_test>
  4026dc:	48 8b 35 ad 29 20 00 	mov    0x2029ad(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4026e3:	ba 59 00 00 00       	mov    $0x59,%edx
  4026e8:	bf 60 12 40 00       	mov    $0x401260,%edi
  4026ed:	e8 2e 02 00 00       	callq  402920 <do_test>
  4026f2:	ba 5a 00 00 00       	mov    $0x5a,%edx
  4026f7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026fc:	bf 90 12 40 00       	mov    $0x401290,%edi
  402701:	e8 1a 02 00 00       	callq  402920 <do_test>
  402706:	48 8b 35 83 29 20 00 	mov    0x202983(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40270d:	ba 5b 00 00 00       	mov    $0x5b,%edx
  402712:	bf 90 15 40 00       	mov    $0x401590,%edi
  402717:	e8 04 02 00 00       	callq  402920 <do_test>
  40271c:	48 8b 35 6d 29 20 00 	mov    0x20296d(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402723:	ba 5c 00 00 00       	mov    $0x5c,%edx
  402728:	bf 30 15 40 00       	mov    $0x401530,%edi
  40272d:	e8 ee 01 00 00       	callq  402920 <do_test>
  402732:	ba 5d 00 00 00       	mov    $0x5d,%edx
  402737:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40273c:	bf 10 17 40 00       	mov    $0x401710,%edi
  402741:	e8 da 01 00 00       	callq  402920 <do_test>
  402746:	ba 5e 00 00 00       	mov    $0x5e,%edx
  40274b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402750:	bf b0 17 40 00       	mov    $0x4017b0,%edi
  402755:	e8 c6 01 00 00       	callq  402920 <do_test>
  40275a:	ba 5f 00 00 00       	mov    $0x5f,%edx
  40275f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402764:	bf 90 16 40 00       	mov    $0x401690,%edi
  402769:	e8 b2 01 00 00       	callq  402920 <do_test>
  40276e:	ba 60 00 00 00       	mov    $0x60,%edx
  402773:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402778:	bf 10 16 40 00       	mov    $0x401610,%edi
  40277d:	e8 9e 01 00 00       	callq  402920 <do_test>
  402782:	48 8b 35 07 29 20 00 	mov    0x202907(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402789:	ba 61 00 00 00       	mov    $0x61,%edx
  40278e:	bf 30 1e 40 00       	mov    $0x401e30,%edi
  402793:	e8 88 01 00 00       	callq  402920 <do_test>
  402798:	48 8b 35 f1 28 20 00 	mov    0x2028f1(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40279f:	ba 62 00 00 00       	mov    $0x62,%edx
  4027a4:	bf 50 1e 40 00       	mov    $0x401e50,%edi
  4027a9:	e8 72 01 00 00       	callq  402920 <do_test>
  4027ae:	48 8b 35 db 28 20 00 	mov    0x2028db(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4027b5:	ba 63 00 00 00       	mov    $0x63,%edx
  4027ba:	bf 70 1e 40 00       	mov    $0x401e70,%edi
  4027bf:	e8 5c 01 00 00       	callq  402920 <do_test>
  4027c4:	48 8b 35 c5 28 20 00 	mov    0x2028c5(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4027cb:	ba 64 00 00 00       	mov    $0x64,%edx
  4027d0:	bf c0 1e 40 00       	mov    $0x401ec0,%edi
  4027d5:	e8 46 01 00 00       	callq  402920 <do_test>
  4027da:	48 8b 35 af 28 20 00 	mov    0x2028af(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4027e1:	ba 65 00 00 00       	mov    $0x65,%edx
  4027e6:	bf e0 1e 40 00       	mov    $0x401ee0,%edi
  4027eb:	e8 30 01 00 00       	callq  402920 <do_test>
  4027f0:	48 8b 35 99 28 20 00 	mov    0x202899(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4027f7:	ba 66 00 00 00       	mov    $0x66,%edx
  4027fc:	bf 00 1f 40 00       	mov    $0x401f00,%edi
  402801:	e8 1a 01 00 00       	callq  402920 <do_test>
  402806:	ba 67 00 00 00       	mov    $0x67,%edx
  40280b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402810:	bf a0 12 40 00       	mov    $0x4012a0,%edi
  402815:	e8 06 01 00 00       	callq  402920 <do_test>
  40281a:	ba 68 00 00 00       	mov    $0x68,%edx
  40281f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402824:	bf e0 12 40 00       	mov    $0x4012e0,%edi
  402829:	e8 f2 00 00 00       	callq  402920 <do_test>
  40282e:	ba 69 00 00 00       	mov    $0x69,%edx
  402833:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402838:	bf 20 13 40 00       	mov    $0x401320,%edi
  40283d:	e8 de 00 00 00       	callq  402920 <do_test>
  402842:	ba 6a 00 00 00       	mov    $0x6a,%edx
  402847:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40284c:	bf 60 13 40 00       	mov    $0x401360,%edi
  402851:	e8 ca 00 00 00       	callq  402920 <do_test>
  402856:	ba 6b 00 00 00       	mov    $0x6b,%edx
  40285b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402860:	bf a0 13 40 00       	mov    $0x4013a0,%edi
  402865:	e8 b6 00 00 00       	callq  402920 <do_test>
  40286a:	ba 6c 00 00 00       	mov    $0x6c,%edx
  40286f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402874:	bf e0 13 40 00       	mov    $0x4013e0,%edi
  402879:	e8 a2 00 00 00       	callq  402920 <do_test>
  40287e:	ba 6d 00 00 00       	mov    $0x6d,%edx
  402883:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402888:	bf 20 14 40 00       	mov    $0x401420,%edi
  40288d:	e8 8e 00 00 00       	callq  402920 <do_test>
  402892:	ba 6e 00 00 00       	mov    $0x6e,%edx
  402897:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40289c:	bf 60 14 40 00       	mov    $0x401460,%edi
  4028a1:	e8 7a 00 00 00       	callq  402920 <do_test>
  4028a6:	ba 6f 00 00 00       	mov    $0x6f,%edx
  4028ab:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028b0:	bf a0 14 40 00       	mov    $0x4014a0,%edi
  4028b5:	e8 66 00 00 00       	callq  402920 <do_test>
  4028ba:	ba 70 00 00 00       	mov    $0x70,%edx
  4028bf:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028c4:	bf 50 1f 40 00       	mov    $0x401f50,%edi
  4028c9:	e8 52 00 00 00       	callq  402920 <do_test>
  4028ce:	ba 71 00 00 00       	mov    $0x71,%edx
  4028d3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028d8:	bf a0 1f 40 00       	mov    $0x401fa0,%edi
  4028dd:	48 83 c4 08          	add    $0x8,%rsp
  4028e1:	e9 3a 00 00 00       	jmpq   402920 <do_test>
  4028e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4028ed:	00 00 00 
  4028f0:	bf a0 50 60 00       	mov    $0x6050a0,%edi
  4028f5:	e8 16 de ff ff       	callq  400710 <__cxa_guard_acquire@plt>
  4028fa:	85 c0                	test   %eax,%eax
  4028fc:	0f 84 df f6 ff ff    	je     401fe1 <run+0x11>
  402902:	bf a0 50 60 00       	mov    $0x6050a0,%edi
  402907:	48 c7 05 7e 27 20 00 	movq   $0x70012c,0x20277e(%rip)        # 605090 <run::gpio1_words_3>
  40290e:	2c 01 70 00 
  402912:	e8 29 de ff ff       	callq  400740 <__cxa_guard_release@plt>
  402917:	e9 c5 f6 ff ff       	jmpq   401fe1 <run+0x11>
  40291c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402920 <do_test>:
  402920:	41 54                	push   %r12
  402922:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
  402928:	41 89 d4             	mov    %edx,%r12d
  40292b:	31 c0                	xor    %eax,%eax
  40292d:	45 01 e4             	add    %r12d,%r12d
  402930:	55                   	push   %rbp
  402931:	48 89 fd             	mov    %rdi,%rbp
  402934:	53                   	push   %rbx
  402935:	48 89 f3             	mov    %rsi,%rbx
  402938:	ff d7                	callq  *%rdi
  40293a:	8b 13                	mov    (%rbx),%edx
  40293c:	44 89 e0             	mov    %r12d,%eax
  40293f:	89 14 85 c0 50 60 00 	mov    %edx,0x6050c0(,%rax,4)
  402946:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
  40294c:	31 c0                	xor    %eax,%eax
  40294e:	ff d5                	callq  *%rbp
  402950:	8b 13                	mov    (%rbx),%edx
  402952:	41 8d 44 24 01       	lea    0x1(%r12),%eax
  402957:	5b                   	pop    %rbx
  402958:	5d                   	pop    %rbp
  402959:	89 14 85 c0 50 60 00 	mov    %edx,0x6050c0(,%rax,4)
  402960:	41 5c                	pop    %r12
  402962:	c3                   	retq   
  402963:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40296a:	00 00 00 
  40296d:	0f 1f 00             	nopl   (%rax)

0000000000402970 <__libc_csu_init>:
  402970:	41 57                	push   %r15
  402972:	41 89 ff             	mov    %edi,%r15d
  402975:	41 56                	push   %r14
  402977:	49 89 f6             	mov    %rsi,%r14
  40297a:	41 55                	push   %r13
  40297c:	49 89 d5             	mov    %rdx,%r13
  40297f:	41 54                	push   %r12
  402981:	4c 8d 25 48 24 20 00 	lea    0x202448(%rip),%r12        # 604dd0 <__frame_dummy_init_array_entry>
  402988:	55                   	push   %rbp
  402989:	48 8d 2d 48 24 20 00 	lea    0x202448(%rip),%rbp        # 604dd8 <__init_array_end>
  402990:	53                   	push   %rbx
  402991:	4c 29 e5             	sub    %r12,%rbp
  402994:	31 db                	xor    %ebx,%ebx
  402996:	48 c1 fd 03          	sar    $0x3,%rbp
  40299a:	48 83 ec 08          	sub    $0x8,%rsp
  40299e:	e8 3d dd ff ff       	callq  4006e0 <_init>
  4029a3:	48 85 ed             	test   %rbp,%rbp
  4029a6:	74 1e                	je     4029c6 <__libc_csu_init+0x56>
  4029a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4029af:	00 
  4029b0:	4c 89 ea             	mov    %r13,%rdx
  4029b3:	4c 89 f6             	mov    %r14,%rsi
  4029b6:	44 89 ff             	mov    %r15d,%edi
  4029b9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4029bd:	48 83 c3 01          	add    $0x1,%rbx
  4029c1:	48 39 eb             	cmp    %rbp,%rbx
  4029c4:	75 ea                	jne    4029b0 <__libc_csu_init+0x40>
  4029c6:	48 83 c4 08          	add    $0x8,%rsp
  4029ca:	5b                   	pop    %rbx
  4029cb:	5d                   	pop    %rbp
  4029cc:	41 5c                	pop    %r12
  4029ce:	41 5d                	pop    %r13
  4029d0:	41 5e                	pop    %r14
  4029d2:	41 5f                	pop    %r15
  4029d4:	c3                   	retq   
  4029d5:	90                   	nop
  4029d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4029dd:	00 00 00 

00000000004029e0 <__libc_csu_fini>:
  4029e0:	f3 c3                	repz retq 

Disassembly of section .rodata:

00000000004029f0 <_IO_stdin_used>:
  4029f0:	01 00 02 00 62 72 6b 28 30 78 25 78 29 20 66 61     ....brk(0x%x) fa
  402a00:	69 6c 65 64 3a 20 25 73 28 25 64 29 0a 00           iled: %s(%d)..

Disassembly of section .data:

0000000000605058 <__data_start>:
	...

0000000000605060 <__dso_handle>:
	...
