
regbits.elf:     file format elf64-x86-64


Disassembly of section .text:

00000000004007a0 <main>:
  4007a0:	55                   	push   %rbp
  4007a1:	bf 00 00 80 00       	mov    $0x800000,%edi
  4007a6:	53                   	push   %rbx
  4007a7:	48 83 ec 28          	sub    $0x28,%rsp
  4007ab:	e8 c0 ff ff ff       	callq  400770 <brk@plt>
  4007b0:	85 c0                	test   %eax,%eax
  4007b2:	89 c5                	mov    %eax,%ebp
  4007b4:	75 33                	jne    4007e9 <main+0x49>
  4007b6:	48 89 e6             	mov    %rsp,%rsi
  4007b9:	31 ff                	xor    %edi,%edi
  4007bb:	bb a0 86 01 00       	mov    $0x186a0,%ebx
  4007c0:	e8 5b ff ff ff       	callq  400720 <clock_gettime@plt>
  4007c5:	0f 1f 00             	nopl   (%rax)
  4007c8:	31 c0                	xor    %eax,%eax
  4007ca:	e8 81 18 00 00       	callq  402050 <run>
  4007cf:	83 eb 01             	sub    $0x1,%ebx
  4007d2:	75 f4                	jne    4007c8 <main+0x28>
  4007d4:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  4007d9:	31 ff                	xor    %edi,%edi
  4007db:	e8 40 ff ff ff       	callq  400720 <clock_gettime@plt>
  4007e0:	48 83 c4 28          	add    $0x28,%rsp
  4007e4:	89 e8                	mov    %ebp,%eax
  4007e6:	5b                   	pop    %rbx
  4007e7:	5d                   	pop    %rbp
  4007e8:	c3                   	retq   
  4007e9:	e8 72 ff ff ff       	callq  400760 <__errno_location@plt>
  4007ee:	8b 18                	mov    (%rax),%ebx
  4007f0:	bd 01 00 00 00       	mov    $0x1,%ebp
  4007f5:	89 df                	mov    %ebx,%edi
  4007f7:	e8 54 ff ff ff       	callq  400750 <strerror@plt>
  4007fc:	48 8b 3d 7d 48 20 00 	mov    0x20487d(%rip),%rdi        # 605080 <stdout@@GLIBC_2.2.5>
  400803:	48 89 c1             	mov    %rax,%rcx
  400806:	41 89 d8             	mov    %ebx,%r8d
  400809:	ba 00 00 80 00       	mov    $0x800000,%edx
  40080e:	be 94 2a 40 00       	mov    $0x402a94,%esi
  400813:	31 c0                	xor    %eax,%eax
  400815:	e8 66 ff ff ff       	callq  400780 <fprintf@plt>
  40081a:	eb c4                	jmp    4007e0 <main+0x40>

000000000040081c <_start>:
  40081c:	31 ed                	xor    %ebp,%ebp
  40081e:	49 89 d1             	mov    %rdx,%r9
  400821:	5e                   	pop    %rsi
  400822:	48 89 e2             	mov    %rsp,%rdx
  400825:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400829:	50                   	push   %rax
  40082a:	54                   	push   %rsp
  40082b:	49 c7 c0 80 2a 40 00 	mov    $0x402a80,%r8
  400832:	48 c7 c1 10 2a 40 00 	mov    $0x402a10,%rcx
  400839:	48 c7 c7 a0 07 40 00 	mov    $0x4007a0,%rdi
  400840:	e8 eb fe ff ff       	callq  400730 <__libc_start_main@plt>
  400845:	f4                   	hlt    
  400846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40084d:	00 00 00 

0000000000400850 <deregister_tm_clones>:
  400850:	b8 6f 50 60 00       	mov    $0x60506f,%eax
  400855:	55                   	push   %rbp
  400856:	48 2d 68 50 60 00    	sub    $0x605068,%rax
  40085c:	48 83 f8 0e          	cmp    $0xe,%rax
  400860:	48 89 e5             	mov    %rsp,%rbp
  400863:	77 02                	ja     400867 <deregister_tm_clones+0x17>
  400865:	5d                   	pop    %rbp
  400866:	c3                   	retq   
  400867:	b8 00 00 00 00       	mov    $0x0,%eax
  40086c:	48 85 c0             	test   %rax,%rax
  40086f:	74 f4                	je     400865 <deregister_tm_clones+0x15>
  400871:	5d                   	pop    %rbp
  400872:	bf 68 50 60 00       	mov    $0x605068,%edi
  400877:	ff e0                	jmpq   *%rax
  400879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400880 <register_tm_clones>:
  400880:	b8 68 50 60 00       	mov    $0x605068,%eax
  400885:	55                   	push   %rbp
  400886:	48 2d 68 50 60 00    	sub    $0x605068,%rax
  40088c:	48 c1 f8 03          	sar    $0x3,%rax
  400890:	48 89 e5             	mov    %rsp,%rbp
  400893:	48 89 c2             	mov    %rax,%rdx
  400896:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40089a:	48 01 d0             	add    %rdx,%rax
  40089d:	48 d1 f8             	sar    %rax
  4008a0:	75 02                	jne    4008a4 <register_tm_clones+0x24>
  4008a2:	5d                   	pop    %rbp
  4008a3:	c3                   	retq   
  4008a4:	ba 00 00 00 00       	mov    $0x0,%edx
  4008a9:	48 85 d2             	test   %rdx,%rdx
  4008ac:	74 f4                	je     4008a2 <register_tm_clones+0x22>
  4008ae:	5d                   	pop    %rbp
  4008af:	48 89 c6             	mov    %rax,%rsi
  4008b2:	bf 68 50 60 00       	mov    $0x605068,%edi
  4008b7:	ff e2                	jmpq   *%rdx
  4008b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004008c0 <__do_global_dtors_aux>:
  4008c0:	80 3d c1 47 20 00 00 	cmpb   $0x0,0x2047c1(%rip)        # 605088 <completed.6337>
  4008c7:	75 11                	jne    4008da <__do_global_dtors_aux+0x1a>
  4008c9:	55                   	push   %rbp
  4008ca:	48 89 e5             	mov    %rsp,%rbp
  4008cd:	e8 7e ff ff ff       	callq  400850 <deregister_tm_clones>
  4008d2:	5d                   	pop    %rbp
  4008d3:	c6 05 ae 47 20 00 01 	movb   $0x1,0x2047ae(%rip)        # 605088 <completed.6337>
  4008da:	f3 c3                	repz retq 
  4008dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004008e0 <frame_dummy>:
  4008e0:	48 83 3d f8 44 20 00 	cmpq   $0x0,0x2044f8(%rip)        # 604de0 <__JCR_END__>
  4008e7:	00 
  4008e8:	74 1e                	je     400908 <frame_dummy+0x28>
  4008ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4008ef:	48 85 c0             	test   %rax,%rax
  4008f2:	74 14                	je     400908 <frame_dummy+0x28>
  4008f4:	55                   	push   %rbp
  4008f5:	bf e0 4d 60 00       	mov    $0x604de0,%edi
  4008fa:	48 89 e5             	mov    %rsp,%rbp
  4008fd:	ff d0                	callq  *%rax
  4008ff:	5d                   	pop    %rbp
  400900:	e9 7b ff ff ff       	jmpq   400880 <register_tm_clones>
  400905:	0f 1f 00             	nopl   (%rax)
  400908:	e9 73 ff ff ff       	jmpq   400880 <register_tm_clones>
  40090d:	0f 1f 00             	nopl   (%rax)

0000000000400910 <zero_reg()>:
  400910:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
  400917:	00 00 00 00 
  40091b:	c3                   	retq   
  40091c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400920 <zero_array()>:
  400920:	c7 04 25 2c 01 70 00 	movl   $0x0,0x70012c
  400927:	00 00 00 00 
  40092b:	c3                   	retq   
  40092c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400930 <set_singl_bits_operator()>:
  400930:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400937:	83 c8 40             	or     $0x40,%eax
  40093a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400941:	c3                   	retq   
  400942:	0f 1f 40 00          	nopl   0x0(%rax)
  400946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40094d:	00 00 00 

0000000000400950 <set_singl_bits_method()>:
  400950:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400957:	83 c8 40             	or     $0x40,%eax
  40095a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400961:	c3                   	retq   
  400962:	0f 1f 40 00          	nopl   0x0(%rax)
  400966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40096d:	00 00 00 

0000000000400970 <clr_singl_bits_operator()>:
  400970:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400977:	83 e0 bf             	and    $0xffffffbf,%eax
  40097a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400981:	c3                   	retq   
  400982:	0f 1f 40 00          	nopl   0x0(%rax)
  400986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40098d:	00 00 00 

0000000000400990 <clr_singl_bits_method()>:
  400990:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400997:	83 e0 bf             	and    $0xffffffbf,%eax
  40099a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4009a1:	c3                   	retq   
  4009a2:	0f 1f 40 00          	nopl   0x0(%rax)
  4009a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009ad:	00 00 00 

00000000004009b0 <set_singl_mskd_operator()>:
  4009b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4009b7:	83 c8 02             	or     $0x2,%eax
  4009ba:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4009c1:	c3                   	retq   
  4009c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4009c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009cd:	00 00 00 

00000000004009d0 <set_singl_mskd_method()>:
  4009d0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4009d7:	83 c8 02             	or     $0x2,%eax
  4009da:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4009e1:	c3                   	retq   
  4009e2:	0f 1f 40 00          	nopl   0x0(%rax)
  4009e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009ed:	00 00 00 

00000000004009f0 <clr_singl_mskd_operator()>:
  4009f0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4009f7:	83 e0 fd             	and    $0xfffffffd,%eax
  4009fa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400a01:	c3                   	retq   
  400a02:	0f 1f 40 00          	nopl   0x0(%rax)
  400a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a0d:	00 00 00 

0000000000400a10 <clr_singl_mskd_method()>:
  400a10:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400a17:	83 e0 fd             	and    $0xfffffffd,%eax
  400a1a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400a21:	c3                   	retq   
  400a22:	0f 1f 40 00          	nopl   0x0(%rax)
  400a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a2d:	00 00 00 

0000000000400a30 <equ_singl_bits_operator()>:
  400a30:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400a37:	40 00 00 00 
  400a3b:	c3                   	retq   
  400a3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a40 <equ_singl_bits_method()>:
  400a40:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400a47:	40 00 00 00 
  400a4b:	c3                   	retq   
  400a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a50 <equ_singl_mskd_operator()>:
  400a50:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400a57:	02 00 00 00 
  400a5b:	c3                   	retq   
  400a5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a60 <equ_singl_mskd_method()>:
  400a60:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400a67:	02 00 00 00 
  400a6b:	c3                   	retq   
  400a6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a70 <flp_singl_bits_operator()>:
  400a70:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400a77:	83 f0 40             	xor    $0x40,%eax
  400a7a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400a81:	c3                   	retq   
  400a82:	0f 1f 40 00          	nopl   0x0(%rax)
  400a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a8d:	00 00 00 

0000000000400a90 <flp_singl_bits_method()>:
  400a90:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400a97:	83 f0 40             	xor    $0x40,%eax
  400a9a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400aa1:	c3                   	retq   
  400aa2:	0f 1f 40 00          	nopl   0x0(%rax)
  400aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400aad:	00 00 00 

0000000000400ab0 <flp_singl_mskd_operator()>:
  400ab0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400ab7:	83 f0 02             	xor    $0x2,%eax
  400aba:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400ac1:	c3                   	retq   
  400ac2:	0f 1f 40 00          	nopl   0x0(%rax)
  400ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400acd:	00 00 00 

0000000000400ad0 <flp_singl_mskd_method()>:
  400ad0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400ad7:	83 f0 02             	xor    $0x2,%eax
  400ada:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400ae1:	c3                   	retq   
  400ae2:	0f 1f 40 00          	nopl   0x0(%rax)
  400ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400aed:	00 00 00 

0000000000400af0 <ins_singl_mskd_operator()>:
  400af0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400af7:	83 e0 f9             	and    $0xfffffff9,%eax
  400afa:	83 c8 04             	or     $0x4,%eax
  400afd:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b04:	c3                   	retq   
  400b05:	90                   	nop
  400b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b0d:	00 00 00 

0000000000400b10 <ins_singl_mskd_method()>:
  400b10:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b17:	83 e0 f9             	and    $0xfffffff9,%eax
  400b1a:	83 c8 04             	or     $0x4,%eax
  400b1d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b24:	c3                   	retq   
  400b25:	90                   	nop
  400b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b2d:	00 00 00 

0000000000400b30 <set_multi_bits_operator()>:
  400b30:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b37:	83 c8 21             	or     $0x21,%eax
  400b3a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b41:	c3                   	retq   
  400b42:	0f 1f 40 00          	nopl   0x0(%rax)
  400b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b4d:	00 00 00 

0000000000400b50 <set_multi_bits_method()>:
  400b50:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b57:	83 c8 21             	or     $0x21,%eax
  400b5a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b61:	c3                   	retq   
  400b62:	0f 1f 40 00          	nopl   0x0(%rax)
  400b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b6d:	00 00 00 

0000000000400b70 <ins_multi_mskd_operator()>:
  400b70:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b77:	25 79 f0 ff ff       	and    $0xfffff079,%eax
  400b7c:	0d 82 01 00 00       	or     $0x182,%eax
  400b81:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400b88:	c3                   	retq   
  400b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400b90 <ins_multi_mskd_method()>:
  400b90:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400b97:	25 79 f0 ff ff       	and    $0xfffff079,%eax
  400b9c:	0d 82 01 00 00       	or     $0x182,%eax
  400ba1:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400ba8:	c3                   	retq   
  400ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400bb0 <equ_multi_bits_operator()>:
  400bb0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
  400bb7:	60 00 00 00 
  400bbb:	c3                   	retq   
  400bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bc0 <equ_multi_bits_method()>:
  400bc0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
  400bc7:	60 00 00 00 
  400bcb:	c3                   	retq   
  400bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bd0 <equ_multi_mskd_operator()>:
  400bd0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
  400bd7:	08 03 00 00 
  400bdb:	c3                   	retq   
  400bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400be0 <equ_multi_mskd_method()>:
  400be0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
  400be7:	08 03 00 00 
  400beb:	c3                   	retq   
  400bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bf0 <equ_bits_mskd_operator()>:
  400bf0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400bf7:	22 00 00 00 
  400bfb:	c3                   	retq   
  400bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c00 <equ_bits_mskd_method()>:
  400c00:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400c07:	22 00 00 00 
  400c0b:	c3                   	retq   
  400c0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c10 <equ_mskd_bits_operator()>:
  400c10:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
  400c17:	44 00 00 00 
  400c1b:	c3                   	retq   
  400c1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c20 <equ_mskd_bits_method()>:
  400c20:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
  400c27:	44 00 00 00 
  400c2b:	c3                   	retq   
  400c2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400c30 <equ_bits_var()>:
  400c30:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400c37:	40 00 00 00 
  400c3b:	c7 04 25 c4 02 70 00 	movl   $0x1,0x7002c4
  400c42:	01 00 00 00 
  400c46:	c3                   	retq   
  400c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400c4e:	00 00 

0000000000400c50 <equ_mskd_var()>:
  400c50:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400c57:	02 00 00 00 
  400c5b:	c7 04 25 c4 02 70 00 	movl   $0x180,0x7002c4
  400c62:	80 01 00 00 
  400c66:	c3                   	retq   
  400c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400c6e:	00 00 

0000000000400c70 <cmp_equ_zero()>:
  400c70:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
  400c77:	00 00 00 00 
  400c7b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400c82:	85 c0                	test   %eax,%eax
  400c84:	74 12                	je     400c98 <cmp_equ_zero()+0x28>
  400c86:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  400c8d:	00 00 00 22 
  400c91:	c3                   	retq   
  400c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400c98:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
  400c9f:	00 00 00 3a 
  400ca3:	c3                   	retq   
  400ca4:	66 90                	xchg   %ax,%ax
  400ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400cad:	00 00 00 

0000000000400cb0 <cmp_neq_zero()>:
  400cb0:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
  400cb7:	00 00 00 00 
  400cbb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400cc2:	85 c0                	test   %eax,%eax
  400cc4:	75 12                	jne    400cd8 <cmp_neq_zero()+0x28>
  400cc6:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  400ccd:	20 00 00 00 
  400cd1:	c3                   	retq   
  400cd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400cd8:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  400cdf:	04 00 00 00 
  400ce3:	c3                   	retq   
  400ce4:	66 90                	xchg   %ax,%ax
  400ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ced:	00 00 00 

0000000000400cf0 <cmp_equ_bits()>:
  400cf0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400cf7:	40 00 00 00 
  400cfb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400d02:	a8 40                	test   $0x40,%al
  400d04:	75 12                	jne    400d18 <cmp_equ_bits()+0x28>
  400d06:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
  400d0d:	00 00 00 1a 
  400d11:	c3                   	retq   
  400d12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400d18:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  400d1f:	00 00 00 16 
  400d23:	c3                   	retq   
  400d24:	66 90                	xchg   %ax,%ax
  400d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d2d:	00 00 00 

0000000000400d30 <cmp_neq_bits()>:
  400d30:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  400d37:	40 00 00 00 
  400d3b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400d42:	a8 40                	test   $0x40,%al
  400d44:	75 12                	jne    400d58 <cmp_neq_bits()+0x28>
  400d46:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400d4d:	02 00 00 00 
  400d51:	c3                   	retq   
  400d52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400d58:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  400d5f:	20 00 00 00 
  400d63:	c3                   	retq   
  400d64:	66 90                	xchg   %ax,%ax
  400d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d6d:	00 00 00 

0000000000400d70 <cmp_equ_multi_bits()>:
  400d70:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
  400d77:	60 00 00 00 
  400d7b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400d82:	83 e0 60             	and    $0x60,%eax
  400d85:	83 f8 60             	cmp    $0x60,%eax
  400d88:	74 16                	je     400da0 <cmp_equ_multi_bits()+0x30>
  400d8a:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  400d91:	00 00 00 2e 
  400d95:	c3                   	retq   
  400d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d9d:	00 00 00 
  400da0:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  400da7:	00 00 00 22 
  400dab:	c3                   	retq   
  400dac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400db0 <cmp_neq_multi_bits()>:
  400db0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
  400db7:	60 00 00 00 
  400dbb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400dc2:	83 e0 60             	and    $0x60,%eax
  400dc5:	83 f8 60             	cmp    $0x60,%eax
  400dc8:	74 16                	je     400de0 <cmp_neq_multi_bits()+0x30>
  400dca:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
  400dd1:	00 00 00 3a 
  400dd5:	c3                   	retq   
  400dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ddd:	00 00 00 
  400de0:	c7 04 25 24 02 70 00 	movl   $0x3e000000,0x700224
  400de7:	00 00 00 3e 
  400deb:	c3                   	retq   
  400dec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400df0 <cmp_equ_mskd()>:
  400df0:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
  400df7:	00 d0 01 00 
  400dfb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400e02:	25 00 f0 01 00       	and    $0x1f000,%eax
  400e07:	3d 00 10 01 00       	cmp    $0x11000,%eax
  400e0c:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400e13:	74 1b                	je     400e30 <cmp_equ_mskd()+0x40>
  400e15:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
  400e1a:	0d 00 00 00 22       	or     $0x22000000,%eax
  400e1f:	89 04 25 24 02 70 00 	mov    %eax,0x700224
  400e26:	c3                   	retq   
  400e27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400e2e:	00 00 
  400e30:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
  400e35:	0d 00 00 00 0e       	or     $0xe000000,%eax
  400e3a:	89 04 25 24 02 70 00 	mov    %eax,0x700224
  400e41:	c3                   	retq   
  400e42:	0f 1f 40 00          	nopl   0x0(%rax)
  400e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e4d:	00 00 00 

0000000000400e50 <cmp_neq_mskd()>:
  400e50:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
  400e57:	00 d0 01 00 
  400e5b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400e62:	25 00 f0 01 00       	and    $0x1f000,%eax
  400e67:	3d 00 10 01 00       	cmp    $0x11000,%eax
  400e6c:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400e73:	74 13                	je     400e88 <cmp_neq_mskd()+0x38>
  400e75:	83 e0 f9             	and    $0xfffffff9,%eax
  400e78:	83 c8 04             	or     $0x4,%eax
  400e7b:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400e82:	c3                   	retq   
  400e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400e88:	83 c8 40             	or     $0x40,%eax
  400e8b:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  400e92:	c3                   	retq   
  400e93:	0f 1f 00             	nopl   (%rax)
  400e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e9d:	00 00 00 

0000000000400ea0 <cmp_equ_reg()>:
  400ea0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400ea7:	22 00 00 00 
  400eab:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400eb2:	83 f8 22             	cmp    $0x22,%eax
  400eb5:	74 11                	je     400ec8 <cmp_equ_reg()+0x28>
  400eb7:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  400ebe:	00 00 00 2e 
  400ec2:	c3                   	retq   
  400ec3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400ec8:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
  400ecf:	00 00 00 2a 
  400ed3:	c3                   	retq   
  400ed4:	66 90                	xchg   %ax,%ax
  400ed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400edd:	00 00 00 

0000000000400ee0 <cmp_neq_reg()>:
  400ee0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
  400ee7:	22 00 00 00 
  400eeb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  400ef2:	83 f8 22             	cmp    $0x22,%eax
  400ef5:	74 11                	je     400f08 <cmp_neq_reg()+0x28>
  400ef7:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  400efe:	02 00 00 00 
  400f02:	c3                   	retq   
  400f03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400f08:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  400f0f:	20 00 00 00 
  400f13:	c3                   	retq   
  400f14:	66 90                	xchg   %ax,%ax
  400f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400f1d:	00 00 00 

0000000000400f20 <constexpr_bits_array()>:
  400f20:	c7 04 25 2c 01 70 00 	movl   $0x6,0x70012c
  400f27:	06 00 00 00 
  400f2b:	c7 04 25 a0 01 70 00 	movl   $0x2000,0x7001a0
  400f32:	00 20 00 00 
  400f36:	c3                   	retq   
  400f37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400f3e:	00 00 

0000000000400f40 <runtime_bits_array()>:
  400f40:	c7 44 24 fc 03 00 00 	movl   $0x3,-0x4(%rsp)
  400f47:	00 
  400f48:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
  400f4c:	c7 04 85 20 01 70 00 	movl   $0x21,0x700120(,%rax,4)
  400f53:	21 00 00 00 
  400f57:	c7 44 24 fc 07 00 00 	movl   $0x7,-0x4(%rsp)
  400f5e:	00 
  400f5f:	b8 01 00 00 00       	mov    $0x1,%eax
  400f64:	8b 4c 24 fc          	mov    -0x4(%rsp),%ecx
  400f68:	d3 e0                	shl    %cl,%eax
  400f6a:	89 04 25 a0 01 70 00 	mov    %eax,0x7001a0
  400f71:	c3                   	retq   
  400f72:	0f 1f 40 00          	nopl   0x0(%rax)
  400f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400f7d:	00 00 00 

0000000000400f80 <prescaler_low()>:
  400f80:	c7 04 25 24 02 70 00 	movl   $0x77,0x700224
  400f87:	77 00 00 00 
  400f8b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400f92:	83 e0 7f             	and    $0x7f,%eax
  400f95:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  400f9c:	c3                   	retq   
  400f9d:	0f 1f 00             	nopl   (%rax)

0000000000400fa0 <prescaler_high()>:
  400fa0:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
  400fa7:	00 00 00 3a 
  400fab:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400fb2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400fb7:	c1 e8 19             	shr    $0x19,%eax
  400fba:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  400fc1:	c3                   	retq   
  400fc2:	0f 1f 40 00          	nopl   0x0(%rax)
  400fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400fcd:	00 00 00 

0000000000400fd0 <reg_mskd_lss()>:
  400fd0:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
  400fd7:	00 00 00 36 
  400fdb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  400fe2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  400fe7:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
  400fec:	76 12                	jbe    401000 <reg_mskd_lss()+0x30>
  400fee:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  400ff5:	04 00 00 00 
  400ff9:	c3                   	retq   
  400ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401000:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401007:	02 00 00 00 
  40100b:	c3                   	retq   
  40100c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401010 <reg_mskd_leq()>:
  401010:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401017:	00 00 00 2e 
  40101b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401022:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401027:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
  40102c:	77 22                	ja     401050 <reg_mskd_leq()+0x40>
  40102e:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401035:	25 00 00 00 3e       	and    $0x3e000000,%eax
  40103a:	3d 00 00 00 30       	cmp    $0x30000000,%eax
  40103f:	77 0f                	ja     401050 <reg_mskd_leq()+0x40>
  401041:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401048:	02 00 00 00 
  40104c:	c3                   	retq   
  40104d:	0f 1f 00             	nopl   (%rax)
  401050:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401057:	04 00 00 00 
  40105b:	c3                   	retq   
  40105c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401060 <reg_mskd_gtr()>:
  401060:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401067:	00 00 00 26 
  40106b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401072:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401077:	3d 00 00 00 24       	cmp    $0x24000000,%eax
  40107c:	77 12                	ja     401090 <reg_mskd_gtr()+0x30>
  40107e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401085:	04 00 00 00 
  401089:	c3                   	retq   
  40108a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401090:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401097:	02 00 00 00 
  40109b:	c3                   	retq   
  40109c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010a0 <reg_mskd_geq()>:
  4010a0:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  4010a7:	00 00 00 22 
  4010ab:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4010b2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4010b7:	3d ff ff ff 1f       	cmp    $0x1fffffff,%eax
  4010bc:	76 22                	jbe    4010e0 <reg_mskd_geq()+0x40>
  4010be:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4010c5:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4010ca:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
  4010cf:	76 0f                	jbe    4010e0 <reg_mskd_geq()+0x40>
  4010d1:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4010d8:	02 00 00 00 
  4010dc:	c3                   	retq   
  4010dd:	0f 1f 00             	nopl   (%rax)
  4010e0:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4010e7:	04 00 00 00 
  4010eb:	c3                   	retq   
  4010ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010f0 <pos_cmp_eq()>:
  4010f0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4010f7:	02 00 00 00 
  4010fb:	c3                   	retq   
  4010fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401100 <pos_cmp_ne()>:
  401100:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401107:	02 00 00 00 
  40110b:	c3                   	retq   
  40110c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401110 <bits_extract_eq()>:
  401110:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401117:	40 00 00 00 
  40111b:	83 3c 25 c4 02 70 00 	cmpl   $0x40,0x7002c4
  401122:	40 
  401123:	74 13                	je     401138 <bits_extract_eq()+0x28>
  401125:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  40112c:	04 00 00 00 
  401130:	c3                   	retq   
  401131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401138:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  40113f:	02 00 00 00 
  401143:	c3                   	retq   
  401144:	66 90                	xchg   %ax,%ax
  401146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40114d:	00 00 00 

0000000000401150 <mskd_extract_eq()>:
  401150:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401157:	02 00 00 00 
  40115b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401162:	83 f8 02             	cmp    $0x2,%eax
  401165:	74 11                	je     401178 <mskd_extract_eq()+0x28>
  401167:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  40116e:	40 00 00 00 
  401172:	c3                   	retq   
  401173:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401178:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  40117f:	20 00 00 00 
  401183:	c3                   	retq   
  401184:	66 90                	xchg   %ax,%ax
  401186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40118d:	00 00 00 

0000000000401190 <mskd_extract_ne()>:
  401190:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401197:	04 00 00 00 
  40119b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4011a2:	83 f8 04             	cmp    $0x4,%eax
  4011a5:	74 11                	je     4011b8 <mskd_extract_ne()+0x28>
  4011a7:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  4011ae:	20 00 00 00 
  4011b2:	c3                   	retq   
  4011b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4011b8:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4011bf:	40 00 00 00 
  4011c3:	c3                   	retq   
  4011c4:	66 90                	xchg   %ax,%ax
  4011c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4011cd:	00 00 00 

00000000004011d0 <mskd_extract_lss()>:
  4011d0:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  4011d7:	00 00 00 16 
  4011db:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4011e2:	3d ff ff ff 17       	cmp    $0x17ffffff,%eax
  4011e7:	76 0f                	jbe    4011f8 <mskd_extract_lss()+0x28>
  4011e9:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  4011f0:	40 00 00 00 
  4011f4:	c3                   	retq   
  4011f5:	0f 1f 00             	nopl   (%rax)
  4011f8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  4011ff:	20 00 00 00 
  401203:	c3                   	retq   
  401204:	66 90                	xchg   %ax,%ax
  401206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40120d:	00 00 00 

0000000000401210 <mskd_extract_leq()>:
  401210:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401217:	00 00 00 2e 
  40121b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401222:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
  401227:	77 0f                	ja     401238 <mskd_extract_leq()+0x28>
  401229:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  401230:	20 00 00 00 
  401234:	c3                   	retq   
  401235:	0f 1f 00             	nopl   (%rax)
  401238:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  40123f:	40 00 00 00 
  401243:	c3                   	retq   
  401244:	66 90                	xchg   %ax,%ax
  401246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40124d:	00 00 00 

0000000000401250 <mskd_extract_gtr()>:
  401250:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401257:	00 00 00 26 
  40125b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401262:	3d 00 00 00 24       	cmp    $0x24000000,%eax
  401267:	77 0f                	ja     401278 <mskd_extract_gtr()+0x28>
  401269:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401270:	40 00 00 00 
  401274:	c3                   	retq   
  401275:	0f 1f 00             	nopl   (%rax)
  401278:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  40127f:	20 00 00 00 
  401283:	c3                   	retq   
  401284:	66 90                	xchg   %ax,%ax
  401286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40128d:	00 00 00 

0000000000401290 <set_bits_global()>:
  401290:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401297:	83 c8 40             	or     $0x40,%eax
  40129a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4012a1:	c3                   	retq   
  4012a2:	0f 1f 40 00          	nopl   0x0(%rax)
  4012a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4012ad:	00 00 00 

00000000004012b0 <ins_mskd_global()>:
  4012b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4012b7:	83 e0 f9             	and    $0xfffffff9,%eax
  4012ba:	83 c8 02             	or     $0x2,%eax
  4012bd:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4012c4:	c3                   	retq   
  4012c5:	90                   	nop
  4012c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4012cd:	00 00 00 

00000000004012d0 <assign_array_global()>:
  4012d0:	c7 04 25 2c 01 70 00 	movl   $0xbd,0x70012c
  4012d7:	bd 00 00 00 
  4012db:	c3                   	retq   
  4012dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004012e0 <shifted_global()>:
  4012e0:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  4012e7:	00 00 00 2e 
  4012eb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4012f2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4012f7:	c1 e8 19             	shr    $0x19,%eax
  4012fa:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  401301:	c3                   	retq   
  401302:	0f 1f 40 00          	nopl   0x0(%rax)
  401306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40130d:	00 00 00 

0000000000401310 <assign_register_global()>:
  401310:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401317:	04 00 00 00 
  40131b:	c3                   	retq   
  40131c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401320 <copy_bits_equ()>:
  401320:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401327:	40 00 00 00 
  40132b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401332:	a8 40                	test   $0x40,%al
  401334:	75 12                	jne    401348 <copy_bits_equ()+0x28>
  401336:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  40133d:	04 00 00 00 
  401341:	c3                   	retq   
  401342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401348:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  40134f:	02 00 00 00 
  401353:	c3                   	retq   
  401354:	66 90                	xchg   %ax,%ax
  401356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40135d:	00 00 00 

0000000000401360 <copy_bits_neq()>:
  401360:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401367:	40 00 00 00 
  40136b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401372:	a8 40                	test   $0x40,%al
  401374:	75 12                	jne    401388 <copy_bits_neq()+0x28>
  401376:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  40137d:	02 00 00 00 
  401381:	c3                   	retq   
  401382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401388:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  40138f:	04 00 00 00 
  401393:	c3                   	retq   
  401394:	66 90                	xchg   %ax,%ax
  401396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40139d:	00 00 00 

00000000004013a0 <copy_mskd_equ()>:
  4013a0:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  4013a7:	00 00 00 16 
  4013ab:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4013b2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4013b7:	3d 00 00 00 16       	cmp    $0x16000000,%eax
  4013bc:	74 12                	je     4013d0 <copy_mskd_equ()+0x30>
  4013be:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4013c5:	04 00 00 00 
  4013c9:	c3                   	retq   
  4013ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4013d0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4013d7:	02 00 00 00 
  4013db:	c3                   	retq   
  4013dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013e0 <copy_mskd_neq()>:
  4013e0:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
  4013e7:	00 00 00 1a 
  4013eb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4013f2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4013f7:	3d 00 00 00 1a       	cmp    $0x1a000000,%eax
  4013fc:	74 12                	je     401410 <copy_mskd_neq()+0x30>
  4013fe:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401405:	02 00 00 00 
  401409:	c3                   	retq   
  40140a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401410:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401417:	04 00 00 00 
  40141b:	c3                   	retq   
  40141c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401420 <copy_mskd_lss()>:
  401420:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
  401427:	00 00 00 36 
  40142b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401432:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401437:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
  40143c:	76 12                	jbe    401450 <copy_mskd_lss()+0x30>
  40143e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401445:	04 00 00 00 
  401449:	c3                   	retq   
  40144a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401450:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401457:	02 00 00 00 
  40145b:	c3                   	retq   
  40145c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401460 <copy_mskd_leq()>:
  401460:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401467:	00 00 00 2e 
  40146b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401472:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401477:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
  40147c:	77 12                	ja     401490 <copy_mskd_leq()+0x30>
  40147e:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401485:	02 00 00 00 
  401489:	c3                   	retq   
  40148a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401490:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401497:	04 00 00 00 
  40149b:	c3                   	retq   
  40149c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014a0 <copy_mskd_gtr()>:
  4014a0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  4014a7:	00 00 00 26 
  4014ab:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4014b2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4014b7:	3d 00 00 00 24       	cmp    $0x24000000,%eax
  4014bc:	77 12                	ja     4014d0 <copy_mskd_gtr()+0x30>
  4014be:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  4014c5:	04 00 00 00 
  4014c9:	c3                   	retq   
  4014ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4014d0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  4014d7:	02 00 00 00 
  4014db:	c3                   	retq   
  4014dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014e0 <copy_mskd_geq()>:
  4014e0:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  4014e7:	00 00 00 22 
  4014eb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  4014f2:	25 00 00 00 3e       	and    $0x3e000000,%eax
  4014f7:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
  4014fc:	76 12                	jbe    401510 <copy_mskd_geq()+0x30>
  4014fe:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401505:	02 00 00 00 
  401509:	c3                   	retq   
  40150a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401510:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401517:	04 00 00 00 
  40151b:	c3                   	retq   
  40151c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401520 <copy_shifted()>:
  401520:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  401527:	00 00 00 16 
  40152b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401532:	25 00 00 00 3e       	and    $0x3e000000,%eax
  401537:	3d 00 00 00 16       	cmp    $0x16000000,%eax
  40153c:	74 12                	je     401550 <copy_shifted()+0x30>
  40153e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401545:	04 00 00 00 
  401549:	c3                   	retq   
  40154a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401550:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401557:	02 00 00 00 
  40155b:	c3                   	retq   
  40155c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401560 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>:
  401560:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
  401567:	66 00 00 00 
  40156b:	c3                   	retq   
  40156c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401570 <call_pos_ref()>:
  401570:	48 83 ec 18          	sub    $0x18,%rsp
  401574:	48 89 e7             	mov    %rsp,%rdi
  401577:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
  40157e:	e8 dd ff ff ff       	callq  401560 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
  401583:	48 89 e7             	mov    %rsp,%rdi
  401586:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
  40158d:	e8 ce ff ff ff       	callq  401560 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
  401592:	48 83 c4 18          	add    $0x18,%rsp
  401596:	c3                   	retq   
  401597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40159e:	00 00 

00000000004015a0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>:
  4015a0:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
  4015a7:	77 00 00 00 
  4015ab:	c3                   	retq   
  4015ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004015b0 <call_pos_ref_global()>:
  4015b0:	48 83 ec 18          	sub    $0x18,%rsp
  4015b4:	48 89 e7             	mov    %rsp,%rdi
  4015b7:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  4015be:	e8 dd ff ff ff       	callq  4015a0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>
  4015c3:	48 83 c4 18          	add    $0x18,%rsp
  4015c7:	c3                   	retq   
  4015c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4015cf:	00 

00000000004015d0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>:
  4015d0:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
  4015d7:	33 00 00 00 
  4015db:	c3                   	retq   
  4015dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004015e0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>:
  4015e0:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
  4015e7:	44 00 00 00 
  4015eb:	c3                   	retq   
  4015ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004015f0 <call_pos_val()>:
  4015f0:	48 83 ec 08          	sub    $0x8,%rsp
  4015f4:	bf 05 00 00 00       	mov    $0x5,%edi
  4015f9:	e8 d2 ff ff ff       	callq  4015d0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>
  4015fe:	bf 06 00 00 00       	mov    $0x6,%edi
  401603:	e8 d8 ff ff ff       	callq  4015e0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
  401608:	48 83 c4 08          	add    $0x8,%rsp
  40160c:	c3                   	retq   
  40160d:	0f 1f 00             	nopl   (%rax)

0000000000401610 <call_pos_val_global()>:
  401610:	48 83 ec 08          	sub    $0x8,%rsp
  401614:	bf 06 00 00 00       	mov    $0x6,%edi
  401619:	e8 c2 ff ff ff       	callq  4015e0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
  40161e:	48 83 c4 08          	add    $0x8,%rsp
  401622:	c3                   	retq   
  401623:	0f 1f 00             	nopl   (%rax)
  401626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40162d:	00 00 00 

0000000000401630 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>:
  401630:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401637:	83 e0 f9             	and    $0xfffffff9,%eax
  40163a:	0b 47 04             	or     0x4(%rdi),%eax
  40163d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401644:	c3                   	retq   
  401645:	90                   	nop
  401646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40164d:	00 00 00 

0000000000401650 <call_mskd_ref_const()>:
  401650:	48 83 ec 18          	sub    $0x18,%rsp
  401654:	48 89 e7             	mov    %rsp,%rdi
  401657:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  40165e:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%rsp)
  401665:	00 
  401666:	e8 c5 ff ff ff       	callq  401630 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
  40166b:	48 83 c4 18          	add    $0x18,%rsp
  40166f:	c3                   	retq   

0000000000401670 <call_mskd_ref_var()>:
  401670:	48 83 ec 18          	sub    $0x18,%rsp
  401674:	48 89 e7             	mov    %rsp,%rdi
  401677:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  40167e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
  401685:	00 
  401686:	e8 a5 ff ff ff       	callq  401630 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
  40168b:	48 83 c4 18          	add    $0x18,%rsp
  40168f:	c3                   	retq   

0000000000401690 <call_mskd_ref_global()>:
  401690:	48 83 ec 18          	sub    $0x18,%rsp
  401694:	48 89 e7             	mov    %rsp,%rdi
  401697:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
  40169e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
  4016a5:	00 
  4016a6:	e8 85 ff ff ff       	callq  401630 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
  4016ab:	48 83 c4 18          	add    $0x18,%rsp
  4016af:	c3                   	retq   

00000000004016b0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>:
  4016b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4016b7:	83 e0 f9             	and    $0xfffffff9,%eax
  4016ba:	83 c8 02             	or     $0x2,%eax
  4016bd:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4016c4:	c3                   	retq   
  4016c5:	90                   	nop
  4016c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4016cd:	00 00 00 

00000000004016d0 <call_mskd_val_const()>:
  4016d0:	48 83 ec 08          	sub    $0x8,%rsp
  4016d4:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
  4016db:	00 00 00 
  4016de:	e8 cd ff ff ff       	callq  4016b0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
  4016e3:	48 83 c4 08          	add    $0x8,%rsp
  4016e7:	c3                   	retq   
  4016e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4016ef:	00 

00000000004016f0 <call_mskd_val_var()>:
  4016f0:	48 83 ec 08          	sub    $0x8,%rsp
  4016f4:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
  4016fb:	00 00 00 
  4016fe:	e8 ad ff ff ff       	callq  4016b0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
  401703:	48 83 c4 08          	add    $0x8,%rsp
  401707:	c3                   	retq   
  401708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40170f:	00 

0000000000401710 <call_mskd_val_global()>:
  401710:	48 83 ec 08          	sub    $0x8,%rsp
  401714:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
  40171b:	00 00 00 
  40171e:	e8 8d ff ff ff       	callq  4016b0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
  401723:	48 83 c4 08          	add    $0x8,%rsp
  401727:	c3                   	retq   
  401728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40172f:	00 

0000000000401730 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>:
  401730:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  401737:	83 c8 40             	or     $0x40,%eax
  40173a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401741:	c3                   	retq   
  401742:	0f 1f 40 00          	nopl   0x0(%rax)
  401746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40174d:	00 00 00 

0000000000401750 <call_bits_val_const()>:
  401750:	48 83 ec 08          	sub    $0x8,%rsp
  401754:	bf 40 00 00 00       	mov    $0x40,%edi
  401759:	e8 d2 ff ff ff       	callq  401730 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
  40175e:	48 83 c4 08          	add    $0x8,%rsp
  401762:	c3                   	retq   
  401763:	0f 1f 00             	nopl   (%rax)
  401766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40176d:	00 00 00 

0000000000401770 <call_bits_val_var()>:
  401770:	48 83 ec 08          	sub    $0x8,%rsp
  401774:	bf 40 00 00 00       	mov    $0x40,%edi
  401779:	e8 b2 ff ff ff       	callq  401730 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
  40177e:	48 83 c4 08          	add    $0x8,%rsp
  401782:	c3                   	retq   
  401783:	0f 1f 00             	nopl   (%rax)
  401786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40178d:	00 00 00 

0000000000401790 <call_bits_val_global()>:
  401790:	48 83 ec 08          	sub    $0x8,%rsp
  401794:	bf 40 00 00 00       	mov    $0x40,%edi
  401799:	e8 92 ff ff ff       	callq  401730 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
  40179e:	48 83 c4 08          	add    $0x8,%rsp
  4017a2:	c3                   	retq   
  4017a3:	0f 1f 00             	nopl   (%rax)
  4017a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017ad:	00 00 00 

00000000004017b0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>)>:
  4017b0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4017b7:	09 c7                	or     %eax,%edi
  4017b9:	89 3c 25 c4 02 70 00 	mov    %edi,0x7002c4
  4017c0:	c3                   	retq   
  4017c1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4017c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017cd:	00 00 00 

00000000004017d0 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
  4017d0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  4017d7:	0b 07                	or     (%rdi),%eax
  4017d9:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  4017e0:	c3                   	retq   
  4017e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4017e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017ed:	00 00 00 

00000000004017f0 <call_bits_ref_var()>:
  4017f0:	48 83 ec 18          	sub    $0x18,%rsp
  4017f4:	48 89 e7             	mov    %rsp,%rdi
  4017f7:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
  4017fe:	e8 cd ff ff ff       	callq  4017d0 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  401803:	48 83 c4 18          	add    $0x18,%rsp
  401807:	c3                   	retq   
  401808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40180f:	00 

0000000000401810 <call_bits_ref_const()>:
  401810:	48 83 ec 18          	sub    $0x18,%rsp
  401814:	48 89 e7             	mov    %rsp,%rdi
  401817:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
  40181e:	e8 ad ff ff ff       	callq  4017d0 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  401823:	48 83 c4 18          	add    $0x18,%rsp
  401827:	c3                   	retq   
  401828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40182f:	00 

0000000000401830 <call_bits_ref_global()>:
  401830:	48 83 ec 18          	sub    $0x18,%rsp
  401834:	48 89 e7             	mov    %rsp,%rdi
  401837:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
  40183e:	e8 8d ff ff ff       	callq  4017d0 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  401843:	48 83 c4 18          	add    $0x18,%rsp
  401847:	c3                   	retq   
  401848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40184f:	00 

0000000000401850 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401850:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  401857:	89 f8                	mov    %edi,%eax
  401859:	48 c1 ef 20          	shr    $0x20,%rdi
  40185d:	f7 d0                	not    %eax
  40185f:	21 d0                	and    %edx,%eax
  401861:	09 f8                	or     %edi,%eax
  401863:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  40186a:	c3                   	retq   
  40186b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401870 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&)>:
  401870:	8b 07                	mov    (%rdi),%eax
  401872:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  401879:	f7 d0                	not    %eax
  40187b:	21 d0                	and    %edx,%eax
  40187d:	0b 47 04             	or     0x4(%rdi),%eax
  401880:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401887:	c3                   	retq   
  401888:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40188f:	00 

0000000000401890 <periph_bits(mcu::Serial*)>:
  401890:	8b 47 04             	mov    0x4(%rdi),%eax
  401893:	83 c8 40             	or     $0x40,%eax
  401896:	89 47 04             	mov    %eax,0x4(%rdi)
  401899:	c3                   	retq   
  40189a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004018a0 <call_periph_bits()>:
  4018a0:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  4018a5:	eb e9                	jmp    401890 <periph_bits(mcu::Serial*)>
  4018a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4018ae:	00 00 

00000000004018b0 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
  4018b0:	8b 47 04             	mov    0x4(%rdi),%eax
  4018b3:	09 c6                	or     %eax,%esi
  4018b5:	89 77 04             	mov    %esi,0x4(%rdi)
  4018b8:	c3                   	retq   
  4018b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004018c0 <call_periph_bits_val()>:
  4018c0:	48 83 ec 08          	sub    $0x8,%rsp
  4018c4:	be 40 00 00 00       	mov    $0x40,%esi
  4018c9:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  4018ce:	e8 dd ff ff ff       	callq  4018b0 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config>)>
  4018d3:	48 83 c4 08          	add    $0x8,%rsp
  4018d7:	c3                   	retq   
  4018d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4018df:	00 

00000000004018e0 <reg_bits_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
  4018e0:	8b 07                	mov    (%rdi),%eax
  4018e2:	09 c6                	or     %eax,%esi
  4018e4:	89 37                	mov    %esi,(%rdi)
  4018e6:	c3                   	retq   
  4018e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4018ee:	00 00 

00000000004018f0 <call_reg_bits_val()>:
  4018f0:	48 83 ec 08          	sub    $0x8,%rsp
  4018f4:	be 40 00 00 00       	mov    $0x40,%esi
  4018f9:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  4018fe:	e8 dd ff ff ff       	callq  4018e0 <reg_bits_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config>)>
  401903:	48 83 c4 08          	add    $0x8,%rsp
  401907:	c3                   	retq   
  401908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40190f:	00 

0000000000401910 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
  401910:	8b 47 04             	mov    0x4(%rdi),%eax
  401913:	0b 06                	or     (%rsi),%eax
  401915:	89 47 04             	mov    %eax,0x4(%rdi)
  401918:	c3                   	retq   
  401919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401920 <call_periph_bits_ref()>:
  401920:	48 83 ec 18          	sub    $0x18,%rsp
  401924:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  401929:	48 89 e6             	mov    %rsp,%rsi
  40192c:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
  401933:	e8 d8 ff ff ff       	callq  401910 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  401938:	48 83 c4 18          	add    $0x18,%rsp
  40193c:	c3                   	retq   
  40193d:	0f 1f 00             	nopl   (%rax)

0000000000401940 <reg_bits_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
  401940:	8b 07                	mov    (%rdi),%eax
  401942:	0b 06                	or     (%rsi),%eax
  401944:	89 07                	mov    %eax,(%rdi)
  401946:	c3                   	retq   
  401947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40194e:	00 00 

0000000000401950 <call_reg_bits_ref()>:
  401950:	48 83 ec 18          	sub    $0x18,%rsp
  401954:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  401959:	48 89 e6             	mov    %rsp,%rsi
  40195c:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
  401963:	e8 d8 ff ff ff       	callq  401940 <reg_bits_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>
  401968:	48 83 c4 18          	add    $0x18,%rsp
  40196c:	c3                   	retq   
  40196d:	0f 1f 00             	nopl   (%rax)

0000000000401970 <periph_mskd(mcu::Serial*)>:
  401970:	8b 47 04             	mov    0x4(%rdi),%eax
  401973:	83 e0 f9             	and    $0xfffffff9,%eax
  401976:	83 c8 02             	or     $0x2,%eax
  401979:	89 47 04             	mov    %eax,0x4(%rdi)
  40197c:	c3                   	retq   
  40197d:	0f 1f 00             	nopl   (%rax)

0000000000401980 <call_periph_mskd()>:
  401980:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  401985:	eb e9                	jmp    401970 <periph_mskd(mcu::Serial*)>
  401987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40198e:	00 00 

0000000000401990 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401990:	8b 57 04             	mov    0x4(%rdi),%edx
  401993:	89 f0                	mov    %esi,%eax
  401995:	48 c1 ee 20          	shr    $0x20,%rsi
  401999:	f7 d0                	not    %eax
  40199b:	21 d0                	and    %edx,%eax
  40199d:	09 f0                	or     %esi,%eax
  40199f:	89 47 04             	mov    %eax,0x4(%rdi)
  4019a2:	c3                   	retq   
  4019a3:	0f 1f 00             	nopl   (%rax)
  4019a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ad:	00 00 00 

00000000004019b0 <call_periph_mskd_val()>:
  4019b0:	48 83 ec 08          	sub    $0x8,%rsp
  4019b4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  4019bb:	00 00 00 
  4019be:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  4019c3:	e8 c8 ff ff ff       	callq  401990 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  4019c8:	48 83 c4 08          	add    $0x8,%rsp
  4019cc:	c3                   	retq   
  4019cd:	0f 1f 00             	nopl   (%rax)

00000000004019d0 <reg_mskd_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  4019d0:	8b 17                	mov    (%rdi),%edx
  4019d2:	89 f0                	mov    %esi,%eax
  4019d4:	48 c1 ee 20          	shr    $0x20,%rsi
  4019d8:	f7 d0                	not    %eax
  4019da:	21 d0                	and    %edx,%eax
  4019dc:	09 f0                	or     %esi,%eax
  4019de:	89 07                	mov    %eax,(%rdi)
  4019e0:	c3                   	retq   
  4019e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4019e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ed:	00 00 00 

00000000004019f0 <call_reg_mskd_val()>:
  4019f0:	48 83 ec 08          	sub    $0x8,%rsp
  4019f4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  4019fb:	00 00 00 
  4019fe:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  401a03:	e8 c8 ff ff ff       	callq  4019d0 <reg_mskd_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401a08:	48 83 c4 08          	add    $0x8,%rsp
  401a0c:	c3                   	retq   
  401a0d:	0f 1f 00             	nopl   (%rax)

0000000000401a10 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401a10:	8b 57 04             	mov    0x4(%rdi),%edx
  401a13:	89 f0                	mov    %esi,%eax
  401a15:	48 c1 ee 20          	shr    $0x20,%rsi
  401a19:	f7 d0                	not    %eax
  401a1b:	21 d0                	and    %edx,%eax
  401a1d:	09 f0                	or     %esi,%eax
  401a1f:	89 47 04             	mov    %eax,0x4(%rdi)
  401a22:	c3                   	retq   
  401a23:	0f 1f 00             	nopl   (%rax)
  401a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a2d:	00 00 00 

0000000000401a30 <call_periph_mskd_ref()>:
  401a30:	48 83 ec 08          	sub    $0x8,%rsp
  401a34:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  401a3b:	00 00 00 
  401a3e:	bf c0 02 70 00       	mov    $0x7002c0,%edi
  401a43:	e8 c8 ff ff ff       	callq  401a10 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401a48:	48 83 c4 08          	add    $0x8,%rsp
  401a4c:	c3                   	retq   
  401a4d:	0f 1f 00             	nopl   (%rax)

0000000000401a50 <reg_mskd_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401a50:	8b 17                	mov    (%rdi),%edx
  401a52:	89 f0                	mov    %esi,%eax
  401a54:	48 c1 ee 20          	shr    $0x20,%rsi
  401a58:	f7 d0                	not    %eax
  401a5a:	21 d0                	and    %edx,%eax
  401a5c:	09 f0                	or     %esi,%eax
  401a5e:	89 07                	mov    %eax,(%rdi)
  401a60:	c3                   	retq   
  401a61:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a6d:	00 00 00 

0000000000401a70 <call_reg_mskd_ref()>:
  401a70:	48 83 ec 08          	sub    $0x8,%rsp
  401a74:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
  401a7b:	00 00 00 
  401a7e:	bf c4 02 70 00       	mov    $0x7002c4,%edi
  401a83:	e8 c8 ff ff ff       	callq  401a50 <reg_mskd_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401a88:	48 83 c4 08          	add    $0x8,%rsp
  401a8c:	c3                   	retq   
  401a8d:	0f 1f 00             	nopl   (%rax)

0000000000401a90 <return_bits()>:
  401a90:	b8 20 00 00 00       	mov    $0x20,%eax
  401a95:	c3                   	retq   
  401a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a9d:	00 00 00 

0000000000401aa0 <call_return_bits()>:
  401aa0:	48 83 ec 08          	sub    $0x8,%rsp
  401aa4:	e8 e7 ff ff ff       	callq  401a90 <return_bits()>
  401aa9:	83 f8 20             	cmp    $0x20,%eax
  401aac:	74 12                	je     401ac0 <call_return_bits()+0x20>
  401aae:	c7 04 25 24 02 70 00 	movl   $0x6000000,0x700224
  401ab5:	00 00 00 06 
  401ab9:	48 83 c4 08          	add    $0x8,%rsp
  401abd:	c3                   	retq   
  401abe:	66 90                	xchg   %ax,%ax
  401ac0:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
  401ac7:	00 00 00 2a 
  401acb:	48 83 c4 08          	add    $0x8,%rsp
  401acf:	c3                   	retq   

0000000000401ad0 <return_mskd()>:
  401ad0:	48 b8 18 00 00 00 08 	movabs $0x800000018,%rax
  401ad7:	00 00 00 
  401ada:	c3                   	retq   
  401adb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401ae0 <call_return_mskd()>:
  401ae0:	48 83 ec 08          	sub    $0x8,%rsp
  401ae4:	e8 e7 ff ff ff       	callq  401ad0 <return_mskd()>
  401ae9:	83 f8 18             	cmp    $0x18,%eax
  401aec:	74 12                	je     401b00 <call_return_mskd()+0x20>
  401aee:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401af5:	00 00 00 26 
  401af9:	48 83 c4 08          	add    $0x8,%rsp
  401afd:	c3                   	retq   
  401afe:	66 90                	xchg   %ax,%ax
  401b00:	48 c1 e8 20          	shr    $0x20,%rax
  401b04:	83 f8 08             	cmp    $0x8,%eax
  401b07:	75 e5                	jne    401aee <call_return_mskd()+0xe>
  401b09:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
  401b10:	00 00 00 22 
  401b14:	eb e3                	jmp    401af9 <call_return_mskd()+0x19>
  401b16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b1d:	00 00 00 

0000000000401b20 <return_reg()>:
  401b20:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401b27:	40 00 00 00 
  401b2b:	b8 c4 02 70 00       	mov    $0x7002c4,%eax
  401b30:	c3                   	retq   
  401b31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b3d:	00 00 00 

0000000000401b40 <call_return_reg()>:
  401b40:	e8 db ff ff ff       	callq  401b20 <return_reg()>
  401b45:	8b 00                	mov    (%rax),%eax
  401b47:	a8 40                	test   $0x40,%al
  401b49:	75 15                	jne    401b60 <call_return_reg()+0x20>
  401b4b:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401b52:	00 00 00 2e 
  401b56:	c3                   	retq   
  401b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401b5e:	00 00 
  401b60:	c7 04 25 24 02 70 00 	movl   $0x1e000000,0x700224
  401b67:	00 00 00 1e 
  401b6b:	c3                   	retq   
  401b6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401b70 <return_periph()>:
  401b70:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401b77:	40 00 00 00 
  401b7b:	b8 c0 02 70 00       	mov    $0x7002c0,%eax
  401b80:	c3                   	retq   
  401b81:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401b86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b8d:	00 00 00 

0000000000401b90 <call_return_periph()>:
  401b90:	e8 db ff ff ff       	callq  401b70 <return_periph()>
  401b95:	8b 40 04             	mov    0x4(%rax),%eax
  401b98:	a8 40                	test   $0x40,%al
  401b9a:	75 14                	jne    401bb0 <call_return_periph()+0x20>
  401b9c:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
  401ba3:	00 00 00 2a 
  401ba7:	c3                   	retq   
  401ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401baf:	00 
  401bb0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
  401bb7:	00 00 00 26 
  401bbb:	c3                   	retq   
  401bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401bc0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)>:
  401bc0:	83 ff 05             	cmp    $0x5,%edi
  401bc3:	74 1b                	je     401be0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x20>
  401bc5:	83 ff 06             	cmp    $0x6,%edi
  401bc8:	74 26                	je     401bf0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x30>
  401bca:	c7 04 25 2c 01 70 00 	movl   $0x55,0x70012c
  401bd1:	55 00 00 00 
  401bd5:	c3                   	retq   
  401bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401bdd:	00 00 00 
  401be0:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
  401be7:	33 00 00 00 
  401beb:	c3                   	retq   
  401bec:	0f 1f 40 00          	nopl   0x0(%rax)
  401bf0:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
  401bf7:	44 00 00 00 
  401bfb:	c3                   	retq   
  401bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401c00 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)>:
  401c00:	8b 07                	mov    (%rdi),%eax
  401c02:	83 f8 05             	cmp    $0x5,%eax
  401c05:	74 19                	je     401c20 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x20>
  401c07:	83 f8 06             	cmp    $0x6,%eax
  401c0a:	74 24                	je     401c30 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x30>
  401c0c:	c7 04 25 2c 01 70 00 	movl   $0x88,0x70012c
  401c13:	88 00 00 00 
  401c17:	c3                   	retq   
  401c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401c1f:	00 
  401c20:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
  401c27:	66 00 00 00 
  401c2b:	c3                   	retq   
  401c2c:	0f 1f 40 00          	nopl   0x0(%rax)
  401c30:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
  401c37:	77 00 00 00 
  401c3b:	c3                   	retq   
  401c3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401c40 <runtime_range_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401c40:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  401c47:	89 f8                	mov    %edi,%eax
  401c49:	48 c1 ef 20          	shr    $0x20,%rdi
  401c4d:	f7 d0                	not    %eax
  401c4f:	21 d0                	and    %edx,%eax
  401c51:	09 f8                	or     %edi,%eax
  401c53:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401c5a:	c3                   	retq   
  401c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401c60 <call_range_val(unsigned int)>:
  401c60:	c1 e7 0c             	shl    $0xc,%edi
  401c63:	48 83 ec 08          	sub    $0x8,%rsp
  401c67:	48 c1 e7 20          	shl    $0x20,%rdi
  401c6b:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
  401c72:	e8 c9 ff ff ff       	callq  401c40 <runtime_range_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401c77:	48 83 c4 08          	add    $0x8,%rsp
  401c7b:	c3                   	retq   
  401c7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401c80 <call_range_val_port()>:
  401c80:	bf 1f 00 00 00       	mov    $0x1f,%edi
  401c85:	eb d9                	jmp    401c60 <call_range_val(unsigned int)>
  401c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401c8e:	00 00 

0000000000401c90 <runtime_range_ref(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
  401c90:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
  401c97:	89 f8                	mov    %edi,%eax
  401c99:	48 c1 ef 20          	shr    $0x20,%rdi
  401c9d:	f7 d0                	not    %eax
  401c9f:	21 d0                	and    %edx,%eax
  401ca1:	09 f8                	or     %edi,%eax
  401ca3:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
  401caa:	c3                   	retq   
  401cab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401cb0 <call_range_ref(unsigned int)>:
  401cb0:	c1 e7 0c             	shl    $0xc,%edi
  401cb3:	48 83 ec 08          	sub    $0x8,%rsp
  401cb7:	48 c1 e7 20          	shl    $0x20,%rdi
  401cbb:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
  401cc2:	e8 c9 ff ff ff       	callq  401c90 <runtime_range_ref(regbits::Mskd<unsigned int, mcu::Serial::Config>)>
  401cc7:	48 83 c4 08          	add    $0x8,%rsp
  401ccb:	c3                   	retq   
  401ccc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401cd0 <call_range_ref_port()>:
  401cd0:	bf 0c 00 00 00       	mov    $0xc,%edi
  401cd5:	eb d9                	jmp    401cb0 <call_range_ref(unsigned int)>
  401cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401cde:	00 00 

0000000000401ce0 <check_array_range_pass(unsigned int)>:
  401ce0:	83 ff 16             	cmp    $0x16,%edi
  401ce3:	76 13                	jbe    401cf8 <check_array_range_pass(unsigned int)+0x18>
  401ce5:	c7 04 25 2c 01 70 00 	movl   $0x83,0x70012c
  401cec:	83 00 00 00 
  401cf0:	c3                   	retq   
  401cf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401cf8:	c7 04 25 2c 01 70 00 	movl   $0x7f,0x70012c
  401cff:	7f 00 00 00 
  401d03:	c3                   	retq   
  401d04:	66 90                	xchg   %ax,%ax
  401d06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d0d:	00 00 00 

0000000000401d10 <check_array_range_fail(unsigned int)>:
  401d10:	83 ff 16             	cmp    $0x16,%edi
  401d13:	76 13                	jbe    401d28 <check_array_range_fail(unsigned int)+0x18>
  401d15:	c7 04 25 2c 01 70 00 	movl   $0x97,0x70012c
  401d1c:	97 00 00 00 
  401d20:	c3                   	retq   
  401d21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401d28:	c7 04 25 2c 01 70 00 	movl   $0x95,0x70012c
  401d2f:	95 00 00 00 
  401d33:	c3                   	retq   
  401d34:	66 90                	xchg   %ax,%ax
  401d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d3d:	00 00 00 

0000000000401d40 <check_bits_range_pass(unsigned int)>:
  401d40:	83 ff 0f             	cmp    $0xf,%edi
  401d43:	76 13                	jbe    401d58 <check_bits_range_pass(unsigned int)+0x18>
  401d45:	c7 04 25 2c 01 70 00 	movl   $0xa3,0x70012c
  401d4c:	a3 00 00 00 
  401d50:	c3                   	retq   
  401d51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401d58:	c7 04 25 2c 01 70 00 	movl   $0x9d,0x70012c
  401d5f:	9d 00 00 00 
  401d63:	c3                   	retq   
  401d64:	66 90                	xchg   %ax,%ax
  401d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d6d:	00 00 00 

0000000000401d70 <check_bits_range_fail(unsigned int)>:
  401d70:	83 ff 0f             	cmp    $0xf,%edi
  401d73:	76 13                	jbe    401d88 <check_bits_range_fail(unsigned int)+0x18>
  401d75:	c7 04 25 2c 01 70 00 	movl   $0xad,0x70012c
  401d7c:	ad 00 00 00 
  401d80:	c3                   	retq   
  401d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401d88:	c7 04 25 2c 01 70 00 	movl   $0xa7,0x70012c
  401d8f:	a7 00 00 00 
  401d93:	c3                   	retq   
  401d94:	66 90                	xchg   %ax,%ax
  401d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d9d:	00 00 00 

0000000000401da0 <check_mskd_range_pass(unsigned int)>:
  401da0:	83 ff 1f             	cmp    $0x1f,%edi
  401da3:	76 13                	jbe    401db8 <check_mskd_range_pass(unsigned int)+0x18>
  401da5:	c7 04 25 2c 01 70 00 	movl   $0xb5,0x70012c
  401dac:	b5 00 00 00 
  401db0:	c3                   	retq   
  401db1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401db8:	c7 04 25 2c 01 70 00 	movl   $0xb3,0x70012c
  401dbf:	b3 00 00 00 
  401dc3:	c3                   	retq   
  401dc4:	66 90                	xchg   %ax,%ax
  401dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401dcd:	00 00 00 

0000000000401dd0 <check_mskd_range_fail(unsigned int)>:
  401dd0:	83 ff 1f             	cmp    $0x1f,%edi
  401dd3:	76 13                	jbe    401de8 <check_mskd_range_fail(unsigned int)+0x18>
  401dd5:	c7 04 25 2c 01 70 00 	movl   $0xc1,0x70012c
  401ddc:	c1 00 00 00 
  401de0:	c3                   	retq   
  401de1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401de8:	c7 04 25 2c 01 70 00 	movl   $0xbf,0x70012c
  401def:	bf 00 00 00 
  401df3:	c3                   	retq   
  401df4:	66 90                	xchg   %ax,%ax
  401df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401dfd:	00 00 00 

0000000000401e00 <bits_extract_ne()>:
  401e00:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  401e07:	20 00 00 00 
  401e0b:	83 3c 25 c4 02 70 00 	cmpl   $0x20,0x7002c4
  401e12:	20 
  401e13:	74 13                	je     401e28 <bits_extract_ne()+0x28>
  401e15:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401e1c:	02 00 00 00 
  401e20:	c3                   	retq   
  401e21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401e28:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401e2f:	04 00 00 00 
  401e33:	c3                   	retq   
  401e34:	66 90                	xchg   %ax,%ax
  401e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e3d:	00 00 00 

0000000000401e40 <mskd_extract_geq()>:
  401e40:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
  401e47:	00 00 00 16 
  401e4b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401e52:	3d ff ff ff 15       	cmp    $0x15ffffff,%eax
  401e57:	76 0f                	jbe    401e68 <mskd_extract_geq()+0x28>
  401e59:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
  401e60:	20 00 00 00 
  401e64:	c3                   	retq   
  401e65:	0f 1f 00             	nopl   (%rax)
  401e68:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401e6f:	40 00 00 00 
  401e73:	c3                   	retq   
  401e74:	66 90                	xchg   %ax,%ax
  401e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e7d:	00 00 00 

0000000000401e80 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>:
  401e80:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401e87:	00 00 00 2e 
  401e8b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401e92:	48 89 f9             	mov    %rdi,%rcx
  401e95:	48 c1 e9 20          	shr    $0x20,%rcx
  401e99:	21 f8                	and    %edi,%eax
  401e9b:	d3 e8                	shr    %cl,%eax
  401e9d:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  401ea4:	c3                   	retq   
  401ea5:	90                   	nop
  401ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401ead:	00 00 00 

0000000000401eb0 <call_shifted_const_val()>:
  401eb0:	48 83 ec 08          	sub    $0x8,%rsp
  401eb4:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
  401ebb:	00 00 00 
  401ebe:	e8 bd ff ff ff       	callq  401e80 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>
  401ec3:	48 83 c4 08          	add    $0x8,%rsp
  401ec7:	c3                   	retq   
  401ec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401ecf:	00 

0000000000401ed0 <call_shifted_var_val()>:
  401ed0:	48 83 ec 08          	sub    $0x8,%rsp
  401ed4:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
  401edb:	00 00 00 
  401ede:	e8 9d ff ff ff       	callq  401e80 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>
  401ee3:	48 83 c4 08          	add    $0x8,%rsp
  401ee7:	c3                   	retq   
  401ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401eef:	00 

0000000000401ef0 <call_shifted_global_val()>:
  401ef0:	48 83 ec 08          	sub    $0x8,%rsp
  401ef4:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
  401efb:	00 00 00 
  401efe:	e8 7d ff ff ff       	callq  401e80 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>
  401f03:	48 83 c4 08          	add    $0x8,%rsp
  401f07:	c3                   	retq   
  401f08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401f0f:	00 

0000000000401f10 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>:
  401f10:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
  401f17:	00 00 00 2e 
  401f1b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
  401f22:	23 07                	and    (%rdi),%eax
  401f24:	8b 4f 04             	mov    0x4(%rdi),%ecx
  401f27:	d3 e8                	shr    %cl,%eax
  401f29:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
  401f30:	c3                   	retq   
  401f31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401f36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401f3d:	00 00 00 

0000000000401f40 <call_shifted_const_ref()>:
  401f40:	48 83 ec 18          	sub    $0x18,%rsp
  401f44:	48 89 e7             	mov    %rsp,%rdi
  401f47:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
  401f4e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
  401f55:	00 
  401f56:	e8 b5 ff ff ff       	callq  401f10 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>
  401f5b:	48 83 c4 18          	add    $0x18,%rsp
  401f5f:	c3                   	retq   

0000000000401f60 <call_shifted_var_ref()>:
  401f60:	48 83 ec 18          	sub    $0x18,%rsp
  401f64:	48 89 e7             	mov    %rsp,%rdi
  401f67:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
  401f6e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
  401f75:	00 
  401f76:	e8 95 ff ff ff       	callq  401f10 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>
  401f7b:	48 83 c4 18          	add    $0x18,%rsp
  401f7f:	c3                   	retq   

0000000000401f80 <call_shifted_global_ref()>:
  401f80:	48 83 ec 18          	sub    $0x18,%rsp
  401f84:	48 89 e7             	mov    %rsp,%rdi
  401f87:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
  401f8e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
  401f95:	00 
  401f96:	e8 75 ff ff ff       	callq  401f10 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>
  401f9b:	48 83 c4 18          	add    $0x18,%rsp
  401f9f:	c3                   	retq   

0000000000401fa0 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)>:
  401fa0:	83 e7 40             	and    $0x40,%edi
  401fa3:	75 13                	jne    401fb8 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)+0x18>
  401fa5:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401fac:	04 00 00 00 
  401fb0:	c3                   	retq   
  401fb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401fb8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  401fbf:	02 00 00 00 
  401fc3:	c3                   	retq   
  401fc4:	66 90                	xchg   %ax,%ax
  401fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401fcd:	00 00 00 

0000000000401fd0 <call_copy_bits_val()>:
  401fd0:	48 83 ec 08          	sub    $0x8,%rsp
  401fd4:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  401fdb:	40 00 00 00 
  401fdf:	8b 3c 25 c4 02 70 00 	mov    0x7002c4,%edi
  401fe6:	e8 b5 ff ff ff       	callq  401fa0 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)>
  401feb:	48 83 c4 08          	add    $0x8,%rsp
  401fef:	c3                   	retq   

0000000000401ff0 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)>:
  401ff0:	f6 07 40             	testb  $0x40,(%rdi)
  401ff3:	75 13                	jne    402008 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)+0x18>
  401ff5:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
  401ffc:	04 00 00 00 
  402000:	c3                   	retq   
  402001:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402008:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
  40200f:	02 00 00 00 
  402013:	c3                   	retq   
  402014:	66 90                	xchg   %ax,%ax
  402016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40201d:	00 00 00 

0000000000402020 <call_copy_bits_ref()>:
  402020:	48 83 ec 18          	sub    $0x18,%rsp
  402024:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
  40202b:	40 00 00 00 
  40202f:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
  402036:	48 89 e7             	mov    %rsp,%rdi
  402039:	89 04 24             	mov    %eax,(%rsp)
  40203c:	e8 af ff ff ff       	callq  401ff0 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)>
  402041:	48 83 c4 18          	add    $0x18,%rsp
  402045:	c3                   	retq   
  402046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40204d:	00 00 00 

0000000000402050 <run>:
  402050:	48 83 ec 08          	sub    $0x8,%rsp
  402054:	80 3d 45 30 20 00 00 	cmpb   $0x0,0x203045(%rip)        # 6050a0 <guard variable for run::gpio1_words_3>
  40205b:	0f 84 2f 09 00 00    	je     402990 <run+0x940>
  402061:	31 d2                	xor    %edx,%edx
  402063:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402068:	bf 10 09 40 00       	mov    $0x400910,%edi
  40206d:	e8 4e 09 00 00       	callq  4029c0 <do_test>
  402072:	ba 01 00 00 00       	mov    $0x1,%edx
  402077:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40207c:	bf 20 09 40 00       	mov    $0x400920,%edi
  402081:	e8 3a 09 00 00       	callq  4029c0 <do_test>
  402086:	ba 02 00 00 00       	mov    $0x2,%edx
  40208b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402090:	bf 30 09 40 00       	mov    $0x400930,%edi
  402095:	e8 26 09 00 00       	callq  4029c0 <do_test>
  40209a:	ba 03 00 00 00       	mov    $0x3,%edx
  40209f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020a4:	bf 50 09 40 00       	mov    $0x400950,%edi
  4020a9:	e8 12 09 00 00       	callq  4029c0 <do_test>
  4020ae:	ba 04 00 00 00       	mov    $0x4,%edx
  4020b3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020b8:	bf 70 09 40 00       	mov    $0x400970,%edi
  4020bd:	e8 fe 08 00 00       	callq  4029c0 <do_test>
  4020c2:	ba 05 00 00 00       	mov    $0x5,%edx
  4020c7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020cc:	bf 90 09 40 00       	mov    $0x400990,%edi
  4020d1:	e8 ea 08 00 00       	callq  4029c0 <do_test>
  4020d6:	ba 06 00 00 00       	mov    $0x6,%edx
  4020db:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020e0:	bf b0 09 40 00       	mov    $0x4009b0,%edi
  4020e5:	e8 d6 08 00 00       	callq  4029c0 <do_test>
  4020ea:	ba 07 00 00 00       	mov    $0x7,%edx
  4020ef:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4020f4:	bf d0 09 40 00       	mov    $0x4009d0,%edi
  4020f9:	e8 c2 08 00 00       	callq  4029c0 <do_test>
  4020fe:	ba 08 00 00 00       	mov    $0x8,%edx
  402103:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402108:	bf f0 09 40 00       	mov    $0x4009f0,%edi
  40210d:	e8 ae 08 00 00       	callq  4029c0 <do_test>
  402112:	ba 09 00 00 00       	mov    $0x9,%edx
  402117:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40211c:	bf 10 0a 40 00       	mov    $0x400a10,%edi
  402121:	e8 9a 08 00 00       	callq  4029c0 <do_test>
  402126:	ba 0a 00 00 00       	mov    $0xa,%edx
  40212b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402130:	bf 30 0a 40 00       	mov    $0x400a30,%edi
  402135:	e8 86 08 00 00       	callq  4029c0 <do_test>
  40213a:	ba 0b 00 00 00       	mov    $0xb,%edx
  40213f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402144:	bf 40 0a 40 00       	mov    $0x400a40,%edi
  402149:	e8 72 08 00 00       	callq  4029c0 <do_test>
  40214e:	ba 0c 00 00 00       	mov    $0xc,%edx
  402153:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402158:	bf 50 0a 40 00       	mov    $0x400a50,%edi
  40215d:	e8 5e 08 00 00       	callq  4029c0 <do_test>
  402162:	ba 0d 00 00 00       	mov    $0xd,%edx
  402167:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40216c:	bf 60 0a 40 00       	mov    $0x400a60,%edi
  402171:	e8 4a 08 00 00       	callq  4029c0 <do_test>
  402176:	ba 0e 00 00 00       	mov    $0xe,%edx
  40217b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402180:	bf 70 0a 40 00       	mov    $0x400a70,%edi
  402185:	e8 36 08 00 00       	callq  4029c0 <do_test>
  40218a:	ba 0f 00 00 00       	mov    $0xf,%edx
  40218f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402194:	bf 90 0a 40 00       	mov    $0x400a90,%edi
  402199:	e8 22 08 00 00       	callq  4029c0 <do_test>
  40219e:	ba 10 00 00 00       	mov    $0x10,%edx
  4021a3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021a8:	bf b0 0a 40 00       	mov    $0x400ab0,%edi
  4021ad:	e8 0e 08 00 00       	callq  4029c0 <do_test>
  4021b2:	ba 11 00 00 00       	mov    $0x11,%edx
  4021b7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021bc:	bf d0 0a 40 00       	mov    $0x400ad0,%edi
  4021c1:	e8 fa 07 00 00       	callq  4029c0 <do_test>
  4021c6:	ba 12 00 00 00       	mov    $0x12,%edx
  4021cb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021d0:	bf f0 0a 40 00       	mov    $0x400af0,%edi
  4021d5:	e8 e6 07 00 00       	callq  4029c0 <do_test>
  4021da:	ba 13 00 00 00       	mov    $0x13,%edx
  4021df:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021e4:	bf 10 0b 40 00       	mov    $0x400b10,%edi
  4021e9:	e8 d2 07 00 00       	callq  4029c0 <do_test>
  4021ee:	ba 14 00 00 00       	mov    $0x14,%edx
  4021f3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4021f8:	bf 30 0b 40 00       	mov    $0x400b30,%edi
  4021fd:	e8 be 07 00 00       	callq  4029c0 <do_test>
  402202:	ba 15 00 00 00       	mov    $0x15,%edx
  402207:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40220c:	bf 50 0b 40 00       	mov    $0x400b50,%edi
  402211:	e8 aa 07 00 00       	callq  4029c0 <do_test>
  402216:	ba 16 00 00 00       	mov    $0x16,%edx
  40221b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402220:	bf 70 0b 40 00       	mov    $0x400b70,%edi
  402225:	e8 96 07 00 00       	callq  4029c0 <do_test>
  40222a:	ba 17 00 00 00       	mov    $0x17,%edx
  40222f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402234:	bf 90 0b 40 00       	mov    $0x400b90,%edi
  402239:	e8 82 07 00 00       	callq  4029c0 <do_test>
  40223e:	ba 18 00 00 00       	mov    $0x18,%edx
  402243:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402248:	bf b0 0b 40 00       	mov    $0x400bb0,%edi
  40224d:	e8 6e 07 00 00       	callq  4029c0 <do_test>
  402252:	ba 19 00 00 00       	mov    $0x19,%edx
  402257:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40225c:	bf c0 0b 40 00       	mov    $0x400bc0,%edi
  402261:	e8 5a 07 00 00       	callq  4029c0 <do_test>
  402266:	ba 1a 00 00 00       	mov    $0x1a,%edx
  40226b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402270:	bf d0 0b 40 00       	mov    $0x400bd0,%edi
  402275:	e8 46 07 00 00       	callq  4029c0 <do_test>
  40227a:	ba 1b 00 00 00       	mov    $0x1b,%edx
  40227f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402284:	bf e0 0b 40 00       	mov    $0x400be0,%edi
  402289:	e8 32 07 00 00       	callq  4029c0 <do_test>
  40228e:	ba 1c 00 00 00       	mov    $0x1c,%edx
  402293:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402298:	bf f0 0b 40 00       	mov    $0x400bf0,%edi
  40229d:	e8 1e 07 00 00       	callq  4029c0 <do_test>
  4022a2:	ba 1d 00 00 00       	mov    $0x1d,%edx
  4022a7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022ac:	bf 00 0c 40 00       	mov    $0x400c00,%edi
  4022b1:	e8 0a 07 00 00       	callq  4029c0 <do_test>
  4022b6:	ba 1e 00 00 00       	mov    $0x1e,%edx
  4022bb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022c0:	bf 10 0c 40 00       	mov    $0x400c10,%edi
  4022c5:	e8 f6 06 00 00       	callq  4029c0 <do_test>
  4022ca:	ba 1f 00 00 00       	mov    $0x1f,%edx
  4022cf:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022d4:	bf 20 0c 40 00       	mov    $0x400c20,%edi
  4022d9:	e8 e2 06 00 00       	callq  4029c0 <do_test>
  4022de:	ba 20 00 00 00       	mov    $0x20,%edx
  4022e3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022e8:	bf 30 0c 40 00       	mov    $0x400c30,%edi
  4022ed:	e8 ce 06 00 00       	callq  4029c0 <do_test>
  4022f2:	ba 21 00 00 00       	mov    $0x21,%edx
  4022f7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4022fc:	bf 50 0c 40 00       	mov    $0x400c50,%edi
  402301:	e8 ba 06 00 00       	callq  4029c0 <do_test>
  402306:	ba 22 00 00 00       	mov    $0x22,%edx
  40230b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402310:	bf 70 0c 40 00       	mov    $0x400c70,%edi
  402315:	e8 a6 06 00 00       	callq  4029c0 <do_test>
  40231a:	ba 23 00 00 00       	mov    $0x23,%edx
  40231f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402324:	bf b0 0c 40 00       	mov    $0x400cb0,%edi
  402329:	e8 92 06 00 00       	callq  4029c0 <do_test>
  40232e:	ba 24 00 00 00       	mov    $0x24,%edx
  402333:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402338:	bf f0 0c 40 00       	mov    $0x400cf0,%edi
  40233d:	e8 7e 06 00 00       	callq  4029c0 <do_test>
  402342:	ba 25 00 00 00       	mov    $0x25,%edx
  402347:	be 24 02 70 00       	mov    $0x700224,%esi
  40234c:	bf 30 0d 40 00       	mov    $0x400d30,%edi
  402351:	e8 6a 06 00 00       	callq  4029c0 <do_test>
  402356:	ba 26 00 00 00       	mov    $0x26,%edx
  40235b:	be 24 02 70 00       	mov    $0x700224,%esi
  402360:	bf 70 0d 40 00       	mov    $0x400d70,%edi
  402365:	e8 56 06 00 00       	callq  4029c0 <do_test>
  40236a:	ba 27 00 00 00       	mov    $0x27,%edx
  40236f:	be 24 02 70 00       	mov    $0x700224,%esi
  402374:	bf b0 0d 40 00       	mov    $0x400db0,%edi
  402379:	e8 42 06 00 00       	callq  4029c0 <do_test>
  40237e:	ba 28 00 00 00       	mov    $0x28,%edx
  402383:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402388:	bf f0 0d 40 00       	mov    $0x400df0,%edi
  40238d:	e8 2e 06 00 00       	callq  4029c0 <do_test>
  402392:	ba 29 00 00 00       	mov    $0x29,%edx
  402397:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40239c:	bf 50 0e 40 00       	mov    $0x400e50,%edi
  4023a1:	e8 1a 06 00 00       	callq  4029c0 <do_test>
  4023a6:	ba 2a 00 00 00       	mov    $0x2a,%edx
  4023ab:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023b0:	bf a0 0e 40 00       	mov    $0x400ea0,%edi
  4023b5:	e8 06 06 00 00       	callq  4029c0 <do_test>
  4023ba:	ba 2b 00 00 00       	mov    $0x2b,%edx
  4023bf:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023c4:	bf e0 0e 40 00       	mov    $0x400ee0,%edi
  4023c9:	e8 f2 05 00 00       	callq  4029c0 <do_test>
  4023ce:	ba 2c 00 00 00       	mov    $0x2c,%edx
  4023d3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4023d8:	bf 20 0f 40 00       	mov    $0x400f20,%edi
  4023dd:	e8 de 05 00 00       	callq  4029c0 <do_test>
  4023e2:	ba 2d 00 00 00       	mov    $0x2d,%edx
  4023e7:	be a0 01 70 00       	mov    $0x7001a0,%esi
  4023ec:	bf 40 0f 40 00       	mov    $0x400f40,%edi
  4023f1:	e8 ca 05 00 00       	callq  4029c0 <do_test>
  4023f6:	ba 2e 00 00 00       	mov    $0x2e,%edx
  4023fb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402400:	bf 50 17 40 00       	mov    $0x401750,%edi
  402405:	e8 b6 05 00 00       	callq  4029c0 <do_test>
  40240a:	ba 2f 00 00 00       	mov    $0x2f,%edx
  40240f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402414:	bf 70 17 40 00       	mov    $0x401770,%edi
  402419:	e8 a2 05 00 00       	callq  4029c0 <do_test>
  40241e:	ba 30 00 00 00       	mov    $0x30,%edx
  402423:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402428:	bf 10 18 40 00       	mov    $0x401810,%edi
  40242d:	e8 8e 05 00 00       	callq  4029c0 <do_test>
  402432:	ba 31 00 00 00       	mov    $0x31,%edx
  402437:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40243c:	bf f0 17 40 00       	mov    $0x4017f0,%edi
  402441:	e8 7a 05 00 00       	callq  4029c0 <do_test>
  402446:	ba 32 00 00 00       	mov    $0x32,%edx
  40244b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402450:	bf d0 16 40 00       	mov    $0x4016d0,%edi
  402455:	e8 66 05 00 00       	callq  4029c0 <do_test>
  40245a:	ba 33 00 00 00       	mov    $0x33,%edx
  40245f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402464:	bf f0 16 40 00       	mov    $0x4016f0,%edi
  402469:	e8 52 05 00 00       	callq  4029c0 <do_test>
  40246e:	ba 34 00 00 00       	mov    $0x34,%edx
  402473:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402478:	bf 50 16 40 00       	mov    $0x401650,%edi
  40247d:	e8 3e 05 00 00       	callq  4029c0 <do_test>
  402482:	ba 35 00 00 00       	mov    $0x35,%edx
  402487:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40248c:	bf 70 16 40 00       	mov    $0x401670,%edi
  402491:	e8 2a 05 00 00       	callq  4029c0 <do_test>
  402496:	ba 36 00 00 00       	mov    $0x36,%edx
  40249b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024a0:	bf a0 18 40 00       	mov    $0x4018a0,%edi
  4024a5:	e8 16 05 00 00       	callq  4029c0 <do_test>
  4024aa:	ba 37 00 00 00       	mov    $0x37,%edx
  4024af:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024b4:	bf c0 18 40 00       	mov    $0x4018c0,%edi
  4024b9:	e8 02 05 00 00       	callq  4029c0 <do_test>
  4024be:	ba 38 00 00 00       	mov    $0x38,%edx
  4024c3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024c8:	bf f0 18 40 00       	mov    $0x4018f0,%edi
  4024cd:	e8 ee 04 00 00       	callq  4029c0 <do_test>
  4024d2:	ba 39 00 00 00       	mov    $0x39,%edx
  4024d7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024dc:	bf 20 19 40 00       	mov    $0x401920,%edi
  4024e1:	e8 da 04 00 00       	callq  4029c0 <do_test>
  4024e6:	ba 3a 00 00 00       	mov    $0x3a,%edx
  4024eb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4024f0:	bf 50 19 40 00       	mov    $0x401950,%edi
  4024f5:	e8 c6 04 00 00       	callq  4029c0 <do_test>
  4024fa:	ba 3b 00 00 00       	mov    $0x3b,%edx
  4024ff:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402504:	bf 80 19 40 00       	mov    $0x401980,%edi
  402509:	e8 b2 04 00 00       	callq  4029c0 <do_test>
  40250e:	ba 3c 00 00 00       	mov    $0x3c,%edx
  402513:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402518:	bf b0 19 40 00       	mov    $0x4019b0,%edi
  40251d:	e8 9e 04 00 00       	callq  4029c0 <do_test>
  402522:	ba 3d 00 00 00       	mov    $0x3d,%edx
  402527:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40252c:	bf f0 19 40 00       	mov    $0x4019f0,%edi
  402531:	e8 8a 04 00 00       	callq  4029c0 <do_test>
  402536:	ba 3e 00 00 00       	mov    $0x3e,%edx
  40253b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402540:	bf 30 1a 40 00       	mov    $0x401a30,%edi
  402545:	e8 76 04 00 00       	callq  4029c0 <do_test>
  40254a:	ba 3f 00 00 00       	mov    $0x3f,%edx
  40254f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402554:	bf 70 1a 40 00       	mov    $0x401a70,%edi
  402559:	e8 62 04 00 00       	callq  4029c0 <do_test>
  40255e:	ba 40 00 00 00       	mov    $0x40,%edx
  402563:	be 24 02 70 00       	mov    $0x700224,%esi
  402568:	bf a0 1a 40 00       	mov    $0x401aa0,%edi
  40256d:	e8 4e 04 00 00       	callq  4029c0 <do_test>
  402572:	ba 41 00 00 00       	mov    $0x41,%edx
  402577:	be 24 02 70 00       	mov    $0x700224,%esi
  40257c:	bf e0 1a 40 00       	mov    $0x401ae0,%edi
  402581:	e8 3a 04 00 00       	callq  4029c0 <do_test>
  402586:	ba 42 00 00 00       	mov    $0x42,%edx
  40258b:	be 24 02 70 00       	mov    $0x700224,%esi
  402590:	bf 40 1b 40 00       	mov    $0x401b40,%edi
  402595:	e8 26 04 00 00       	callq  4029c0 <do_test>
  40259a:	ba 43 00 00 00       	mov    $0x43,%edx
  40259f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025a4:	bf 90 1b 40 00       	mov    $0x401b90,%edi
  4025a9:	e8 12 04 00 00       	callq  4029c0 <do_test>
  4025ae:	48 8b 35 db 2a 20 00 	mov    0x202adb(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4025b5:	ba 44 00 00 00       	mov    $0x44,%edx
  4025ba:	bf f0 15 40 00       	mov    $0x4015f0,%edi
  4025bf:	e8 fc 03 00 00       	callq  4029c0 <do_test>
  4025c4:	48 8b 35 c5 2a 20 00 	mov    0x202ac5(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4025cb:	ba 45 00 00 00       	mov    $0x45,%edx
  4025d0:	bf 70 15 40 00       	mov    $0x401570,%edi
  4025d5:	e8 e6 03 00 00       	callq  4029c0 <do_test>
  4025da:	ba 46 00 00 00       	mov    $0x46,%edx
  4025df:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025e4:	bf 80 1c 40 00       	mov    $0x401c80,%edi
  4025e9:	e8 d2 03 00 00       	callq  4029c0 <do_test>
  4025ee:	ba 47 00 00 00       	mov    $0x47,%edx
  4025f3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4025f8:	bf d0 1c 40 00       	mov    $0x401cd0,%edi
  4025fd:	e8 be 03 00 00       	callq  4029c0 <do_test>
  402602:	48 8b 35 87 2a 20 00 	mov    0x202a87(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402609:	ba 48 00 00 00       	mov    $0x48,%edx
  40260e:	bf 80 0f 40 00       	mov    $0x400f80,%edi
  402613:	e8 a8 03 00 00       	callq  4029c0 <do_test>
  402618:	48 8b 35 71 2a 20 00 	mov    0x202a71(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40261f:	ba 49 00 00 00       	mov    $0x49,%edx
  402624:	bf a0 0f 40 00       	mov    $0x400fa0,%edi
  402629:	e8 92 03 00 00       	callq  4029c0 <do_test>
  40262e:	ba 4a 00 00 00       	mov    $0x4a,%edx
  402633:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402638:	bf d0 0f 40 00       	mov    $0x400fd0,%edi
  40263d:	e8 7e 03 00 00       	callq  4029c0 <do_test>
  402642:	ba 4b 00 00 00       	mov    $0x4b,%edx
  402647:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40264c:	bf 10 10 40 00       	mov    $0x401010,%edi
  402651:	e8 6a 03 00 00       	callq  4029c0 <do_test>
  402656:	ba 4c 00 00 00       	mov    $0x4c,%edx
  40265b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402660:	bf 60 10 40 00       	mov    $0x401060,%edi
  402665:	e8 56 03 00 00       	callq  4029c0 <do_test>
  40266a:	ba 4d 00 00 00       	mov    $0x4d,%edx
  40266f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402674:	bf a0 10 40 00       	mov    $0x4010a0,%edi
  402679:	e8 42 03 00 00       	callq  4029c0 <do_test>
  40267e:	ba 4e 00 00 00       	mov    $0x4e,%edx
  402683:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402688:	bf f0 10 40 00       	mov    $0x4010f0,%edi
  40268d:	e8 2e 03 00 00       	callq  4029c0 <do_test>
  402692:	ba 4f 00 00 00       	mov    $0x4f,%edx
  402697:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40269c:	bf 00 11 40 00       	mov    $0x401100,%edi
  4026a1:	e8 1a 03 00 00       	callq  4029c0 <do_test>
  4026a6:	ba 50 00 00 00       	mov    $0x50,%edx
  4026ab:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026b0:	bf 10 11 40 00       	mov    $0x401110,%edi
  4026b5:	e8 06 03 00 00       	callq  4029c0 <do_test>
  4026ba:	ba 51 00 00 00       	mov    $0x51,%edx
  4026bf:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026c4:	bf 10 11 40 00       	mov    $0x401110,%edi
  4026c9:	e8 f2 02 00 00       	callq  4029c0 <do_test>
  4026ce:	ba 52 00 00 00       	mov    $0x52,%edx
  4026d3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026d8:	bf 50 11 40 00       	mov    $0x401150,%edi
  4026dd:	e8 de 02 00 00       	callq  4029c0 <do_test>
  4026e2:	ba 53 00 00 00       	mov    $0x53,%edx
  4026e7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4026ec:	bf 90 11 40 00       	mov    $0x401190,%edi
  4026f1:	e8 ca 02 00 00       	callq  4029c0 <do_test>
  4026f6:	ba 54 00 00 00       	mov    $0x54,%edx
  4026fb:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402700:	bf d0 11 40 00       	mov    $0x4011d0,%edi
  402705:	e8 b6 02 00 00       	callq  4029c0 <do_test>
  40270a:	ba 55 00 00 00       	mov    $0x55,%edx
  40270f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402714:	bf 10 12 40 00       	mov    $0x401210,%edi
  402719:	e8 a2 02 00 00       	callq  4029c0 <do_test>
  40271e:	ba 56 00 00 00       	mov    $0x56,%edx
  402723:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402728:	bf 50 12 40 00       	mov    $0x401250,%edi
  40272d:	e8 8e 02 00 00       	callq  4029c0 <do_test>
  402732:	ba 57 00 00 00       	mov    $0x57,%edx
  402737:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40273c:	bf 10 12 40 00       	mov    $0x401210,%edi
  402741:	e8 7a 02 00 00       	callq  4029c0 <do_test>
  402746:	ba 58 00 00 00       	mov    $0x58,%edx
  40274b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402750:	bf 90 12 40 00       	mov    $0x401290,%edi
  402755:	e8 66 02 00 00       	callq  4029c0 <do_test>
  40275a:	ba 59 00 00 00       	mov    $0x59,%edx
  40275f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402764:	bf b0 12 40 00       	mov    $0x4012b0,%edi
  402769:	e8 52 02 00 00       	callq  4029c0 <do_test>
  40276e:	48 8b 35 1b 29 20 00 	mov    0x20291b(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402775:	ba 5a 00 00 00       	mov    $0x5a,%edx
  40277a:	bf d0 12 40 00       	mov    $0x4012d0,%edi
  40277f:	e8 3c 02 00 00       	callq  4029c0 <do_test>
  402784:	48 8b 35 05 29 20 00 	mov    0x202905(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40278b:	ba 5b 00 00 00       	mov    $0x5b,%edx
  402790:	bf e0 12 40 00       	mov    $0x4012e0,%edi
  402795:	e8 26 02 00 00       	callq  4029c0 <do_test>
  40279a:	ba 5c 00 00 00       	mov    $0x5c,%edx
  40279f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4027a4:	bf 10 13 40 00       	mov    $0x401310,%edi
  4027a9:	e8 12 02 00 00       	callq  4029c0 <do_test>
  4027ae:	48 8b 35 db 28 20 00 	mov    0x2028db(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4027b5:	ba 5d 00 00 00       	mov    $0x5d,%edx
  4027ba:	bf 10 16 40 00       	mov    $0x401610,%edi
  4027bf:	e8 fc 01 00 00       	callq  4029c0 <do_test>
  4027c4:	48 8b 35 c5 28 20 00 	mov    0x2028c5(%rip),%rsi        # 605090 <run::gpio1_words_3>
  4027cb:	ba 5e 00 00 00       	mov    $0x5e,%edx
  4027d0:	bf b0 15 40 00       	mov    $0x4015b0,%edi
  4027d5:	e8 e6 01 00 00       	callq  4029c0 <do_test>
  4027da:	ba 5f 00 00 00       	mov    $0x5f,%edx
  4027df:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4027e4:	bf 90 17 40 00       	mov    $0x401790,%edi
  4027e9:	e8 d2 01 00 00       	callq  4029c0 <do_test>
  4027ee:	ba 60 00 00 00       	mov    $0x60,%edx
  4027f3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4027f8:	bf 30 18 40 00       	mov    $0x401830,%edi
  4027fd:	e8 be 01 00 00       	callq  4029c0 <do_test>
  402802:	ba 61 00 00 00       	mov    $0x61,%edx
  402807:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40280c:	bf 10 17 40 00       	mov    $0x401710,%edi
  402811:	e8 aa 01 00 00       	callq  4029c0 <do_test>
  402816:	ba 62 00 00 00       	mov    $0x62,%edx
  40281b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402820:	bf 90 16 40 00       	mov    $0x401690,%edi
  402825:	e8 96 01 00 00       	callq  4029c0 <do_test>
  40282a:	48 8b 35 5f 28 20 00 	mov    0x20285f(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402831:	ba 63 00 00 00       	mov    $0x63,%edx
  402836:	bf b0 1e 40 00       	mov    $0x401eb0,%edi
  40283b:	e8 80 01 00 00       	callq  4029c0 <do_test>
  402840:	48 8b 35 49 28 20 00 	mov    0x202849(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402847:	ba 64 00 00 00       	mov    $0x64,%edx
  40284c:	bf d0 1e 40 00       	mov    $0x401ed0,%edi
  402851:	e8 6a 01 00 00       	callq  4029c0 <do_test>
  402856:	48 8b 35 33 28 20 00 	mov    0x202833(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40285d:	ba 65 00 00 00       	mov    $0x65,%edx
  402862:	bf f0 1e 40 00       	mov    $0x401ef0,%edi
  402867:	e8 54 01 00 00       	callq  4029c0 <do_test>
  40286c:	48 8b 35 1d 28 20 00 	mov    0x20281d(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402873:	ba 66 00 00 00       	mov    $0x66,%edx
  402878:	bf 40 1f 40 00       	mov    $0x401f40,%edi
  40287d:	e8 3e 01 00 00       	callq  4029c0 <do_test>
  402882:	48 8b 35 07 28 20 00 	mov    0x202807(%rip),%rsi        # 605090 <run::gpio1_words_3>
  402889:	ba 67 00 00 00       	mov    $0x67,%edx
  40288e:	bf 60 1f 40 00       	mov    $0x401f60,%edi
  402893:	e8 28 01 00 00       	callq  4029c0 <do_test>
  402898:	48 8b 35 f1 27 20 00 	mov    0x2027f1(%rip),%rsi        # 605090 <run::gpio1_words_3>
  40289f:	ba 68 00 00 00       	mov    $0x68,%edx
  4028a4:	bf 80 1f 40 00       	mov    $0x401f80,%edi
  4028a9:	e8 12 01 00 00       	callq  4029c0 <do_test>
  4028ae:	ba 69 00 00 00       	mov    $0x69,%edx
  4028b3:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028b8:	bf 20 13 40 00       	mov    $0x401320,%edi
  4028bd:	e8 fe 00 00 00       	callq  4029c0 <do_test>
  4028c2:	ba 6a 00 00 00       	mov    $0x6a,%edx
  4028c7:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028cc:	bf 60 13 40 00       	mov    $0x401360,%edi
  4028d1:	e8 ea 00 00 00       	callq  4029c0 <do_test>
  4028d6:	ba 6b 00 00 00       	mov    $0x6b,%edx
  4028db:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028e0:	bf a0 13 40 00       	mov    $0x4013a0,%edi
  4028e5:	e8 d6 00 00 00       	callq  4029c0 <do_test>
  4028ea:	ba 6c 00 00 00       	mov    $0x6c,%edx
  4028ef:	be c4 02 70 00       	mov    $0x7002c4,%esi
  4028f4:	bf e0 13 40 00       	mov    $0x4013e0,%edi
  4028f9:	e8 c2 00 00 00       	callq  4029c0 <do_test>
  4028fe:	ba 6d 00 00 00       	mov    $0x6d,%edx
  402903:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402908:	bf 20 14 40 00       	mov    $0x401420,%edi
  40290d:	e8 ae 00 00 00       	callq  4029c0 <do_test>
  402912:	ba 6e 00 00 00       	mov    $0x6e,%edx
  402917:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40291c:	bf 60 14 40 00       	mov    $0x401460,%edi
  402921:	e8 9a 00 00 00       	callq  4029c0 <do_test>
  402926:	ba 6f 00 00 00       	mov    $0x6f,%edx
  40292b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402930:	bf a0 14 40 00       	mov    $0x4014a0,%edi
  402935:	e8 86 00 00 00       	callq  4029c0 <do_test>
  40293a:	ba 70 00 00 00       	mov    $0x70,%edx
  40293f:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402944:	bf e0 14 40 00       	mov    $0x4014e0,%edi
  402949:	e8 72 00 00 00       	callq  4029c0 <do_test>
  40294e:	ba 71 00 00 00       	mov    $0x71,%edx
  402953:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402958:	bf 20 15 40 00       	mov    $0x401520,%edi
  40295d:	e8 5e 00 00 00       	callq  4029c0 <do_test>
  402962:	ba 72 00 00 00       	mov    $0x72,%edx
  402967:	be c4 02 70 00       	mov    $0x7002c4,%esi
  40296c:	bf d0 1f 40 00       	mov    $0x401fd0,%edi
  402971:	e8 4a 00 00 00       	callq  4029c0 <do_test>
  402976:	ba 73 00 00 00       	mov    $0x73,%edx
  40297b:	be c4 02 70 00       	mov    $0x7002c4,%esi
  402980:	bf 20 20 40 00       	mov    $0x402020,%edi
  402985:	48 83 c4 08          	add    $0x8,%rsp
  402989:	e9 32 00 00 00       	jmpq   4029c0 <do_test>
  40298e:	66 90                	xchg   %ax,%ax
  402990:	bf a0 50 60 00       	mov    $0x6050a0,%edi
  402995:	e8 76 dd ff ff       	callq  400710 <__cxa_guard_acquire@plt>
  40299a:	85 c0                	test   %eax,%eax
  40299c:	0f 84 bf f6 ff ff    	je     402061 <run+0x11>
  4029a2:	bf a0 50 60 00       	mov    $0x6050a0,%edi
  4029a7:	48 c7 05 de 26 20 00 	movq   $0x70012c,0x2026de(%rip)        # 605090 <run::gpio1_words_3>
  4029ae:	2c 01 70 00 
  4029b2:	e8 89 dd ff ff       	callq  400740 <__cxa_guard_release@plt>
  4029b7:	e9 a5 f6 ff ff       	jmpq   402061 <run+0x11>
  4029bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004029c0 <do_test>:
  4029c0:	41 54                	push   %r12
  4029c2:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
  4029c8:	41 89 d4             	mov    %edx,%r12d
  4029cb:	31 c0                	xor    %eax,%eax
  4029cd:	45 01 e4             	add    %r12d,%r12d
  4029d0:	55                   	push   %rbp
  4029d1:	48 89 fd             	mov    %rdi,%rbp
  4029d4:	53                   	push   %rbx
  4029d5:	48 89 f3             	mov    %rsi,%rbx
  4029d8:	ff d7                	callq  *%rdi
  4029da:	8b 13                	mov    (%rbx),%edx
  4029dc:	44 89 e0             	mov    %r12d,%eax
  4029df:	89 14 85 c0 50 60 00 	mov    %edx,0x6050c0(,%rax,4)
  4029e6:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
  4029ec:	31 c0                	xor    %eax,%eax
  4029ee:	ff d5                	callq  *%rbp
  4029f0:	8b 13                	mov    (%rbx),%edx
  4029f2:	41 8d 44 24 01       	lea    0x1(%r12),%eax
  4029f7:	5b                   	pop    %rbx
  4029f8:	5d                   	pop    %rbp
  4029f9:	89 14 85 c0 50 60 00 	mov    %edx,0x6050c0(,%rax,4)
  402a00:	41 5c                	pop    %r12
  402a02:	c3                   	retq   
  402a03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402a0a:	00 00 00 
  402a0d:	0f 1f 00             	nopl   (%rax)

0000000000402a10 <__libc_csu_init>:
  402a10:	41 57                	push   %r15
  402a12:	41 89 ff             	mov    %edi,%r15d
  402a15:	41 56                	push   %r14
  402a17:	49 89 f6             	mov    %rsi,%r14
  402a1a:	41 55                	push   %r13
  402a1c:	49 89 d5             	mov    %rdx,%r13
  402a1f:	41 54                	push   %r12
  402a21:	4c 8d 25 a8 23 20 00 	lea    0x2023a8(%rip),%r12        # 604dd0 <__frame_dummy_init_array_entry>
  402a28:	55                   	push   %rbp
  402a29:	48 8d 2d a8 23 20 00 	lea    0x2023a8(%rip),%rbp        # 604dd8 <__init_array_end>
  402a30:	53                   	push   %rbx
  402a31:	4c 29 e5             	sub    %r12,%rbp
  402a34:	31 db                	xor    %ebx,%ebx
  402a36:	48 c1 fd 03          	sar    $0x3,%rbp
  402a3a:	48 83 ec 08          	sub    $0x8,%rsp
  402a3e:	e8 9d dc ff ff       	callq  4006e0 <_init>
  402a43:	48 85 ed             	test   %rbp,%rbp
  402a46:	74 1e                	je     402a66 <__libc_csu_init+0x56>
  402a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  402a4f:	00 
  402a50:	4c 89 ea             	mov    %r13,%rdx
  402a53:	4c 89 f6             	mov    %r14,%rsi
  402a56:	44 89 ff             	mov    %r15d,%edi
  402a59:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  402a5d:	48 83 c3 01          	add    $0x1,%rbx
  402a61:	48 39 eb             	cmp    %rbp,%rbx
  402a64:	75 ea                	jne    402a50 <__libc_csu_init+0x40>
  402a66:	48 83 c4 08          	add    $0x8,%rsp
  402a6a:	5b                   	pop    %rbx
  402a6b:	5d                   	pop    %rbp
  402a6c:	41 5c                	pop    %r12
  402a6e:	41 5d                	pop    %r13
  402a70:	41 5e                	pop    %r14
  402a72:	41 5f                	pop    %r15
  402a74:	c3                   	retq   
  402a75:	90                   	nop
  402a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402a7d:	00 00 00 

0000000000402a80 <__libc_csu_fini>:
  402a80:	f3 c3                	repz retq 

Disassembly of section .rodata:

0000000000402a90 <_IO_stdin_used>:
  402a90:	01 00 02 00 62 72 6b 28 30 78 25 78 29 20 66 61     ....brk(0x%x) fa
  402aa0:	69 6c 65 64 3a 20 25 73 28 25 64 29 0a 00           iled: %s(%d)..

Disassembly of section .data:

0000000000605058 <__data_start>:
	...

0000000000605060 <__dso_handle>:
	...
