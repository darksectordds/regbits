
regbits.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <zero_reg()>:
       0:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
       7:	00 00 00 00 
       b:	c3                   	retq   
       c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000010 <zero_array()>:
      10:	c7 04 25 2c 01 70 00 	movl   $0x0,0x70012c
      17:	00 00 00 00 
      1b:	c3                   	retq   
      1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000020 <set_singl_bits_operator()>:
      20:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      27:	83 c8 40             	or     $0x40,%eax
      2a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      31:	c3                   	retq   
      32:	0f 1f 40 00          	nopl   0x0(%rax)
      36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      3d:	00 00 00 

0000000000000040 <set_singl_bits_method()>:
      40:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      47:	83 c8 40             	or     $0x40,%eax
      4a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      51:	c3                   	retq   
      52:	0f 1f 40 00          	nopl   0x0(%rax)
      56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      5d:	00 00 00 

0000000000000060 <clr_singl_bits_operator()>:
      60:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      67:	83 e0 bf             	and    $0xffffffbf,%eax
      6a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      71:	c3                   	retq   
      72:	0f 1f 40 00          	nopl   0x0(%rax)
      76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      7d:	00 00 00 

0000000000000080 <clr_singl_bits_method()>:
      80:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      87:	83 e0 bf             	and    $0xffffffbf,%eax
      8a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      91:	c3                   	retq   
      92:	0f 1f 40 00          	nopl   0x0(%rax)
      96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      9d:	00 00 00 

00000000000000a0 <set_singl_mskd_operator()>:
      a0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      a7:	83 c8 02             	or     $0x2,%eax
      aa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      b1:	c3                   	retq   
      b2:	0f 1f 40 00          	nopl   0x0(%rax)
      b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      bd:	00 00 00 

00000000000000c0 <set_singl_mskd_method()>:
      c0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      c7:	83 c8 02             	or     $0x2,%eax
      ca:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      d1:	c3                   	retq   
      d2:	0f 1f 40 00          	nopl   0x0(%rax)
      d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      dd:	00 00 00 

00000000000000e0 <clr_singl_mskd_operator()>:
      e0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      e7:	83 e0 fd             	and    $0xfffffffd,%eax
      ea:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      f1:	c3                   	retq   
      f2:	0f 1f 40 00          	nopl   0x0(%rax)
      f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      fd:	00 00 00 

0000000000000100 <clr_singl_mskd_method()>:
     100:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     107:	83 e0 fd             	and    $0xfffffffd,%eax
     10a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     111:	c3                   	retq   
     112:	0f 1f 40 00          	nopl   0x0(%rax)
     116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     11d:	00 00 00 

0000000000000120 <equ_singl_bits_operator()>:
     120:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     127:	40 00 00 00 
     12b:	c3                   	retq   
     12c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000130 <equ_singl_bits_method()>:
     130:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     137:	40 00 00 00 
     13b:	c3                   	retq   
     13c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000140 <equ_singl_mskd_operator()>:
     140:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     147:	02 00 00 00 
     14b:	c3                   	retq   
     14c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000150 <equ_singl_mskd_method()>:
     150:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     157:	02 00 00 00 
     15b:	c3                   	retq   
     15c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000160 <flp_singl_bits_operator()>:
     160:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     167:	83 f0 40             	xor    $0x40,%eax
     16a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     171:	c3                   	retq   
     172:	0f 1f 40 00          	nopl   0x0(%rax)
     176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     17d:	00 00 00 

0000000000000180 <flp_singl_bits_method()>:
     180:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     187:	83 f0 40             	xor    $0x40,%eax
     18a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     191:	c3                   	retq   
     192:	0f 1f 40 00          	nopl   0x0(%rax)
     196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     19d:	00 00 00 

00000000000001a0 <flp_singl_mskd_operator()>:
     1a0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     1a7:	83 f0 02             	xor    $0x2,%eax
     1aa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     1b1:	c3                   	retq   
     1b2:	0f 1f 40 00          	nopl   0x0(%rax)
     1b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1bd:	00 00 00 

00000000000001c0 <flp_singl_mskd_method()>:
     1c0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     1c7:	83 f0 02             	xor    $0x2,%eax
     1ca:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     1d1:	c3                   	retq   
     1d2:	0f 1f 40 00          	nopl   0x0(%rax)
     1d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1dd:	00 00 00 

00000000000001e0 <ins_singl_mskd_operator()>:
     1e0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     1e7:	83 e0 f9             	and    $0xfffffff9,%eax
     1ea:	83 c8 04             	or     $0x4,%eax
     1ed:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     1f4:	c3                   	retq   
     1f5:	90                   	nop
     1f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1fd:	00 00 00 

0000000000000200 <ins_singl_mskd_method()>:
     200:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     207:	83 e0 f9             	and    $0xfffffff9,%eax
     20a:	83 c8 04             	or     $0x4,%eax
     20d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     214:	c3                   	retq   
     215:	90                   	nop
     216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     21d:	00 00 00 

0000000000000220 <set_multi_bits_operator()>:
     220:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     227:	83 c8 21             	or     $0x21,%eax
     22a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     231:	c3                   	retq   
     232:	0f 1f 40 00          	nopl   0x0(%rax)
     236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     23d:	00 00 00 

0000000000000240 <set_multi_bits_method()>:
     240:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     247:	83 c8 21             	or     $0x21,%eax
     24a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     251:	c3                   	retq   
     252:	0f 1f 40 00          	nopl   0x0(%rax)
     256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     25d:	00 00 00 

0000000000000260 <ins_multi_mskd_operator()>:
     260:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     267:	25 79 f0 ff ff       	and    $0xfffff079,%eax
     26c:	0d 82 01 00 00       	or     $0x182,%eax
     271:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     278:	c3                   	retq   
     279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000280 <ins_multi_mskd_method()>:
     280:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     287:	25 79 f0 ff ff       	and    $0xfffff079,%eax
     28c:	0d 82 01 00 00       	or     $0x182,%eax
     291:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     298:	c3                   	retq   
     299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000002a0 <equ_multi_bits_operator()>:
     2a0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
     2a7:	60 00 00 00 
     2ab:	c3                   	retq   
     2ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002b0 <equ_multi_bits_method()>:
     2b0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
     2b7:	60 00 00 00 
     2bb:	c3                   	retq   
     2bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002c0 <equ_multi_mskd_operator()>:
     2c0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
     2c7:	08 03 00 00 
     2cb:	c3                   	retq   
     2cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002d0 <equ_multi_mskd_method()>:
     2d0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
     2d7:	08 03 00 00 
     2db:	c3                   	retq   
     2dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002e0 <equ_bits_mskd_operator()>:
     2e0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     2e7:	22 00 00 00 
     2eb:	c3                   	retq   
     2ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002f0 <equ_bits_mskd_method()>:
     2f0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     2f7:	22 00 00 00 
     2fb:	c3                   	retq   
     2fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000300 <equ_mskd_bits_operator()>:
     300:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
     307:	44 00 00 00 
     30b:	c3                   	retq   
     30c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000310 <equ_mskd_bits_method()>:
     310:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
     317:	44 00 00 00 
     31b:	c3                   	retq   
     31c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000320 <equ_bits_var()>:
     320:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     327:	40 00 00 00 
     32b:	c7 04 25 c4 02 70 00 	movl   $0x1,0x7002c4
     332:	01 00 00 00 
     336:	c3                   	retq   
     337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     33e:	00 00 

0000000000000340 <equ_mskd_var()>:
     340:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     347:	02 00 00 00 
     34b:	c7 04 25 c4 02 70 00 	movl   $0x180,0x7002c4
     352:	80 01 00 00 
     356:	c3                   	retq   
     357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     35e:	00 00 

0000000000000360 <cmp_equ_zero()>:
     360:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
     367:	00 00 00 00 
     36b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     372:	85 c0                	test   %eax,%eax
     374:	74 12                	je     388 <cmp_equ_zero()+0x28>
     376:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     37d:	00 00 00 22 
     381:	c3                   	retq   
     382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     388:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
     38f:	00 00 00 3a 
     393:	c3                   	retq   
     394:	66 90                	xchg   %ax,%ax
     396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     39d:	00 00 00 

00000000000003a0 <cmp_neq_zero()>:
     3a0:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
     3a7:	00 00 00 00 
     3ab:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     3b2:	85 c0                	test   %eax,%eax
     3b4:	75 12                	jne    3c8 <cmp_neq_zero()+0x28>
     3b6:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     3bd:	20 00 00 00 
     3c1:	c3                   	retq   
     3c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     3c8:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     3cf:	04 00 00 00 
     3d3:	c3                   	retq   
     3d4:	66 90                	xchg   %ax,%ax
     3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     3dd:	00 00 00 

00000000000003e0 <cmp_equ_bits()>:
     3e0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     3e7:	40 00 00 00 
     3eb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     3f2:	a8 40                	test   $0x40,%al
     3f4:	75 12                	jne    408 <cmp_equ_bits()+0x28>
     3f6:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
     3fd:	00 00 00 1a 
     401:	c3                   	retq   
     402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     408:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     40f:	00 00 00 16 
     413:	c3                   	retq   
     414:	66 90                	xchg   %ax,%ax
     416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     41d:	00 00 00 

0000000000000420 <cmp_neq_bits()>:
     420:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     427:	40 00 00 00 
     42b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     432:	a8 40                	test   $0x40,%al
     434:	74 12                	je     448 <cmp_neq_bits()+0x28>
     436:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     43d:	20 00 00 00 
     441:	c3                   	retq   
     442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     448:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     44f:	02 00 00 00 
     453:	c3                   	retq   
     454:	66 90                	xchg   %ax,%ax
     456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     45d:	00 00 00 

0000000000000460 <cmp_equ_mskd()>:
     460:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
     467:	00 d0 01 00 
     46b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     472:	25 00 f0 01 00       	and    $0x1f000,%eax
     477:	3d 00 10 01 00       	cmp    $0x11000,%eax
     47c:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     483:	74 1b                	je     4a0 <cmp_equ_mskd()+0x40>
     485:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
     48a:	0d 00 00 00 22       	or     $0x22000000,%eax
     48f:	89 04 25 24 02 70 00 	mov    %eax,0x700224
     496:	c3                   	retq   
     497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     49e:	00 00 
     4a0:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
     4a5:	0d 00 00 00 0e       	or     $0xe000000,%eax
     4aa:	89 04 25 24 02 70 00 	mov    %eax,0x700224
     4b1:	c3                   	retq   
     4b2:	0f 1f 40 00          	nopl   0x0(%rax)
     4b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     4bd:	00 00 00 

00000000000004c0 <cmp_neq_mskd()>:
     4c0:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
     4c7:	00 d0 01 00 
     4cb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     4d2:	25 00 f0 01 00       	and    $0x1f000,%eax
     4d7:	3d 00 10 01 00       	cmp    $0x11000,%eax
     4dc:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     4e3:	74 13                	je     4f8 <cmp_neq_mskd()+0x38>
     4e5:	83 e0 f9             	and    $0xfffffff9,%eax
     4e8:	83 c8 04             	or     $0x4,%eax
     4eb:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     4f2:	c3                   	retq   
     4f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     4f8:	83 c8 40             	or     $0x40,%eax
     4fb:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     502:	c3                   	retq   
     503:	0f 1f 00             	nopl   (%rax)
     506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     50d:	00 00 00 

0000000000000510 <cmp_equ_reg()>:
     510:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     517:	22 00 00 00 
     51b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     522:	83 f8 22             	cmp    $0x22,%eax
     525:	74 11                	je     538 <cmp_equ_reg()+0x28>
     527:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     52e:	00 00 00 2e 
     532:	c3                   	retq   
     533:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     538:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
     53f:	00 00 00 2a 
     543:	c3                   	retq   
     544:	66 90                	xchg   %ax,%ax
     546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     54d:	00 00 00 

0000000000000550 <cmp_neq_reg()>:
     550:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     557:	22 00 00 00 
     55b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     562:	83 f8 22             	cmp    $0x22,%eax
     565:	74 11                	je     578 <cmp_neq_reg()+0x28>
     567:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     56e:	02 00 00 00 
     572:	c3                   	retq   
     573:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     578:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     57f:	20 00 00 00 
     583:	c3                   	retq   
     584:	66 90                	xchg   %ax,%ax
     586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     58d:	00 00 00 

0000000000000590 <constexpr_bits_array()>:
     590:	c7 04 25 2c 01 70 00 	movl   $0x6,0x70012c
     597:	06 00 00 00 
     59b:	c7 04 25 a0 01 70 00 	movl   $0x2000,0x7001a0
     5a2:	00 20 00 00 
     5a6:	c3                   	retq   
     5a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     5ae:	00 00 

00000000000005b0 <runtime_bits_array()>:
     5b0:	c7 44 24 fc 03 00 00 	movl   $0x3,-0x4(%rsp)
     5b7:	00 
     5b8:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
     5bc:	c7 04 85 20 01 70 00 	movl   $0x21,0x700120(,%rax,4)
     5c3:	21 00 00 00 
     5c7:	c7 44 24 fc 07 00 00 	movl   $0x7,-0x4(%rsp)
     5ce:	00 
     5cf:	b8 01 00 00 00       	mov    $0x1,%eax
     5d4:	8b 4c 24 fc          	mov    -0x4(%rsp),%ecx
     5d8:	d3 e0                	shl    %cl,%eax
     5da:	89 04 25 a0 01 70 00 	mov    %eax,0x7001a0
     5e1:	c3                   	retq   
     5e2:	0f 1f 40 00          	nopl   0x0(%rax)
     5e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     5ed:	00 00 00 

00000000000005f0 <prescaler_low()>:
     5f0:	c7 04 25 24 02 70 00 	movl   $0x77,0x700224
     5f7:	77 00 00 00 
     5fb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     602:	83 e0 7f             	and    $0x7f,%eax
     605:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
     60c:	c3                   	retq   
     60d:	0f 1f 00             	nopl   (%rax)

0000000000000610 <prescaler_high()>:
     610:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
     617:	00 00 00 3a 
     61b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     622:	25 00 00 00 3e       	and    $0x3e000000,%eax
     627:	c1 e8 19             	shr    $0x19,%eax
     62a:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
     631:	c3                   	retq   
     632:	0f 1f 40 00          	nopl   0x0(%rax)
     636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     63d:	00 00 00 

0000000000000640 <reg_mskd_lss()>:
     640:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
     647:	00 00 00 36 
     64b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     652:	25 00 00 00 3e       	and    $0x3e000000,%eax
     657:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
     65c:	76 12                	jbe    670 <reg_mskd_lss()+0x30>
     65e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     665:	04 00 00 00 
     669:	c3                   	retq   
     66a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     670:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     677:	02 00 00 00 
     67b:	c3                   	retq   
     67c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000680 <reg_mskd_leq()>:
     680:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     687:	00 00 00 2e 
     68b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     692:	25 00 00 00 3e       	and    $0x3e000000,%eax
     697:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
     69c:	77 22                	ja     6c0 <reg_mskd_leq()+0x40>
     69e:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     6a5:	25 00 00 00 3e       	and    $0x3e000000,%eax
     6aa:	3d 00 00 00 30       	cmp    $0x30000000,%eax
     6af:	77 0f                	ja     6c0 <reg_mskd_leq()+0x40>
     6b1:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     6b8:	02 00 00 00 
     6bc:	c3                   	retq   
     6bd:	0f 1f 00             	nopl   (%rax)
     6c0:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     6c7:	04 00 00 00 
     6cb:	c3                   	retq   
     6cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000006d0 <reg_mskd_gtr()>:
     6d0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
     6d7:	00 00 00 26 
     6db:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     6e2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     6e7:	3d 00 00 00 24       	cmp    $0x24000000,%eax
     6ec:	77 12                	ja     700 <reg_mskd_gtr()+0x30>
     6ee:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     6f5:	04 00 00 00 
     6f9:	c3                   	retq   
     6fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     700:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     707:	02 00 00 00 
     70b:	c3                   	retq   
     70c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000710 <reg_mskd_geq()>:
     710:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     717:	00 00 00 22 
     71b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     722:	25 00 00 00 3e       	and    $0x3e000000,%eax
     727:	3d ff ff ff 1f       	cmp    $0x1fffffff,%eax
     72c:	76 22                	jbe    750 <reg_mskd_geq()+0x40>
     72e:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     735:	25 00 00 00 3e       	and    $0x3e000000,%eax
     73a:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
     73f:	76 0f                	jbe    750 <reg_mskd_geq()+0x40>
     741:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     748:	02 00 00 00 
     74c:	c3                   	retq   
     74d:	0f 1f 00             	nopl   (%rax)
     750:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     757:	04 00 00 00 
     75b:	c3                   	retq   
     75c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000760 <pos_cmp_eq()>:
     760:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     767:	02 00 00 00 
     76b:	c3                   	retq   
     76c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000770 <pos_cmp_ne()>:
     770:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     777:	02 00 00 00 
     77b:	c3                   	retq   
     77c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000780 <bits_extract_eq()>:
     780:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     787:	40 00 00 00 
     78b:	83 3c 25 c4 02 70 00 	cmpl   $0x40,0x7002c4
     792:	40 
     793:	74 13                	je     7a8 <bits_extract_eq()+0x28>
     795:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     79c:	04 00 00 00 
     7a0:	c3                   	retq   
     7a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     7a8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     7af:	02 00 00 00 
     7b3:	c3                   	retq   
     7b4:	66 90                	xchg   %ax,%ax
     7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     7bd:	00 00 00 

00000000000007c0 <mskd_extract_eq()>:
     7c0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     7c7:	02 00 00 00 
     7cb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     7d2:	83 f8 02             	cmp    $0x2,%eax
     7d5:	74 11                	je     7e8 <mskd_extract_eq()+0x28>
     7d7:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     7de:	40 00 00 00 
     7e2:	c3                   	retq   
     7e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     7e8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     7ef:	20 00 00 00 
     7f3:	c3                   	retq   
     7f4:	66 90                	xchg   %ax,%ax
     7f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     7fd:	00 00 00 

0000000000000800 <mskd_extract_ne()>:
     800:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     807:	04 00 00 00 
     80b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     812:	83 f8 04             	cmp    $0x4,%eax
     815:	74 11                	je     828 <mskd_extract_ne()+0x28>
     817:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     81e:	20 00 00 00 
     822:	c3                   	retq   
     823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     828:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     82f:	40 00 00 00 
     833:	c3                   	retq   
     834:	66 90                	xchg   %ax,%ax
     836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     83d:	00 00 00 

0000000000000840 <mskd_extract_lss()>:
     840:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     847:	00 00 00 16 
     84b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     852:	3d ff ff ff 17       	cmp    $0x17ffffff,%eax
     857:	76 0f                	jbe    868 <mskd_extract_lss()+0x28>
     859:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     860:	40 00 00 00 
     864:	c3                   	retq   
     865:	0f 1f 00             	nopl   (%rax)
     868:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     86f:	20 00 00 00 
     873:	c3                   	retq   
     874:	66 90                	xchg   %ax,%ax
     876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     87d:	00 00 00 

0000000000000880 <mskd_extract_leq()>:
     880:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     887:	00 00 00 2e 
     88b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     892:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
     897:	77 0f                	ja     8a8 <mskd_extract_leq()+0x28>
     899:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     8a0:	20 00 00 00 
     8a4:	c3                   	retq   
     8a5:	0f 1f 00             	nopl   (%rax)
     8a8:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     8af:	40 00 00 00 
     8b3:	c3                   	retq   
     8b4:	66 90                	xchg   %ax,%ax
     8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     8bd:	00 00 00 

00000000000008c0 <mskd_extract_gtr()>:
     8c0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
     8c7:	00 00 00 26 
     8cb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     8d2:	3d 00 00 00 24       	cmp    $0x24000000,%eax
     8d7:	77 0f                	ja     8e8 <mskd_extract_gtr()+0x28>
     8d9:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     8e0:	40 00 00 00 
     8e4:	c3                   	retq   
     8e5:	0f 1f 00             	nopl   (%rax)
     8e8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     8ef:	20 00 00 00 
     8f3:	c3                   	retq   
     8f4:	66 90                	xchg   %ax,%ax
     8f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     8fd:	00 00 00 

0000000000000900 <set_bits_global()>:
     900:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     907:	83 c8 40             	or     $0x40,%eax
     90a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     911:	c3                   	retq   
     912:	0f 1f 40 00          	nopl   0x0(%rax)
     916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     91d:	00 00 00 

0000000000000920 <ins_mskd_global()>:
     920:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     927:	83 e0 f9             	and    $0xfffffff9,%eax
     92a:	83 c8 02             	or     $0x2,%eax
     92d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     934:	c3                   	retq   
     935:	90                   	nop
     936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     93d:	00 00 00 

0000000000000940 <assign_array_global()>:
     940:	c7 04 25 2c 01 70 00 	movl   $0xbd,0x70012c
     947:	bd 00 00 00 
     94b:	c3                   	retq   
     94c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000950 <shifted_global()>:
     950:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     957:	00 00 00 2e 
     95b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     962:	25 00 00 00 3e       	and    $0x3e000000,%eax
     967:	c1 e8 19             	shr    $0x19,%eax
     96a:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
     971:	c3                   	retq   
     972:	0f 1f 40 00          	nopl   0x0(%rax)
     976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     97d:	00 00 00 

0000000000000980 <assign_register_global()>:
     980:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     987:	04 00 00 00 
     98b:	c3                   	retq   
     98c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000990 <copy_bits_equ()>:
     990:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     997:	40 00 00 00 
     99b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     9a2:	a8 40                	test   $0x40,%al
     9a4:	75 12                	jne    9b8 <copy_bits_equ()+0x28>
     9a6:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     9ad:	04 00 00 00 
     9b1:	c3                   	retq   
     9b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     9b8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     9bf:	02 00 00 00 
     9c3:	c3                   	retq   
     9c4:	66 90                	xchg   %ax,%ax
     9c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     9cd:	00 00 00 

00000000000009d0 <copy_bits_neq()>:
     9d0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     9d7:	40 00 00 00 
     9db:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     9e2:	a8 40                	test   $0x40,%al
     9e4:	74 12                	je     9f8 <copy_bits_neq()+0x28>
     9e6:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     9ed:	04 00 00 00 
     9f1:	c3                   	retq   
     9f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     9f8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     9ff:	02 00 00 00 
     a03:	c3                   	retq   
     a04:	66 90                	xchg   %ax,%ax
     a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a0d:	00 00 00 

0000000000000a10 <copy_mskd_equ()>:
     a10:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     a17:	00 00 00 16 
     a1b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     a22:	25 00 00 00 3e       	and    $0x3e000000,%eax
     a27:	3d 00 00 00 16       	cmp    $0x16000000,%eax
     a2c:	74 12                	je     a40 <copy_mskd_equ()+0x30>
     a2e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     a35:	04 00 00 00 
     a39:	c3                   	retq   
     a3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     a40:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     a47:	02 00 00 00 
     a4b:	c3                   	retq   
     a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000a50 <copy_mskd_neq()>:
     a50:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
     a57:	00 00 00 1a 
     a5b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     a62:	25 00 00 00 3e       	and    $0x3e000000,%eax
     a67:	3d 00 00 00 1a       	cmp    $0x1a000000,%eax
     a6c:	74 12                	je     a80 <copy_mskd_neq()+0x30>
     a6e:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     a75:	02 00 00 00 
     a79:	c3                   	retq   
     a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     a80:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     a87:	04 00 00 00 
     a8b:	c3                   	retq   
     a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000a90 <copy_mskd_lss()>:
     a90:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
     a97:	00 00 00 36 
     a9b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     aa2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     aa7:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
     aac:	76 12                	jbe    ac0 <copy_mskd_lss()+0x30>
     aae:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     ab5:	04 00 00 00 
     ab9:	c3                   	retq   
     aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     ac0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     ac7:	02 00 00 00 
     acb:	c3                   	retq   
     acc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000ad0 <copy_mskd_leq()>:
     ad0:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     ad7:	00 00 00 2e 
     adb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     ae2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     ae7:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
     aec:	77 12                	ja     b00 <copy_mskd_leq()+0x30>
     aee:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     af5:	02 00 00 00 
     af9:	c3                   	retq   
     afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b00:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     b07:	04 00 00 00 
     b0b:	c3                   	retq   
     b0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b10 <copy_mskd_gtr()>:
     b10:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
     b17:	00 00 00 26 
     b1b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     b22:	25 00 00 00 3e       	and    $0x3e000000,%eax
     b27:	3d 00 00 00 24       	cmp    $0x24000000,%eax
     b2c:	77 12                	ja     b40 <copy_mskd_gtr()+0x30>
     b2e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     b35:	04 00 00 00 
     b39:	c3                   	retq   
     b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b40:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     b47:	02 00 00 00 
     b4b:	c3                   	retq   
     b4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b50 <copy_mskd_geq()>:
     b50:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     b57:	00 00 00 22 
     b5b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     b62:	25 00 00 00 3e       	and    $0x3e000000,%eax
     b67:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
     b6c:	76 12                	jbe    b80 <copy_mskd_geq()+0x30>
     b6e:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     b75:	02 00 00 00 
     b79:	c3                   	retq   
     b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b80:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     b87:	04 00 00 00 
     b8b:	c3                   	retq   
     b8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b90 <copy_shifted()>:
     b90:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     b97:	00 00 00 16 
     b9b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     ba2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     ba7:	3d 00 00 00 16       	cmp    $0x16000000,%eax
     bac:	74 12                	je     bc0 <copy_shifted()+0x30>
     bae:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     bb5:	04 00 00 00 
     bb9:	c3                   	retq   
     bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     bc0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     bc7:	02 00 00 00 
     bcb:	c3                   	retq   
     bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000bd0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>:
     bd0:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
     bd7:	66 00 00 00 
     bdb:	c3                   	retq   
     bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000be0 <call_pos_ref()>:
     be0:	48 83 ec 18          	sub    $0x18,%rsp
     be4:	48 89 e7             	mov    %rsp,%rdi
     be7:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
     bee:	e8 dd ff ff ff       	callq  bd0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
     bf3:	48 89 e7             	mov    %rsp,%rdi
     bf6:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
     bfd:	e8 ce ff ff ff       	callq  bd0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
     c02:	48 83 c4 18          	add    $0x18,%rsp
     c06:	c3                   	retq   
     c07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     c0e:	00 00 

0000000000000c10 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>:
     c10:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
     c17:	77 00 00 00 
     c1b:	c3                   	retq   
     c1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c20 <call_pos_ref_global()>:
     c20:	48 83 ec 18          	sub    $0x18,%rsp
     c24:	48 89 e7             	mov    %rsp,%rdi
     c27:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     c2e:	e8 dd ff ff ff       	callq  c10 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>
     c33:	48 83 c4 18          	add    $0x18,%rsp
     c37:	c3                   	retq   
     c38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     c3f:	00 

0000000000000c40 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>:
     c40:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
     c47:	33 00 00 00 
     c4b:	c3                   	retq   
     c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c50 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>:
     c50:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
     c57:	44 00 00 00 
     c5b:	c3                   	retq   
     c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c60 <call_pos_val()>:
     c60:	48 83 ec 08          	sub    $0x8,%rsp
     c64:	bf 05 00 00 00       	mov    $0x5,%edi
     c69:	e8 d2 ff ff ff       	callq  c40 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>
     c6e:	bf 06 00 00 00       	mov    $0x6,%edi
     c73:	e8 d8 ff ff ff       	callq  c50 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
     c78:	48 83 c4 08          	add    $0x8,%rsp
     c7c:	c3                   	retq   
     c7d:	0f 1f 00             	nopl   (%rax)

0000000000000c80 <call_pos_val_global()>:
     c80:	48 83 ec 08          	sub    $0x8,%rsp
     c84:	bf 06 00 00 00       	mov    $0x6,%edi
     c89:	e8 c2 ff ff ff       	callq  c50 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
     c8e:	48 83 c4 08          	add    $0x8,%rsp
     c92:	c3                   	retq   
     c93:	0f 1f 00             	nopl   (%rax)
     c96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     c9d:	00 00 00 

0000000000000ca0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>:
     ca0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     ca7:	83 e0 f9             	and    $0xfffffff9,%eax
     caa:	0b 47 04             	or     0x4(%rdi),%eax
     cad:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     cb4:	c3                   	retq   
     cb5:	90                   	nop
     cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     cbd:	00 00 00 

0000000000000cc0 <call_mskd_ref_const()>:
     cc0:	48 83 ec 18          	sub    $0x18,%rsp
     cc4:	48 89 e7             	mov    %rsp,%rdi
     cc7:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     cce:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%rsp)
     cd5:	00 
     cd6:	e8 c5 ff ff ff       	callq  ca0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
     cdb:	48 83 c4 18          	add    $0x18,%rsp
     cdf:	c3                   	retq   

0000000000000ce0 <call_mskd_ref_var()>:
     ce0:	48 83 ec 18          	sub    $0x18,%rsp
     ce4:	48 89 e7             	mov    %rsp,%rdi
     ce7:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     cee:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
     cf5:	00 
     cf6:	e8 a5 ff ff ff       	callq  ca0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
     cfb:	48 83 c4 18          	add    $0x18,%rsp
     cff:	c3                   	retq   

0000000000000d00 <call_mskd_ref_global()>:
     d00:	48 83 ec 18          	sub    $0x18,%rsp
     d04:	48 89 e7             	mov    %rsp,%rdi
     d07:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     d0e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
     d15:	00 
     d16:	e8 85 ff ff ff       	callq  ca0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
     d1b:	48 83 c4 18          	add    $0x18,%rsp
     d1f:	c3                   	retq   

0000000000000d20 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>:
     d20:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     d27:	83 e0 f9             	and    $0xfffffff9,%eax
     d2a:	83 c8 02             	or     $0x2,%eax
     d2d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     d34:	c3                   	retq   
     d35:	90                   	nop
     d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     d3d:	00 00 00 

0000000000000d40 <call_mskd_val_const()>:
     d40:	48 83 ec 08          	sub    $0x8,%rsp
     d44:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
     d4b:	00 00 00 
     d4e:	e8 cd ff ff ff       	callq  d20 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
     d53:	48 83 c4 08          	add    $0x8,%rsp
     d57:	c3                   	retq   
     d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     d5f:	00 

0000000000000d60 <call_mskd_val_var()>:
     d60:	48 83 ec 08          	sub    $0x8,%rsp
     d64:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
     d6b:	00 00 00 
     d6e:	e8 ad ff ff ff       	callq  d20 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
     d73:	48 83 c4 08          	add    $0x8,%rsp
     d77:	c3                   	retq   
     d78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     d7f:	00 

0000000000000d80 <call_mskd_val_global()>:
     d80:	48 83 ec 08          	sub    $0x8,%rsp
     d84:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
     d8b:	00 00 00 
     d8e:	e8 8d ff ff ff       	callq  d20 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
     d93:	48 83 c4 08          	add    $0x8,%rsp
     d97:	c3                   	retq   
     d98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     d9f:	00 

0000000000000da0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>:
     da0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     da7:	83 c8 40             	or     $0x40,%eax
     daa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     db1:	c3                   	retq   
     db2:	0f 1f 40 00          	nopl   0x0(%rax)
     db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     dbd:	00 00 00 

0000000000000dc0 <call_bits_val_const()>:
     dc0:	48 83 ec 08          	sub    $0x8,%rsp
     dc4:	bf 40 00 00 00       	mov    $0x40,%edi
     dc9:	e8 d2 ff ff ff       	callq  da0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
     dce:	48 83 c4 08          	add    $0x8,%rsp
     dd2:	c3                   	retq   
     dd3:	0f 1f 00             	nopl   (%rax)
     dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     ddd:	00 00 00 

0000000000000de0 <call_bits_val_var()>:
     de0:	48 83 ec 08          	sub    $0x8,%rsp
     de4:	bf 40 00 00 00       	mov    $0x40,%edi
     de9:	e8 b2 ff ff ff       	callq  da0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
     dee:	48 83 c4 08          	add    $0x8,%rsp
     df2:	c3                   	retq   
     df3:	0f 1f 00             	nopl   (%rax)
     df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     dfd:	00 00 00 

0000000000000e00 <call_bits_val_global()>:
     e00:	48 83 ec 08          	sub    $0x8,%rsp
     e04:	bf 40 00 00 00       	mov    $0x40,%edi
     e09:	e8 92 ff ff ff       	callq  da0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
     e0e:	48 83 c4 08          	add    $0x8,%rsp
     e12:	c3                   	retq   
     e13:	0f 1f 00             	nopl   (%rax)
     e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e1d:	00 00 00 

0000000000000e20 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>)>:
     e20:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     e27:	09 c7                	or     %eax,%edi
     e29:	89 3c 25 c4 02 70 00 	mov    %edi,0x7002c4
     e30:	c3                   	retq   
     e31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e3d:	00 00 00 

0000000000000e40 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
     e40:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     e47:	0b 07                	or     (%rdi),%eax
     e49:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     e50:	c3                   	retq   
     e51:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e5d:	00 00 00 

0000000000000e60 <call_bits_ref_var()>:
     e60:	48 83 ec 18          	sub    $0x18,%rsp
     e64:	48 89 e7             	mov    %rsp,%rdi
     e67:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
     e6e:	e8 00 00 00 00       	callq  e73 <call_bits_ref_var()+0x13>
     e73:	48 83 c4 18          	add    $0x18,%rsp
     e77:	c3                   	retq   
     e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     e7f:	00 

0000000000000e80 <call_bits_ref_const()>:
     e80:	48 83 ec 18          	sub    $0x18,%rsp
     e84:	48 89 e7             	mov    %rsp,%rdi
     e87:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
     e8e:	e8 00 00 00 00       	callq  e93 <call_bits_ref_const()+0x13>
     e93:	48 83 c4 18          	add    $0x18,%rsp
     e97:	c3                   	retq   
     e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     e9f:	00 

0000000000000ea0 <call_bits_ref_global()>:
     ea0:	48 83 ec 18          	sub    $0x18,%rsp
     ea4:	48 89 e7             	mov    %rsp,%rdi
     ea7:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
     eae:	e8 00 00 00 00       	callq  eb3 <call_bits_ref_global()+0x13>
     eb3:	48 83 c4 18          	add    $0x18,%rsp
     eb7:	c3                   	retq   
     eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     ebf:	00 

0000000000000ec0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
     ec0:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
     ec7:	89 f8                	mov    %edi,%eax
     ec9:	48 c1 ef 20          	shr    $0x20,%rdi
     ecd:	f7 d0                	not    %eax
     ecf:	21 d0                	and    %edx,%eax
     ed1:	09 f8                	or     %edi,%eax
     ed3:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     eda:	c3                   	retq   
     edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000ee0 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&)>:
     ee0:	8b 07                	mov    (%rdi),%eax
     ee2:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
     ee9:	f7 d0                	not    %eax
     eeb:	21 d0                	and    %edx,%eax
     eed:	0b 47 04             	or     0x4(%rdi),%eax
     ef0:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     ef7:	c3                   	retq   
     ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     eff:	00 

0000000000000f00 <periph_bits(mcu::Serial*)>:
     f00:	8b 47 04             	mov    0x4(%rdi),%eax
     f03:	83 c8 40             	or     $0x40,%eax
     f06:	89 47 04             	mov    %eax,0x4(%rdi)
     f09:	c3                   	retq   
     f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000f10 <call_periph_bits()>:
     f10:	bf c0 02 70 00       	mov    $0x7002c0,%edi
     f15:	eb e9                	jmp    f00 <periph_bits(mcu::Serial*)>
     f17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     f1e:	00 00 

0000000000000f20 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
     f20:	8b 47 04             	mov    0x4(%rdi),%eax
     f23:	09 c6                	or     %eax,%esi
     f25:	89 77 04             	mov    %esi,0x4(%rdi)
     f28:	c3                   	retq   
     f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000f30 <call_periph_bits_val()>:
     f30:	48 83 ec 08          	sub    $0x8,%rsp
     f34:	be 40 00 00 00       	mov    $0x40,%esi
     f39:	bf c0 02 70 00       	mov    $0x7002c0,%edi
     f3e:	e8 00 00 00 00       	callq  f43 <call_periph_bits_val()+0x13>
     f43:	48 83 c4 08          	add    $0x8,%rsp
     f47:	c3                   	retq   
     f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f4f:	00 

0000000000000f50 <reg_bits_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
     f50:	8b 07                	mov    (%rdi),%eax
     f52:	09 c6                	or     %eax,%esi
     f54:	89 37                	mov    %esi,(%rdi)
     f56:	c3                   	retq   
     f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     f5e:	00 00 

0000000000000f60 <call_reg_bits_val()>:
     f60:	48 83 ec 08          	sub    $0x8,%rsp
     f64:	be 40 00 00 00       	mov    $0x40,%esi
     f69:	bf c4 02 70 00       	mov    $0x7002c4,%edi
     f6e:	e8 00 00 00 00       	callq  f73 <call_reg_bits_val()+0x13>
     f73:	48 83 c4 08          	add    $0x8,%rsp
     f77:	c3                   	retq   
     f78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f7f:	00 

0000000000000f80 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
     f80:	8b 47 04             	mov    0x4(%rdi),%eax
     f83:	0b 06                	or     (%rsi),%eax
     f85:	89 47 04             	mov    %eax,0x4(%rdi)
     f88:	c3                   	retq   
     f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000f90 <call_periph_bits_ref()>:
     f90:	48 83 ec 18          	sub    $0x18,%rsp
     f94:	bf c0 02 70 00       	mov    $0x7002c0,%edi
     f99:	48 89 e6             	mov    %rsp,%rsi
     f9c:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
     fa3:	e8 00 00 00 00       	callq  fa8 <call_periph_bits_ref()+0x18>
     fa8:	48 83 c4 18          	add    $0x18,%rsp
     fac:	c3                   	retq   
     fad:	0f 1f 00             	nopl   (%rax)

0000000000000fb0 <reg_bits_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
     fb0:	8b 07                	mov    (%rdi),%eax
     fb2:	0b 06                	or     (%rsi),%eax
     fb4:	89 07                	mov    %eax,(%rdi)
     fb6:	c3                   	retq   
     fb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     fbe:	00 00 

0000000000000fc0 <call_reg_bits_ref()>:
     fc0:	48 83 ec 18          	sub    $0x18,%rsp
     fc4:	bf c4 02 70 00       	mov    $0x7002c4,%edi
     fc9:	48 89 e6             	mov    %rsp,%rsi
     fcc:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
     fd3:	e8 00 00 00 00       	callq  fd8 <call_reg_bits_ref()+0x18>
     fd8:	48 83 c4 18          	add    $0x18,%rsp
     fdc:	c3                   	retq   
     fdd:	0f 1f 00             	nopl   (%rax)

0000000000000fe0 <periph_mskd(mcu::Serial*)>:
     fe0:	8b 47 04             	mov    0x4(%rdi),%eax
     fe3:	83 e0 f9             	and    $0xfffffff9,%eax
     fe6:	83 c8 02             	or     $0x2,%eax
     fe9:	89 47 04             	mov    %eax,0x4(%rdi)
     fec:	c3                   	retq   
     fed:	0f 1f 00             	nopl   (%rax)

0000000000000ff0 <call_periph_mskd()>:
     ff0:	bf c0 02 70 00       	mov    $0x7002c0,%edi
     ff5:	eb e9                	jmp    fe0 <periph_mskd(mcu::Serial*)>
     ff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     ffe:	00 00 

0000000000001000 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1000:	8b 57 04             	mov    0x4(%rdi),%edx
    1003:	89 f0                	mov    %esi,%eax
    1005:	48 c1 ee 20          	shr    $0x20,%rsi
    1009:	f7 d0                	not    %eax
    100b:	21 d0                	and    %edx,%eax
    100d:	09 f0                	or     %esi,%eax
    100f:	89 47 04             	mov    %eax,0x4(%rdi)
    1012:	c3                   	retq   
    1013:	0f 1f 00             	nopl   (%rax)
    1016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    101d:	00 00 00 

0000000000001020 <call_periph_mskd_val()>:
    1020:	48 83 ec 08          	sub    $0x8,%rsp
    1024:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    102b:	00 00 00 
    102e:	bf c0 02 70 00       	mov    $0x7002c0,%edi
    1033:	e8 00 00 00 00       	callq  1038 <call_periph_mskd_val()+0x18>
    1038:	48 83 c4 08          	add    $0x8,%rsp
    103c:	c3                   	retq   
    103d:	0f 1f 00             	nopl   (%rax)

0000000000001040 <reg_mskd_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1040:	8b 17                	mov    (%rdi),%edx
    1042:	89 f0                	mov    %esi,%eax
    1044:	48 c1 ee 20          	shr    $0x20,%rsi
    1048:	f7 d0                	not    %eax
    104a:	21 d0                	and    %edx,%eax
    104c:	09 f0                	or     %esi,%eax
    104e:	89 07                	mov    %eax,(%rdi)
    1050:	c3                   	retq   
    1051:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    105d:	00 00 00 

0000000000001060 <call_reg_mskd_val()>:
    1060:	48 83 ec 08          	sub    $0x8,%rsp
    1064:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    106b:	00 00 00 
    106e:	bf c4 02 70 00       	mov    $0x7002c4,%edi
    1073:	e8 00 00 00 00       	callq  1078 <call_reg_mskd_val()+0x18>
    1078:	48 83 c4 08          	add    $0x8,%rsp
    107c:	c3                   	retq   
    107d:	0f 1f 00             	nopl   (%rax)

0000000000001080 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1080:	8b 57 04             	mov    0x4(%rdi),%edx
    1083:	89 f0                	mov    %esi,%eax
    1085:	48 c1 ee 20          	shr    $0x20,%rsi
    1089:	f7 d0                	not    %eax
    108b:	21 d0                	and    %edx,%eax
    108d:	09 f0                	or     %esi,%eax
    108f:	89 47 04             	mov    %eax,0x4(%rdi)
    1092:	c3                   	retq   
    1093:	0f 1f 00             	nopl   (%rax)
    1096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    109d:	00 00 00 

00000000000010a0 <call_periph_mskd_ref()>:
    10a0:	48 83 ec 08          	sub    $0x8,%rsp
    10a4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    10ab:	00 00 00 
    10ae:	bf c0 02 70 00       	mov    $0x7002c0,%edi
    10b3:	e8 00 00 00 00       	callq  10b8 <call_periph_mskd_ref()+0x18>
    10b8:	48 83 c4 08          	add    $0x8,%rsp
    10bc:	c3                   	retq   
    10bd:	0f 1f 00             	nopl   (%rax)

00000000000010c0 <reg_mskd_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    10c0:	8b 17                	mov    (%rdi),%edx
    10c2:	89 f0                	mov    %esi,%eax
    10c4:	48 c1 ee 20          	shr    $0x20,%rsi
    10c8:	f7 d0                	not    %eax
    10ca:	21 d0                	and    %edx,%eax
    10cc:	09 f0                	or     %esi,%eax
    10ce:	89 07                	mov    %eax,(%rdi)
    10d0:	c3                   	retq   
    10d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    10d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    10dd:	00 00 00 

00000000000010e0 <call_reg_mskd_ref()>:
    10e0:	48 83 ec 08          	sub    $0x8,%rsp
    10e4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    10eb:	00 00 00 
    10ee:	bf c4 02 70 00       	mov    $0x7002c4,%edi
    10f3:	e8 00 00 00 00       	callq  10f8 <call_reg_mskd_ref()+0x18>
    10f8:	48 83 c4 08          	add    $0x8,%rsp
    10fc:	c3                   	retq   
    10fd:	0f 1f 00             	nopl   (%rax)

0000000000001100 <return_bits()>:
    1100:	b8 20 00 00 00       	mov    $0x20,%eax
    1105:	c3                   	retq   
    1106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    110d:	00 00 00 

0000000000001110 <call_return_bits()>:
    1110:	48 83 ec 08          	sub    $0x8,%rsp
    1114:	e8 00 00 00 00       	callq  1119 <call_return_bits()+0x9>
    1119:	83 f8 20             	cmp    $0x20,%eax
    111c:	74 12                	je     1130 <call_return_bits()+0x20>
    111e:	c7 04 25 24 02 70 00 	movl   $0x6000000,0x700224
    1125:	00 00 00 06 
    1129:	48 83 c4 08          	add    $0x8,%rsp
    112d:	c3                   	retq   
    112e:	66 90                	xchg   %ax,%ax
    1130:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
    1137:	00 00 00 2a 
    113b:	48 83 c4 08          	add    $0x8,%rsp
    113f:	c3                   	retq   

0000000000001140 <return_mskd()>:
    1140:	48 b8 18 00 00 00 08 	movabs $0x800000018,%rax
    1147:	00 00 00 
    114a:	c3                   	retq   
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <call_return_mskd()>:
    1150:	48 83 ec 08          	sub    $0x8,%rsp
    1154:	e8 00 00 00 00       	callq  1159 <call_return_mskd()+0x9>
    1159:	83 f8 18             	cmp    $0x18,%eax
    115c:	74 12                	je     1170 <call_return_mskd()+0x20>
    115e:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
    1165:	00 00 00 26 
    1169:	48 83 c4 08          	add    $0x8,%rsp
    116d:	c3                   	retq   
    116e:	66 90                	xchg   %ax,%ax
    1170:	48 c1 e8 20          	shr    $0x20,%rax
    1174:	83 f8 08             	cmp    $0x8,%eax
    1177:	75 e5                	jne    115e <call_return_mskd()+0xe>
    1179:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
    1180:	00 00 00 22 
    1184:	eb e3                	jmp    1169 <call_return_mskd()+0x19>
    1186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    118d:	00 00 00 

0000000000001190 <return_reg()>:
    1190:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    1197:	40 00 00 00 
    119b:	b8 c4 02 70 00       	mov    $0x7002c4,%eax
    11a0:	c3                   	retq   
    11a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    11a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    11ad:	00 00 00 

00000000000011b0 <call_return_reg()>:
    11b0:	e8 00 00 00 00       	callq  11b5 <call_return_reg()+0x5>
    11b5:	8b 00                	mov    (%rax),%eax
    11b7:	a8 40                	test   $0x40,%al
    11b9:	75 15                	jne    11d0 <call_return_reg()+0x20>
    11bb:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
    11c2:	00 00 00 2e 
    11c6:	c3                   	retq   
    11c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    11ce:	00 00 
    11d0:	c7 04 25 24 02 70 00 	movl   $0x1e000000,0x700224
    11d7:	00 00 00 1e 
    11db:	c3                   	retq   
    11dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000011e0 <return_periph()>:
    11e0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    11e7:	40 00 00 00 
    11eb:	b8 c0 02 70 00       	mov    $0x7002c0,%eax
    11f0:	c3                   	retq   
    11f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    11f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    11fd:	00 00 00 

0000000000001200 <call_return_periph()>:
    1200:	e8 00 00 00 00       	callq  1205 <call_return_periph()+0x5>
    1205:	8b 40 04             	mov    0x4(%rax),%eax
    1208:	a8 40                	test   $0x40,%al
    120a:	75 14                	jne    1220 <call_return_periph()+0x20>
    120c:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
    1213:	00 00 00 2a 
    1217:	c3                   	retq   
    1218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    121f:	00 
    1220:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
    1227:	00 00 00 26 
    122b:	c3                   	retq   
    122c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001230 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)>:
    1230:	83 ff 05             	cmp    $0x5,%edi
    1233:	74 1b                	je     1250 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x20>
    1235:	83 ff 06             	cmp    $0x6,%edi
    1238:	74 26                	je     1260 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x30>
    123a:	c7 04 25 2c 01 70 00 	movl   $0x55,0x70012c
    1241:	55 00 00 00 
    1245:	c3                   	retq   
    1246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    124d:	00 00 00 
    1250:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
    1257:	33 00 00 00 
    125b:	c3                   	retq   
    125c:	0f 1f 40 00          	nopl   0x0(%rax)
    1260:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
    1267:	44 00 00 00 
    126b:	c3                   	retq   
    126c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001270 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)>:
    1270:	8b 07                	mov    (%rdi),%eax
    1272:	83 f8 05             	cmp    $0x5,%eax
    1275:	74 19                	je     1290 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x20>
    1277:	83 f8 06             	cmp    $0x6,%eax
    127a:	74 24                	je     12a0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x30>
    127c:	c7 04 25 2c 01 70 00 	movl   $0x88,0x70012c
    1283:	88 00 00 00 
    1287:	c3                   	retq   
    1288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    128f:	00 
    1290:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
    1297:	66 00 00 00 
    129b:	c3                   	retq   
    129c:	0f 1f 40 00          	nopl   0x0(%rax)
    12a0:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
    12a7:	77 00 00 00 
    12ab:	c3                   	retq   
    12ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000012b0 <runtime_range_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    12b0:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
    12b7:	89 f8                	mov    %edi,%eax
    12b9:	48 c1 ef 20          	shr    $0x20,%rdi
    12bd:	f7 d0                	not    %eax
    12bf:	21 d0                	and    %edx,%eax
    12c1:	09 f8                	or     %edi,%eax
    12c3:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
    12ca:	c3                   	retq   
    12cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012d0 <call_range_val(unsigned int)>:
    12d0:	c1 e7 0c             	shl    $0xc,%edi
    12d3:	48 83 ec 08          	sub    $0x8,%rsp
    12d7:	48 c1 e7 20          	shl    $0x20,%rdi
    12db:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
    12e2:	e8 00 00 00 00       	callq  12e7 <call_range_val(unsigned int)+0x17>
    12e7:	48 83 c4 08          	add    $0x8,%rsp
    12eb:	c3                   	retq   
    12ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000012f0 <call_range_val_port()>:
    12f0:	bf 1f 00 00 00       	mov    $0x1f,%edi
    12f5:	eb d9                	jmp    12d0 <call_range_val(unsigned int)>
    12f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    12fe:	00 00 

0000000000001300 <runtime_range_ref(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1300:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
    1307:	89 f8                	mov    %edi,%eax
    1309:	48 c1 ef 20          	shr    $0x20,%rdi
    130d:	f7 d0                	not    %eax
    130f:	21 d0                	and    %edx,%eax
    1311:	09 f8                	or     %edi,%eax
    1313:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
    131a:	c3                   	retq   
    131b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001320 <call_range_ref(unsigned int)>:
    1320:	c1 e7 0c             	shl    $0xc,%edi
    1323:	48 83 ec 08          	sub    $0x8,%rsp
    1327:	48 c1 e7 20          	shl    $0x20,%rdi
    132b:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
    1332:	e8 00 00 00 00       	callq  1337 <call_range_ref(unsigned int)+0x17>
    1337:	48 83 c4 08          	add    $0x8,%rsp
    133b:	c3                   	retq   
    133c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001340 <call_range_ref_port()>:
    1340:	bf 0c 00 00 00       	mov    $0xc,%edi
    1345:	eb d9                	jmp    1320 <call_range_ref(unsigned int)>
    1347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    134e:	00 00 

0000000000001350 <check_array_range_pass(unsigned int)>:
    1350:	83 ff 16             	cmp    $0x16,%edi
    1353:	76 13                	jbe    1368 <check_array_range_pass(unsigned int)+0x18>
    1355:	c7 04 25 2c 01 70 00 	movl   $0x83,0x70012c
    135c:	83 00 00 00 
    1360:	c3                   	retq   
    1361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1368:	c7 04 25 2c 01 70 00 	movl   $0x7f,0x70012c
    136f:	7f 00 00 00 
    1373:	c3                   	retq   
    1374:	66 90                	xchg   %ax,%ax
    1376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    137d:	00 00 00 

0000000000001380 <check_array_range_fail(unsigned int)>:
    1380:	83 ff 16             	cmp    $0x16,%edi
    1383:	76 13                	jbe    1398 <check_array_range_fail(unsigned int)+0x18>
    1385:	c7 04 25 2c 01 70 00 	movl   $0x97,0x70012c
    138c:	97 00 00 00 
    1390:	c3                   	retq   
    1391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1398:	c7 04 25 2c 01 70 00 	movl   $0x95,0x70012c
    139f:	95 00 00 00 
    13a3:	c3                   	retq   
    13a4:	66 90                	xchg   %ax,%ax
    13a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    13ad:	00 00 00 

00000000000013b0 <check_bits_range_pass(unsigned int)>:
    13b0:	83 ff 0f             	cmp    $0xf,%edi
    13b3:	76 13                	jbe    13c8 <check_bits_range_pass(unsigned int)+0x18>
    13b5:	c7 04 25 2c 01 70 00 	movl   $0xa3,0x70012c
    13bc:	a3 00 00 00 
    13c0:	c3                   	retq   
    13c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13c8:	c7 04 25 2c 01 70 00 	movl   $0x9d,0x70012c
    13cf:	9d 00 00 00 
    13d3:	c3                   	retq   
    13d4:	66 90                	xchg   %ax,%ax
    13d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    13dd:	00 00 00 

00000000000013e0 <check_bits_range_fail(unsigned int)>:
    13e0:	83 ff 0f             	cmp    $0xf,%edi
    13e3:	76 13                	jbe    13f8 <check_bits_range_fail(unsigned int)+0x18>
    13e5:	c7 04 25 2c 01 70 00 	movl   $0xad,0x70012c
    13ec:	ad 00 00 00 
    13f0:	c3                   	retq   
    13f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13f8:	c7 04 25 2c 01 70 00 	movl   $0xa7,0x70012c
    13ff:	a7 00 00 00 
    1403:	c3                   	retq   
    1404:	66 90                	xchg   %ax,%ax
    1406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    140d:	00 00 00 

0000000000001410 <check_mskd_range_pass(unsigned int)>:
    1410:	83 ff 1f             	cmp    $0x1f,%edi
    1413:	76 13                	jbe    1428 <check_mskd_range_pass(unsigned int)+0x18>
    1415:	c7 04 25 2c 01 70 00 	movl   $0xb5,0x70012c
    141c:	b5 00 00 00 
    1420:	c3                   	retq   
    1421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1428:	c7 04 25 2c 01 70 00 	movl   $0xb3,0x70012c
    142f:	b3 00 00 00 
    1433:	c3                   	retq   
    1434:	66 90                	xchg   %ax,%ax
    1436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    143d:	00 00 00 

0000000000001440 <check_mskd_range_fail(unsigned int)>:
    1440:	83 ff 1f             	cmp    $0x1f,%edi
    1443:	76 13                	jbe    1458 <check_mskd_range_fail(unsigned int)+0x18>
    1445:	c7 04 25 2c 01 70 00 	movl   $0xc1,0x70012c
    144c:	c1 00 00 00 
    1450:	c3                   	retq   
    1451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1458:	c7 04 25 2c 01 70 00 	movl   $0xbf,0x70012c
    145f:	bf 00 00 00 
    1463:	c3                   	retq   
    1464:	66 90                	xchg   %ax,%ax
    1466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    146d:	00 00 00 

0000000000001470 <bits_extract_ne()>:
    1470:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
    1477:	20 00 00 00 
    147b:	83 3c 25 c4 02 70 00 	cmpl   $0x20,0x7002c4
    1482:	20 
    1483:	74 13                	je     1498 <bits_extract_ne()+0x28>
    1485:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
    148c:	02 00 00 00 
    1490:	c3                   	retq   
    1491:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1498:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
    149f:	04 00 00 00 
    14a3:	c3                   	retq   
    14a4:	66 90                	xchg   %ax,%ax
    14a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    14ad:	00 00 00 

00000000000014b0 <mskd_extract_geq()>:
    14b0:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
    14b7:	00 00 00 16 
    14bb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
    14c2:	3d ff ff ff 15       	cmp    $0x15ffffff,%eax
    14c7:	76 0f                	jbe    14d8 <mskd_extract_geq()+0x28>
    14c9:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
    14d0:	20 00 00 00 
    14d4:	c3                   	retq   
    14d5:	0f 1f 00             	nopl   (%rax)
    14d8:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    14df:	40 00 00 00 
    14e3:	c3                   	retq   
    14e4:	66 90                	xchg   %ax,%ax
    14e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    14ed:	00 00 00 

00000000000014f0 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>:
    14f0:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
    14f7:	00 00 00 2e 
    14fb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
    1502:	48 89 f9             	mov    %rdi,%rcx
    1505:	48 c1 e9 20          	shr    $0x20,%rcx
    1509:	21 f8                	and    %edi,%eax
    150b:	d3 e8                	shr    %cl,%eax
    150d:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
    1514:	c3                   	retq   
    1515:	90                   	nop
    1516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    151d:	00 00 00 

0000000000001520 <call_shifted_const_val()>:
    1520:	48 83 ec 08          	sub    $0x8,%rsp
    1524:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
    152b:	00 00 00 
    152e:	e8 00 00 00 00       	callq  1533 <call_shifted_const_val()+0x13>
    1533:	48 83 c4 08          	add    $0x8,%rsp
    1537:	c3                   	retq   
    1538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    153f:	00 

0000000000001540 <call_shifted_var_val()>:
    1540:	48 83 ec 08          	sub    $0x8,%rsp
    1544:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
    154b:	00 00 00 
    154e:	e8 00 00 00 00       	callq  1553 <call_shifted_var_val()+0x13>
    1553:	48 83 c4 08          	add    $0x8,%rsp
    1557:	c3                   	retq   
    1558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    155f:	00 

0000000000001560 <call_shifted_global_val()>:
    1560:	48 83 ec 08          	sub    $0x8,%rsp
    1564:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
    156b:	00 00 00 
    156e:	e8 00 00 00 00       	callq  1573 <call_shifted_global_val()+0x13>
    1573:	48 83 c4 08          	add    $0x8,%rsp
    1577:	c3                   	retq   
    1578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    157f:	00 

0000000000001580 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>:
    1580:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
    1587:	00 00 00 2e 
    158b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
    1592:	23 07                	and    (%rdi),%eax
    1594:	8b 4f 04             	mov    0x4(%rdi),%ecx
    1597:	d3 e8                	shr    %cl,%eax
    1599:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
    15a0:	c3                   	retq   
    15a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    15a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    15ad:	00 00 00 

00000000000015b0 <call_shifted_const_ref()>:
    15b0:	48 83 ec 18          	sub    $0x18,%rsp
    15b4:	48 89 e7             	mov    %rsp,%rdi
    15b7:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
    15be:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
    15c5:	00 
    15c6:	e8 00 00 00 00       	callq  15cb <call_shifted_const_ref()+0x1b>
    15cb:	48 83 c4 18          	add    $0x18,%rsp
    15cf:	c3                   	retq   

00000000000015d0 <call_shifted_var_ref()>:
    15d0:	48 83 ec 18          	sub    $0x18,%rsp
    15d4:	48 89 e7             	mov    %rsp,%rdi
    15d7:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
    15de:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
    15e5:	00 
    15e6:	e8 00 00 00 00       	callq  15eb <call_shifted_var_ref()+0x1b>
    15eb:	48 83 c4 18          	add    $0x18,%rsp
    15ef:	c3                   	retq   

00000000000015f0 <call_shifted_global_ref()>:
    15f0:	48 83 ec 18          	sub    $0x18,%rsp
    15f4:	48 89 e7             	mov    %rsp,%rdi
    15f7:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
    15fe:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
    1605:	00 
    1606:	e8 00 00 00 00       	callq  160b <call_shifted_global_ref()+0x1b>
    160b:	48 83 c4 18          	add    $0x18,%rsp
    160f:	c3                   	retq   

0000000000001610 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)>:
    1610:	83 e7 40             	and    $0x40,%edi
    1613:	75 13                	jne    1628 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)+0x18>
    1615:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
    161c:	04 00 00 00 
    1620:	c3                   	retq   
    1621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1628:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
    162f:	02 00 00 00 
    1633:	c3                   	retq   
    1634:	66 90                	xchg   %ax,%ax
    1636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    163d:	00 00 00 

0000000000001640 <call_copy_bits_val()>:
    1640:	48 83 ec 08          	sub    $0x8,%rsp
    1644:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    164b:	40 00 00 00 
    164f:	8b 3c 25 c4 02 70 00 	mov    0x7002c4,%edi
    1656:	e8 00 00 00 00       	callq  165b <call_copy_bits_val()+0x1b>
    165b:	48 83 c4 08          	add    $0x8,%rsp
    165f:	c3                   	retq   

0000000000001660 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)>:
    1660:	f6 07 40             	testb  $0x40,(%rdi)
    1663:	75 13                	jne    1678 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)+0x18>
    1665:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
    166c:	04 00 00 00 
    1670:	c3                   	retq   
    1671:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1678:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
    167f:	02 00 00 00 
    1683:	c3                   	retq   
    1684:	66 90                	xchg   %ax,%ax
    1686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    168d:	00 00 00 

0000000000001690 <call_copy_bits_ref()>:
    1690:	48 83 ec 18          	sub    $0x18,%rsp
    1694:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    169b:	40 00 00 00 
    169f:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
    16a6:	48 89 e7             	mov    %rsp,%rdi
    16a9:	89 04 24             	mov    %eax,(%rsp)
    16ac:	e8 00 00 00 00       	callq  16b1 <call_copy_bits_ref()+0x21>
    16b1:	48 83 c4 18          	add    $0x18,%rsp
    16b5:	c3                   	retq   
    16b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    16bd:	00 00 00 

00000000000016c0 <run>:
    16c0:	48 83 ec 08          	sub    $0x8,%rsp
    16c4:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 16cb <run+0xb>
    16cb:	0f 84 0f 09 00 00    	je     1fe0 <run+0x920>
    16d1:	31 d2                	xor    %edx,%edx
    16d3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    16d8:	bf 00 00 00 00       	mov    $0x0,%edi
    16dd:	e8 00 00 00 00       	callq  16e2 <run+0x22>
    16e2:	ba 01 00 00 00       	mov    $0x1,%edx
    16e7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    16ec:	bf 00 00 00 00       	mov    $0x0,%edi
    16f1:	e8 00 00 00 00       	callq  16f6 <run+0x36>
    16f6:	ba 02 00 00 00       	mov    $0x2,%edx
    16fb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1700:	bf 00 00 00 00       	mov    $0x0,%edi
    1705:	e8 00 00 00 00       	callq  170a <run+0x4a>
    170a:	ba 03 00 00 00       	mov    $0x3,%edx
    170f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1714:	bf 00 00 00 00       	mov    $0x0,%edi
    1719:	e8 00 00 00 00       	callq  171e <run+0x5e>
    171e:	ba 04 00 00 00       	mov    $0x4,%edx
    1723:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1728:	bf 00 00 00 00       	mov    $0x0,%edi
    172d:	e8 00 00 00 00       	callq  1732 <run+0x72>
    1732:	ba 05 00 00 00       	mov    $0x5,%edx
    1737:	be c4 02 70 00       	mov    $0x7002c4,%esi
    173c:	bf 00 00 00 00       	mov    $0x0,%edi
    1741:	e8 00 00 00 00       	callq  1746 <run+0x86>
    1746:	ba 06 00 00 00       	mov    $0x6,%edx
    174b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1750:	bf 00 00 00 00       	mov    $0x0,%edi
    1755:	e8 00 00 00 00       	callq  175a <run+0x9a>
    175a:	ba 07 00 00 00       	mov    $0x7,%edx
    175f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1764:	bf 00 00 00 00       	mov    $0x0,%edi
    1769:	e8 00 00 00 00       	callq  176e <run+0xae>
    176e:	ba 08 00 00 00       	mov    $0x8,%edx
    1773:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1778:	bf 00 00 00 00       	mov    $0x0,%edi
    177d:	e8 00 00 00 00       	callq  1782 <run+0xc2>
    1782:	ba 09 00 00 00       	mov    $0x9,%edx
    1787:	be c4 02 70 00       	mov    $0x7002c4,%esi
    178c:	bf 00 00 00 00       	mov    $0x0,%edi
    1791:	e8 00 00 00 00       	callq  1796 <run+0xd6>
    1796:	ba 0a 00 00 00       	mov    $0xa,%edx
    179b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17a0:	bf 00 00 00 00       	mov    $0x0,%edi
    17a5:	e8 00 00 00 00       	callq  17aa <run+0xea>
    17aa:	ba 0b 00 00 00       	mov    $0xb,%edx
    17af:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17b4:	bf 00 00 00 00       	mov    $0x0,%edi
    17b9:	e8 00 00 00 00       	callq  17be <run+0xfe>
    17be:	ba 0c 00 00 00       	mov    $0xc,%edx
    17c3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17c8:	bf 00 00 00 00       	mov    $0x0,%edi
    17cd:	e8 00 00 00 00       	callq  17d2 <run+0x112>
    17d2:	ba 0d 00 00 00       	mov    $0xd,%edx
    17d7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17dc:	bf 00 00 00 00       	mov    $0x0,%edi
    17e1:	e8 00 00 00 00       	callq  17e6 <run+0x126>
    17e6:	ba 0e 00 00 00       	mov    $0xe,%edx
    17eb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17f0:	bf 00 00 00 00       	mov    $0x0,%edi
    17f5:	e8 00 00 00 00       	callq  17fa <run+0x13a>
    17fa:	ba 0f 00 00 00       	mov    $0xf,%edx
    17ff:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1804:	bf 00 00 00 00       	mov    $0x0,%edi
    1809:	e8 00 00 00 00       	callq  180e <run+0x14e>
    180e:	ba 10 00 00 00       	mov    $0x10,%edx
    1813:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1818:	bf 00 00 00 00       	mov    $0x0,%edi
    181d:	e8 00 00 00 00       	callq  1822 <run+0x162>
    1822:	ba 11 00 00 00       	mov    $0x11,%edx
    1827:	be c4 02 70 00       	mov    $0x7002c4,%esi
    182c:	bf 00 00 00 00       	mov    $0x0,%edi
    1831:	e8 00 00 00 00       	callq  1836 <run+0x176>
    1836:	ba 12 00 00 00       	mov    $0x12,%edx
    183b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1840:	bf 00 00 00 00       	mov    $0x0,%edi
    1845:	e8 00 00 00 00       	callq  184a <run+0x18a>
    184a:	ba 13 00 00 00       	mov    $0x13,%edx
    184f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1854:	bf 00 00 00 00       	mov    $0x0,%edi
    1859:	e8 00 00 00 00       	callq  185e <run+0x19e>
    185e:	ba 14 00 00 00       	mov    $0x14,%edx
    1863:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1868:	bf 00 00 00 00       	mov    $0x0,%edi
    186d:	e8 00 00 00 00       	callq  1872 <run+0x1b2>
    1872:	ba 15 00 00 00       	mov    $0x15,%edx
    1877:	be c4 02 70 00       	mov    $0x7002c4,%esi
    187c:	bf 00 00 00 00       	mov    $0x0,%edi
    1881:	e8 00 00 00 00       	callq  1886 <run+0x1c6>
    1886:	ba 16 00 00 00       	mov    $0x16,%edx
    188b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1890:	bf 00 00 00 00       	mov    $0x0,%edi
    1895:	e8 00 00 00 00       	callq  189a <run+0x1da>
    189a:	ba 17 00 00 00       	mov    $0x17,%edx
    189f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18a4:	bf 00 00 00 00       	mov    $0x0,%edi
    18a9:	e8 00 00 00 00       	callq  18ae <run+0x1ee>
    18ae:	ba 18 00 00 00       	mov    $0x18,%edx
    18b3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18b8:	bf 00 00 00 00       	mov    $0x0,%edi
    18bd:	e8 00 00 00 00       	callq  18c2 <run+0x202>
    18c2:	ba 19 00 00 00       	mov    $0x19,%edx
    18c7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18cc:	bf 00 00 00 00       	mov    $0x0,%edi
    18d1:	e8 00 00 00 00       	callq  18d6 <run+0x216>
    18d6:	ba 1a 00 00 00       	mov    $0x1a,%edx
    18db:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18e0:	bf 00 00 00 00       	mov    $0x0,%edi
    18e5:	e8 00 00 00 00       	callq  18ea <run+0x22a>
    18ea:	ba 1b 00 00 00       	mov    $0x1b,%edx
    18ef:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18f4:	bf 00 00 00 00       	mov    $0x0,%edi
    18f9:	e8 00 00 00 00       	callq  18fe <run+0x23e>
    18fe:	ba 1c 00 00 00       	mov    $0x1c,%edx
    1903:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1908:	bf 00 00 00 00       	mov    $0x0,%edi
    190d:	e8 00 00 00 00       	callq  1912 <run+0x252>
    1912:	ba 1d 00 00 00       	mov    $0x1d,%edx
    1917:	be c4 02 70 00       	mov    $0x7002c4,%esi
    191c:	bf 00 00 00 00       	mov    $0x0,%edi
    1921:	e8 00 00 00 00       	callq  1926 <run+0x266>
    1926:	ba 1e 00 00 00       	mov    $0x1e,%edx
    192b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1930:	bf 00 00 00 00       	mov    $0x0,%edi
    1935:	e8 00 00 00 00       	callq  193a <run+0x27a>
    193a:	ba 1f 00 00 00       	mov    $0x1f,%edx
    193f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1944:	bf 00 00 00 00       	mov    $0x0,%edi
    1949:	e8 00 00 00 00       	callq  194e <run+0x28e>
    194e:	ba 20 00 00 00       	mov    $0x20,%edx
    1953:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1958:	bf 00 00 00 00       	mov    $0x0,%edi
    195d:	e8 00 00 00 00       	callq  1962 <run+0x2a2>
    1962:	ba 21 00 00 00       	mov    $0x21,%edx
    1967:	be c4 02 70 00       	mov    $0x7002c4,%esi
    196c:	bf 00 00 00 00       	mov    $0x0,%edi
    1971:	e8 00 00 00 00       	callq  1976 <run+0x2b6>
    1976:	ba 22 00 00 00       	mov    $0x22,%edx
    197b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1980:	bf 00 00 00 00       	mov    $0x0,%edi
    1985:	e8 00 00 00 00       	callq  198a <run+0x2ca>
    198a:	ba 23 00 00 00       	mov    $0x23,%edx
    198f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1994:	bf 00 00 00 00       	mov    $0x0,%edi
    1999:	e8 00 00 00 00       	callq  199e <run+0x2de>
    199e:	ba 24 00 00 00       	mov    $0x24,%edx
    19a3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19a8:	bf 00 00 00 00       	mov    $0x0,%edi
    19ad:	e8 00 00 00 00       	callq  19b2 <run+0x2f2>
    19b2:	ba 25 00 00 00       	mov    $0x25,%edx
    19b7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19bc:	bf 00 00 00 00       	mov    $0x0,%edi
    19c1:	e8 00 00 00 00       	callq  19c6 <run+0x306>
    19c6:	ba 26 00 00 00       	mov    $0x26,%edx
    19cb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19d0:	bf 00 00 00 00       	mov    $0x0,%edi
    19d5:	e8 00 00 00 00       	callq  19da <run+0x31a>
    19da:	ba 27 00 00 00       	mov    $0x27,%edx
    19df:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19e4:	bf 00 00 00 00       	mov    $0x0,%edi
    19e9:	e8 00 00 00 00       	callq  19ee <run+0x32e>
    19ee:	ba 28 00 00 00       	mov    $0x28,%edx
    19f3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19f8:	bf 00 00 00 00       	mov    $0x0,%edi
    19fd:	e8 00 00 00 00       	callq  1a02 <run+0x342>
    1a02:	ba 29 00 00 00       	mov    $0x29,%edx
    1a07:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a0c:	bf 00 00 00 00       	mov    $0x0,%edi
    1a11:	e8 00 00 00 00       	callq  1a16 <run+0x356>
    1a16:	ba 2a 00 00 00       	mov    $0x2a,%edx
    1a1b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a20:	bf 00 00 00 00       	mov    $0x0,%edi
    1a25:	e8 00 00 00 00       	callq  1a2a <run+0x36a>
    1a2a:	ba 2b 00 00 00       	mov    $0x2b,%edx
    1a2f:	be a0 01 70 00       	mov    $0x7001a0,%esi
    1a34:	bf 00 00 00 00       	mov    $0x0,%edi
    1a39:	e8 00 00 00 00       	callq  1a3e <run+0x37e>
    1a3e:	ba 2c 00 00 00       	mov    $0x2c,%edx
    1a43:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a48:	bf 00 00 00 00       	mov    $0x0,%edi
    1a4d:	e8 00 00 00 00       	callq  1a52 <run+0x392>
    1a52:	ba 2d 00 00 00       	mov    $0x2d,%edx
    1a57:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a5c:	bf 00 00 00 00       	mov    $0x0,%edi
    1a61:	e8 00 00 00 00       	callq  1a66 <run+0x3a6>
    1a66:	ba 2e 00 00 00       	mov    $0x2e,%edx
    1a6b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a70:	bf 00 00 00 00       	mov    $0x0,%edi
    1a75:	e8 00 00 00 00       	callq  1a7a <run+0x3ba>
    1a7a:	ba 2f 00 00 00       	mov    $0x2f,%edx
    1a7f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a84:	bf 00 00 00 00       	mov    $0x0,%edi
    1a89:	e8 00 00 00 00       	callq  1a8e <run+0x3ce>
    1a8e:	ba 30 00 00 00       	mov    $0x30,%edx
    1a93:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a98:	bf 00 00 00 00       	mov    $0x0,%edi
    1a9d:	e8 00 00 00 00       	callq  1aa2 <run+0x3e2>
    1aa2:	ba 31 00 00 00       	mov    $0x31,%edx
    1aa7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1aac:	bf 00 00 00 00       	mov    $0x0,%edi
    1ab1:	e8 00 00 00 00       	callq  1ab6 <run+0x3f6>
    1ab6:	ba 32 00 00 00       	mov    $0x32,%edx
    1abb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ac0:	bf 00 00 00 00       	mov    $0x0,%edi
    1ac5:	e8 00 00 00 00       	callq  1aca <run+0x40a>
    1aca:	ba 33 00 00 00       	mov    $0x33,%edx
    1acf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ad4:	bf 00 00 00 00       	mov    $0x0,%edi
    1ad9:	e8 00 00 00 00       	callq  1ade <run+0x41e>
    1ade:	ba 34 00 00 00       	mov    $0x34,%edx
    1ae3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ae8:	bf 00 00 00 00       	mov    $0x0,%edi
    1aed:	e8 00 00 00 00       	callq  1af2 <run+0x432>
    1af2:	ba 35 00 00 00       	mov    $0x35,%edx
    1af7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1afc:	bf 00 00 00 00       	mov    $0x0,%edi
    1b01:	e8 00 00 00 00       	callq  1b06 <run+0x446>
    1b06:	ba 36 00 00 00       	mov    $0x36,%edx
    1b0b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b10:	bf 00 00 00 00       	mov    $0x0,%edi
    1b15:	e8 00 00 00 00       	callq  1b1a <run+0x45a>
    1b1a:	ba 37 00 00 00       	mov    $0x37,%edx
    1b1f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b24:	bf 00 00 00 00       	mov    $0x0,%edi
    1b29:	e8 00 00 00 00       	callq  1b2e <run+0x46e>
    1b2e:	ba 38 00 00 00       	mov    $0x38,%edx
    1b33:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b38:	bf 00 00 00 00       	mov    $0x0,%edi
    1b3d:	e8 00 00 00 00       	callq  1b42 <run+0x482>
    1b42:	ba 39 00 00 00       	mov    $0x39,%edx
    1b47:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b4c:	bf 00 00 00 00       	mov    $0x0,%edi
    1b51:	e8 00 00 00 00       	callq  1b56 <run+0x496>
    1b56:	ba 3a 00 00 00       	mov    $0x3a,%edx
    1b5b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b60:	bf 00 00 00 00       	mov    $0x0,%edi
    1b65:	e8 00 00 00 00       	callq  1b6a <run+0x4aa>
    1b6a:	ba 3b 00 00 00       	mov    $0x3b,%edx
    1b6f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b74:	bf 00 00 00 00       	mov    $0x0,%edi
    1b79:	e8 00 00 00 00       	callq  1b7e <run+0x4be>
    1b7e:	ba 3c 00 00 00       	mov    $0x3c,%edx
    1b83:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b88:	bf 00 00 00 00       	mov    $0x0,%edi
    1b8d:	e8 00 00 00 00       	callq  1b92 <run+0x4d2>
    1b92:	ba 3d 00 00 00       	mov    $0x3d,%edx
    1b97:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b9c:	bf 00 00 00 00       	mov    $0x0,%edi
    1ba1:	e8 00 00 00 00       	callq  1ba6 <run+0x4e6>
    1ba6:	ba 3e 00 00 00       	mov    $0x3e,%edx
    1bab:	be 24 02 70 00       	mov    $0x700224,%esi
    1bb0:	bf 00 00 00 00       	mov    $0x0,%edi
    1bb5:	e8 00 00 00 00       	callq  1bba <run+0x4fa>
    1bba:	ba 3f 00 00 00       	mov    $0x3f,%edx
    1bbf:	be 24 02 70 00       	mov    $0x700224,%esi
    1bc4:	bf 00 00 00 00       	mov    $0x0,%edi
    1bc9:	e8 00 00 00 00       	callq  1bce <run+0x50e>
    1bce:	ba 40 00 00 00       	mov    $0x40,%edx
    1bd3:	be 24 02 70 00       	mov    $0x700224,%esi
    1bd8:	bf 00 00 00 00       	mov    $0x0,%edi
    1bdd:	e8 00 00 00 00       	callq  1be2 <run+0x522>
    1be2:	ba 41 00 00 00       	mov    $0x41,%edx
    1be7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1bec:	bf 00 00 00 00       	mov    $0x0,%edi
    1bf1:	e8 00 00 00 00       	callq  1bf6 <run+0x536>
    1bf6:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1bfd <run+0x53d>
    1bfd:	ba 42 00 00 00       	mov    $0x42,%edx
    1c02:	bf 00 00 00 00       	mov    $0x0,%edi
    1c07:	e8 00 00 00 00       	callq  1c0c <run+0x54c>
    1c0c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1c13 <run+0x553>
    1c13:	ba 43 00 00 00       	mov    $0x43,%edx
    1c18:	bf 00 00 00 00       	mov    $0x0,%edi
    1c1d:	e8 00 00 00 00       	callq  1c22 <run+0x562>
    1c22:	ba 44 00 00 00       	mov    $0x44,%edx
    1c27:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c2c:	bf 00 00 00 00       	mov    $0x0,%edi
    1c31:	e8 00 00 00 00       	callq  1c36 <run+0x576>
    1c36:	ba 45 00 00 00       	mov    $0x45,%edx
    1c3b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c40:	bf 00 00 00 00       	mov    $0x0,%edi
    1c45:	e8 00 00 00 00       	callq  1c4a <run+0x58a>
    1c4a:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1c51 <run+0x591>
    1c51:	ba 46 00 00 00       	mov    $0x46,%edx
    1c56:	bf 00 00 00 00       	mov    $0x0,%edi
    1c5b:	e8 00 00 00 00       	callq  1c60 <run+0x5a0>
    1c60:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1c67 <run+0x5a7>
    1c67:	ba 47 00 00 00       	mov    $0x47,%edx
    1c6c:	bf 00 00 00 00       	mov    $0x0,%edi
    1c71:	e8 00 00 00 00       	callq  1c76 <run+0x5b6>
    1c76:	ba 48 00 00 00       	mov    $0x48,%edx
    1c7b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c80:	bf 00 00 00 00       	mov    $0x0,%edi
    1c85:	e8 00 00 00 00       	callq  1c8a <run+0x5ca>
    1c8a:	ba 49 00 00 00       	mov    $0x49,%edx
    1c8f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c94:	bf 00 00 00 00       	mov    $0x0,%edi
    1c99:	e8 00 00 00 00       	callq  1c9e <run+0x5de>
    1c9e:	ba 4a 00 00 00       	mov    $0x4a,%edx
    1ca3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ca8:	bf 00 00 00 00       	mov    $0x0,%edi
    1cad:	e8 00 00 00 00       	callq  1cb2 <run+0x5f2>
    1cb2:	ba 4b 00 00 00       	mov    $0x4b,%edx
    1cb7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1cbc:	bf 00 00 00 00       	mov    $0x0,%edi
    1cc1:	e8 00 00 00 00       	callq  1cc6 <run+0x606>
    1cc6:	ba 4c 00 00 00       	mov    $0x4c,%edx
    1ccb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1cd0:	bf 00 00 00 00       	mov    $0x0,%edi
    1cd5:	e8 00 00 00 00       	callq  1cda <run+0x61a>
    1cda:	ba 4d 00 00 00       	mov    $0x4d,%edx
    1cdf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ce4:	bf 00 00 00 00       	mov    $0x0,%edi
    1ce9:	e8 00 00 00 00       	callq  1cee <run+0x62e>
    1cee:	ba 4e 00 00 00       	mov    $0x4e,%edx
    1cf3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1cf8:	bf 00 00 00 00       	mov    $0x0,%edi
    1cfd:	e8 00 00 00 00       	callq  1d02 <run+0x642>
    1d02:	ba 4f 00 00 00       	mov    $0x4f,%edx
    1d07:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d0c:	bf 00 00 00 00       	mov    $0x0,%edi
    1d11:	e8 00 00 00 00       	callq  1d16 <run+0x656>
    1d16:	ba 50 00 00 00       	mov    $0x50,%edx
    1d1b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d20:	bf 00 00 00 00       	mov    $0x0,%edi
    1d25:	e8 00 00 00 00       	callq  1d2a <run+0x66a>
    1d2a:	ba 51 00 00 00       	mov    $0x51,%edx
    1d2f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d34:	bf 00 00 00 00       	mov    $0x0,%edi
    1d39:	e8 00 00 00 00       	callq  1d3e <run+0x67e>
    1d3e:	ba 52 00 00 00       	mov    $0x52,%edx
    1d43:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d48:	bf 00 00 00 00       	mov    $0x0,%edi
    1d4d:	e8 00 00 00 00       	callq  1d52 <run+0x692>
    1d52:	ba 53 00 00 00       	mov    $0x53,%edx
    1d57:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d5c:	bf 00 00 00 00       	mov    $0x0,%edi
    1d61:	e8 00 00 00 00       	callq  1d66 <run+0x6a6>
    1d66:	ba 54 00 00 00       	mov    $0x54,%edx
    1d6b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d70:	bf 00 00 00 00       	mov    $0x0,%edi
    1d75:	e8 00 00 00 00       	callq  1d7a <run+0x6ba>
    1d7a:	ba 55 00 00 00       	mov    $0x55,%edx
    1d7f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d84:	bf 00 00 00 00       	mov    $0x0,%edi
    1d89:	e8 00 00 00 00       	callq  1d8e <run+0x6ce>
    1d8e:	ba 56 00 00 00       	mov    $0x56,%edx
    1d93:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d98:	bf 00 00 00 00       	mov    $0x0,%edi
    1d9d:	e8 00 00 00 00       	callq  1da2 <run+0x6e2>
    1da2:	ba 57 00 00 00       	mov    $0x57,%edx
    1da7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1dac:	bf 00 00 00 00       	mov    $0x0,%edi
    1db1:	e8 00 00 00 00       	callq  1db6 <run+0x6f6>
    1db6:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1dbd <run+0x6fd>
    1dbd:	ba 58 00 00 00       	mov    $0x58,%edx
    1dc2:	bf 00 00 00 00       	mov    $0x0,%edi
    1dc7:	e8 00 00 00 00       	callq  1dcc <run+0x70c>
    1dcc:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1dd3 <run+0x713>
    1dd3:	ba 59 00 00 00       	mov    $0x59,%edx
    1dd8:	bf 00 00 00 00       	mov    $0x0,%edi
    1ddd:	e8 00 00 00 00       	callq  1de2 <run+0x722>
    1de2:	ba 5a 00 00 00       	mov    $0x5a,%edx
    1de7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1dec:	bf 00 00 00 00       	mov    $0x0,%edi
    1df1:	e8 00 00 00 00       	callq  1df6 <run+0x736>
    1df6:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1dfd <run+0x73d>
    1dfd:	ba 5b 00 00 00       	mov    $0x5b,%edx
    1e02:	bf 00 00 00 00       	mov    $0x0,%edi
    1e07:	e8 00 00 00 00       	callq  1e0c <run+0x74c>
    1e0c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1e13 <run+0x753>
    1e13:	ba 5c 00 00 00       	mov    $0x5c,%edx
    1e18:	bf 00 00 00 00       	mov    $0x0,%edi
    1e1d:	e8 00 00 00 00       	callq  1e22 <run+0x762>
    1e22:	ba 5d 00 00 00       	mov    $0x5d,%edx
    1e27:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e2c:	bf 00 00 00 00       	mov    $0x0,%edi
    1e31:	e8 00 00 00 00       	callq  1e36 <run+0x776>
    1e36:	ba 5e 00 00 00       	mov    $0x5e,%edx
    1e3b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e40:	bf 00 00 00 00       	mov    $0x0,%edi
    1e45:	e8 00 00 00 00       	callq  1e4a <run+0x78a>
    1e4a:	ba 5f 00 00 00       	mov    $0x5f,%edx
    1e4f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e54:	bf 00 00 00 00       	mov    $0x0,%edi
    1e59:	e8 00 00 00 00       	callq  1e5e <run+0x79e>
    1e5e:	ba 60 00 00 00       	mov    $0x60,%edx
    1e63:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e68:	bf 00 00 00 00       	mov    $0x0,%edi
    1e6d:	e8 00 00 00 00       	callq  1e72 <run+0x7b2>
    1e72:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1e79 <run+0x7b9>
    1e79:	ba 61 00 00 00       	mov    $0x61,%edx
    1e7e:	bf 00 00 00 00       	mov    $0x0,%edi
    1e83:	e8 00 00 00 00       	callq  1e88 <run+0x7c8>
    1e88:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1e8f <run+0x7cf>
    1e8f:	ba 62 00 00 00       	mov    $0x62,%edx
    1e94:	bf 00 00 00 00       	mov    $0x0,%edi
    1e99:	e8 00 00 00 00       	callq  1e9e <run+0x7de>
    1e9e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ea5 <run+0x7e5>
    1ea5:	ba 63 00 00 00       	mov    $0x63,%edx
    1eaa:	bf 00 00 00 00       	mov    $0x0,%edi
    1eaf:	e8 00 00 00 00       	callq  1eb4 <run+0x7f4>
    1eb4:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ebb <run+0x7fb>
    1ebb:	ba 64 00 00 00       	mov    $0x64,%edx
    1ec0:	bf 00 00 00 00       	mov    $0x0,%edi
    1ec5:	e8 00 00 00 00       	callq  1eca <run+0x80a>
    1eca:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ed1 <run+0x811>
    1ed1:	ba 65 00 00 00       	mov    $0x65,%edx
    1ed6:	bf 00 00 00 00       	mov    $0x0,%edi
    1edb:	e8 00 00 00 00       	callq  1ee0 <run+0x820>
    1ee0:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ee7 <run+0x827>
    1ee7:	ba 66 00 00 00       	mov    $0x66,%edx
    1eec:	bf 00 00 00 00       	mov    $0x0,%edi
    1ef1:	e8 00 00 00 00       	callq  1ef6 <run+0x836>
    1ef6:	ba 67 00 00 00       	mov    $0x67,%edx
    1efb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f00:	bf 00 00 00 00       	mov    $0x0,%edi
    1f05:	e8 00 00 00 00       	callq  1f0a <run+0x84a>
    1f0a:	ba 68 00 00 00       	mov    $0x68,%edx
    1f0f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f14:	bf 00 00 00 00       	mov    $0x0,%edi
    1f19:	e8 00 00 00 00       	callq  1f1e <run+0x85e>
    1f1e:	ba 69 00 00 00       	mov    $0x69,%edx
    1f23:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f28:	bf 00 00 00 00       	mov    $0x0,%edi
    1f2d:	e8 00 00 00 00       	callq  1f32 <run+0x872>
    1f32:	ba 6a 00 00 00       	mov    $0x6a,%edx
    1f37:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f3c:	bf 00 00 00 00       	mov    $0x0,%edi
    1f41:	e8 00 00 00 00       	callq  1f46 <run+0x886>
    1f46:	ba 6b 00 00 00       	mov    $0x6b,%edx
    1f4b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f50:	bf 00 00 00 00       	mov    $0x0,%edi
    1f55:	e8 00 00 00 00       	callq  1f5a <run+0x89a>
    1f5a:	ba 6c 00 00 00       	mov    $0x6c,%edx
    1f5f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f64:	bf 00 00 00 00       	mov    $0x0,%edi
    1f69:	e8 00 00 00 00       	callq  1f6e <run+0x8ae>
    1f6e:	ba 6d 00 00 00       	mov    $0x6d,%edx
    1f73:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f78:	bf 00 00 00 00       	mov    $0x0,%edi
    1f7d:	e8 00 00 00 00       	callq  1f82 <run+0x8c2>
    1f82:	ba 6e 00 00 00       	mov    $0x6e,%edx
    1f87:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f8c:	bf 00 00 00 00       	mov    $0x0,%edi
    1f91:	e8 00 00 00 00       	callq  1f96 <run+0x8d6>
    1f96:	ba 6f 00 00 00       	mov    $0x6f,%edx
    1f9b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fa0:	bf 00 00 00 00       	mov    $0x0,%edi
    1fa5:	e8 00 00 00 00       	callq  1faa <run+0x8ea>
    1faa:	ba 70 00 00 00       	mov    $0x70,%edx
    1faf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fb4:	bf 00 00 00 00       	mov    $0x0,%edi
    1fb9:	e8 00 00 00 00       	callq  1fbe <run+0x8fe>
    1fbe:	ba 71 00 00 00       	mov    $0x71,%edx
    1fc3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fc8:	bf 00 00 00 00       	mov    $0x0,%edi
    1fcd:	48 83 c4 08          	add    $0x8,%rsp
    1fd1:	e9 00 00 00 00       	jmpq   1fd6 <run+0x916>
    1fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1fdd:	00 00 00 
    1fe0:	bf 00 00 00 00       	mov    $0x0,%edi
    1fe5:	e8 00 00 00 00       	callq  1fea <run+0x92a>
    1fea:	85 c0                	test   %eax,%eax
    1fec:	0f 84 df f6 ff ff    	je     16d1 <run+0x11>
    1ff2:	bf 00 00 00 00       	mov    $0x0,%edi
    1ff7:	48 c7 05 00 00 00 00 	movq   $0x70012c,0x0(%rip)        # 2002 <run+0x942>
    1ffe:	2c 01 70 00 
    2002:	e8 00 00 00 00       	callq  2007 <run+0x947>
    2007:	e9 c5 f6 ff ff       	jmpq   16d1 <run+0x11>
