
regbits.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <zero_reg()>:
       0:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
       7:	00 00 00 00 
       b:	c3                   	retq   
       c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000010 <zero_array()>:
      10:	c7 04 25 2c 01 70 00 	movl   $0x0,0x70012c
      17:	00 00 00 00 
      1b:	c3                   	retq   
      1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000020 <set_singl_bits_operator()>:
      20:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      27:	83 c8 40             	or     $0x40,%eax
      2a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      31:	c3                   	retq   
      32:	0f 1f 40 00          	nopl   0x0(%rax)
      36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      3d:	00 00 00 

0000000000000040 <set_singl_bits_method()>:
      40:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      47:	83 c8 40             	or     $0x40,%eax
      4a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      51:	c3                   	retq   
      52:	0f 1f 40 00          	nopl   0x0(%rax)
      56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      5d:	00 00 00 

0000000000000060 <clr_singl_bits_operator()>:
      60:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      67:	83 e0 bf             	and    $0xffffffbf,%eax
      6a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      71:	c3                   	retq   
      72:	0f 1f 40 00          	nopl   0x0(%rax)
      76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      7d:	00 00 00 

0000000000000080 <clr_singl_bits_method()>:
      80:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      87:	83 e0 bf             	and    $0xffffffbf,%eax
      8a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      91:	c3                   	retq   
      92:	0f 1f 40 00          	nopl   0x0(%rax)
      96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      9d:	00 00 00 

00000000000000a0 <set_singl_mskd_operator()>:
      a0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      a7:	83 c8 02             	or     $0x2,%eax
      aa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      b1:	c3                   	retq   
      b2:	0f 1f 40 00          	nopl   0x0(%rax)
      b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      bd:	00 00 00 

00000000000000c0 <set_singl_mskd_method()>:
      c0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      c7:	83 c8 02             	or     $0x2,%eax
      ca:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      d1:	c3                   	retq   
      d2:	0f 1f 40 00          	nopl   0x0(%rax)
      d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      dd:	00 00 00 

00000000000000e0 <clr_singl_mskd_operator()>:
      e0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
      e7:	83 e0 fd             	and    $0xfffffffd,%eax
      ea:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
      f1:	c3                   	retq   
      f2:	0f 1f 40 00          	nopl   0x0(%rax)
      f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      fd:	00 00 00 

0000000000000100 <clr_singl_mskd_method()>:
     100:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     107:	83 e0 fd             	and    $0xfffffffd,%eax
     10a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     111:	c3                   	retq   
     112:	0f 1f 40 00          	nopl   0x0(%rax)
     116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     11d:	00 00 00 

0000000000000120 <equ_singl_bits_operator()>:
     120:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     127:	40 00 00 00 
     12b:	c3                   	retq   
     12c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000130 <equ_singl_bits_method()>:
     130:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     137:	40 00 00 00 
     13b:	c3                   	retq   
     13c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000140 <equ_singl_mskd_operator()>:
     140:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     147:	02 00 00 00 
     14b:	c3                   	retq   
     14c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000150 <equ_singl_mskd_method()>:
     150:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     157:	02 00 00 00 
     15b:	c3                   	retq   
     15c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000160 <flp_singl_bits_operator()>:
     160:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     167:	83 f0 40             	xor    $0x40,%eax
     16a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     171:	c3                   	retq   
     172:	0f 1f 40 00          	nopl   0x0(%rax)
     176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     17d:	00 00 00 

0000000000000180 <flp_singl_bits_method()>:
     180:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     187:	83 f0 40             	xor    $0x40,%eax
     18a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     191:	c3                   	retq   
     192:	0f 1f 40 00          	nopl   0x0(%rax)
     196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     19d:	00 00 00 

00000000000001a0 <flp_singl_mskd_operator()>:
     1a0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     1a7:	83 f0 02             	xor    $0x2,%eax
     1aa:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     1b1:	c3                   	retq   
     1b2:	0f 1f 40 00          	nopl   0x0(%rax)
     1b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1bd:	00 00 00 

00000000000001c0 <flp_singl_mskd_method()>:
     1c0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     1c7:	83 f0 02             	xor    $0x2,%eax
     1ca:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     1d1:	c3                   	retq   
     1d2:	0f 1f 40 00          	nopl   0x0(%rax)
     1d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1dd:	00 00 00 

00000000000001e0 <ins_singl_mskd_operator()>:
     1e0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     1e7:	83 e0 f9             	and    $0xfffffff9,%eax
     1ea:	83 c8 04             	or     $0x4,%eax
     1ed:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     1f4:	c3                   	retq   
     1f5:	90                   	nop
     1f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1fd:	00 00 00 

0000000000000200 <ins_singl_mskd_method()>:
     200:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     207:	83 e0 f9             	and    $0xfffffff9,%eax
     20a:	83 c8 04             	or     $0x4,%eax
     20d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     214:	c3                   	retq   
     215:	90                   	nop
     216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     21d:	00 00 00 

0000000000000220 <set_multi_bits_operator()>:
     220:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     227:	83 c8 21             	or     $0x21,%eax
     22a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     231:	c3                   	retq   
     232:	0f 1f 40 00          	nopl   0x0(%rax)
     236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     23d:	00 00 00 

0000000000000240 <set_multi_bits_method()>:
     240:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     247:	83 c8 21             	or     $0x21,%eax
     24a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     251:	c3                   	retq   
     252:	0f 1f 40 00          	nopl   0x0(%rax)
     256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     25d:	00 00 00 

0000000000000260 <ins_multi_mskd_operator()>:
     260:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     267:	25 79 f0 ff ff       	and    $0xfffff079,%eax
     26c:	0d 82 01 00 00       	or     $0x182,%eax
     271:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     278:	c3                   	retq   
     279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000280 <ins_multi_mskd_method()>:
     280:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     287:	25 79 f0 ff ff       	and    $0xfffff079,%eax
     28c:	0d 82 01 00 00       	or     $0x182,%eax
     291:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     298:	c3                   	retq   
     299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000002a0 <equ_multi_bits_operator()>:
     2a0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
     2a7:	60 00 00 00 
     2ab:	c3                   	retq   
     2ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002b0 <equ_multi_bits_method()>:
     2b0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
     2b7:	60 00 00 00 
     2bb:	c3                   	retq   
     2bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002c0 <equ_multi_mskd_operator()>:
     2c0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
     2c7:	08 03 00 00 
     2cb:	c3                   	retq   
     2cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002d0 <equ_multi_mskd_method()>:
     2d0:	c7 04 25 c4 02 70 00 	movl   $0x308,0x7002c4
     2d7:	08 03 00 00 
     2db:	c3                   	retq   
     2dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002e0 <equ_bits_mskd_operator()>:
     2e0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     2e7:	22 00 00 00 
     2eb:	c3                   	retq   
     2ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002f0 <equ_bits_mskd_method()>:
     2f0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     2f7:	22 00 00 00 
     2fb:	c3                   	retq   
     2fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000300 <equ_mskd_bits_operator()>:
     300:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
     307:	44 00 00 00 
     30b:	c3                   	retq   
     30c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000310 <equ_mskd_bits_method()>:
     310:	c7 04 25 c4 02 70 00 	movl   $0x44,0x7002c4
     317:	44 00 00 00 
     31b:	c3                   	retq   
     31c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000320 <equ_bits_var()>:
     320:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     327:	40 00 00 00 
     32b:	c7 04 25 c4 02 70 00 	movl   $0x1,0x7002c4
     332:	01 00 00 00 
     336:	c3                   	retq   
     337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     33e:	00 00 

0000000000000340 <equ_mskd_var()>:
     340:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     347:	02 00 00 00 
     34b:	c7 04 25 c4 02 70 00 	movl   $0x180,0x7002c4
     352:	80 01 00 00 
     356:	c3                   	retq   
     357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     35e:	00 00 

0000000000000360 <cmp_equ_zero()>:
     360:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
     367:	00 00 00 00 
     36b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     372:	85 c0                	test   %eax,%eax
     374:	74 12                	je     388 <cmp_equ_zero()+0x28>
     376:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     37d:	00 00 00 22 
     381:	c3                   	retq   
     382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     388:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
     38f:	00 00 00 3a 
     393:	c3                   	retq   
     394:	66 90                	xchg   %ax,%ax
     396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     39d:	00 00 00 

00000000000003a0 <cmp_neq_zero()>:
     3a0:	c7 04 25 c4 02 70 00 	movl   $0x0,0x7002c4
     3a7:	00 00 00 00 
     3ab:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     3b2:	85 c0                	test   %eax,%eax
     3b4:	75 12                	jne    3c8 <cmp_neq_zero()+0x28>
     3b6:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     3bd:	20 00 00 00 
     3c1:	c3                   	retq   
     3c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     3c8:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     3cf:	04 00 00 00 
     3d3:	c3                   	retq   
     3d4:	66 90                	xchg   %ax,%ax
     3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     3dd:	00 00 00 

00000000000003e0 <cmp_equ_bits()>:
     3e0:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     3e7:	40 00 00 00 
     3eb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     3f2:	a8 40                	test   $0x40,%al
     3f4:	75 12                	jne    408 <cmp_equ_bits()+0x28>
     3f6:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
     3fd:	00 00 00 1a 
     401:	c3                   	retq   
     402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     408:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     40f:	00 00 00 16 
     413:	c3                   	retq   
     414:	66 90                	xchg   %ax,%ax
     416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     41d:	00 00 00 

0000000000000420 <cmp_neq_bits()>:
     420:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     427:	40 00 00 00 
     42b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     432:	a8 40                	test   $0x40,%al
     434:	75 12                	jne    448 <cmp_neq_bits()+0x28>
     436:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     43d:	02 00 00 00 
     441:	c3                   	retq   
     442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     448:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     44f:	20 00 00 00 
     453:	c3                   	retq   
     454:	66 90                	xchg   %ax,%ax
     456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     45d:	00 00 00 

0000000000000460 <cmp_equ_multi_bits()>:
     460:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
     467:	60 00 00 00 
     46b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     472:	83 e0 60             	and    $0x60,%eax
     475:	83 f8 60             	cmp    $0x60,%eax
     478:	74 16                	je     490 <cmp_equ_multi_bits()+0x30>
     47a:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     481:	00 00 00 2e 
     485:	c3                   	retq   
     486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     48d:	00 00 00 
     490:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     497:	00 00 00 22 
     49b:	c3                   	retq   
     49c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000004a0 <cmp_neq_multi_bits()>:
     4a0:	c7 04 25 c4 02 70 00 	movl   $0x60,0x7002c4
     4a7:	60 00 00 00 
     4ab:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     4b2:	83 e0 60             	and    $0x60,%eax
     4b5:	83 f8 60             	cmp    $0x60,%eax
     4b8:	74 16                	je     4d0 <cmp_neq_multi_bits()+0x30>
     4ba:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
     4c1:	00 00 00 3a 
     4c5:	c3                   	retq   
     4c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     4cd:	00 00 00 
     4d0:	c7 04 25 24 02 70 00 	movl   $0x3e000000,0x700224
     4d7:	00 00 00 3e 
     4db:	c3                   	retq   
     4dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000004e0 <cmp_equ_mskd()>:
     4e0:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
     4e7:	00 d0 01 00 
     4eb:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     4f2:	25 00 f0 01 00       	and    $0x1f000,%eax
     4f7:	3d 00 10 01 00       	cmp    $0x11000,%eax
     4fc:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     503:	74 1b                	je     520 <cmp_equ_mskd()+0x40>
     505:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
     50a:	0d 00 00 00 22       	or     $0x22000000,%eax
     50f:	89 04 25 24 02 70 00 	mov    %eax,0x700224
     516:	c3                   	retq   
     517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     51e:	00 00 
     520:	25 ff ff ff c1       	and    $0xc1ffffff,%eax
     525:	0d 00 00 00 0e       	or     $0xe000000,%eax
     52a:	89 04 25 24 02 70 00 	mov    %eax,0x700224
     531:	c3                   	retq   
     532:	0f 1f 40 00          	nopl   0x0(%rax)
     536:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     53d:	00 00 00 

0000000000000540 <cmp_neq_mskd()>:
     540:	c7 04 25 c4 02 70 00 	movl   $0x1d000,0x7002c4
     547:	00 d0 01 00 
     54b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     552:	25 00 f0 01 00       	and    $0x1f000,%eax
     557:	3d 00 10 01 00       	cmp    $0x11000,%eax
     55c:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     563:	74 13                	je     578 <cmp_neq_mskd()+0x38>
     565:	83 e0 f9             	and    $0xfffffff9,%eax
     568:	83 c8 04             	or     $0x4,%eax
     56b:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     572:	c3                   	retq   
     573:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     578:	83 c8 40             	or     $0x40,%eax
     57b:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     582:	c3                   	retq   
     583:	0f 1f 00             	nopl   (%rax)
     586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     58d:	00 00 00 

0000000000000590 <cmp_equ_reg()>:
     590:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     597:	22 00 00 00 
     59b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     5a2:	83 f8 22             	cmp    $0x22,%eax
     5a5:	74 11                	je     5b8 <cmp_equ_reg()+0x28>
     5a7:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     5ae:	00 00 00 2e 
     5b2:	c3                   	retq   
     5b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     5b8:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
     5bf:	00 00 00 2a 
     5c3:	c3                   	retq   
     5c4:	66 90                	xchg   %ax,%ax
     5c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     5cd:	00 00 00 

00000000000005d0 <cmp_neq_reg()>:
     5d0:	c7 04 25 c4 02 70 00 	movl   $0x22,0x7002c4
     5d7:	22 00 00 00 
     5db:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     5e2:	83 f8 22             	cmp    $0x22,%eax
     5e5:	74 11                	je     5f8 <cmp_neq_reg()+0x28>
     5e7:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     5ee:	02 00 00 00 
     5f2:	c3                   	retq   
     5f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     5f8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     5ff:	20 00 00 00 
     603:	c3                   	retq   
     604:	66 90                	xchg   %ax,%ax
     606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     60d:	00 00 00 

0000000000000610 <constexpr_bits_array()>:
     610:	c7 04 25 2c 01 70 00 	movl   $0x6,0x70012c
     617:	06 00 00 00 
     61b:	c7 04 25 a0 01 70 00 	movl   $0x2000,0x7001a0
     622:	00 20 00 00 
     626:	c3                   	retq   
     627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     62e:	00 00 

0000000000000630 <runtime_bits_array()>:
     630:	c7 44 24 fc 03 00 00 	movl   $0x3,-0x4(%rsp)
     637:	00 
     638:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
     63c:	c7 04 85 20 01 70 00 	movl   $0x21,0x700120(,%rax,4)
     643:	21 00 00 00 
     647:	c7 44 24 fc 07 00 00 	movl   $0x7,-0x4(%rsp)
     64e:	00 
     64f:	b8 01 00 00 00       	mov    $0x1,%eax
     654:	8b 4c 24 fc          	mov    -0x4(%rsp),%ecx
     658:	d3 e0                	shl    %cl,%eax
     65a:	89 04 25 a0 01 70 00 	mov    %eax,0x7001a0
     661:	c3                   	retq   
     662:	0f 1f 40 00          	nopl   0x0(%rax)
     666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     66d:	00 00 00 

0000000000000670 <prescaler_low()>:
     670:	c7 04 25 24 02 70 00 	movl   $0x77,0x700224
     677:	77 00 00 00 
     67b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     682:	83 e0 7f             	and    $0x7f,%eax
     685:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
     68c:	c3                   	retq   
     68d:	0f 1f 00             	nopl   (%rax)

0000000000000690 <prescaler_high()>:
     690:	c7 04 25 24 02 70 00 	movl   $0x3a000000,0x700224
     697:	00 00 00 3a 
     69b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     6a2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     6a7:	c1 e8 19             	shr    $0x19,%eax
     6aa:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
     6b1:	c3                   	retq   
     6b2:	0f 1f 40 00          	nopl   0x0(%rax)
     6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     6bd:	00 00 00 

00000000000006c0 <reg_mskd_lss()>:
     6c0:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
     6c7:	00 00 00 36 
     6cb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     6d2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     6d7:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
     6dc:	76 12                	jbe    6f0 <reg_mskd_lss()+0x30>
     6de:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     6e5:	04 00 00 00 
     6e9:	c3                   	retq   
     6ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     6f0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     6f7:	02 00 00 00 
     6fb:	c3                   	retq   
     6fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000700 <reg_mskd_leq()>:
     700:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     707:	00 00 00 2e 
     70b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     712:	25 00 00 00 3e       	and    $0x3e000000,%eax
     717:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
     71c:	77 22                	ja     740 <reg_mskd_leq()+0x40>
     71e:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     725:	25 00 00 00 3e       	and    $0x3e000000,%eax
     72a:	3d 00 00 00 30       	cmp    $0x30000000,%eax
     72f:	77 0f                	ja     740 <reg_mskd_leq()+0x40>
     731:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     738:	02 00 00 00 
     73c:	c3                   	retq   
     73d:	0f 1f 00             	nopl   (%rax)
     740:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     747:	04 00 00 00 
     74b:	c3                   	retq   
     74c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000750 <reg_mskd_gtr()>:
     750:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
     757:	00 00 00 26 
     75b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     762:	25 00 00 00 3e       	and    $0x3e000000,%eax
     767:	3d 00 00 00 24       	cmp    $0x24000000,%eax
     76c:	77 12                	ja     780 <reg_mskd_gtr()+0x30>
     76e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     775:	04 00 00 00 
     779:	c3                   	retq   
     77a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     780:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     787:	02 00 00 00 
     78b:	c3                   	retq   
     78c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000790 <reg_mskd_geq()>:
     790:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     797:	00 00 00 22 
     79b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     7a2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     7a7:	3d ff ff ff 1f       	cmp    $0x1fffffff,%eax
     7ac:	76 22                	jbe    7d0 <reg_mskd_geq()+0x40>
     7ae:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     7b5:	25 00 00 00 3e       	and    $0x3e000000,%eax
     7ba:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
     7bf:	76 0f                	jbe    7d0 <reg_mskd_geq()+0x40>
     7c1:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     7c8:	02 00 00 00 
     7cc:	c3                   	retq   
     7cd:	0f 1f 00             	nopl   (%rax)
     7d0:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     7d7:	04 00 00 00 
     7db:	c3                   	retq   
     7dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000007e0 <pos_cmp_eq()>:
     7e0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     7e7:	02 00 00 00 
     7eb:	c3                   	retq   
     7ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000007f0 <pos_cmp_ne()>:
     7f0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     7f7:	02 00 00 00 
     7fb:	c3                   	retq   
     7fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000800 <bits_extract_eq()>:
     800:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     807:	40 00 00 00 
     80b:	83 3c 25 c4 02 70 00 	cmpl   $0x40,0x7002c4
     812:	40 
     813:	74 13                	je     828 <bits_extract_eq()+0x28>
     815:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     81c:	04 00 00 00 
     820:	c3                   	retq   
     821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     828:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     82f:	02 00 00 00 
     833:	c3                   	retq   
     834:	66 90                	xchg   %ax,%ax
     836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     83d:	00 00 00 

0000000000000840 <mskd_extract_eq()>:
     840:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     847:	02 00 00 00 
     84b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     852:	83 f8 02             	cmp    $0x2,%eax
     855:	74 11                	je     868 <mskd_extract_eq()+0x28>
     857:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     85e:	40 00 00 00 
     862:	c3                   	retq   
     863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     868:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     86f:	20 00 00 00 
     873:	c3                   	retq   
     874:	66 90                	xchg   %ax,%ax
     876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     87d:	00 00 00 

0000000000000880 <mskd_extract_ne()>:
     880:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     887:	04 00 00 00 
     88b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     892:	83 f8 04             	cmp    $0x4,%eax
     895:	74 11                	je     8a8 <mskd_extract_ne()+0x28>
     897:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     89e:	20 00 00 00 
     8a2:	c3                   	retq   
     8a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     8a8:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     8af:	40 00 00 00 
     8b3:	c3                   	retq   
     8b4:	66 90                	xchg   %ax,%ax
     8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     8bd:	00 00 00 

00000000000008c0 <mskd_extract_lss()>:
     8c0:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     8c7:	00 00 00 16 
     8cb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     8d2:	3d ff ff ff 17       	cmp    $0x17ffffff,%eax
     8d7:	76 0f                	jbe    8e8 <mskd_extract_lss()+0x28>
     8d9:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     8e0:	40 00 00 00 
     8e4:	c3                   	retq   
     8e5:	0f 1f 00             	nopl   (%rax)
     8e8:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     8ef:	20 00 00 00 
     8f3:	c3                   	retq   
     8f4:	66 90                	xchg   %ax,%ax
     8f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     8fd:	00 00 00 

0000000000000900 <mskd_extract_leq()>:
     900:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     907:	00 00 00 2e 
     90b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     912:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
     917:	77 0f                	ja     928 <mskd_extract_leq()+0x28>
     919:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     920:	20 00 00 00 
     924:	c3                   	retq   
     925:	0f 1f 00             	nopl   (%rax)
     928:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     92f:	40 00 00 00 
     933:	c3                   	retq   
     934:	66 90                	xchg   %ax,%ax
     936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     93d:	00 00 00 

0000000000000940 <mskd_extract_gtr()>:
     940:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
     947:	00 00 00 26 
     94b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     952:	3d 00 00 00 24       	cmp    $0x24000000,%eax
     957:	77 0f                	ja     968 <mskd_extract_gtr()+0x28>
     959:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     960:	40 00 00 00 
     964:	c3                   	retq   
     965:	0f 1f 00             	nopl   (%rax)
     968:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
     96f:	20 00 00 00 
     973:	c3                   	retq   
     974:	66 90                	xchg   %ax,%ax
     976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     97d:	00 00 00 

0000000000000980 <set_bits_global()>:
     980:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     987:	83 c8 40             	or     $0x40,%eax
     98a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     991:	c3                   	retq   
     992:	0f 1f 40 00          	nopl   0x0(%rax)
     996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     99d:	00 00 00 

00000000000009a0 <ins_mskd_global()>:
     9a0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     9a7:	83 e0 f9             	and    $0xfffffff9,%eax
     9aa:	83 c8 02             	or     $0x2,%eax
     9ad:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     9b4:	c3                   	retq   
     9b5:	90                   	nop
     9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     9bd:	00 00 00 

00000000000009c0 <assign_array_global()>:
     9c0:	c7 04 25 2c 01 70 00 	movl   $0xbd,0x70012c
     9c7:	bd 00 00 00 
     9cb:	c3                   	retq   
     9cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000009d0 <shifted_global()>:
     9d0:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     9d7:	00 00 00 2e 
     9db:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     9e2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     9e7:	c1 e8 19             	shr    $0x19,%eax
     9ea:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
     9f1:	c3                   	retq   
     9f2:	0f 1f 40 00          	nopl   0x0(%rax)
     9f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     9fd:	00 00 00 

0000000000000a00 <assign_register_global()>:
     a00:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     a07:	04 00 00 00 
     a0b:	c3                   	retq   
     a0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000a10 <copy_bits_equ()>:
     a10:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     a17:	40 00 00 00 
     a1b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     a22:	a8 40                	test   $0x40,%al
     a24:	75 12                	jne    a38 <copy_bits_equ()+0x28>
     a26:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     a2d:	04 00 00 00 
     a31:	c3                   	retq   
     a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     a38:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     a3f:	02 00 00 00 
     a43:	c3                   	retq   
     a44:	66 90                	xchg   %ax,%ax
     a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a4d:	00 00 00 

0000000000000a50 <copy_bits_neq()>:
     a50:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
     a57:	40 00 00 00 
     a5b:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     a62:	a8 40                	test   $0x40,%al
     a64:	75 12                	jne    a78 <copy_bits_neq()+0x28>
     a66:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     a6d:	02 00 00 00 
     a71:	c3                   	retq   
     a72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     a78:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     a7f:	04 00 00 00 
     a83:	c3                   	retq   
     a84:	66 90                	xchg   %ax,%ax
     a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a8d:	00 00 00 

0000000000000a90 <copy_mskd_equ()>:
     a90:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     a97:	00 00 00 16 
     a9b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     aa2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     aa7:	3d 00 00 00 16       	cmp    $0x16000000,%eax
     aac:	74 12                	je     ac0 <copy_mskd_equ()+0x30>
     aae:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     ab5:	04 00 00 00 
     ab9:	c3                   	retq   
     aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     ac0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     ac7:	02 00 00 00 
     acb:	c3                   	retq   
     acc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000ad0 <copy_mskd_neq()>:
     ad0:	c7 04 25 24 02 70 00 	movl   $0x1a000000,0x700224
     ad7:	00 00 00 1a 
     adb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     ae2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     ae7:	3d 00 00 00 1a       	cmp    $0x1a000000,%eax
     aec:	74 12                	je     b00 <copy_mskd_neq()+0x30>
     aee:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     af5:	02 00 00 00 
     af9:	c3                   	retq   
     afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b00:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     b07:	04 00 00 00 
     b0b:	c3                   	retq   
     b0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b10 <copy_mskd_lss()>:
     b10:	c7 04 25 24 02 70 00 	movl   $0x36000000,0x700224
     b17:	00 00 00 36 
     b1b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     b22:	25 00 00 00 3e       	and    $0x3e000000,%eax
     b27:	3d ff ff ff 37       	cmp    $0x37ffffff,%eax
     b2c:	76 12                	jbe    b40 <copy_mskd_lss()+0x30>
     b2e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     b35:	04 00 00 00 
     b39:	c3                   	retq   
     b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b40:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     b47:	02 00 00 00 
     b4b:	c3                   	retq   
     b4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b50 <copy_mskd_leq()>:
     b50:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
     b57:	00 00 00 2e 
     b5b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     b62:	25 00 00 00 3e       	and    $0x3e000000,%eax
     b67:	3d 00 00 00 2e       	cmp    $0x2e000000,%eax
     b6c:	77 12                	ja     b80 <copy_mskd_leq()+0x30>
     b6e:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     b75:	02 00 00 00 
     b79:	c3                   	retq   
     b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b80:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     b87:	04 00 00 00 
     b8b:	c3                   	retq   
     b8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b90 <copy_mskd_gtr()>:
     b90:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
     b97:	00 00 00 26 
     b9b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     ba2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     ba7:	3d 00 00 00 24       	cmp    $0x24000000,%eax
     bac:	77 12                	ja     bc0 <copy_mskd_gtr()+0x30>
     bae:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     bb5:	04 00 00 00 
     bb9:	c3                   	retq   
     bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     bc0:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     bc7:	02 00 00 00 
     bcb:	c3                   	retq   
     bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000bd0 <copy_mskd_geq()>:
     bd0:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
     bd7:	00 00 00 22 
     bdb:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     be2:	25 00 00 00 3e       	and    $0x3e000000,%eax
     be7:	3d ff ff ff 21       	cmp    $0x21ffffff,%eax
     bec:	76 12                	jbe    c00 <copy_mskd_geq()+0x30>
     bee:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     bf5:	02 00 00 00 
     bf9:	c3                   	retq   
     bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     c00:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     c07:	04 00 00 00 
     c0b:	c3                   	retq   
     c0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c10 <copy_shifted()>:
     c10:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
     c17:	00 00 00 16 
     c1b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
     c22:	25 00 00 00 3e       	and    $0x3e000000,%eax
     c27:	3d 00 00 00 16       	cmp    $0x16000000,%eax
     c2c:	74 12                	je     c40 <copy_shifted()+0x30>
     c2e:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
     c35:	04 00 00 00 
     c39:	c3                   	retq   
     c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     c40:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
     c47:	02 00 00 00 
     c4b:	c3                   	retq   
     c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c50 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>:
     c50:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
     c57:	66 00 00 00 
     c5b:	c3                   	retq   
     c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c60 <call_pos_ref()>:
     c60:	48 83 ec 18          	sub    $0x18,%rsp
     c64:	48 89 e7             	mov    %rsp,%rdi
     c67:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
     c6e:	e8 dd ff ff ff       	callq  c50 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
     c73:	48 89 e7             	mov    %rsp,%rdi
     c76:	c7 04 24 05 00 00 00 	movl   $0x5,(%rsp)
     c7d:	e8 ce ff ff ff       	callq  c50 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.14]>
     c82:	48 83 c4 18          	add    $0x18,%rsp
     c86:	c3                   	retq   
     c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     c8e:	00 00 

0000000000000c90 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>:
     c90:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
     c97:	77 00 00 00 
     c9b:	c3                   	retq   
     c9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000ca0 <call_pos_ref_global()>:
     ca0:	48 83 ec 18          	sub    $0x18,%rsp
     ca4:	48 89 e7             	mov    %rsp,%rdi
     ca7:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     cae:	e8 dd ff ff ff       	callq  c90 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&) [clone .constprop.15]>
     cb3:	48 83 c4 18          	add    $0x18,%rsp
     cb7:	c3                   	retq   
     cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     cbf:	00 

0000000000000cc0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>:
     cc0:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
     cc7:	33 00 00 00 
     ccb:	c3                   	retq   
     ccc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000cd0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>:
     cd0:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
     cd7:	44 00 00 00 
     cdb:	c3                   	retq   
     cdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000ce0 <call_pos_val()>:
     ce0:	48 83 ec 08          	sub    $0x8,%rsp
     ce4:	bf 05 00 00 00       	mov    $0x5,%edi
     ce9:	e8 d2 ff ff ff       	callq  cc0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.16]>
     cee:	bf 06 00 00 00       	mov    $0x6,%edi
     cf3:	e8 d8 ff ff ff       	callq  cd0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
     cf8:	48 83 c4 08          	add    $0x8,%rsp
     cfc:	c3                   	retq   
     cfd:	0f 1f 00             	nopl   (%rax)

0000000000000d00 <call_pos_val_global()>:
     d00:	48 83 ec 08          	sub    $0x8,%rsp
     d04:	bf 06 00 00 00       	mov    $0x6,%edi
     d09:	e8 c2 ff ff ff       	callq  cd0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>) [clone .constprop.17]>
     d0e:	48 83 c4 08          	add    $0x8,%rsp
     d12:	c3                   	retq   
     d13:	0f 1f 00             	nopl   (%rax)
     d16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     d1d:	00 00 00 

0000000000000d20 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>:
     d20:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     d27:	83 e0 f9             	and    $0xfffffff9,%eax
     d2a:	0b 47 04             	or     0x4(%rdi),%eax
     d2d:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     d34:	c3                   	retq   
     d35:	90                   	nop
     d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     d3d:	00 00 00 

0000000000000d40 <call_mskd_ref_const()>:
     d40:	48 83 ec 18          	sub    $0x18,%rsp
     d44:	48 89 e7             	mov    %rsp,%rdi
     d47:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     d4e:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%rsp)
     d55:	00 
     d56:	e8 c5 ff ff ff       	callq  d20 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
     d5b:	48 83 c4 18          	add    $0x18,%rsp
     d5f:	c3                   	retq   

0000000000000d60 <call_mskd_ref_var()>:
     d60:	48 83 ec 18          	sub    $0x18,%rsp
     d64:	48 89 e7             	mov    %rsp,%rdi
     d67:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     d6e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
     d75:	00 
     d76:	e8 a5 ff ff ff       	callq  d20 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
     d7b:	48 83 c4 18          	add    $0x18,%rsp
     d7f:	c3                   	retq   

0000000000000d80 <call_mskd_ref_global()>:
     d80:	48 83 ec 18          	sub    $0x18,%rsp
     d84:	48 89 e7             	mov    %rsp,%rdi
     d87:	c7 04 24 06 00 00 00 	movl   $0x6,(%rsp)
     d8e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%rsp)
     d95:	00 
     d96:	e8 85 ff ff ff       	callq  d20 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&) [clone .constprop.18]>
     d9b:	48 83 c4 18          	add    $0x18,%rsp
     d9f:	c3                   	retq   

0000000000000da0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>:
     da0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     da7:	83 e0 f9             	and    $0xfffffff9,%eax
     daa:	83 c8 02             	or     $0x2,%eax
     dad:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     db4:	c3                   	retq   
     db5:	90                   	nop
     db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     dbd:	00 00 00 

0000000000000dc0 <call_mskd_val_const()>:
     dc0:	48 83 ec 08          	sub    $0x8,%rsp
     dc4:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
     dcb:	00 00 00 
     dce:	e8 cd ff ff ff       	callq  da0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
     dd3:	48 83 c4 08          	add    $0x8,%rsp
     dd7:	c3                   	retq   
     dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     ddf:	00 

0000000000000de0 <call_mskd_val_var()>:
     de0:	48 83 ec 08          	sub    $0x8,%rsp
     de4:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
     deb:	00 00 00 
     dee:	e8 ad ff ff ff       	callq  da0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
     df3:	48 83 c4 08          	add    $0x8,%rsp
     df7:	c3                   	retq   
     df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     dff:	00 

0000000000000e00 <call_mskd_val_global()>:
     e00:	48 83 ec 08          	sub    $0x8,%rsp
     e04:	48 bf 06 00 00 00 02 	movabs $0x200000006,%rdi
     e0b:	00 00 00 
     e0e:	e8 8d ff ff ff       	callq  da0 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>) [clone .constprop.19]>
     e13:	48 83 c4 08          	add    $0x8,%rsp
     e17:	c3                   	retq   
     e18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     e1f:	00 

0000000000000e20 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>:
     e20:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     e27:	83 c8 40             	or     $0x40,%eax
     e2a:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     e31:	c3                   	retq   
     e32:	0f 1f 40 00          	nopl   0x0(%rax)
     e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e3d:	00 00 00 

0000000000000e40 <call_bits_val_const()>:
     e40:	48 83 ec 08          	sub    $0x8,%rsp
     e44:	bf 40 00 00 00       	mov    $0x40,%edi
     e49:	e8 d2 ff ff ff       	callq  e20 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
     e4e:	48 83 c4 08          	add    $0x8,%rsp
     e52:	c3                   	retq   
     e53:	0f 1f 00             	nopl   (%rax)
     e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e5d:	00 00 00 

0000000000000e60 <call_bits_val_var()>:
     e60:	48 83 ec 08          	sub    $0x8,%rsp
     e64:	bf 40 00 00 00       	mov    $0x40,%edi
     e69:	e8 b2 ff ff ff       	callq  e20 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
     e6e:	48 83 c4 08          	add    $0x8,%rsp
     e72:	c3                   	retq   
     e73:	0f 1f 00             	nopl   (%rax)
     e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e7d:	00 00 00 

0000000000000e80 <call_bits_val_global()>:
     e80:	48 83 ec 08          	sub    $0x8,%rsp
     e84:	bf 40 00 00 00       	mov    $0x40,%edi
     e89:	e8 92 ff ff ff       	callq  e20 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>) [clone .constprop.20]>
     e8e:	48 83 c4 08          	add    $0x8,%rsp
     e92:	c3                   	retq   
     e93:	0f 1f 00             	nopl   (%rax)
     e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e9d:	00 00 00 

0000000000000ea0 <bits_val(regbits::Bits<unsigned int, mcu::Serial::Config>)>:
     ea0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     ea7:	09 c7                	or     %eax,%edi
     ea9:	89 3c 25 c4 02 70 00 	mov    %edi,0x7002c4
     eb0:	c3                   	retq   
     eb1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     ebd:	00 00 00 

0000000000000ec0 <bits_ref(regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
     ec0:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
     ec7:	0b 07                	or     (%rdi),%eax
     ec9:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     ed0:	c3                   	retq   
     ed1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     ed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     edd:	00 00 00 

0000000000000ee0 <call_bits_ref_var()>:
     ee0:	48 83 ec 18          	sub    $0x18,%rsp
     ee4:	48 89 e7             	mov    %rsp,%rdi
     ee7:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
     eee:	e8 00 00 00 00       	callq  ef3 <call_bits_ref_var()+0x13>
     ef3:	48 83 c4 18          	add    $0x18,%rsp
     ef7:	c3                   	retq   
     ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     eff:	00 

0000000000000f00 <call_bits_ref_const()>:
     f00:	48 83 ec 18          	sub    $0x18,%rsp
     f04:	48 89 e7             	mov    %rsp,%rdi
     f07:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
     f0e:	e8 00 00 00 00       	callq  f13 <call_bits_ref_const()+0x13>
     f13:	48 83 c4 18          	add    $0x18,%rsp
     f17:	c3                   	retq   
     f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f1f:	00 

0000000000000f20 <call_bits_ref_global()>:
     f20:	48 83 ec 18          	sub    $0x18,%rsp
     f24:	48 89 e7             	mov    %rsp,%rdi
     f27:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
     f2e:	e8 00 00 00 00       	callq  f33 <call_bits_ref_global()+0x13>
     f33:	48 83 c4 18          	add    $0x18,%rsp
     f37:	c3                   	retq   
     f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f3f:	00 

0000000000000f40 <mskd_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
     f40:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
     f47:	89 f8                	mov    %edi,%eax
     f49:	48 c1 ef 20          	shr    $0x20,%rdi
     f4d:	f7 d0                	not    %eax
     f4f:	21 d0                	and    %edx,%eax
     f51:	09 f8                	or     %edi,%eax
     f53:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     f5a:	c3                   	retq   
     f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000f60 <mskd_ref(regbits::Mskd<unsigned int, mcu::Serial::Config> const&)>:
     f60:	8b 07                	mov    (%rdi),%eax
     f62:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
     f69:	f7 d0                	not    %eax
     f6b:	21 d0                	and    %edx,%eax
     f6d:	0b 47 04             	or     0x4(%rdi),%eax
     f70:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
     f77:	c3                   	retq   
     f78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f7f:	00 

0000000000000f80 <periph_bits(mcu::Serial*)>:
     f80:	8b 47 04             	mov    0x4(%rdi),%eax
     f83:	83 c8 40             	or     $0x40,%eax
     f86:	89 47 04             	mov    %eax,0x4(%rdi)
     f89:	c3                   	retq   
     f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000f90 <call_periph_bits()>:
     f90:	bf c0 02 70 00       	mov    $0x7002c0,%edi
     f95:	eb e9                	jmp    f80 <periph_bits(mcu::Serial*)>
     f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     f9e:	00 00 

0000000000000fa0 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
     fa0:	8b 47 04             	mov    0x4(%rdi),%eax
     fa3:	09 c6                	or     %eax,%esi
     fa5:	89 77 04             	mov    %esi,0x4(%rdi)
     fa8:	c3                   	retq   
     fa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000fb0 <call_periph_bits_val()>:
     fb0:	48 83 ec 08          	sub    $0x8,%rsp
     fb4:	be 40 00 00 00       	mov    $0x40,%esi
     fb9:	bf c0 02 70 00       	mov    $0x7002c0,%edi
     fbe:	e8 00 00 00 00       	callq  fc3 <call_periph_bits_val()+0x13>
     fc3:	48 83 c4 08          	add    $0x8,%rsp
     fc7:	c3                   	retq   
     fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     fcf:	00 

0000000000000fd0 <reg_bits_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config>)>:
     fd0:	8b 07                	mov    (%rdi),%eax
     fd2:	09 c6                	or     %eax,%esi
     fd4:	89 37                	mov    %esi,(%rdi)
     fd6:	c3                   	retq   
     fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     fde:	00 00 

0000000000000fe0 <call_reg_bits_val()>:
     fe0:	48 83 ec 08          	sub    $0x8,%rsp
     fe4:	be 40 00 00 00       	mov    $0x40,%esi
     fe9:	bf c4 02 70 00       	mov    $0x7002c4,%edi
     fee:	e8 00 00 00 00       	callq  ff3 <call_reg_bits_val()+0x13>
     ff3:	48 83 c4 08          	add    $0x8,%rsp
     ff7:	c3                   	retq   
     ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     fff:	00 

0000000000001000 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
    1000:	8b 47 04             	mov    0x4(%rdi),%eax
    1003:	0b 06                	or     (%rsi),%eax
    1005:	89 47 04             	mov    %eax,0x4(%rdi)
    1008:	c3                   	retq   
    1009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001010 <call_periph_bits_ref()>:
    1010:	48 83 ec 18          	sub    $0x18,%rsp
    1014:	bf c0 02 70 00       	mov    $0x7002c0,%edi
    1019:	48 89 e6             	mov    %rsp,%rsi
    101c:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
    1023:	e8 00 00 00 00       	callq  1028 <call_periph_bits_ref()+0x18>
    1028:	48 83 c4 18          	add    $0x18,%rsp
    102c:	c3                   	retq   
    102d:	0f 1f 00             	nopl   (%rax)

0000000000001030 <reg_bits_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Bits<unsigned int, mcu::Serial::Config> const&)>:
    1030:	8b 07                	mov    (%rdi),%eax
    1032:	0b 06                	or     (%rsi),%eax
    1034:	89 07                	mov    %eax,(%rdi)
    1036:	c3                   	retq   
    1037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    103e:	00 00 

0000000000001040 <call_reg_bits_ref()>:
    1040:	48 83 ec 18          	sub    $0x18,%rsp
    1044:	bf c4 02 70 00       	mov    $0x7002c4,%edi
    1049:	48 89 e6             	mov    %rsp,%rsi
    104c:	c7 04 24 40 00 00 00 	movl   $0x40,(%rsp)
    1053:	e8 00 00 00 00       	callq  1058 <call_reg_bits_ref()+0x18>
    1058:	48 83 c4 18          	add    $0x18,%rsp
    105c:	c3                   	retq   
    105d:	0f 1f 00             	nopl   (%rax)

0000000000001060 <periph_mskd(mcu::Serial*)>:
    1060:	8b 47 04             	mov    0x4(%rdi),%eax
    1063:	83 e0 f9             	and    $0xfffffff9,%eax
    1066:	83 c8 02             	or     $0x2,%eax
    1069:	89 47 04             	mov    %eax,0x4(%rdi)
    106c:	c3                   	retq   
    106d:	0f 1f 00             	nopl   (%rax)

0000000000001070 <call_periph_mskd()>:
    1070:	bf c0 02 70 00       	mov    $0x7002c0,%edi
    1075:	eb e9                	jmp    1060 <periph_mskd(mcu::Serial*)>
    1077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    107e:	00 00 

0000000000001080 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1080:	8b 57 04             	mov    0x4(%rdi),%edx
    1083:	89 f0                	mov    %esi,%eax
    1085:	48 c1 ee 20          	shr    $0x20,%rsi
    1089:	f7 d0                	not    %eax
    108b:	21 d0                	and    %edx,%eax
    108d:	09 f0                	or     %esi,%eax
    108f:	89 47 04             	mov    %eax,0x4(%rdi)
    1092:	c3                   	retq   
    1093:	0f 1f 00             	nopl   (%rax)
    1096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    109d:	00 00 00 

00000000000010a0 <call_periph_mskd_val()>:
    10a0:	48 83 ec 08          	sub    $0x8,%rsp
    10a4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    10ab:	00 00 00 
    10ae:	bf c0 02 70 00       	mov    $0x7002c0,%edi
    10b3:	e8 00 00 00 00       	callq  10b8 <call_periph_mskd_val()+0x18>
    10b8:	48 83 c4 08          	add    $0x8,%rsp
    10bc:	c3                   	retq   
    10bd:	0f 1f 00             	nopl   (%rax)

00000000000010c0 <reg_mskd_val(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    10c0:	8b 17                	mov    (%rdi),%edx
    10c2:	89 f0                	mov    %esi,%eax
    10c4:	48 c1 ee 20          	shr    $0x20,%rsi
    10c8:	f7 d0                	not    %eax
    10ca:	21 d0                	and    %edx,%eax
    10cc:	09 f0                	or     %esi,%eax
    10ce:	89 07                	mov    %eax,(%rdi)
    10d0:	c3                   	retq   
    10d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    10d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    10dd:	00 00 00 

00000000000010e0 <call_reg_mskd_val()>:
    10e0:	48 83 ec 08          	sub    $0x8,%rsp
    10e4:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    10eb:	00 00 00 
    10ee:	bf c4 02 70 00       	mov    $0x7002c4,%edi
    10f3:	e8 00 00 00 00       	callq  10f8 <call_reg_mskd_val()+0x18>
    10f8:	48 83 c4 08          	add    $0x8,%rsp
    10fc:	c3                   	retq   
    10fd:	0f 1f 00             	nopl   (%rax)

0000000000001100 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1100:	8b 57 04             	mov    0x4(%rdi),%edx
    1103:	89 f0                	mov    %esi,%eax
    1105:	48 c1 ee 20          	shr    $0x20,%rsi
    1109:	f7 d0                	not    %eax
    110b:	21 d0                	and    %edx,%eax
    110d:	09 f0                	or     %esi,%eax
    110f:	89 47 04             	mov    %eax,0x4(%rdi)
    1112:	c3                   	retq   
    1113:	0f 1f 00             	nopl   (%rax)
    1116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    111d:	00 00 00 

0000000000001120 <call_periph_mskd_ref()>:
    1120:	48 83 ec 08          	sub    $0x8,%rsp
    1124:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    112b:	00 00 00 
    112e:	bf c0 02 70 00       	mov    $0x7002c0,%edi
    1133:	e8 00 00 00 00       	callq  1138 <call_periph_mskd_ref()+0x18>
    1138:	48 83 c4 08          	add    $0x8,%rsp
    113c:	c3                   	retq   
    113d:	0f 1f 00             	nopl   (%rax)

0000000000001140 <reg_mskd_ref(regbits::Reg<unsigned int, mcu::Serial::Config>&, regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1140:	8b 17                	mov    (%rdi),%edx
    1142:	89 f0                	mov    %esi,%eax
    1144:	48 c1 ee 20          	shr    $0x20,%rsi
    1148:	f7 d0                	not    %eax
    114a:	21 d0                	and    %edx,%eax
    114c:	09 f0                	or     %esi,%eax
    114e:	89 07                	mov    %eax,(%rdi)
    1150:	c3                   	retq   
    1151:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    115d:	00 00 00 

0000000000001160 <call_reg_mskd_ref()>:
    1160:	48 83 ec 08          	sub    $0x8,%rsp
    1164:	48 be 06 00 00 00 02 	movabs $0x200000006,%rsi
    116b:	00 00 00 
    116e:	bf c4 02 70 00       	mov    $0x7002c4,%edi
    1173:	e8 00 00 00 00       	callq  1178 <call_reg_mskd_ref()+0x18>
    1178:	48 83 c4 08          	add    $0x8,%rsp
    117c:	c3                   	retq   
    117d:	0f 1f 00             	nopl   (%rax)

0000000000001180 <return_bits()>:
    1180:	b8 20 00 00 00       	mov    $0x20,%eax
    1185:	c3                   	retq   
    1186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    118d:	00 00 00 

0000000000001190 <call_return_bits()>:
    1190:	48 83 ec 08          	sub    $0x8,%rsp
    1194:	e8 00 00 00 00       	callq  1199 <call_return_bits()+0x9>
    1199:	83 f8 20             	cmp    $0x20,%eax
    119c:	74 12                	je     11b0 <call_return_bits()+0x20>
    119e:	c7 04 25 24 02 70 00 	movl   $0x6000000,0x700224
    11a5:	00 00 00 06 
    11a9:	48 83 c4 08          	add    $0x8,%rsp
    11ad:	c3                   	retq   
    11ae:	66 90                	xchg   %ax,%ax
    11b0:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
    11b7:	00 00 00 2a 
    11bb:	48 83 c4 08          	add    $0x8,%rsp
    11bf:	c3                   	retq   

00000000000011c0 <return_mskd()>:
    11c0:	48 b8 18 00 00 00 08 	movabs $0x800000018,%rax
    11c7:	00 00 00 
    11ca:	c3                   	retq   
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <call_return_mskd()>:
    11d0:	48 83 ec 08          	sub    $0x8,%rsp
    11d4:	e8 00 00 00 00       	callq  11d9 <call_return_mskd()+0x9>
    11d9:	83 f8 18             	cmp    $0x18,%eax
    11dc:	74 12                	je     11f0 <call_return_mskd()+0x20>
    11de:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
    11e5:	00 00 00 26 
    11e9:	48 83 c4 08          	add    $0x8,%rsp
    11ed:	c3                   	retq   
    11ee:	66 90                	xchg   %ax,%ax
    11f0:	48 c1 e8 20          	shr    $0x20,%rax
    11f4:	83 f8 08             	cmp    $0x8,%eax
    11f7:	75 e5                	jne    11de <call_return_mskd()+0xe>
    11f9:	c7 04 25 24 02 70 00 	movl   $0x22000000,0x700224
    1200:	00 00 00 22 
    1204:	eb e3                	jmp    11e9 <call_return_mskd()+0x19>
    1206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    120d:	00 00 00 

0000000000001210 <return_reg()>:
    1210:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    1217:	40 00 00 00 
    121b:	b8 c4 02 70 00       	mov    $0x7002c4,%eax
    1220:	c3                   	retq   
    1221:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    122d:	00 00 00 

0000000000001230 <call_return_reg()>:
    1230:	e8 00 00 00 00       	callq  1235 <call_return_reg()+0x5>
    1235:	8b 00                	mov    (%rax),%eax
    1237:	a8 40                	test   $0x40,%al
    1239:	75 15                	jne    1250 <call_return_reg()+0x20>
    123b:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
    1242:	00 00 00 2e 
    1246:	c3                   	retq   
    1247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    124e:	00 00 
    1250:	c7 04 25 24 02 70 00 	movl   $0x1e000000,0x700224
    1257:	00 00 00 1e 
    125b:	c3                   	retq   
    125c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001260 <return_periph()>:
    1260:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    1267:	40 00 00 00 
    126b:	b8 c0 02 70 00       	mov    $0x7002c0,%eax
    1270:	c3                   	retq   
    1271:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    127d:	00 00 00 

0000000000001280 <call_return_periph()>:
    1280:	e8 00 00 00 00       	callq  1285 <call_return_periph()+0x5>
    1285:	8b 40 04             	mov    0x4(%rax),%eax
    1288:	a8 40                	test   $0x40,%al
    128a:	75 14                	jne    12a0 <call_return_periph()+0x20>
    128c:	c7 04 25 24 02 70 00 	movl   $0x2a000000,0x700224
    1293:	00 00 00 2a 
    1297:	c3                   	retq   
    1298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    129f:	00 
    12a0:	c7 04 25 24 02 70 00 	movl   $0x26000000,0x700224
    12a7:	00 00 00 26 
    12ab:	c3                   	retq   
    12ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000012b0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)>:
    12b0:	83 ff 05             	cmp    $0x5,%edi
    12b3:	74 1b                	je     12d0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x20>
    12b5:	83 ff 06             	cmp    $0x6,%edi
    12b8:	74 26                	je     12e0 <pos_val(regbits::Pos<unsigned int, mcu::Serial::Config>)+0x30>
    12ba:	c7 04 25 2c 01 70 00 	movl   $0x55,0x70012c
    12c1:	55 00 00 00 
    12c5:	c3                   	retq   
    12c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    12cd:	00 00 00 
    12d0:	c7 04 25 2c 01 70 00 	movl   $0x33,0x70012c
    12d7:	33 00 00 00 
    12db:	c3                   	retq   
    12dc:	0f 1f 40 00          	nopl   0x0(%rax)
    12e0:	c7 04 25 2c 01 70 00 	movl   $0x44,0x70012c
    12e7:	44 00 00 00 
    12eb:	c3                   	retq   
    12ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000012f0 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)>:
    12f0:	8b 07                	mov    (%rdi),%eax
    12f2:	83 f8 05             	cmp    $0x5,%eax
    12f5:	74 19                	je     1310 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x20>
    12f7:	83 f8 06             	cmp    $0x6,%eax
    12fa:	74 24                	je     1320 <pos_ref(regbits::Pos<unsigned int, mcu::Serial::Config> const&)+0x30>
    12fc:	c7 04 25 2c 01 70 00 	movl   $0x88,0x70012c
    1303:	88 00 00 00 
    1307:	c3                   	retq   
    1308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    130f:	00 
    1310:	c7 04 25 2c 01 70 00 	movl   $0x66,0x70012c
    1317:	66 00 00 00 
    131b:	c3                   	retq   
    131c:	0f 1f 40 00          	nopl   0x0(%rax)
    1320:	c7 04 25 2c 01 70 00 	movl   $0x77,0x70012c
    1327:	77 00 00 00 
    132b:	c3                   	retq   
    132c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001330 <runtime_range_val(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1330:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
    1337:	89 f8                	mov    %edi,%eax
    1339:	48 c1 ef 20          	shr    $0x20,%rdi
    133d:	f7 d0                	not    %eax
    133f:	21 d0                	and    %edx,%eax
    1341:	09 f8                	or     %edi,%eax
    1343:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
    134a:	c3                   	retq   
    134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001350 <call_range_val(unsigned int)>:
    1350:	c1 e7 0c             	shl    $0xc,%edi
    1353:	48 83 ec 08          	sub    $0x8,%rsp
    1357:	48 c1 e7 20          	shl    $0x20,%rdi
    135b:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
    1362:	e8 00 00 00 00       	callq  1367 <call_range_val(unsigned int)+0x17>
    1367:	48 83 c4 08          	add    $0x8,%rsp
    136b:	c3                   	retq   
    136c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001370 <call_range_val_port()>:
    1370:	bf 1f 00 00 00       	mov    $0x1f,%edi
    1375:	eb d9                	jmp    1350 <call_range_val(unsigned int)>
    1377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    137e:	00 00 

0000000000001380 <runtime_range_ref(regbits::Mskd<unsigned int, mcu::Serial::Config>)>:
    1380:	8b 14 25 c4 02 70 00 	mov    0x7002c4,%edx
    1387:	89 f8                	mov    %edi,%eax
    1389:	48 c1 ef 20          	shr    $0x20,%rdi
    138d:	f7 d0                	not    %eax
    138f:	21 d0                	and    %edx,%eax
    1391:	09 f8                	or     %edi,%eax
    1393:	89 04 25 c4 02 70 00 	mov    %eax,0x7002c4
    139a:	c3                   	retq   
    139b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013a0 <call_range_ref(unsigned int)>:
    13a0:	c1 e7 0c             	shl    $0xc,%edi
    13a3:	48 83 ec 08          	sub    $0x8,%rsp
    13a7:	48 c1 e7 20          	shl    $0x20,%rdi
    13ab:	48 81 cf 00 f0 01 00 	or     $0x1f000,%rdi
    13b2:	e8 00 00 00 00       	callq  13b7 <call_range_ref(unsigned int)+0x17>
    13b7:	48 83 c4 08          	add    $0x8,%rsp
    13bb:	c3                   	retq   
    13bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000013c0 <call_range_ref_port()>:
    13c0:	bf 0c 00 00 00       	mov    $0xc,%edi
    13c5:	eb d9                	jmp    13a0 <call_range_ref(unsigned int)>
    13c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    13ce:	00 00 

00000000000013d0 <check_array_range_pass(unsigned int)>:
    13d0:	83 ff 16             	cmp    $0x16,%edi
    13d3:	76 13                	jbe    13e8 <check_array_range_pass(unsigned int)+0x18>
    13d5:	c7 04 25 2c 01 70 00 	movl   $0x83,0x70012c
    13dc:	83 00 00 00 
    13e0:	c3                   	retq   
    13e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13e8:	c7 04 25 2c 01 70 00 	movl   $0x7f,0x70012c
    13ef:	7f 00 00 00 
    13f3:	c3                   	retq   
    13f4:	66 90                	xchg   %ax,%ax
    13f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    13fd:	00 00 00 

0000000000001400 <check_array_range_fail(unsigned int)>:
    1400:	83 ff 16             	cmp    $0x16,%edi
    1403:	76 13                	jbe    1418 <check_array_range_fail(unsigned int)+0x18>
    1405:	c7 04 25 2c 01 70 00 	movl   $0x97,0x70012c
    140c:	97 00 00 00 
    1410:	c3                   	retq   
    1411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1418:	c7 04 25 2c 01 70 00 	movl   $0x95,0x70012c
    141f:	95 00 00 00 
    1423:	c3                   	retq   
    1424:	66 90                	xchg   %ax,%ax
    1426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    142d:	00 00 00 

0000000000001430 <check_bits_range_pass(unsigned int)>:
    1430:	83 ff 0f             	cmp    $0xf,%edi
    1433:	76 13                	jbe    1448 <check_bits_range_pass(unsigned int)+0x18>
    1435:	c7 04 25 2c 01 70 00 	movl   $0xa3,0x70012c
    143c:	a3 00 00 00 
    1440:	c3                   	retq   
    1441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1448:	c7 04 25 2c 01 70 00 	movl   $0x9d,0x70012c
    144f:	9d 00 00 00 
    1453:	c3                   	retq   
    1454:	66 90                	xchg   %ax,%ax
    1456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    145d:	00 00 00 

0000000000001460 <check_bits_range_fail(unsigned int)>:
    1460:	83 ff 0f             	cmp    $0xf,%edi
    1463:	76 13                	jbe    1478 <check_bits_range_fail(unsigned int)+0x18>
    1465:	c7 04 25 2c 01 70 00 	movl   $0xad,0x70012c
    146c:	ad 00 00 00 
    1470:	c3                   	retq   
    1471:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1478:	c7 04 25 2c 01 70 00 	movl   $0xa7,0x70012c
    147f:	a7 00 00 00 
    1483:	c3                   	retq   
    1484:	66 90                	xchg   %ax,%ax
    1486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    148d:	00 00 00 

0000000000001490 <check_mskd_range_pass(unsigned int)>:
    1490:	83 ff 1f             	cmp    $0x1f,%edi
    1493:	76 13                	jbe    14a8 <check_mskd_range_pass(unsigned int)+0x18>
    1495:	c7 04 25 2c 01 70 00 	movl   $0xb5,0x70012c
    149c:	b5 00 00 00 
    14a0:	c3                   	retq   
    14a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    14a8:	c7 04 25 2c 01 70 00 	movl   $0xb3,0x70012c
    14af:	b3 00 00 00 
    14b3:	c3                   	retq   
    14b4:	66 90                	xchg   %ax,%ax
    14b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    14bd:	00 00 00 

00000000000014c0 <check_mskd_range_fail(unsigned int)>:
    14c0:	83 ff 1f             	cmp    $0x1f,%edi
    14c3:	76 13                	jbe    14d8 <check_mskd_range_fail(unsigned int)+0x18>
    14c5:	c7 04 25 2c 01 70 00 	movl   $0xc1,0x70012c
    14cc:	c1 00 00 00 
    14d0:	c3                   	retq   
    14d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    14d8:	c7 04 25 2c 01 70 00 	movl   $0xbf,0x70012c
    14df:	bf 00 00 00 
    14e3:	c3                   	retq   
    14e4:	66 90                	xchg   %ax,%ax
    14e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    14ed:	00 00 00 

00000000000014f0 <bits_extract_ne()>:
    14f0:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
    14f7:	20 00 00 00 
    14fb:	83 3c 25 c4 02 70 00 	cmpl   $0x20,0x7002c4
    1502:	20 
    1503:	74 13                	je     1518 <bits_extract_ne()+0x28>
    1505:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
    150c:	02 00 00 00 
    1510:	c3                   	retq   
    1511:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1518:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
    151f:	04 00 00 00 
    1523:	c3                   	retq   
    1524:	66 90                	xchg   %ax,%ax
    1526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    152d:	00 00 00 

0000000000001530 <mskd_extract_geq()>:
    1530:	c7 04 25 24 02 70 00 	movl   $0x16000000,0x700224
    1537:	00 00 00 16 
    153b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
    1542:	3d ff ff ff 15       	cmp    $0x15ffffff,%eax
    1547:	76 0f                	jbe    1558 <mskd_extract_geq()+0x28>
    1549:	c7 04 25 c4 02 70 00 	movl   $0x20,0x7002c4
    1550:	20 00 00 00 
    1554:	c3                   	retq   
    1555:	0f 1f 00             	nopl   (%rax)
    1558:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    155f:	40 00 00 00 
    1563:	c3                   	retq   
    1564:	66 90                	xchg   %ax,%ax
    1566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    156d:	00 00 00 

0000000000001570 <shifted_val(regbits::Shft<unsigned int, mcu::Timer::Prescale>)>:
    1570:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
    1577:	00 00 00 2e 
    157b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
    1582:	48 89 f9             	mov    %rdi,%rcx
    1585:	48 c1 e9 20          	shr    $0x20,%rcx
    1589:	21 f8                	and    %edi,%eax
    158b:	d3 e8                	shr    %cl,%eax
    158d:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
    1594:	c3                   	retq   
    1595:	90                   	nop
    1596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    159d:	00 00 00 

00000000000015a0 <call_shifted_const_val()>:
    15a0:	48 83 ec 08          	sub    $0x8,%rsp
    15a4:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
    15ab:	00 00 00 
    15ae:	e8 00 00 00 00       	callq  15b3 <call_shifted_const_val()+0x13>
    15b3:	48 83 c4 08          	add    $0x8,%rsp
    15b7:	c3                   	retq   
    15b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    15bf:	00 

00000000000015c0 <call_shifted_var_val()>:
    15c0:	48 83 ec 08          	sub    $0x8,%rsp
    15c4:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
    15cb:	00 00 00 
    15ce:	e8 00 00 00 00       	callq  15d3 <call_shifted_var_val()+0x13>
    15d3:	48 83 c4 08          	add    $0x8,%rsp
    15d7:	c3                   	retq   
    15d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    15df:	00 

00000000000015e0 <call_shifted_global_val()>:
    15e0:	48 83 ec 08          	sub    $0x8,%rsp
    15e4:	48 bf 00 00 00 3e 19 	movabs $0x193e000000,%rdi
    15eb:	00 00 00 
    15ee:	e8 00 00 00 00       	callq  15f3 <call_shifted_global_val()+0x13>
    15f3:	48 83 c4 08          	add    $0x8,%rsp
    15f7:	c3                   	retq   
    15f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    15ff:	00 

0000000000001600 <shifted_ref(regbits::Shft<unsigned int, mcu::Timer::Prescale> const&)>:
    1600:	c7 04 25 24 02 70 00 	movl   $0x2e000000,0x700224
    1607:	00 00 00 2e 
    160b:	8b 04 25 24 02 70 00 	mov    0x700224,%eax
    1612:	23 07                	and    (%rdi),%eax
    1614:	8b 4f 04             	mov    0x4(%rdi),%ecx
    1617:	d3 e8                	shr    %cl,%eax
    1619:	89 04 25 2c 01 70 00 	mov    %eax,0x70012c
    1620:	c3                   	retq   
    1621:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    162d:	00 00 00 

0000000000001630 <call_shifted_const_ref()>:
    1630:	48 83 ec 18          	sub    $0x18,%rsp
    1634:	48 89 e7             	mov    %rsp,%rdi
    1637:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
    163e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
    1645:	00 
    1646:	e8 00 00 00 00       	callq  164b <call_shifted_const_ref()+0x1b>
    164b:	48 83 c4 18          	add    $0x18,%rsp
    164f:	c3                   	retq   

0000000000001650 <call_shifted_var_ref()>:
    1650:	48 83 ec 18          	sub    $0x18,%rsp
    1654:	48 89 e7             	mov    %rsp,%rdi
    1657:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
    165e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
    1665:	00 
    1666:	e8 00 00 00 00       	callq  166b <call_shifted_var_ref()+0x1b>
    166b:	48 83 c4 18          	add    $0x18,%rsp
    166f:	c3                   	retq   

0000000000001670 <call_shifted_global_ref()>:
    1670:	48 83 ec 18          	sub    $0x18,%rsp
    1674:	48 89 e7             	mov    %rsp,%rdi
    1677:	c7 04 24 00 00 00 3e 	movl   $0x3e000000,(%rsp)
    167e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%rsp)
    1685:	00 
    1686:	e8 00 00 00 00       	callq  168b <call_shifted_global_ref()+0x1b>
    168b:	48 83 c4 18          	add    $0x18,%rsp
    168f:	c3                   	retq   

0000000000001690 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)>:
    1690:	83 e7 40             	and    $0x40,%edi
    1693:	75 13                	jne    16a8 <copy_bits_val(regbits::Copy<unsigned int, mcu::Serial::Config>)+0x18>
    1695:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
    169c:	04 00 00 00 
    16a0:	c3                   	retq   
    16a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    16a8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
    16af:	02 00 00 00 
    16b3:	c3                   	retq   
    16b4:	66 90                	xchg   %ax,%ax
    16b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    16bd:	00 00 00 

00000000000016c0 <call_copy_bits_val()>:
    16c0:	48 83 ec 08          	sub    $0x8,%rsp
    16c4:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    16cb:	40 00 00 00 
    16cf:	8b 3c 25 c4 02 70 00 	mov    0x7002c4,%edi
    16d6:	e8 00 00 00 00       	callq  16db <call_copy_bits_val()+0x1b>
    16db:	48 83 c4 08          	add    $0x8,%rsp
    16df:	c3                   	retq   

00000000000016e0 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)>:
    16e0:	f6 07 40             	testb  $0x40,(%rdi)
    16e3:	75 13                	jne    16f8 <copy_bits_ref(regbits::Copy<unsigned int, mcu::Serial::Config> const&)+0x18>
    16e5:	c7 04 25 c4 02 70 00 	movl   $0x4,0x7002c4
    16ec:	04 00 00 00 
    16f0:	c3                   	retq   
    16f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    16f8:	c7 04 25 c4 02 70 00 	movl   $0x2,0x7002c4
    16ff:	02 00 00 00 
    1703:	c3                   	retq   
    1704:	66 90                	xchg   %ax,%ax
    1706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    170d:	00 00 00 

0000000000001710 <call_copy_bits_ref()>:
    1710:	48 83 ec 18          	sub    $0x18,%rsp
    1714:	c7 04 25 c4 02 70 00 	movl   $0x40,0x7002c4
    171b:	40 00 00 00 
    171f:	8b 04 25 c4 02 70 00 	mov    0x7002c4,%eax
    1726:	48 89 e7             	mov    %rsp,%rdi
    1729:	89 04 24             	mov    %eax,(%rsp)
    172c:	e8 00 00 00 00       	callq  1731 <call_copy_bits_ref()+0x21>
    1731:	48 83 c4 18          	add    $0x18,%rsp
    1735:	c3                   	retq   
    1736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    173d:	00 00 00 

0000000000001740 <run>:
    1740:	48 83 ec 08          	sub    $0x8,%rsp
    1744:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 174b <run+0xb>
    174b:	0f 84 2f 09 00 00    	je     2080 <run+0x940>
    1751:	31 d2                	xor    %edx,%edx
    1753:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1758:	bf 00 00 00 00       	mov    $0x0,%edi
    175d:	e8 00 00 00 00       	callq  1762 <run+0x22>
    1762:	ba 01 00 00 00       	mov    $0x1,%edx
    1767:	be c4 02 70 00       	mov    $0x7002c4,%esi
    176c:	bf 00 00 00 00       	mov    $0x0,%edi
    1771:	e8 00 00 00 00       	callq  1776 <run+0x36>
    1776:	ba 02 00 00 00       	mov    $0x2,%edx
    177b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1780:	bf 00 00 00 00       	mov    $0x0,%edi
    1785:	e8 00 00 00 00       	callq  178a <run+0x4a>
    178a:	ba 03 00 00 00       	mov    $0x3,%edx
    178f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1794:	bf 00 00 00 00       	mov    $0x0,%edi
    1799:	e8 00 00 00 00       	callq  179e <run+0x5e>
    179e:	ba 04 00 00 00       	mov    $0x4,%edx
    17a3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17a8:	bf 00 00 00 00       	mov    $0x0,%edi
    17ad:	e8 00 00 00 00       	callq  17b2 <run+0x72>
    17b2:	ba 05 00 00 00       	mov    $0x5,%edx
    17b7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17bc:	bf 00 00 00 00       	mov    $0x0,%edi
    17c1:	e8 00 00 00 00       	callq  17c6 <run+0x86>
    17c6:	ba 06 00 00 00       	mov    $0x6,%edx
    17cb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17d0:	bf 00 00 00 00       	mov    $0x0,%edi
    17d5:	e8 00 00 00 00       	callq  17da <run+0x9a>
    17da:	ba 07 00 00 00       	mov    $0x7,%edx
    17df:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17e4:	bf 00 00 00 00       	mov    $0x0,%edi
    17e9:	e8 00 00 00 00       	callq  17ee <run+0xae>
    17ee:	ba 08 00 00 00       	mov    $0x8,%edx
    17f3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    17f8:	bf 00 00 00 00       	mov    $0x0,%edi
    17fd:	e8 00 00 00 00       	callq  1802 <run+0xc2>
    1802:	ba 09 00 00 00       	mov    $0x9,%edx
    1807:	be c4 02 70 00       	mov    $0x7002c4,%esi
    180c:	bf 00 00 00 00       	mov    $0x0,%edi
    1811:	e8 00 00 00 00       	callq  1816 <run+0xd6>
    1816:	ba 0a 00 00 00       	mov    $0xa,%edx
    181b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1820:	bf 00 00 00 00       	mov    $0x0,%edi
    1825:	e8 00 00 00 00       	callq  182a <run+0xea>
    182a:	ba 0b 00 00 00       	mov    $0xb,%edx
    182f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1834:	bf 00 00 00 00       	mov    $0x0,%edi
    1839:	e8 00 00 00 00       	callq  183e <run+0xfe>
    183e:	ba 0c 00 00 00       	mov    $0xc,%edx
    1843:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1848:	bf 00 00 00 00       	mov    $0x0,%edi
    184d:	e8 00 00 00 00       	callq  1852 <run+0x112>
    1852:	ba 0d 00 00 00       	mov    $0xd,%edx
    1857:	be c4 02 70 00       	mov    $0x7002c4,%esi
    185c:	bf 00 00 00 00       	mov    $0x0,%edi
    1861:	e8 00 00 00 00       	callq  1866 <run+0x126>
    1866:	ba 0e 00 00 00       	mov    $0xe,%edx
    186b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1870:	bf 00 00 00 00       	mov    $0x0,%edi
    1875:	e8 00 00 00 00       	callq  187a <run+0x13a>
    187a:	ba 0f 00 00 00       	mov    $0xf,%edx
    187f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1884:	bf 00 00 00 00       	mov    $0x0,%edi
    1889:	e8 00 00 00 00       	callq  188e <run+0x14e>
    188e:	ba 10 00 00 00       	mov    $0x10,%edx
    1893:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1898:	bf 00 00 00 00       	mov    $0x0,%edi
    189d:	e8 00 00 00 00       	callq  18a2 <run+0x162>
    18a2:	ba 11 00 00 00       	mov    $0x11,%edx
    18a7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18ac:	bf 00 00 00 00       	mov    $0x0,%edi
    18b1:	e8 00 00 00 00       	callq  18b6 <run+0x176>
    18b6:	ba 12 00 00 00       	mov    $0x12,%edx
    18bb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18c0:	bf 00 00 00 00       	mov    $0x0,%edi
    18c5:	e8 00 00 00 00       	callq  18ca <run+0x18a>
    18ca:	ba 13 00 00 00       	mov    $0x13,%edx
    18cf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18d4:	bf 00 00 00 00       	mov    $0x0,%edi
    18d9:	e8 00 00 00 00       	callq  18de <run+0x19e>
    18de:	ba 14 00 00 00       	mov    $0x14,%edx
    18e3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18e8:	bf 00 00 00 00       	mov    $0x0,%edi
    18ed:	e8 00 00 00 00       	callq  18f2 <run+0x1b2>
    18f2:	ba 15 00 00 00       	mov    $0x15,%edx
    18f7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    18fc:	bf 00 00 00 00       	mov    $0x0,%edi
    1901:	e8 00 00 00 00       	callq  1906 <run+0x1c6>
    1906:	ba 16 00 00 00       	mov    $0x16,%edx
    190b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1910:	bf 00 00 00 00       	mov    $0x0,%edi
    1915:	e8 00 00 00 00       	callq  191a <run+0x1da>
    191a:	ba 17 00 00 00       	mov    $0x17,%edx
    191f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1924:	bf 00 00 00 00       	mov    $0x0,%edi
    1929:	e8 00 00 00 00       	callq  192e <run+0x1ee>
    192e:	ba 18 00 00 00       	mov    $0x18,%edx
    1933:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1938:	bf 00 00 00 00       	mov    $0x0,%edi
    193d:	e8 00 00 00 00       	callq  1942 <run+0x202>
    1942:	ba 19 00 00 00       	mov    $0x19,%edx
    1947:	be c4 02 70 00       	mov    $0x7002c4,%esi
    194c:	bf 00 00 00 00       	mov    $0x0,%edi
    1951:	e8 00 00 00 00       	callq  1956 <run+0x216>
    1956:	ba 1a 00 00 00       	mov    $0x1a,%edx
    195b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1960:	bf 00 00 00 00       	mov    $0x0,%edi
    1965:	e8 00 00 00 00       	callq  196a <run+0x22a>
    196a:	ba 1b 00 00 00       	mov    $0x1b,%edx
    196f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1974:	bf 00 00 00 00       	mov    $0x0,%edi
    1979:	e8 00 00 00 00       	callq  197e <run+0x23e>
    197e:	ba 1c 00 00 00       	mov    $0x1c,%edx
    1983:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1988:	bf 00 00 00 00       	mov    $0x0,%edi
    198d:	e8 00 00 00 00       	callq  1992 <run+0x252>
    1992:	ba 1d 00 00 00       	mov    $0x1d,%edx
    1997:	be c4 02 70 00       	mov    $0x7002c4,%esi
    199c:	bf 00 00 00 00       	mov    $0x0,%edi
    19a1:	e8 00 00 00 00       	callq  19a6 <run+0x266>
    19a6:	ba 1e 00 00 00       	mov    $0x1e,%edx
    19ab:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19b0:	bf 00 00 00 00       	mov    $0x0,%edi
    19b5:	e8 00 00 00 00       	callq  19ba <run+0x27a>
    19ba:	ba 1f 00 00 00       	mov    $0x1f,%edx
    19bf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19c4:	bf 00 00 00 00       	mov    $0x0,%edi
    19c9:	e8 00 00 00 00       	callq  19ce <run+0x28e>
    19ce:	ba 20 00 00 00       	mov    $0x20,%edx
    19d3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19d8:	bf 00 00 00 00       	mov    $0x0,%edi
    19dd:	e8 00 00 00 00       	callq  19e2 <run+0x2a2>
    19e2:	ba 21 00 00 00       	mov    $0x21,%edx
    19e7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    19ec:	bf 00 00 00 00       	mov    $0x0,%edi
    19f1:	e8 00 00 00 00       	callq  19f6 <run+0x2b6>
    19f6:	ba 22 00 00 00       	mov    $0x22,%edx
    19fb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a00:	bf 00 00 00 00       	mov    $0x0,%edi
    1a05:	e8 00 00 00 00       	callq  1a0a <run+0x2ca>
    1a0a:	ba 23 00 00 00       	mov    $0x23,%edx
    1a0f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a14:	bf 00 00 00 00       	mov    $0x0,%edi
    1a19:	e8 00 00 00 00       	callq  1a1e <run+0x2de>
    1a1e:	ba 24 00 00 00       	mov    $0x24,%edx
    1a23:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a28:	bf 00 00 00 00       	mov    $0x0,%edi
    1a2d:	e8 00 00 00 00       	callq  1a32 <run+0x2f2>
    1a32:	ba 25 00 00 00       	mov    $0x25,%edx
    1a37:	be 24 02 70 00       	mov    $0x700224,%esi
    1a3c:	bf 00 00 00 00       	mov    $0x0,%edi
    1a41:	e8 00 00 00 00       	callq  1a46 <run+0x306>
    1a46:	ba 26 00 00 00       	mov    $0x26,%edx
    1a4b:	be 24 02 70 00       	mov    $0x700224,%esi
    1a50:	bf 00 00 00 00       	mov    $0x0,%edi
    1a55:	e8 00 00 00 00       	callq  1a5a <run+0x31a>
    1a5a:	ba 27 00 00 00       	mov    $0x27,%edx
    1a5f:	be 24 02 70 00       	mov    $0x700224,%esi
    1a64:	bf 00 00 00 00       	mov    $0x0,%edi
    1a69:	e8 00 00 00 00       	callq  1a6e <run+0x32e>
    1a6e:	ba 28 00 00 00       	mov    $0x28,%edx
    1a73:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a78:	bf 00 00 00 00       	mov    $0x0,%edi
    1a7d:	e8 00 00 00 00       	callq  1a82 <run+0x342>
    1a82:	ba 29 00 00 00       	mov    $0x29,%edx
    1a87:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1a8c:	bf 00 00 00 00       	mov    $0x0,%edi
    1a91:	e8 00 00 00 00       	callq  1a96 <run+0x356>
    1a96:	ba 2a 00 00 00       	mov    $0x2a,%edx
    1a9b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1aa0:	bf 00 00 00 00       	mov    $0x0,%edi
    1aa5:	e8 00 00 00 00       	callq  1aaa <run+0x36a>
    1aaa:	ba 2b 00 00 00       	mov    $0x2b,%edx
    1aaf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ab4:	bf 00 00 00 00       	mov    $0x0,%edi
    1ab9:	e8 00 00 00 00       	callq  1abe <run+0x37e>
    1abe:	ba 2c 00 00 00       	mov    $0x2c,%edx
    1ac3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ac8:	bf 00 00 00 00       	mov    $0x0,%edi
    1acd:	e8 00 00 00 00       	callq  1ad2 <run+0x392>
    1ad2:	ba 2d 00 00 00       	mov    $0x2d,%edx
    1ad7:	be a0 01 70 00       	mov    $0x7001a0,%esi
    1adc:	bf 00 00 00 00       	mov    $0x0,%edi
    1ae1:	e8 00 00 00 00       	callq  1ae6 <run+0x3a6>
    1ae6:	ba 2e 00 00 00       	mov    $0x2e,%edx
    1aeb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1af0:	bf 00 00 00 00       	mov    $0x0,%edi
    1af5:	e8 00 00 00 00       	callq  1afa <run+0x3ba>
    1afa:	ba 2f 00 00 00       	mov    $0x2f,%edx
    1aff:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b04:	bf 00 00 00 00       	mov    $0x0,%edi
    1b09:	e8 00 00 00 00       	callq  1b0e <run+0x3ce>
    1b0e:	ba 30 00 00 00       	mov    $0x30,%edx
    1b13:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b18:	bf 00 00 00 00       	mov    $0x0,%edi
    1b1d:	e8 00 00 00 00       	callq  1b22 <run+0x3e2>
    1b22:	ba 31 00 00 00       	mov    $0x31,%edx
    1b27:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b2c:	bf 00 00 00 00       	mov    $0x0,%edi
    1b31:	e8 00 00 00 00       	callq  1b36 <run+0x3f6>
    1b36:	ba 32 00 00 00       	mov    $0x32,%edx
    1b3b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b40:	bf 00 00 00 00       	mov    $0x0,%edi
    1b45:	e8 00 00 00 00       	callq  1b4a <run+0x40a>
    1b4a:	ba 33 00 00 00       	mov    $0x33,%edx
    1b4f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b54:	bf 00 00 00 00       	mov    $0x0,%edi
    1b59:	e8 00 00 00 00       	callq  1b5e <run+0x41e>
    1b5e:	ba 34 00 00 00       	mov    $0x34,%edx
    1b63:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b68:	bf 00 00 00 00       	mov    $0x0,%edi
    1b6d:	e8 00 00 00 00       	callq  1b72 <run+0x432>
    1b72:	ba 35 00 00 00       	mov    $0x35,%edx
    1b77:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b7c:	bf 00 00 00 00       	mov    $0x0,%edi
    1b81:	e8 00 00 00 00       	callq  1b86 <run+0x446>
    1b86:	ba 36 00 00 00       	mov    $0x36,%edx
    1b8b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1b90:	bf 00 00 00 00       	mov    $0x0,%edi
    1b95:	e8 00 00 00 00       	callq  1b9a <run+0x45a>
    1b9a:	ba 37 00 00 00       	mov    $0x37,%edx
    1b9f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ba4:	bf 00 00 00 00       	mov    $0x0,%edi
    1ba9:	e8 00 00 00 00       	callq  1bae <run+0x46e>
    1bae:	ba 38 00 00 00       	mov    $0x38,%edx
    1bb3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1bb8:	bf 00 00 00 00       	mov    $0x0,%edi
    1bbd:	e8 00 00 00 00       	callq  1bc2 <run+0x482>
    1bc2:	ba 39 00 00 00       	mov    $0x39,%edx
    1bc7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1bcc:	bf 00 00 00 00       	mov    $0x0,%edi
    1bd1:	e8 00 00 00 00       	callq  1bd6 <run+0x496>
    1bd6:	ba 3a 00 00 00       	mov    $0x3a,%edx
    1bdb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1be0:	bf 00 00 00 00       	mov    $0x0,%edi
    1be5:	e8 00 00 00 00       	callq  1bea <run+0x4aa>
    1bea:	ba 3b 00 00 00       	mov    $0x3b,%edx
    1bef:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1bf4:	bf 00 00 00 00       	mov    $0x0,%edi
    1bf9:	e8 00 00 00 00       	callq  1bfe <run+0x4be>
    1bfe:	ba 3c 00 00 00       	mov    $0x3c,%edx
    1c03:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c08:	bf 00 00 00 00       	mov    $0x0,%edi
    1c0d:	e8 00 00 00 00       	callq  1c12 <run+0x4d2>
    1c12:	ba 3d 00 00 00       	mov    $0x3d,%edx
    1c17:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c1c:	bf 00 00 00 00       	mov    $0x0,%edi
    1c21:	e8 00 00 00 00       	callq  1c26 <run+0x4e6>
    1c26:	ba 3e 00 00 00       	mov    $0x3e,%edx
    1c2b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c30:	bf 00 00 00 00       	mov    $0x0,%edi
    1c35:	e8 00 00 00 00       	callq  1c3a <run+0x4fa>
    1c3a:	ba 3f 00 00 00       	mov    $0x3f,%edx
    1c3f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c44:	bf 00 00 00 00       	mov    $0x0,%edi
    1c49:	e8 00 00 00 00       	callq  1c4e <run+0x50e>
    1c4e:	ba 40 00 00 00       	mov    $0x40,%edx
    1c53:	be 24 02 70 00       	mov    $0x700224,%esi
    1c58:	bf 00 00 00 00       	mov    $0x0,%edi
    1c5d:	e8 00 00 00 00       	callq  1c62 <run+0x522>
    1c62:	ba 41 00 00 00       	mov    $0x41,%edx
    1c67:	be 24 02 70 00       	mov    $0x700224,%esi
    1c6c:	bf 00 00 00 00       	mov    $0x0,%edi
    1c71:	e8 00 00 00 00       	callq  1c76 <run+0x536>
    1c76:	ba 42 00 00 00       	mov    $0x42,%edx
    1c7b:	be 24 02 70 00       	mov    $0x700224,%esi
    1c80:	bf 00 00 00 00       	mov    $0x0,%edi
    1c85:	e8 00 00 00 00       	callq  1c8a <run+0x54a>
    1c8a:	ba 43 00 00 00       	mov    $0x43,%edx
    1c8f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1c94:	bf 00 00 00 00       	mov    $0x0,%edi
    1c99:	e8 00 00 00 00       	callq  1c9e <run+0x55e>
    1c9e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ca5 <run+0x565>
    1ca5:	ba 44 00 00 00       	mov    $0x44,%edx
    1caa:	bf 00 00 00 00       	mov    $0x0,%edi
    1caf:	e8 00 00 00 00       	callq  1cb4 <run+0x574>
    1cb4:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1cbb <run+0x57b>
    1cbb:	ba 45 00 00 00       	mov    $0x45,%edx
    1cc0:	bf 00 00 00 00       	mov    $0x0,%edi
    1cc5:	e8 00 00 00 00       	callq  1cca <run+0x58a>
    1cca:	ba 46 00 00 00       	mov    $0x46,%edx
    1ccf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1cd4:	bf 00 00 00 00       	mov    $0x0,%edi
    1cd9:	e8 00 00 00 00       	callq  1cde <run+0x59e>
    1cde:	ba 47 00 00 00       	mov    $0x47,%edx
    1ce3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ce8:	bf 00 00 00 00       	mov    $0x0,%edi
    1ced:	e8 00 00 00 00       	callq  1cf2 <run+0x5b2>
    1cf2:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1cf9 <run+0x5b9>
    1cf9:	ba 48 00 00 00       	mov    $0x48,%edx
    1cfe:	bf 00 00 00 00       	mov    $0x0,%edi
    1d03:	e8 00 00 00 00       	callq  1d08 <run+0x5c8>
    1d08:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1d0f <run+0x5cf>
    1d0f:	ba 49 00 00 00       	mov    $0x49,%edx
    1d14:	bf 00 00 00 00       	mov    $0x0,%edi
    1d19:	e8 00 00 00 00       	callq  1d1e <run+0x5de>
    1d1e:	ba 4a 00 00 00       	mov    $0x4a,%edx
    1d23:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d28:	bf 00 00 00 00       	mov    $0x0,%edi
    1d2d:	e8 00 00 00 00       	callq  1d32 <run+0x5f2>
    1d32:	ba 4b 00 00 00       	mov    $0x4b,%edx
    1d37:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d3c:	bf 00 00 00 00       	mov    $0x0,%edi
    1d41:	e8 00 00 00 00       	callq  1d46 <run+0x606>
    1d46:	ba 4c 00 00 00       	mov    $0x4c,%edx
    1d4b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d50:	bf 00 00 00 00       	mov    $0x0,%edi
    1d55:	e8 00 00 00 00       	callq  1d5a <run+0x61a>
    1d5a:	ba 4d 00 00 00       	mov    $0x4d,%edx
    1d5f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d64:	bf 00 00 00 00       	mov    $0x0,%edi
    1d69:	e8 00 00 00 00       	callq  1d6e <run+0x62e>
    1d6e:	ba 4e 00 00 00       	mov    $0x4e,%edx
    1d73:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d78:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7d:	e8 00 00 00 00       	callq  1d82 <run+0x642>
    1d82:	ba 4f 00 00 00       	mov    $0x4f,%edx
    1d87:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1d8c:	bf 00 00 00 00       	mov    $0x0,%edi
    1d91:	e8 00 00 00 00       	callq  1d96 <run+0x656>
    1d96:	ba 50 00 00 00       	mov    $0x50,%edx
    1d9b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1da0:	bf 00 00 00 00       	mov    $0x0,%edi
    1da5:	e8 00 00 00 00       	callq  1daa <run+0x66a>
    1daa:	ba 51 00 00 00       	mov    $0x51,%edx
    1daf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1db4:	bf 00 00 00 00       	mov    $0x0,%edi
    1db9:	e8 00 00 00 00       	callq  1dbe <run+0x67e>
    1dbe:	ba 52 00 00 00       	mov    $0x52,%edx
    1dc3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1dc8:	bf 00 00 00 00       	mov    $0x0,%edi
    1dcd:	e8 00 00 00 00       	callq  1dd2 <run+0x692>
    1dd2:	ba 53 00 00 00       	mov    $0x53,%edx
    1dd7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ddc:	bf 00 00 00 00       	mov    $0x0,%edi
    1de1:	e8 00 00 00 00       	callq  1de6 <run+0x6a6>
    1de6:	ba 54 00 00 00       	mov    $0x54,%edx
    1deb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1df0:	bf 00 00 00 00       	mov    $0x0,%edi
    1df5:	e8 00 00 00 00       	callq  1dfa <run+0x6ba>
    1dfa:	ba 55 00 00 00       	mov    $0x55,%edx
    1dff:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e04:	bf 00 00 00 00       	mov    $0x0,%edi
    1e09:	e8 00 00 00 00       	callq  1e0e <run+0x6ce>
    1e0e:	ba 56 00 00 00       	mov    $0x56,%edx
    1e13:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e18:	bf 00 00 00 00       	mov    $0x0,%edi
    1e1d:	e8 00 00 00 00       	callq  1e22 <run+0x6e2>
    1e22:	ba 57 00 00 00       	mov    $0x57,%edx
    1e27:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e2c:	bf 00 00 00 00       	mov    $0x0,%edi
    1e31:	e8 00 00 00 00       	callq  1e36 <run+0x6f6>
    1e36:	ba 58 00 00 00       	mov    $0x58,%edx
    1e3b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e40:	bf 00 00 00 00       	mov    $0x0,%edi
    1e45:	e8 00 00 00 00       	callq  1e4a <run+0x70a>
    1e4a:	ba 59 00 00 00       	mov    $0x59,%edx
    1e4f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e54:	bf 00 00 00 00       	mov    $0x0,%edi
    1e59:	e8 00 00 00 00       	callq  1e5e <run+0x71e>
    1e5e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1e65 <run+0x725>
    1e65:	ba 5a 00 00 00       	mov    $0x5a,%edx
    1e6a:	bf 00 00 00 00       	mov    $0x0,%edi
    1e6f:	e8 00 00 00 00       	callq  1e74 <run+0x734>
    1e74:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1e7b <run+0x73b>
    1e7b:	ba 5b 00 00 00       	mov    $0x5b,%edx
    1e80:	bf 00 00 00 00       	mov    $0x0,%edi
    1e85:	e8 00 00 00 00       	callq  1e8a <run+0x74a>
    1e8a:	ba 5c 00 00 00       	mov    $0x5c,%edx
    1e8f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1e94:	bf 00 00 00 00       	mov    $0x0,%edi
    1e99:	e8 00 00 00 00       	callq  1e9e <run+0x75e>
    1e9e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ea5 <run+0x765>
    1ea5:	ba 5d 00 00 00       	mov    $0x5d,%edx
    1eaa:	bf 00 00 00 00       	mov    $0x0,%edi
    1eaf:	e8 00 00 00 00       	callq  1eb4 <run+0x774>
    1eb4:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1ebb <run+0x77b>
    1ebb:	ba 5e 00 00 00       	mov    $0x5e,%edx
    1ec0:	bf 00 00 00 00       	mov    $0x0,%edi
    1ec5:	e8 00 00 00 00       	callq  1eca <run+0x78a>
    1eca:	ba 5f 00 00 00       	mov    $0x5f,%edx
    1ecf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ed4:	bf 00 00 00 00       	mov    $0x0,%edi
    1ed9:	e8 00 00 00 00       	callq  1ede <run+0x79e>
    1ede:	ba 60 00 00 00       	mov    $0x60,%edx
    1ee3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ee8:	bf 00 00 00 00       	mov    $0x0,%edi
    1eed:	e8 00 00 00 00       	callq  1ef2 <run+0x7b2>
    1ef2:	ba 61 00 00 00       	mov    $0x61,%edx
    1ef7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1efc:	bf 00 00 00 00       	mov    $0x0,%edi
    1f01:	e8 00 00 00 00       	callq  1f06 <run+0x7c6>
    1f06:	ba 62 00 00 00       	mov    $0x62,%edx
    1f0b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1f10:	bf 00 00 00 00       	mov    $0x0,%edi
    1f15:	e8 00 00 00 00       	callq  1f1a <run+0x7da>
    1f1a:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1f21 <run+0x7e1>
    1f21:	ba 63 00 00 00       	mov    $0x63,%edx
    1f26:	bf 00 00 00 00       	mov    $0x0,%edi
    1f2b:	e8 00 00 00 00       	callq  1f30 <run+0x7f0>
    1f30:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1f37 <run+0x7f7>
    1f37:	ba 64 00 00 00       	mov    $0x64,%edx
    1f3c:	bf 00 00 00 00       	mov    $0x0,%edi
    1f41:	e8 00 00 00 00       	callq  1f46 <run+0x806>
    1f46:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1f4d <run+0x80d>
    1f4d:	ba 65 00 00 00       	mov    $0x65,%edx
    1f52:	bf 00 00 00 00       	mov    $0x0,%edi
    1f57:	e8 00 00 00 00       	callq  1f5c <run+0x81c>
    1f5c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1f63 <run+0x823>
    1f63:	ba 66 00 00 00       	mov    $0x66,%edx
    1f68:	bf 00 00 00 00       	mov    $0x0,%edi
    1f6d:	e8 00 00 00 00       	callq  1f72 <run+0x832>
    1f72:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1f79 <run+0x839>
    1f79:	ba 67 00 00 00       	mov    $0x67,%edx
    1f7e:	bf 00 00 00 00       	mov    $0x0,%edi
    1f83:	e8 00 00 00 00       	callq  1f88 <run+0x848>
    1f88:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1f8f <run+0x84f>
    1f8f:	ba 68 00 00 00       	mov    $0x68,%edx
    1f94:	bf 00 00 00 00       	mov    $0x0,%edi
    1f99:	e8 00 00 00 00       	callq  1f9e <run+0x85e>
    1f9e:	ba 69 00 00 00       	mov    $0x69,%edx
    1fa3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fa8:	bf 00 00 00 00       	mov    $0x0,%edi
    1fad:	e8 00 00 00 00       	callq  1fb2 <run+0x872>
    1fb2:	ba 6a 00 00 00       	mov    $0x6a,%edx
    1fb7:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fbc:	bf 00 00 00 00       	mov    $0x0,%edi
    1fc1:	e8 00 00 00 00       	callq  1fc6 <run+0x886>
    1fc6:	ba 6b 00 00 00       	mov    $0x6b,%edx
    1fcb:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fd0:	bf 00 00 00 00       	mov    $0x0,%edi
    1fd5:	e8 00 00 00 00       	callq  1fda <run+0x89a>
    1fda:	ba 6c 00 00 00       	mov    $0x6c,%edx
    1fdf:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1fe4:	bf 00 00 00 00       	mov    $0x0,%edi
    1fe9:	e8 00 00 00 00       	callq  1fee <run+0x8ae>
    1fee:	ba 6d 00 00 00       	mov    $0x6d,%edx
    1ff3:	be c4 02 70 00       	mov    $0x7002c4,%esi
    1ff8:	bf 00 00 00 00       	mov    $0x0,%edi
    1ffd:	e8 00 00 00 00       	callq  2002 <run+0x8c2>
    2002:	ba 6e 00 00 00       	mov    $0x6e,%edx
    2007:	be c4 02 70 00       	mov    $0x7002c4,%esi
    200c:	bf 00 00 00 00       	mov    $0x0,%edi
    2011:	e8 00 00 00 00       	callq  2016 <run+0x8d6>
    2016:	ba 6f 00 00 00       	mov    $0x6f,%edx
    201b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    2020:	bf 00 00 00 00       	mov    $0x0,%edi
    2025:	e8 00 00 00 00       	callq  202a <run+0x8ea>
    202a:	ba 70 00 00 00       	mov    $0x70,%edx
    202f:	be c4 02 70 00       	mov    $0x7002c4,%esi
    2034:	bf 00 00 00 00       	mov    $0x0,%edi
    2039:	e8 00 00 00 00       	callq  203e <run+0x8fe>
    203e:	ba 71 00 00 00       	mov    $0x71,%edx
    2043:	be c4 02 70 00       	mov    $0x7002c4,%esi
    2048:	bf 00 00 00 00       	mov    $0x0,%edi
    204d:	e8 00 00 00 00       	callq  2052 <run+0x912>
    2052:	ba 72 00 00 00       	mov    $0x72,%edx
    2057:	be c4 02 70 00       	mov    $0x7002c4,%esi
    205c:	bf 00 00 00 00       	mov    $0x0,%edi
    2061:	e8 00 00 00 00       	callq  2066 <run+0x926>
    2066:	ba 73 00 00 00       	mov    $0x73,%edx
    206b:	be c4 02 70 00       	mov    $0x7002c4,%esi
    2070:	bf 00 00 00 00       	mov    $0x0,%edi
    2075:	48 83 c4 08          	add    $0x8,%rsp
    2079:	e9 00 00 00 00       	jmpq   207e <run+0x93e>
    207e:	66 90                	xchg   %ax,%ax
    2080:	bf 00 00 00 00       	mov    $0x0,%edi
    2085:	e8 00 00 00 00       	callq  208a <run+0x94a>
    208a:	85 c0                	test   %eax,%eax
    208c:	0f 84 bf f6 ff ff    	je     1751 <run+0x11>
    2092:	bf 00 00 00 00       	mov    $0x0,%edi
    2097:	48 c7 05 00 00 00 00 	movq   $0x70012c,0x0(%rip)        # 20a2 <run+0x962>
    209e:	2c 01 70 00 
    20a2:	e8 00 00 00 00       	callq  20a7 <run+0x967>
    20a7:	e9 a5 f6 ff ff       	jmpq   1751 <run+0x11>
