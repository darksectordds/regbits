
Allocating common symbols
Common symbol       size              file

finish              0x4               main.o
results             0x390             main.o
start               0x4               main.o

Discarded input sections

 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x51 main.o
 .debug_macro   0x0000000000000000       0xef main.o
 .debug_macro   0x0000000000000000       0x6a main.o
 .debug_macro   0x0000000000000000      0x1df main.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0xa60 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x22 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x8e lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x51 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0xef lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x6a lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0x1df lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x22 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x3a lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x26 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0x329 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x8f lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0x1c4 lpc8xx_ram_init.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000008000 xr
RAM              0x0000000010000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD regbits.o
LOAD main.o
LOAD lpc8xx_ram_init.o
                0x0000000000000020                PROVIDE (MINIMUM_STACK_SIZE, 0x20)
                0x0000000010000000                . = ORIGIN (RAM)

.text           0x0000000010000000     0x15cc
 *(.isr_vectors)
 .isr_vectors   0x0000000010000000       0x9c lpc8xx_ram_init.o
                0x0000000010000000                INTERRUPT_VECTORS
 *(.text)
 .text          0x000000001000009c     0x1450 regbits.o
                0x000000001000009c                zero_reg()
                0x00000000100000a8                zero_array()
                0x00000000100000b4                set_singl_bits_operator()
                0x00000000100000c4                set_singl_bits_method()
                0x00000000100000d4                clr_singl_bits_operator()
                0x00000000100000e4                clr_singl_bits_method()
                0x00000000100000f4                set_singl_mskd_operator()
                0x0000000010000104                set_singl_mskd_method()
                0x0000000010000114                clr_singl_mskd_operator()
                0x0000000010000124                clr_singl_mskd_method()
                0x0000000010000134                equ_singl_bits_operator()
                0x0000000010000140                equ_singl_bits_method()
                0x000000001000014c                equ_singl_mskd_operator()
                0x0000000010000158                equ_singl_mskd_method()
                0x0000000010000164                flp_singl_bits_operator()
                0x0000000010000174                flp_singl_bits_method()
                0x0000000010000184                flp_singl_mskd_operator()
                0x0000000010000194                flp_singl_mskd_method()
                0x00000000100001a4                ins_singl_mskd_operator()
                0x00000000100001b8                ins_singl_mskd_method()
                0x00000000100001cc                set_multi_bits_operator()
                0x00000000100001dc                set_multi_bits_method()
                0x00000000100001ec                ins_multi_mskd_operator()
                0x0000000010000208                ins_multi_mskd_method()
                0x0000000010000224                equ_multi_bits_operator()
                0x0000000010000230                equ_multi_bits_method()
                0x000000001000023c                equ_multi_mskd_operator()
                0x000000001000024c                equ_multi_mskd_method()
                0x000000001000025c                equ_bits_mskd_operator()
                0x0000000010000268                equ_bits_mskd_method()
                0x0000000010000274                equ_mskd_bits_operator()
                0x0000000010000280                equ_mskd_bits_method()
                0x000000001000028c                equ_bits_var()
                0x000000001000029c                equ_mskd_var()
                0x00000000100002b0                cmp_equ_zero()
                0x00000000100002d8                cmp_neq_zero()
                0x00000000100002f4                cmp_equ_bits()
                0x000000001000031c                cmp_neq_bits()
                0x0000000010000338                cmp_equ_mskd()
                0x0000000010000380                cmp_neq_mskd()
                0x00000000100003b4                cmp_equ_reg()
                0x00000000100003dc                cmp_neq_reg()
                0x00000000100003f8                constexpr_bits_array()
                0x000000001000040c                runtime_bits_array()
                0x0000000010000438                prescaler_low()
                0x0000000010000454                prescaler_high()
                0x0000000010000470                reg_mskd_lss()
                0x00000000100004a4                reg_mskd_leq()
                0x00000000100004dc                reg_mskd_gtr()
                0x000000001000050c                reg_mskd_geq()
                0x000000001000054c                pos_cmp_eq()
                0x0000000010000558                pos_cmp_ne()
                0x0000000010000564                bits_extract_eq()
                0x0000000010000580                mskd_extract_eq()
                0x000000001000059c                mskd_extract_ne()
                0x00000000100005b8                mskd_extract_lss()
                0x00000000100005e4                mskd_extract_leq()
                0x000000001000060c                mskd_extract_gtr()
                0x0000000010000638                set_bits_global()
                0x0000000010000648                ins_mskd_global()
                0x000000001000065c                assign_array_global()
                0x0000000010000668                shifted_global()
                0x0000000010000684                assign_register_global()
                0x0000000010000690                copy_bits_equ()
                0x00000000100006ac                copy_bits_neq()
                0x00000000100006c8                copy_mskd_equ()
                0x00000000100006f4                copy_mskd_neq()
                0x0000000010000720                copy_mskd_lss()
                0x0000000010000754                copy_mskd_leq()
                0x0000000010000780                copy_mskd_gtr()
                0x00000000100007b0                copy_mskd_geq()
                0x00000000100007e4                copy_shifted()
                0x000000001000081c                call_pos_ref()
                0x0000000010000844                call_pos_ref_global()
                0x0000000010000870                call_pos_val()
                0x0000000010000880                call_pos_val_global()
                0x00000000100008a0                call_mskd_val_const()
                0x00000000100008ac                call_mskd_val_var()
                0x00000000100008b8                call_mskd_val_global()
                0x00000000100008d4                call_bits_val_const()
                0x00000000100008e0                call_bits_val_var()
                0x00000000100008ec                call_bits_val_global()
                0x00000000100008f8                bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000010000908                bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000918                call_bits_ref_var()
                0x000000001000092c                call_bits_ref_const()
                0x0000000010000940                call_bits_ref_global()
                0x0000000010000954                mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000964                mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000978                call_mskd_ref_var()
                0x0000000010000994                call_mskd_ref_const()
                0x00000000100009ac                call_mskd_ref_global()
                0x00000000100009c4                periph_bits(mcu::Serial*)
                0x00000000100009d0                call_periph_bits()
                0x00000000100009e0                periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x00000000100009e8                call_periph_bits_val()
                0x00000000100009f8                reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000010000a00                call_reg_bits_val()
                0x0000000010000a10                periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000a1c                call_periph_bits_ref()
                0x0000000010000a34                reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000a40                call_reg_bits_ref()
                0x0000000010000a58                periph_mskd(mcu::Serial*)
                0x0000000010000a68                call_periph_mskd()
                0x0000000010000a78                periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000a84                call_periph_mskd_val()
                0x0000000010000a98                reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000aa4                call_reg_mskd_val()
                0x0000000010000ab8                periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000ac4                call_periph_mskd_ref()
                0x0000000010000ad8                reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000ae4                call_reg_mskd_ref()
                0x0000000010000af8                return_bits()
                0x0000000010000afc                call_return_bits()
                0x0000000010000b1c                return_mskd()
                0x0000000010000b28                call_return_mskd()
                0x0000000010000b58                return_reg()
                0x0000000010000b6c                call_return_reg()
                0x0000000010000b90                return_periph()
                0x0000000010000b9c                call_return_periph()
                0x0000000010000bc0                pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)
                0x0000000010000be0                pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000c08                runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000c18                call_range_val(unsigned int)
                0x0000000010000c28                call_range_val_port()
                0x0000000010000c34                runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000c44                call_range_ref(unsigned int)
                0x0000000010000c54                call_range_ref_port()
                0x0000000010000c60                check_array_range_pass(unsigned int)
                0x0000000010000c78                check_array_range_fail(unsigned int)
                0x0000000010000c90                check_bits_range_pass(unsigned int)
                0x0000000010000ca8                check_bits_range_fail(unsigned int)
                0x0000000010000cc0                check_mskd_range_pass(unsigned int)
                0x0000000010000cd8                check_mskd_range_fail(unsigned int)
                0x0000000010000cf0                bits_extract_ne()
                0x0000000010000d0c                mskd_extract_geq()
                0x0000000010000d38                shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)
                0x0000000010000d54                call_shifted_const_val()
                0x0000000010000d64                call_shifted_var_val()
                0x0000000010000d74                call_shifted_global_val()
                0x0000000010000d84                shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)
                0x0000000010000da4                call_shifted_const_ref()
                0x0000000010000dc0                call_shifted_var_ref()
                0x0000000010000ddc                call_shifted_global_ref()
                0x0000000010000df4                copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)
                0x0000000010000e0c                call_copy_bits_val()
                0x0000000010000e20                copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000e3c                call_copy_bits_ref()
                0x0000000010000e58                run
 .text          0x00000000100014ec       0x4c main.o
                0x00000000100014ec                memset
                0x0000000010001500                do_test
 .text          0x0000000010001538       0x94 lpc8xx_ram_init.o
                0x0000000010001538                NMI_Handler
                0x000000001000153c                HardFault_Handler
                0x0000000010001540                SVCall_Handler
                0x0000000010001544                PendSV_Handler
                0x0000000010001548                SysTick_Handler
                0x000000001000154c                SPI0_IRQHandler
                0x0000000010001550                SPI1_IRQHandler
                0x0000000010001554                UART0_IRQHandler
                0x0000000010001558                UART1_IRQHandler
                0x000000001000155c                UART2_IRQHandler
                0x0000000010001560                Reserved1_IRQHandler
                0x0000000010001564                SCT_IRQHandler
                0x0000000010001568                MRT_IRQHandler
                0x000000001000156c                CMP_IRQHandler
                0x0000000010001570                WDT_IRQHandler
                0x0000000010001574                BOD_IRQHandler
                0x0000000010001578                WKT_IRQHandler
                0x000000001000157c                Reserved11_IRQHandler
                0x0000000010001580                PININT0_IRQHandler
                0x0000000010001584                PININT1_IRQHandler
                0x0000000010001588                PININT2_IRQHandler
                0x000000001000158c                PININT3_IRQHandler
                0x0000000010001590                PININT4_IRQHandler
                0x0000000010001594                PININT5_IRQHandler
                0x0000000010001598                PININT6_IRQHandler
                0x000000001000159c                PININT7_IRQHandler
                0x00000000100015a0                init

.glue_7         0x00000000100015cc        0x0
 .glue_7        0x00000000100015cc        0x0 linker stubs

.glue_7t        0x00000000100015cc        0x0
 .glue_7t       0x00000000100015cc        0x0 linker stubs

.vfp11_veneer   0x00000000100015cc        0x0
 .vfp11_veneer  0x00000000100015cc        0x0 linker stubs

.v4_bx          0x00000000100015cc        0x0
 .v4_bx         0x00000000100015cc        0x0 linker stubs

.iplt           0x00000000100015cc        0x0
 .iplt          0x00000000100015cc        0x0 regbits.o

.text.startup   0x00000000100015cc       0x38
 .text.startup  0x00000000100015cc       0x38 main.o
                0x00000000100015cc                main

.rodata         0x0000000010001604       0x18
 .rodata        0x0000000010001604       0x18 regbits.o

.rel.dyn        0x000000001000161c        0x0
 .rel.iplt      0x000000001000161c        0x0 regbits.o

.data           0x000000001000161c        0x0
                0x000000001000161c                . = ALIGN (0x4)
 *(.data)
 .data          0x000000001000161c        0x0 regbits.o
 .data          0x000000001000161c        0x0 main.o
 .data          0x000000001000161c        0x0 lpc8xx_ram_init.o
                0x000000001000161c                BSS_START = .

.igot.plt       0x000000001000161c        0x0
 .igot.plt      0x000000001000161c        0x0 regbits.o

.bss            0x000000001000161c      0x3c8
                0x000000001000161c                . = ALIGN (0x4)
 *(.bss)
 .bss           0x000000001000161c       0x30 regbits.o
 .bss           0x000000001000164c        0x0 main.o
 .bss           0x000000001000164c        0x0 lpc8xx_ram_init.o
 COMMON         0x000000001000164c      0x398 main.o
                0x000000001000164c                finish
                0x0000000010001650                results
                0x00000000100019e0                start
                0x00000000100019e4                BSS_END = .
                0x00000000100019e4                end = .
                0x0000000010000000                RAM_BASE_ADDR = ORIGIN (RAM)
                0x0000000000000000                FLASH_BASE_ADDR = ORIGIN (FLASH)
                0x0000000010002000                TOP_OF_STACK = (ORIGIN (RAM) + LENGTH (RAM))
                0x0000000000000000                ASSERT (((end + MINIMUM_STACK_SIZE) < TOP_OF_STACK), too big to fit in RAM)
OUTPUT(regbits.elf elf32-littlearm)

.debug_info     0x0000000000000000    0x12917
 .debug_info    0x0000000000000000    0x1223c regbits.o
 .debug_info    0x000000000001223c      0x2d4 main.o
 .debug_info    0x0000000000012510      0x407 lpc8xx_ram_init.o

.debug_abbrev   0x0000000000000000      0xa4b
 .debug_abbrev  0x0000000000000000      0x6f9 regbits.o
 .debug_abbrev  0x00000000000006f9      0x1df main.o
 .debug_abbrev  0x00000000000008d8      0x173 lpc8xx_ram_init.o

.debug_loc      0x0000000000000000     0x294d
 .debug_loc     0x0000000000000000     0x27d2 regbits.o
 .debug_loc     0x00000000000027d2      0x157 main.o
 .debug_loc     0x0000000000002929       0x24 lpc8xx_ram_init.o

.debug_aranges  0x0000000000000000       0x68
 .debug_aranges
                0x0000000000000000       0x20 regbits.o
 .debug_aranges
                0x0000000000000020       0x28 main.o
 .debug_aranges
                0x0000000000000048       0x20 lpc8xx_ram_init.o

.debug_ranges   0x0000000000000000      0x918
 .debug_ranges  0x0000000000000000      0x900 regbits.o
 .debug_ranges  0x0000000000000900       0x18 main.o

.debug_macro    0x0000000000000000     0x2573
 .debug_macro   0x0000000000000000       0x8e regbits.o
 .debug_macro   0x000000000000008e      0xb0e regbits.o
 .debug_macro   0x0000000000000b9c       0x1c regbits.o
 .debug_macro   0x0000000000000bb8       0x22 regbits.o
 .debug_macro   0x0000000000000bda       0x56 regbits.o
 .debug_macro   0x0000000000000c30       0x51 regbits.o
 .debug_macro   0x0000000000000c81       0xef regbits.o
 .debug_macro   0x0000000000000d70       0x6a regbits.o
 .debug_macro   0x0000000000000dda      0x1df regbits.o
 .debug_macro   0x0000000000000fb9       0x1f regbits.o
 .debug_macro   0x0000000000000fd8       0x58 regbits.o
 .debug_macro   0x0000000000001030      0x17b regbits.o
 .debug_macro   0x00000000000011ab       0xba main.o
 .debug_macro   0x0000000000001265      0xa60 main.o
 .debug_macro   0x0000000000001cc5      0x174 main.o
 .debug_macro   0x0000000000001e39       0x8e main.o
 .debug_macro   0x0000000000001ec7       0x22 main.o
 .debug_macro   0x0000000000001ee9       0x3a main.o
 .debug_macro   0x0000000000001f23       0x26 main.o
 .debug_macro   0x0000000000001f49      0x329 main.o
 .debug_macro   0x0000000000002272       0x8f main.o
 .debug_macro   0x0000000000002301      0x1c4 main.o
 .debug_macro   0x00000000000024c5       0xae lpc8xx_ram_init.o

.debug_line     0x0000000000000000     0x326d
 .debug_line    0x0000000000000000     0x29fb regbits.o
 .debug_line    0x00000000000029fb      0x3a9 main.o
 .debug_line    0x0000000000002da4      0x4c9 lpc8xx_ram_init.o

.debug_str      0x0000000000000000    0x19383
 .debug_str     0x0000000000000000    0x16e92 regbits.o
                                      0x171f6 (size before relaxing)
 .debug_str     0x0000000000016e92     0x229c main.o
                                       0x5f46 (size before relaxing)
 .debug_str     0x000000000001912e      0x255 lpc8xx_ram_init.o
                                       0x5dea (size before relaxing)

.comment        0x0000000000000000       0x75
 .comment       0x0000000000000000       0x75 regbits.o
                                         0x76 (size before relaxing)
 .comment       0x0000000000000075       0x76 main.o
 .comment       0x0000000000000075       0x76 lpc8xx_ram_init.o

.ARM.attributes
                0x0000000000000000       0x1c
 .ARM.attributes
                0x0000000000000000       0x1c regbits.o
 .ARM.attributes
                0x000000000000001c       0x1c main.o
 .ARM.attributes
                0x0000000000000038       0x1c lpc8xx_ram_init.o

.debug_frame    0x0000000000000000      0xd48
 .debug_frame   0x0000000000000000      0xb24 regbits.o
 .debug_frame   0x0000000000000b24       0x5c main.o
 .debug_frame   0x0000000000000b80      0x1c8 lpc8xx_ram_init.o
Memory region         Used Size  Region Size  %age Used
           FLASH:          0 GB        32 KB      0.00%
             RAM:        6628 B         8 KB     80.91%
