
Allocating common symbols
Common symbol       size              file

registers           0x2e0             main.o
finish              0x4               main.o
start               0x4               main.o

Discarded input sections

 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .debug_macro   0x0000000000000000       0x22 regbits.o
 .debug_macro   0x0000000000000000       0x51 regbits.o
 .debug_macro   0x0000000000000000       0xef regbits.o
 .debug_macro   0x0000000000000000       0x6a regbits.o
 .debug_macro   0x0000000000000000      0x1df regbits.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .debug_macro   0x0000000000000000      0xa60 main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x8e main.o
 .debug_macro   0x0000000000000000       0x51 main.o
 .debug_macro   0x0000000000000000       0xef main.o
 .debug_macro   0x0000000000000000       0x6a main.o
 .debug_macro   0x0000000000000000      0x1df main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x3a main.o
 .debug_macro   0x0000000000000000       0x26 main.o
 .debug_macro   0x0000000000000000      0x329 main.o
 .debug_macro   0x0000000000000000       0x8f main.o
 .debug_macro   0x0000000000000000      0x1c4 main.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000008000 xr
RAM              0x0000000010000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD lpc8xx_ram_init.o
LOAD regbits.o
LOAD main.o
                0x0000000000000020                PROVIDE (MINIMUM_STACK_SIZE, 0x20)
                0x0000000010000000                . = ORIGIN (RAM)

.text           0x0000000010000000      0xb3c
 *(.isr_vectors)
 .isr_vectors   0x0000000010000000       0x9c lpc8xx_ram_init.o
                0x0000000010000000                INTERRUPT_VECTORS
 *(.text)
 .text          0x000000001000009c       0x68 lpc8xx_ram_init.o
                0x000000001000009c                NMI_Handler
                0x000000001000009e                HardFault_Handler
                0x00000000100000a0                SVCall_Handler
                0x00000000100000a2                PendSV_Handler
                0x00000000100000a4                SysTick_Handler
                0x00000000100000a6                SPI0_IRQHandler
                0x00000000100000a8                SPI1_IRQHandler
                0x00000000100000aa                UART0_IRQHandler
                0x00000000100000ac                UART1_IRQHandler
                0x00000000100000ae                UART2_IRQHandler
                0x00000000100000b0                Reserved1_IRQHandler
                0x00000000100000b2                SCT_IRQHandler
                0x00000000100000b4                MRT_IRQHandler
                0x00000000100000b6                CMP_IRQHandler
                0x00000000100000b8                WDT_IRQHandler
                0x00000000100000ba                BOD_IRQHandler
                0x00000000100000bc                WKT_IRQHandler
                0x00000000100000be                Reserved11_IRQHandler
                0x00000000100000c0                PININT0_IRQHandler
                0x00000000100000c2                PININT1_IRQHandler
                0x00000000100000c4                PININT2_IRQHandler
                0x00000000100000c6                PININT3_IRQHandler
                0x00000000100000c8                PININT4_IRQHandler
                0x00000000100000ca                PININT5_IRQHandler
                0x00000000100000cc                PININT6_IRQHandler
                0x00000000100000ce                PININT7_IRQHandler
                0x00000000100000d0                init
 .text          0x0000000010000104      0x9c8 regbits.o
                0x0000000010000104                zero()
                0x0000000010000124                set_singl_bits()
                0x000000001000013c                clr_singl_bits()
                0x0000000010000154                set_singl_mskd()
                0x000000001000016c                clr_singl_mskd()
                0x0000000010000184                equ_singl_bits()
                0x0000000010000194                equ_singl_mskd()
                0x00000000100001a4                flp_singl_bits()
                0x00000000100001c0                flp_singl_mskd()
                0x00000000100001dc                ins_singl_mskd()
                0x00000000100001fc                set_multi_bits()
                0x0000000010000214                ins_multi_mskd()
                0x0000000010000238                equ_multi_bits()
                0x0000000010000248                equ_multi_mskd()
                0x0000000010000258                equ_bits_mskd()
                0x0000000010000268                equ_mskd_bits()
                0x0000000010000278                equ_bits_var()
                0x0000000010000288                equ_mskd_var()
                0x000000001000029c                cmp_zero()
                0x00000000100002dc                cmp_bits()
                0x000000001000031c                cmp_mskd()
                0x000000001000038c                cmp_reg()
                0x00000000100003cc                bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x00000000100003e0                call_bits_val()
                0x00000000100003f0                constexpr_bits_array()
                0x0000000010000404                runtime_bits_array()
                0x0000000010000428                bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000440                call_bits_ref()
                0x000000001000045a                mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000474                call_mskd_val()
                0x0000000010000488                mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)
                0x00000000100004a8                call_mskd_ref()
                0x00000000100004d8                periph_reg_bits_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x00000000100004fc                call_periph_reg_bits_val()
                0x0000000010000514                periph_reg_bits_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x000000001000053c                call_periph_reg_bits_ref()
                0x000000001000055c                periph_reg_mskd_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x000000001000058c                call_periph_reg_mskd_val()
                0x00000000100005a4                periph_reg_mskd_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config> const&)
                0x00000000100005dc                call_periph_reg_mskd_ref()
                0x0000000010000600                return_bits()
                0x0000000010000604                call_return_bits()
                0x0000000010000628                return_mskd()
                0x0000000010000632                call_return_mskd()
                0x0000000010000664                return_reg()
                0x0000000010000678                call_return_reg()
                0x000000001000069c                return_periph()
                0x00000000100006a8                call_return_periph()
                0x00000000100006cc                pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)
                0x00000000100006f0                call_pos_val()
                0x0000000010000700                pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)
                0x0000000010000728                call_pos_ref()
                0x0000000010000742                runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000754                call_range_val(unsigned int)
                0x0000000010000778                call_range_val_port()
                0x0000000010000782                runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000010000794                call_range_ref(unsigned int)
                0x00000000100007b8                call_range_ref_port()
                0x00000000100007c2                check_array_range_pass(unsigned int)
                0x00000000100007d4                check_array_range_fail(unsigned int)
                0x00000000100007e8                check_bits_range_pass(unsigned int)
                0x00000000100007fc                check_bits_range_fail(unsigned int)
                0x0000000010000810                check_mskd_range_pass(unsigned int)
                0x0000000010000824                check_mskd_range_fail(unsigned int)
                0x0000000010000838                check_bits_extract()
                0x0000000010000878                check_mskd_extract()
                0x00000000100008c4                record_registers(unsigned int)
                0x00000000100008f0                run
 .text          0x0000000010000acc       0x70 main.o
                0x0000000010000acc                memset
                0x0000000010000ae0                unittest_record_registers
                0x0000000010000afc                main

.glue_7         0x0000000010000b3c        0x0
 .glue_7        0x0000000010000b3c        0x0 linker stubs

.glue_7t        0x0000000010000b3c        0x0
 .glue_7t       0x0000000010000b3c        0x0 linker stubs

.vfp11_veneer   0x0000000010000b3c        0x0
 .vfp11_veneer  0x0000000010000b3c        0x0 linker stubs

.v4_bx          0x0000000010000b3c        0x0
 .v4_bx         0x0000000010000b3c        0x0 linker stubs

.iplt           0x0000000010000b3c        0x0
 .iplt          0x0000000010000b3c        0x0 lpc8xx_ram_init.o

.rel.dyn        0x0000000010000b3c        0x0
 .rel.iplt      0x0000000010000b3c        0x0 lpc8xx_ram_init.o

.data           0x0000000010000b3c        0x0
                0x0000000010000b3c                . = ALIGN (0x4)
 *(.data)
 .data          0x0000000010000b3c        0x0 lpc8xx_ram_init.o
 .data          0x0000000010000b3c        0x0 regbits.o
 .data          0x0000000010000b3c        0x0 main.o
                0x0000000010000b3c                BSS_START = .

.igot.plt       0x0000000010000b3c        0x0
 .igot.plt      0x0000000010000b3c        0x0 lpc8xx_ram_init.o

.bss            0x0000000010000b3c      0x2e8
                0x0000000010000b3c                . = ALIGN (0x4)
 *(.bss)
 .bss           0x0000000010000b3c        0x0 lpc8xx_ram_init.o
 .bss           0x0000000010000b3c        0x0 regbits.o
 .bss           0x0000000010000b3c        0x0 main.o
 COMMON         0x0000000010000b3c      0x2e8 main.o
                0x0000000010000b3c                registers
                0x0000000010000e1c                finish
                0x0000000010000e20                start
                0x0000000010000e24                BSS_END = .
                0x0000000010000e24                end = .
                0x0000000010000000                RAM_BASE_ADDR = ORIGIN (RAM)
                0x0000000000000000                FLASH_BASE_ADDR = ORIGIN (FLASH)
                0x0000000010002000                TOP_OF_STACK = (ORIGIN (RAM) + LENGTH (RAM))
                0x0000000000000000                ASSERT (((end + MINIMUM_STACK_SIZE) < TOP_OF_STACK), too big to fit in RAM)
OUTPUT(regbits.elf elf32-littlearm)

.debug_info     0x0000000000000000     0xcc0c
 .debug_info    0x0000000000000000      0x3f1 lpc8xx_ram_init.o
 .debug_info    0x00000000000003f1     0xc1aa regbits.o
 .debug_info    0x000000000000c59b      0x671 main.o

.debug_abbrev   0x0000000000000000      0x9a4
 .debug_abbrev  0x0000000000000000      0x14e lpc8xx_ram_init.o
 .debug_abbrev  0x000000000000014e      0x64d regbits.o
 .debug_abbrev  0x000000000000079b      0x209 main.o

.debug_loc      0x0000000000000000     0x1b3b
 .debug_loc     0x0000000000000000       0x55 lpc8xx_ram_init.o
 .debug_loc     0x0000000000000055     0x19dd regbits.o
 .debug_loc     0x0000000000001a32      0x109 main.o

.debug_aranges  0x0000000000000000       0x60
 .debug_aranges
                0x0000000000000000       0x20 lpc8xx_ram_init.o
 .debug_aranges
                0x0000000000000020       0x20 regbits.o
 .debug_aranges
                0x0000000000000040       0x20 main.o

.debug_macro    0x0000000000000000     0x23ec
 .debug_macro   0x0000000000000000       0xae lpc8xx_ram_init.o
 .debug_macro   0x00000000000000ae      0xa60 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000b0e       0x22 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000b30       0x8e lpc8xx_ram_init.o
 .debug_macro   0x0000000000000bbe       0x51 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000c0f       0xef lpc8xx_ram_init.o
 .debug_macro   0x0000000000000cfe       0x6a lpc8xx_ram_init.o
 .debug_macro   0x0000000000000d68      0x1df lpc8xx_ram_init.o
 .debug_macro   0x0000000000000f47       0x22 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000f69       0x3a lpc8xx_ram_init.o
 .debug_macro   0x0000000000000fa3       0x26 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000fc9      0x329 lpc8xx_ram_init.o
 .debug_macro   0x00000000000012f2       0x8f lpc8xx_ram_init.o
 .debug_macro   0x0000000000001381      0x1c4 lpc8xx_ram_init.o
 .debug_macro   0x0000000000001545       0x80 regbits.o
 .debug_macro   0x00000000000015c5      0xb0e regbits.o
 .debug_macro   0x00000000000020d3       0x1c regbits.o
 .debug_macro   0x00000000000020ef       0x56 regbits.o
 .debug_macro   0x0000000000002145       0x1f regbits.o
 .debug_macro   0x0000000000002164       0x58 regbits.o
 .debug_macro   0x00000000000021bc       0xbc main.o
 .debug_macro   0x0000000000002278      0x174 main.o

.debug_line     0x0000000000000000     0x1e8c
 .debug_line    0x0000000000000000      0x4ba lpc8xx_ram_init.o
 .debug_line    0x00000000000004ba     0x165b regbits.o
 .debug_line    0x0000000000001b15      0x377 main.o

.debug_str      0x0000000000000000    0x13a3d
 .debug_str     0x0000000000000000     0x5c5e lpc8xx_ram_init.o
                                       0x5dca (size before relaxing)
 .debug_str     0x0000000000005c5e     0xd833 regbits.o
                                      0x11620 (size before relaxing)
 .debug_str     0x0000000000013491      0x5ac main.o
                                       0x61e4 (size before relaxing)

.comment        0x0000000000000000       0x75
 .comment       0x0000000000000000       0x75 lpc8xx_ram_init.o
                                         0x76 (size before relaxing)
 .comment       0x0000000000000075       0x76 regbits.o
 .comment       0x0000000000000075       0x76 main.o

.ARM.attributes
                0x0000000000000000       0x1c
 .ARM.attributes
                0x0000000000000000       0x1c lpc8xx_ram_init.o
 .ARM.attributes
                0x000000000000001c       0x1c regbits.o
 .ARM.attributes
                0x0000000000000038       0x1c main.o

.debug_frame    0x0000000000000000      0x758
 .debug_frame   0x0000000000000000      0x1c8 lpc8xx_ram_init.o
 .debug_frame   0x00000000000001c8      0x540 regbits.o
 .debug_frame   0x0000000000000708       0x50 main.o

.debug_ranges   0x0000000000000000       0xd8
 .debug_ranges  0x0000000000000000       0xd8 regbits.o
Memory region         Used Size  Region Size  %age Used
           FLASH:          0 GB        32 KB      0.00%
             RAM:        3620 B         8 KB     44.19%
