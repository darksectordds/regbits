
regbits.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <INTERRUPT_VECTORS>:
10000000:	00 20 00 10 d9 15 00 10 a5 15 00 10 a7 15 00 10     . ..............
	...
1000002c:	a9 15 00 10 00 00 00 00 00 00 00 00 ab 15 00 10     ................
1000003c:	ad 15 00 10 af 15 00 10 b1 15 00 10 00 00 00 00     ................
1000004c:	b3 15 00 10 b5 15 00 10 b7 15 00 10 b9 15 00 10     ................
1000005c:	bb 15 00 10 bd 15 00 10 bf 15 00 10 c1 15 00 10     ................
1000006c:	c3 15 00 10 00 00 00 00 c5 15 00 10 c7 15 00 10     ................
1000007c:	c9 15 00 10 cb 15 00 10 cd 15 00 10 cf 15 00 10     ................
1000008c:	d1 15 00 10 d3 15 00 10 d5 15 00 10 d7 15 00 10     ................

1000009c <zero_reg()>:
1000009c:	4b01      	ldr	r3, [pc, #4]	; (100000a4 <zero_reg()+0x8>)
1000009e:	2200      	movs	r2, #0
100000a0:	605a      	str	r2, [r3, #4]
100000a2:	4770      	bx	lr
100000a4:	10001dc0 	.word	0x10001dc0

100000a8 <zero_array()>:
100000a8:	4b01      	ldr	r3, [pc, #4]	; (100000b0 <zero_array()+0x8>)
100000aa:	2200      	movs	r2, #0
100000ac:	62da      	str	r2, [r3, #44]	; 0x2c
100000ae:	4770      	bx	lr
100000b0:	10001c00 	.word	0x10001c00

100000b4 <set_singl_bits_operator()>:
100000b4:	4a02      	ldr	r2, [pc, #8]	; (100000c0 <set_singl_bits_operator()+0xc>)
100000b6:	6853      	ldr	r3, [r2, #4]
100000b8:	2140      	movs	r1, #64	; 0x40
100000ba:	430b      	orrs	r3, r1
100000bc:	6053      	str	r3, [r2, #4]
100000be:	4770      	bx	lr
100000c0:	10001dc0 	.word	0x10001dc0

100000c4 <set_singl_bits_method()>:
100000c4:	4a02      	ldr	r2, [pc, #8]	; (100000d0 <set_singl_bits_method()+0xc>)
100000c6:	6853      	ldr	r3, [r2, #4]
100000c8:	2140      	movs	r1, #64	; 0x40
100000ca:	430b      	orrs	r3, r1
100000cc:	6053      	str	r3, [r2, #4]
100000ce:	4770      	bx	lr
100000d0:	10001dc0 	.word	0x10001dc0

100000d4 <clr_singl_bits_operator()>:
100000d4:	4a02      	ldr	r2, [pc, #8]	; (100000e0 <clr_singl_bits_operator()+0xc>)
100000d6:	6853      	ldr	r3, [r2, #4]
100000d8:	2140      	movs	r1, #64	; 0x40
100000da:	438b      	bics	r3, r1
100000dc:	6053      	str	r3, [r2, #4]
100000de:	4770      	bx	lr
100000e0:	10001dc0 	.word	0x10001dc0

100000e4 <clr_singl_bits_method()>:
100000e4:	4a02      	ldr	r2, [pc, #8]	; (100000f0 <clr_singl_bits_method()+0xc>)
100000e6:	6853      	ldr	r3, [r2, #4]
100000e8:	2140      	movs	r1, #64	; 0x40
100000ea:	438b      	bics	r3, r1
100000ec:	6053      	str	r3, [r2, #4]
100000ee:	4770      	bx	lr
100000f0:	10001dc0 	.word	0x10001dc0

100000f4 <set_singl_mskd_operator()>:
100000f4:	4a02      	ldr	r2, [pc, #8]	; (10000100 <set_singl_mskd_operator()+0xc>)
100000f6:	6853      	ldr	r3, [r2, #4]
100000f8:	2102      	movs	r1, #2
100000fa:	430b      	orrs	r3, r1
100000fc:	6053      	str	r3, [r2, #4]
100000fe:	4770      	bx	lr
10000100:	10001dc0 	.word	0x10001dc0

10000104 <set_singl_mskd_method()>:
10000104:	4a02      	ldr	r2, [pc, #8]	; (10000110 <set_singl_mskd_method()+0xc>)
10000106:	6853      	ldr	r3, [r2, #4]
10000108:	2102      	movs	r1, #2
1000010a:	430b      	orrs	r3, r1
1000010c:	6053      	str	r3, [r2, #4]
1000010e:	4770      	bx	lr
10000110:	10001dc0 	.word	0x10001dc0

10000114 <clr_singl_mskd_operator()>:
10000114:	4a02      	ldr	r2, [pc, #8]	; (10000120 <clr_singl_mskd_operator()+0xc>)
10000116:	6853      	ldr	r3, [r2, #4]
10000118:	2102      	movs	r1, #2
1000011a:	438b      	bics	r3, r1
1000011c:	6053      	str	r3, [r2, #4]
1000011e:	4770      	bx	lr
10000120:	10001dc0 	.word	0x10001dc0

10000124 <clr_singl_mskd_method()>:
10000124:	4a02      	ldr	r2, [pc, #8]	; (10000130 <clr_singl_mskd_method()+0xc>)
10000126:	6853      	ldr	r3, [r2, #4]
10000128:	2102      	movs	r1, #2
1000012a:	438b      	bics	r3, r1
1000012c:	6053      	str	r3, [r2, #4]
1000012e:	4770      	bx	lr
10000130:	10001dc0 	.word	0x10001dc0

10000134 <equ_singl_bits_operator()>:
10000134:	4b01      	ldr	r3, [pc, #4]	; (1000013c <equ_singl_bits_operator()+0x8>)
10000136:	2240      	movs	r2, #64	; 0x40
10000138:	605a      	str	r2, [r3, #4]
1000013a:	4770      	bx	lr
1000013c:	10001dc0 	.word	0x10001dc0

10000140 <equ_singl_bits_method()>:
10000140:	4b01      	ldr	r3, [pc, #4]	; (10000148 <equ_singl_bits_method()+0x8>)
10000142:	2240      	movs	r2, #64	; 0x40
10000144:	605a      	str	r2, [r3, #4]
10000146:	4770      	bx	lr
10000148:	10001dc0 	.word	0x10001dc0

1000014c <equ_singl_mskd_operator()>:
1000014c:	4b01      	ldr	r3, [pc, #4]	; (10000154 <equ_singl_mskd_operator()+0x8>)
1000014e:	2202      	movs	r2, #2
10000150:	605a      	str	r2, [r3, #4]
10000152:	4770      	bx	lr
10000154:	10001dc0 	.word	0x10001dc0

10000158 <equ_singl_mskd_method()>:
10000158:	4b01      	ldr	r3, [pc, #4]	; (10000160 <equ_singl_mskd_method()+0x8>)
1000015a:	2202      	movs	r2, #2
1000015c:	605a      	str	r2, [r3, #4]
1000015e:	4770      	bx	lr
10000160:	10001dc0 	.word	0x10001dc0

10000164 <flp_singl_bits_operator()>:
10000164:	4a02      	ldr	r2, [pc, #8]	; (10000170 <flp_singl_bits_operator()+0xc>)
10000166:	6853      	ldr	r3, [r2, #4]
10000168:	2140      	movs	r1, #64	; 0x40
1000016a:	404b      	eors	r3, r1
1000016c:	6053      	str	r3, [r2, #4]
1000016e:	4770      	bx	lr
10000170:	10001dc0 	.word	0x10001dc0

10000174 <flp_singl_bits_method()>:
10000174:	4a02      	ldr	r2, [pc, #8]	; (10000180 <flp_singl_bits_method()+0xc>)
10000176:	6853      	ldr	r3, [r2, #4]
10000178:	2140      	movs	r1, #64	; 0x40
1000017a:	404b      	eors	r3, r1
1000017c:	6053      	str	r3, [r2, #4]
1000017e:	4770      	bx	lr
10000180:	10001dc0 	.word	0x10001dc0

10000184 <flp_singl_mskd_operator()>:
10000184:	4a02      	ldr	r2, [pc, #8]	; (10000190 <flp_singl_mskd_operator()+0xc>)
10000186:	6853      	ldr	r3, [r2, #4]
10000188:	2102      	movs	r1, #2
1000018a:	404b      	eors	r3, r1
1000018c:	6053      	str	r3, [r2, #4]
1000018e:	4770      	bx	lr
10000190:	10001dc0 	.word	0x10001dc0

10000194 <flp_singl_mskd_method()>:
10000194:	4a02      	ldr	r2, [pc, #8]	; (100001a0 <flp_singl_mskd_method()+0xc>)
10000196:	6853      	ldr	r3, [r2, #4]
10000198:	2102      	movs	r1, #2
1000019a:	404b      	eors	r3, r1
1000019c:	6053      	str	r3, [r2, #4]
1000019e:	4770      	bx	lr
100001a0:	10001dc0 	.word	0x10001dc0

100001a4 <ins_singl_mskd_operator()>:
100001a4:	4a03      	ldr	r2, [pc, #12]	; (100001b4 <ins_singl_mskd_operator()+0x10>)
100001a6:	6853      	ldr	r3, [r2, #4]
100001a8:	2106      	movs	r1, #6
100001aa:	438b      	bics	r3, r1
100001ac:	3902      	subs	r1, #2
100001ae:	430b      	orrs	r3, r1
100001b0:	6053      	str	r3, [r2, #4]
100001b2:	4770      	bx	lr
100001b4:	10001dc0 	.word	0x10001dc0

100001b8 <ins_singl_mskd_method()>:
100001b8:	4a03      	ldr	r2, [pc, #12]	; (100001c8 <ins_singl_mskd_method()+0x10>)
100001ba:	6853      	ldr	r3, [r2, #4]
100001bc:	2106      	movs	r1, #6
100001be:	438b      	bics	r3, r1
100001c0:	3902      	subs	r1, #2
100001c2:	430b      	orrs	r3, r1
100001c4:	6053      	str	r3, [r2, #4]
100001c6:	4770      	bx	lr
100001c8:	10001dc0 	.word	0x10001dc0

100001cc <set_multi_bits_operator()>:
100001cc:	4a02      	ldr	r2, [pc, #8]	; (100001d8 <set_multi_bits_operator()+0xc>)
100001ce:	6853      	ldr	r3, [r2, #4]
100001d0:	2121      	movs	r1, #33	; 0x21
100001d2:	430b      	orrs	r3, r1
100001d4:	6053      	str	r3, [r2, #4]
100001d6:	4770      	bx	lr
100001d8:	10001dc0 	.word	0x10001dc0

100001dc <set_multi_bits_method()>:
100001dc:	4a02      	ldr	r2, [pc, #8]	; (100001e8 <set_multi_bits_method()+0xc>)
100001de:	6853      	ldr	r3, [r2, #4]
100001e0:	2121      	movs	r1, #33	; 0x21
100001e2:	430b      	orrs	r3, r1
100001e4:	6053      	str	r3, [r2, #4]
100001e6:	4770      	bx	lr
100001e8:	10001dc0 	.word	0x10001dc0

100001ec <ins_multi_mskd_operator()>:
100001ec:	4904      	ldr	r1, [pc, #16]	; (10000200 <ins_multi_mskd_operator()+0x14>)
100001ee:	684b      	ldr	r3, [r1, #4]
100001f0:	4a04      	ldr	r2, [pc, #16]	; (10000204 <ins_multi_mskd_operator()+0x18>)
100001f2:	401a      	ands	r2, r3
100001f4:	23c1      	movs	r3, #193	; 0xc1
100001f6:	005b      	lsls	r3, r3, #1
100001f8:	4313      	orrs	r3, r2
100001fa:	604b      	str	r3, [r1, #4]
100001fc:	4770      	bx	lr
100001fe:	46c0      	nop			; (mov r8, r8)
10000200:	10001dc0 	.word	0x10001dc0
10000204:	fffff079 	.word	0xfffff079

10000208 <ins_multi_mskd_method()>:
10000208:	4904      	ldr	r1, [pc, #16]	; (1000021c <ins_multi_mskd_method()+0x14>)
1000020a:	684b      	ldr	r3, [r1, #4]
1000020c:	4a04      	ldr	r2, [pc, #16]	; (10000220 <ins_multi_mskd_method()+0x18>)
1000020e:	401a      	ands	r2, r3
10000210:	23c1      	movs	r3, #193	; 0xc1
10000212:	005b      	lsls	r3, r3, #1
10000214:	4313      	orrs	r3, r2
10000216:	604b      	str	r3, [r1, #4]
10000218:	4770      	bx	lr
1000021a:	46c0      	nop			; (mov r8, r8)
1000021c:	10001dc0 	.word	0x10001dc0
10000220:	fffff079 	.word	0xfffff079

10000224 <equ_multi_bits_operator()>:
10000224:	4b01      	ldr	r3, [pc, #4]	; (1000022c <equ_multi_bits_operator()+0x8>)
10000226:	2260      	movs	r2, #96	; 0x60
10000228:	605a      	str	r2, [r3, #4]
1000022a:	4770      	bx	lr
1000022c:	10001dc0 	.word	0x10001dc0

10000230 <equ_multi_bits_method()>:
10000230:	4b01      	ldr	r3, [pc, #4]	; (10000238 <equ_multi_bits_method()+0x8>)
10000232:	2260      	movs	r2, #96	; 0x60
10000234:	605a      	str	r2, [r3, #4]
10000236:	4770      	bx	lr
10000238:	10001dc0 	.word	0x10001dc0

1000023c <equ_multi_mskd_operator()>:
1000023c:	4b02      	ldr	r3, [pc, #8]	; (10000248 <equ_multi_mskd_operator()+0xc>)
1000023e:	22c2      	movs	r2, #194	; 0xc2
10000240:	0092      	lsls	r2, r2, #2
10000242:	605a      	str	r2, [r3, #4]
10000244:	4770      	bx	lr
10000246:	46c0      	nop			; (mov r8, r8)
10000248:	10001dc0 	.word	0x10001dc0

1000024c <equ_multi_mskd_method()>:
1000024c:	4b02      	ldr	r3, [pc, #8]	; (10000258 <equ_multi_mskd_method()+0xc>)
1000024e:	22c2      	movs	r2, #194	; 0xc2
10000250:	0092      	lsls	r2, r2, #2
10000252:	605a      	str	r2, [r3, #4]
10000254:	4770      	bx	lr
10000256:	46c0      	nop			; (mov r8, r8)
10000258:	10001dc0 	.word	0x10001dc0

1000025c <equ_bits_mskd_operator()>:
1000025c:	4b01      	ldr	r3, [pc, #4]	; (10000264 <equ_bits_mskd_operator()+0x8>)
1000025e:	2222      	movs	r2, #34	; 0x22
10000260:	605a      	str	r2, [r3, #4]
10000262:	4770      	bx	lr
10000264:	10001dc0 	.word	0x10001dc0

10000268 <equ_bits_mskd_method()>:
10000268:	4b01      	ldr	r3, [pc, #4]	; (10000270 <equ_bits_mskd_method()+0x8>)
1000026a:	2222      	movs	r2, #34	; 0x22
1000026c:	605a      	str	r2, [r3, #4]
1000026e:	4770      	bx	lr
10000270:	10001dc0 	.word	0x10001dc0

10000274 <equ_mskd_bits_operator()>:
10000274:	4b01      	ldr	r3, [pc, #4]	; (1000027c <equ_mskd_bits_operator()+0x8>)
10000276:	2244      	movs	r2, #68	; 0x44
10000278:	605a      	str	r2, [r3, #4]
1000027a:	4770      	bx	lr
1000027c:	10001dc0 	.word	0x10001dc0

10000280 <equ_mskd_bits_method()>:
10000280:	4b01      	ldr	r3, [pc, #4]	; (10000288 <equ_mskd_bits_method()+0x8>)
10000282:	2244      	movs	r2, #68	; 0x44
10000284:	605a      	str	r2, [r3, #4]
10000286:	4770      	bx	lr
10000288:	10001dc0 	.word	0x10001dc0

1000028c <equ_bits_var()>:
1000028c:	4b02      	ldr	r3, [pc, #8]	; (10000298 <equ_bits_var()+0xc>)
1000028e:	2240      	movs	r2, #64	; 0x40
10000290:	605a      	str	r2, [r3, #4]
10000292:	3a3f      	subs	r2, #63	; 0x3f
10000294:	605a      	str	r2, [r3, #4]
10000296:	4770      	bx	lr
10000298:	10001dc0 	.word	0x10001dc0

1000029c <equ_mskd_var()>:
1000029c:	4b03      	ldr	r3, [pc, #12]	; (100002ac <equ_mskd_var()+0x10>)
1000029e:	2202      	movs	r2, #2
100002a0:	605a      	str	r2, [r3, #4]
100002a2:	327f      	adds	r2, #127	; 0x7f
100002a4:	32ff      	adds	r2, #255	; 0xff
100002a6:	605a      	str	r2, [r3, #4]
100002a8:	4770      	bx	lr
100002aa:	46c0      	nop			; (mov r8, r8)
100002ac:	10001dc0 	.word	0x10001dc0

100002b0 <cmp_equ_zero()>:
100002b0:	4b07      	ldr	r3, [pc, #28]	; (100002d0 <cmp_equ_zero()+0x20>)
100002b2:	2200      	movs	r2, #0
100002b4:	605a      	str	r2, [r3, #4]
100002b6:	685b      	ldr	r3, [r3, #4]
100002b8:	2b00      	cmp	r3, #0
100002ba:	d104      	bne.n	100002c6 <cmp_equ_zero()+0x16>
100002bc:	4b05      	ldr	r3, [pc, #20]	; (100002d4 <cmp_equ_zero()+0x24>)
100002be:	22e8      	movs	r2, #232	; 0xe8
100002c0:	0592      	lsls	r2, r2, #22
100002c2:	605a      	str	r2, [r3, #4]
100002c4:	4770      	bx	lr
100002c6:	4b03      	ldr	r3, [pc, #12]	; (100002d4 <cmp_equ_zero()+0x24>)
100002c8:	2288      	movs	r2, #136	; 0x88
100002ca:	0592      	lsls	r2, r2, #22
100002cc:	605a      	str	r2, [r3, #4]
100002ce:	e7f9      	b.n	100002c4 <cmp_equ_zero()+0x14>
100002d0:	10001dc0 	.word	0x10001dc0
100002d4:	10001d20 	.word	0x10001d20

100002d8 <cmp_neq_zero()>:
100002d8:	4b06      	ldr	r3, [pc, #24]	; (100002f4 <cmp_neq_zero()+0x1c>)
100002da:	2200      	movs	r2, #0
100002dc:	605a      	str	r2, [r3, #4]
100002de:	685b      	ldr	r3, [r3, #4]
100002e0:	2b00      	cmp	r3, #0
100002e2:	d003      	beq.n	100002ec <cmp_neq_zero()+0x14>
100002e4:	4b03      	ldr	r3, [pc, #12]	; (100002f4 <cmp_neq_zero()+0x1c>)
100002e6:	3204      	adds	r2, #4
100002e8:	605a      	str	r2, [r3, #4]
100002ea:	4770      	bx	lr
100002ec:	4b01      	ldr	r3, [pc, #4]	; (100002f4 <cmp_neq_zero()+0x1c>)
100002ee:	2220      	movs	r2, #32
100002f0:	605a      	str	r2, [r3, #4]
100002f2:	e7fa      	b.n	100002ea <cmp_neq_zero()+0x12>
100002f4:	10001dc0 	.word	0x10001dc0

100002f8 <cmp_equ_bits()>:
100002f8:	4a07      	ldr	r2, [pc, #28]	; (10000318 <cmp_equ_bits()+0x20>)
100002fa:	2340      	movs	r3, #64	; 0x40
100002fc:	6053      	str	r3, [r2, #4]
100002fe:	6852      	ldr	r2, [r2, #4]
10000300:	4213      	tst	r3, r2
10000302:	d104      	bne.n	1000030e <cmp_equ_bits()+0x16>
10000304:	4b05      	ldr	r3, [pc, #20]	; (1000031c <cmp_equ_bits()+0x24>)
10000306:	22d0      	movs	r2, #208	; 0xd0
10000308:	0552      	lsls	r2, r2, #21
1000030a:	605a      	str	r2, [r3, #4]
1000030c:	4770      	bx	lr
1000030e:	4b03      	ldr	r3, [pc, #12]	; (1000031c <cmp_equ_bits()+0x24>)
10000310:	22b0      	movs	r2, #176	; 0xb0
10000312:	0552      	lsls	r2, r2, #21
10000314:	605a      	str	r2, [r3, #4]
10000316:	e7f9      	b.n	1000030c <cmp_equ_bits()+0x14>
10000318:	10001dc0 	.word	0x10001dc0
1000031c:	10001d20 	.word	0x10001d20

10000320 <cmp_neq_bits()>:
10000320:	4a06      	ldr	r2, [pc, #24]	; (1000033c <cmp_neq_bits()+0x1c>)
10000322:	2340      	movs	r3, #64	; 0x40
10000324:	6053      	str	r3, [r2, #4]
10000326:	6852      	ldr	r2, [r2, #4]
10000328:	4213      	tst	r3, r2
1000032a:	d103      	bne.n	10000334 <cmp_neq_bits()+0x14>
1000032c:	4b03      	ldr	r3, [pc, #12]	; (1000033c <cmp_neq_bits()+0x1c>)
1000032e:	2202      	movs	r2, #2
10000330:	605a      	str	r2, [r3, #4]
10000332:	4770      	bx	lr
10000334:	4b01      	ldr	r3, [pc, #4]	; (1000033c <cmp_neq_bits()+0x1c>)
10000336:	2220      	movs	r2, #32
10000338:	605a      	str	r2, [r3, #4]
1000033a:	e7fa      	b.n	10000332 <cmp_neq_bits()+0x12>
1000033c:	10001dc0 	.word	0x10001dc0

10000340 <cmp_equ_multi_bits()>:
10000340:	4a08      	ldr	r2, [pc, #32]	; (10000364 <cmp_equ_multi_bits()+0x24>)
10000342:	2360      	movs	r3, #96	; 0x60
10000344:	6053      	str	r3, [r2, #4]
10000346:	6852      	ldr	r2, [r2, #4]
10000348:	4013      	ands	r3, r2
1000034a:	2b60      	cmp	r3, #96	; 0x60
1000034c:	d004      	beq.n	10000358 <cmp_equ_multi_bits()+0x18>
1000034e:	4b06      	ldr	r3, [pc, #24]	; (10000368 <cmp_equ_multi_bits()+0x28>)
10000350:	22b8      	movs	r2, #184	; 0xb8
10000352:	0592      	lsls	r2, r2, #22
10000354:	605a      	str	r2, [r3, #4]
10000356:	4770      	bx	lr
10000358:	4b03      	ldr	r3, [pc, #12]	; (10000368 <cmp_equ_multi_bits()+0x28>)
1000035a:	2288      	movs	r2, #136	; 0x88
1000035c:	0592      	lsls	r2, r2, #22
1000035e:	605a      	str	r2, [r3, #4]
10000360:	e7f9      	b.n	10000356 <cmp_equ_multi_bits()+0x16>
10000362:	46c0      	nop			; (mov r8, r8)
10000364:	10001dc0 	.word	0x10001dc0
10000368:	10001d20 	.word	0x10001d20

1000036c <cmp_neq_multi_bits()>:
1000036c:	4a08      	ldr	r2, [pc, #32]	; (10000390 <cmp_neq_multi_bits()+0x24>)
1000036e:	2360      	movs	r3, #96	; 0x60
10000370:	6053      	str	r3, [r2, #4]
10000372:	6852      	ldr	r2, [r2, #4]
10000374:	4013      	ands	r3, r2
10000376:	2b60      	cmp	r3, #96	; 0x60
10000378:	d004      	beq.n	10000384 <cmp_neq_multi_bits()+0x18>
1000037a:	4b06      	ldr	r3, [pc, #24]	; (10000394 <cmp_neq_multi_bits()+0x28>)
1000037c:	22e8      	movs	r2, #232	; 0xe8
1000037e:	0592      	lsls	r2, r2, #22
10000380:	605a      	str	r2, [r3, #4]
10000382:	4770      	bx	lr
10000384:	4b03      	ldr	r3, [pc, #12]	; (10000394 <cmp_neq_multi_bits()+0x28>)
10000386:	22f8      	movs	r2, #248	; 0xf8
10000388:	0592      	lsls	r2, r2, #22
1000038a:	605a      	str	r2, [r3, #4]
1000038c:	e7f9      	b.n	10000382 <cmp_neq_multi_bits()+0x16>
1000038e:	46c0      	nop			; (mov r8, r8)
10000390:	10001dc0 	.word	0x10001dc0
10000394:	10001d20 	.word	0x10001d20

10000398 <cmp_equ_mskd()>:
10000398:	4b0e      	ldr	r3, [pc, #56]	; (100003d4 <cmp_equ_mskd()+0x3c>)
1000039a:	22e8      	movs	r2, #232	; 0xe8
1000039c:	0252      	lsls	r2, r2, #9
1000039e:	605a      	str	r2, [r3, #4]
100003a0:	685b      	ldr	r3, [r3, #4]
100003a2:	22f8      	movs	r2, #248	; 0xf8
100003a4:	0252      	lsls	r2, r2, #9
100003a6:	4013      	ands	r3, r2
100003a8:	2288      	movs	r2, #136	; 0x88
100003aa:	0252      	lsls	r2, r2, #9
100003ac:	4293      	cmp	r3, r2
100003ae:	d008      	beq.n	100003c2 <cmp_equ_mskd()+0x2a>
100003b0:	4909      	ldr	r1, [pc, #36]	; (100003d8 <cmp_equ_mskd()+0x40>)
100003b2:	684b      	ldr	r3, [r1, #4]
100003b4:	4a09      	ldr	r2, [pc, #36]	; (100003dc <cmp_equ_mskd()+0x44>)
100003b6:	401a      	ands	r2, r3
100003b8:	2388      	movs	r3, #136	; 0x88
100003ba:	059b      	lsls	r3, r3, #22
100003bc:	4313      	orrs	r3, r2
100003be:	604b      	str	r3, [r1, #4]
100003c0:	4770      	bx	lr
100003c2:	4905      	ldr	r1, [pc, #20]	; (100003d8 <cmp_equ_mskd()+0x40>)
100003c4:	684b      	ldr	r3, [r1, #4]
100003c6:	4a05      	ldr	r2, [pc, #20]	; (100003dc <cmp_equ_mskd()+0x44>)
100003c8:	401a      	ands	r2, r3
100003ca:	23e0      	movs	r3, #224	; 0xe0
100003cc:	051b      	lsls	r3, r3, #20
100003ce:	4313      	orrs	r3, r2
100003d0:	604b      	str	r3, [r1, #4]
100003d2:	e7f5      	b.n	100003c0 <cmp_equ_mskd()+0x28>
100003d4:	10001dc0 	.word	0x10001dc0
100003d8:	10001d20 	.word	0x10001d20
100003dc:	c1ffffff 	.word	0xc1ffffff

100003e0 <cmp_neq_mskd()>:
100003e0:	4b0c      	ldr	r3, [pc, #48]	; (10000414 <cmp_neq_mskd()+0x34>)
100003e2:	22e8      	movs	r2, #232	; 0xe8
100003e4:	0252      	lsls	r2, r2, #9
100003e6:	605a      	str	r2, [r3, #4]
100003e8:	685b      	ldr	r3, [r3, #4]
100003ea:	22f8      	movs	r2, #248	; 0xf8
100003ec:	0252      	lsls	r2, r2, #9
100003ee:	4013      	ands	r3, r2
100003f0:	2288      	movs	r2, #136	; 0x88
100003f2:	0252      	lsls	r2, r2, #9
100003f4:	4293      	cmp	r3, r2
100003f6:	d007      	beq.n	10000408 <cmp_neq_mskd()+0x28>
100003f8:	4a06      	ldr	r2, [pc, #24]	; (10000414 <cmp_neq_mskd()+0x34>)
100003fa:	6853      	ldr	r3, [r2, #4]
100003fc:	2106      	movs	r1, #6
100003fe:	438b      	bics	r3, r1
10000400:	3902      	subs	r1, #2
10000402:	430b      	orrs	r3, r1
10000404:	6053      	str	r3, [r2, #4]
10000406:	4770      	bx	lr
10000408:	4a02      	ldr	r2, [pc, #8]	; (10000414 <cmp_neq_mskd()+0x34>)
1000040a:	6853      	ldr	r3, [r2, #4]
1000040c:	2140      	movs	r1, #64	; 0x40
1000040e:	430b      	orrs	r3, r1
10000410:	6053      	str	r3, [r2, #4]
10000412:	e7f8      	b.n	10000406 <cmp_neq_mskd()+0x26>
10000414:	10001dc0 	.word	0x10001dc0

10000418 <cmp_equ_reg()>:
10000418:	4b07      	ldr	r3, [pc, #28]	; (10000438 <cmp_equ_reg()+0x20>)
1000041a:	2222      	movs	r2, #34	; 0x22
1000041c:	605a      	str	r2, [r3, #4]
1000041e:	685b      	ldr	r3, [r3, #4]
10000420:	2b22      	cmp	r3, #34	; 0x22
10000422:	d004      	beq.n	1000042e <cmp_equ_reg()+0x16>
10000424:	4b05      	ldr	r3, [pc, #20]	; (1000043c <cmp_equ_reg()+0x24>)
10000426:	22b8      	movs	r2, #184	; 0xb8
10000428:	0592      	lsls	r2, r2, #22
1000042a:	605a      	str	r2, [r3, #4]
1000042c:	4770      	bx	lr
1000042e:	4b03      	ldr	r3, [pc, #12]	; (1000043c <cmp_equ_reg()+0x24>)
10000430:	22a8      	movs	r2, #168	; 0xa8
10000432:	0592      	lsls	r2, r2, #22
10000434:	605a      	str	r2, [r3, #4]
10000436:	e7f9      	b.n	1000042c <cmp_equ_reg()+0x14>
10000438:	10001dc0 	.word	0x10001dc0
1000043c:	10001d20 	.word	0x10001d20

10000440 <cmp_neq_reg()>:
10000440:	4b06      	ldr	r3, [pc, #24]	; (1000045c <cmp_neq_reg()+0x1c>)
10000442:	2222      	movs	r2, #34	; 0x22
10000444:	605a      	str	r2, [r3, #4]
10000446:	685b      	ldr	r3, [r3, #4]
10000448:	2b22      	cmp	r3, #34	; 0x22
1000044a:	d003      	beq.n	10000454 <cmp_neq_reg()+0x14>
1000044c:	4b03      	ldr	r3, [pc, #12]	; (1000045c <cmp_neq_reg()+0x1c>)
1000044e:	3a20      	subs	r2, #32
10000450:	605a      	str	r2, [r3, #4]
10000452:	4770      	bx	lr
10000454:	4b01      	ldr	r3, [pc, #4]	; (1000045c <cmp_neq_reg()+0x1c>)
10000456:	2220      	movs	r2, #32
10000458:	605a      	str	r2, [r3, #4]
1000045a:	e7fa      	b.n	10000452 <cmp_neq_reg()+0x12>
1000045c:	10001dc0 	.word	0x10001dc0

10000460 <constexpr_bits_array()>:
10000460:	4b03      	ldr	r3, [pc, #12]	; (10000470 <constexpr_bits_array()+0x10>)
10000462:	2206      	movs	r2, #6
10000464:	62da      	str	r2, [r3, #44]	; 0x2c
10000466:	329a      	adds	r2, #154	; 0x9a
10000468:	2180      	movs	r1, #128	; 0x80
1000046a:	0189      	lsls	r1, r1, #6
1000046c:	5099      	str	r1, [r3, r2]
1000046e:	4770      	bx	lr
10000470:	10001c00 	.word	0x10001c00

10000474 <runtime_bits_array()>:
10000474:	b081      	sub	sp, #4
10000476:	2303      	movs	r3, #3
10000478:	9300      	str	r3, [sp, #0]
1000047a:	9b00      	ldr	r3, [sp, #0]
1000047c:	009b      	lsls	r3, r3, #2
1000047e:	4a03      	ldr	r2, [pc, #12]	; (1000048c <runtime_bits_array()+0x18>)
10000480:	4694      	mov	ip, r2
10000482:	4463      	add	r3, ip
10000484:	2221      	movs	r2, #33	; 0x21
10000486:	621a      	str	r2, [r3, #32]
10000488:	b001      	add	sp, #4
1000048a:	4770      	bx	lr
1000048c:	10001c00 	.word	0x10001c00

10000490 <prescaler_low()>:
10000490:	4b04      	ldr	r3, [pc, #16]	; (100004a4 <prescaler_low()+0x14>)
10000492:	2277      	movs	r2, #119	; 0x77
10000494:	605a      	str	r2, [r3, #4]
10000496:	685a      	ldr	r2, [r3, #4]
10000498:	237f      	movs	r3, #127	; 0x7f
1000049a:	4013      	ands	r3, r2
1000049c:	4a02      	ldr	r2, [pc, #8]	; (100004a8 <prescaler_low()+0x18>)
1000049e:	62d3      	str	r3, [r2, #44]	; 0x2c
100004a0:	4770      	bx	lr
100004a2:	46c0      	nop			; (mov r8, r8)
100004a4:	10001d20 	.word	0x10001d20
100004a8:	10001c00 	.word	0x10001c00

100004ac <prescaler_high()>:
100004ac:	4b04      	ldr	r3, [pc, #16]	; (100004c0 <prescaler_high()+0x14>)
100004ae:	22e8      	movs	r2, #232	; 0xe8
100004b0:	0592      	lsls	r2, r2, #22
100004b2:	605a      	str	r2, [r3, #4]
100004b4:	685b      	ldr	r3, [r3, #4]
100004b6:	009b      	lsls	r3, r3, #2
100004b8:	0edb      	lsrs	r3, r3, #27
100004ba:	4a02      	ldr	r2, [pc, #8]	; (100004c4 <prescaler_high()+0x18>)
100004bc:	62d3      	str	r3, [r2, #44]	; 0x2c
100004be:	4770      	bx	lr
100004c0:	10001d20 	.word	0x10001d20
100004c4:	10001c00 	.word	0x10001c00

100004c8 <reg_mskd_lss()>:
100004c8:	4b09      	ldr	r3, [pc, #36]	; (100004f0 <reg_mskd_lss()+0x28>)
100004ca:	22d8      	movs	r2, #216	; 0xd8
100004cc:	0592      	lsls	r2, r2, #22
100004ce:	605a      	str	r2, [r3, #4]
100004d0:	685b      	ldr	r3, [r3, #4]
100004d2:	22f8      	movs	r2, #248	; 0xf8
100004d4:	0592      	lsls	r2, r2, #22
100004d6:	4013      	ands	r3, r2
100004d8:	4a06      	ldr	r2, [pc, #24]	; (100004f4 <reg_mskd_lss()+0x2c>)
100004da:	4293      	cmp	r3, r2
100004dc:	d803      	bhi.n	100004e6 <reg_mskd_lss()+0x1e>
100004de:	4b06      	ldr	r3, [pc, #24]	; (100004f8 <reg_mskd_lss()+0x30>)
100004e0:	2202      	movs	r2, #2
100004e2:	605a      	str	r2, [r3, #4]
100004e4:	4770      	bx	lr
100004e6:	4b04      	ldr	r3, [pc, #16]	; (100004f8 <reg_mskd_lss()+0x30>)
100004e8:	2204      	movs	r2, #4
100004ea:	605a      	str	r2, [r3, #4]
100004ec:	e7fa      	b.n	100004e4 <reg_mskd_lss()+0x1c>
100004ee:	46c0      	nop			; (mov r8, r8)
100004f0:	10001d20 	.word	0x10001d20
100004f4:	37ffffff 	.word	0x37ffffff
100004f8:	10001dc0 	.word	0x10001dc0

100004fc <reg_mskd_leq()>:
100004fc:	4b0c      	ldr	r3, [pc, #48]	; (10000530 <reg_mskd_leq()+0x34>)
100004fe:	22b8      	movs	r2, #184	; 0xb8
10000500:	0592      	lsls	r2, r2, #22
10000502:	605a      	str	r2, [r3, #4]
10000504:	685b      	ldr	r3, [r3, #4]
10000506:	21f8      	movs	r1, #248	; 0xf8
10000508:	0589      	lsls	r1, r1, #22
1000050a:	400b      	ands	r3, r1
1000050c:	4293      	cmp	r3, r2
1000050e:	d80a      	bhi.n	10000526 <reg_mskd_leq()+0x2a>
10000510:	4b07      	ldr	r3, [pc, #28]	; (10000530 <reg_mskd_leq()+0x34>)
10000512:	685b      	ldr	r3, [r3, #4]
10000514:	400b      	ands	r3, r1
10000516:	22c0      	movs	r2, #192	; 0xc0
10000518:	0592      	lsls	r2, r2, #22
1000051a:	4293      	cmp	r3, r2
1000051c:	d803      	bhi.n	10000526 <reg_mskd_leq()+0x2a>
1000051e:	4b05      	ldr	r3, [pc, #20]	; (10000534 <reg_mskd_leq()+0x38>)
10000520:	2202      	movs	r2, #2
10000522:	605a      	str	r2, [r3, #4]
10000524:	e002      	b.n	1000052c <reg_mskd_leq()+0x30>
10000526:	4b03      	ldr	r3, [pc, #12]	; (10000534 <reg_mskd_leq()+0x38>)
10000528:	2204      	movs	r2, #4
1000052a:	605a      	str	r2, [r3, #4]
1000052c:	4770      	bx	lr
1000052e:	46c0      	nop			; (mov r8, r8)
10000530:	10001d20 	.word	0x10001d20
10000534:	10001dc0 	.word	0x10001dc0

10000538 <reg_mskd_gtr()>:
10000538:	4b09      	ldr	r3, [pc, #36]	; (10000560 <reg_mskd_gtr()+0x28>)
1000053a:	2298      	movs	r2, #152	; 0x98
1000053c:	0592      	lsls	r2, r2, #22
1000053e:	605a      	str	r2, [r3, #4]
10000540:	685b      	ldr	r3, [r3, #4]
10000542:	22f8      	movs	r2, #248	; 0xf8
10000544:	0592      	lsls	r2, r2, #22
10000546:	4013      	ands	r3, r2
10000548:	2290      	movs	r2, #144	; 0x90
1000054a:	0592      	lsls	r2, r2, #22
1000054c:	4293      	cmp	r3, r2
1000054e:	d903      	bls.n	10000558 <reg_mskd_gtr()+0x20>
10000550:	4b04      	ldr	r3, [pc, #16]	; (10000564 <reg_mskd_gtr()+0x2c>)
10000552:	2202      	movs	r2, #2
10000554:	605a      	str	r2, [r3, #4]
10000556:	4770      	bx	lr
10000558:	4b02      	ldr	r3, [pc, #8]	; (10000564 <reg_mskd_gtr()+0x2c>)
1000055a:	2204      	movs	r2, #4
1000055c:	605a      	str	r2, [r3, #4]
1000055e:	e7fa      	b.n	10000556 <reg_mskd_gtr()+0x1e>
10000560:	10001d20 	.word	0x10001d20
10000564:	10001dc0 	.word	0x10001dc0

10000568 <reg_mskd_geq()>:
10000568:	4b0d      	ldr	r3, [pc, #52]	; (100005a0 <reg_mskd_geq()+0x38>)
1000056a:	2288      	movs	r2, #136	; 0x88
1000056c:	0592      	lsls	r2, r2, #22
1000056e:	605a      	str	r2, [r3, #4]
10000570:	685b      	ldr	r3, [r3, #4]
10000572:	22f8      	movs	r2, #248	; 0xf8
10000574:	0592      	lsls	r2, r2, #22
10000576:	4013      	ands	r3, r2
10000578:	4a0a      	ldr	r2, [pc, #40]	; (100005a4 <reg_mskd_geq()+0x3c>)
1000057a:	4293      	cmp	r3, r2
1000057c:	d90b      	bls.n	10000596 <reg_mskd_geq()+0x2e>
1000057e:	4b08      	ldr	r3, [pc, #32]	; (100005a0 <reg_mskd_geq()+0x38>)
10000580:	685b      	ldr	r3, [r3, #4]
10000582:	22f8      	movs	r2, #248	; 0xf8
10000584:	0592      	lsls	r2, r2, #22
10000586:	4013      	ands	r3, r2
10000588:	4a07      	ldr	r2, [pc, #28]	; (100005a8 <reg_mskd_geq()+0x40>)
1000058a:	4293      	cmp	r3, r2
1000058c:	d903      	bls.n	10000596 <reg_mskd_geq()+0x2e>
1000058e:	4b07      	ldr	r3, [pc, #28]	; (100005ac <reg_mskd_geq()+0x44>)
10000590:	2202      	movs	r2, #2
10000592:	605a      	str	r2, [r3, #4]
10000594:	e002      	b.n	1000059c <reg_mskd_geq()+0x34>
10000596:	4b05      	ldr	r3, [pc, #20]	; (100005ac <reg_mskd_geq()+0x44>)
10000598:	2204      	movs	r2, #4
1000059a:	605a      	str	r2, [r3, #4]
1000059c:	4770      	bx	lr
1000059e:	46c0      	nop			; (mov r8, r8)
100005a0:	10001d20 	.word	0x10001d20
100005a4:	1fffffff 	.word	0x1fffffff
100005a8:	21ffffff 	.word	0x21ffffff
100005ac:	10001dc0 	.word	0x10001dc0

100005b0 <pos_cmp_eq()>:
100005b0:	4b01      	ldr	r3, [pc, #4]	; (100005b8 <pos_cmp_eq()+0x8>)
100005b2:	2202      	movs	r2, #2
100005b4:	605a      	str	r2, [r3, #4]
100005b6:	4770      	bx	lr
100005b8:	10001dc0 	.word	0x10001dc0

100005bc <pos_cmp_ne()>:
100005bc:	4b01      	ldr	r3, [pc, #4]	; (100005c4 <pos_cmp_ne()+0x8>)
100005be:	2202      	movs	r2, #2
100005c0:	605a      	str	r2, [r3, #4]
100005c2:	4770      	bx	lr
100005c4:	10001dc0 	.word	0x10001dc0

100005c8 <bits_extract_eq()>:
100005c8:	4b06      	ldr	r3, [pc, #24]	; (100005e4 <bits_extract_eq()+0x1c>)
100005ca:	2240      	movs	r2, #64	; 0x40
100005cc:	605a      	str	r2, [r3, #4]
100005ce:	685b      	ldr	r3, [r3, #4]
100005d0:	2b40      	cmp	r3, #64	; 0x40
100005d2:	d003      	beq.n	100005dc <bits_extract_eq()+0x14>
100005d4:	4b03      	ldr	r3, [pc, #12]	; (100005e4 <bits_extract_eq()+0x1c>)
100005d6:	2204      	movs	r2, #4
100005d8:	605a      	str	r2, [r3, #4]
100005da:	4770      	bx	lr
100005dc:	4b01      	ldr	r3, [pc, #4]	; (100005e4 <bits_extract_eq()+0x1c>)
100005de:	3a3e      	subs	r2, #62	; 0x3e
100005e0:	605a      	str	r2, [r3, #4]
100005e2:	e7fa      	b.n	100005da <bits_extract_eq()+0x12>
100005e4:	10001dc0 	.word	0x10001dc0

100005e8 <mskd_extract_eq()>:
100005e8:	4b06      	ldr	r3, [pc, #24]	; (10000604 <mskd_extract_eq()+0x1c>)
100005ea:	2202      	movs	r2, #2
100005ec:	605a      	str	r2, [r3, #4]
100005ee:	685b      	ldr	r3, [r3, #4]
100005f0:	2b02      	cmp	r3, #2
100005f2:	d003      	beq.n	100005fc <mskd_extract_eq()+0x14>
100005f4:	4b03      	ldr	r3, [pc, #12]	; (10000604 <mskd_extract_eq()+0x1c>)
100005f6:	2240      	movs	r2, #64	; 0x40
100005f8:	605a      	str	r2, [r3, #4]
100005fa:	4770      	bx	lr
100005fc:	4b01      	ldr	r3, [pc, #4]	; (10000604 <mskd_extract_eq()+0x1c>)
100005fe:	321e      	adds	r2, #30
10000600:	605a      	str	r2, [r3, #4]
10000602:	e7fa      	b.n	100005fa <mskd_extract_eq()+0x12>
10000604:	10001dc0 	.word	0x10001dc0

10000608 <mskd_extract_ne()>:
10000608:	4b06      	ldr	r3, [pc, #24]	; (10000624 <mskd_extract_ne()+0x1c>)
1000060a:	2204      	movs	r2, #4
1000060c:	605a      	str	r2, [r3, #4]
1000060e:	685b      	ldr	r3, [r3, #4]
10000610:	2b04      	cmp	r3, #4
10000612:	d003      	beq.n	1000061c <mskd_extract_ne()+0x14>
10000614:	4b03      	ldr	r3, [pc, #12]	; (10000624 <mskd_extract_ne()+0x1c>)
10000616:	2220      	movs	r2, #32
10000618:	605a      	str	r2, [r3, #4]
1000061a:	4770      	bx	lr
1000061c:	4b01      	ldr	r3, [pc, #4]	; (10000624 <mskd_extract_ne()+0x1c>)
1000061e:	323c      	adds	r2, #60	; 0x3c
10000620:	605a      	str	r2, [r3, #4]
10000622:	e7fa      	b.n	1000061a <mskd_extract_ne()+0x12>
10000624:	10001dc0 	.word	0x10001dc0

10000628 <mskd_extract_lss()>:
10000628:	4b07      	ldr	r3, [pc, #28]	; (10000648 <mskd_extract_lss()+0x20>)
1000062a:	22b0      	movs	r2, #176	; 0xb0
1000062c:	0552      	lsls	r2, r2, #21
1000062e:	605a      	str	r2, [r3, #4]
10000630:	685a      	ldr	r2, [r3, #4]
10000632:	4b06      	ldr	r3, [pc, #24]	; (1000064c <mskd_extract_lss()+0x24>)
10000634:	429a      	cmp	r2, r3
10000636:	d803      	bhi.n	10000640 <mskd_extract_lss()+0x18>
10000638:	4b05      	ldr	r3, [pc, #20]	; (10000650 <mskd_extract_lss()+0x28>)
1000063a:	2220      	movs	r2, #32
1000063c:	605a      	str	r2, [r3, #4]
1000063e:	4770      	bx	lr
10000640:	4b03      	ldr	r3, [pc, #12]	; (10000650 <mskd_extract_lss()+0x28>)
10000642:	2240      	movs	r2, #64	; 0x40
10000644:	605a      	str	r2, [r3, #4]
10000646:	e7fa      	b.n	1000063e <mskd_extract_lss()+0x16>
10000648:	10001d20 	.word	0x10001d20
1000064c:	17ffffff 	.word	0x17ffffff
10000650:	10001dc0 	.word	0x10001dc0

10000654 <mskd_extract_leq()>:
10000654:	4a07      	ldr	r2, [pc, #28]	; (10000674 <mskd_extract_leq()+0x20>)
10000656:	23b8      	movs	r3, #184	; 0xb8
10000658:	059b      	lsls	r3, r3, #22
1000065a:	6053      	str	r3, [r2, #4]
1000065c:	6852      	ldr	r2, [r2, #4]
1000065e:	429a      	cmp	r2, r3
10000660:	d903      	bls.n	1000066a <mskd_extract_leq()+0x16>
10000662:	4b05      	ldr	r3, [pc, #20]	; (10000678 <mskd_extract_leq()+0x24>)
10000664:	2240      	movs	r2, #64	; 0x40
10000666:	605a      	str	r2, [r3, #4]
10000668:	4770      	bx	lr
1000066a:	4b03      	ldr	r3, [pc, #12]	; (10000678 <mskd_extract_leq()+0x24>)
1000066c:	2220      	movs	r2, #32
1000066e:	605a      	str	r2, [r3, #4]
10000670:	e7fa      	b.n	10000668 <mskd_extract_leq()+0x14>
10000672:	46c0      	nop			; (mov r8, r8)
10000674:	10001d20 	.word	0x10001d20
10000678:	10001dc0 	.word	0x10001dc0

1000067c <mskd_extract_gtr()>:
1000067c:	4b08      	ldr	r3, [pc, #32]	; (100006a0 <mskd_extract_gtr()+0x24>)
1000067e:	2298      	movs	r2, #152	; 0x98
10000680:	0592      	lsls	r2, r2, #22
10000682:	605a      	str	r2, [r3, #4]
10000684:	685a      	ldr	r2, [r3, #4]
10000686:	2390      	movs	r3, #144	; 0x90
10000688:	059b      	lsls	r3, r3, #22
1000068a:	429a      	cmp	r2, r3
1000068c:	d903      	bls.n	10000696 <mskd_extract_gtr()+0x1a>
1000068e:	4b05      	ldr	r3, [pc, #20]	; (100006a4 <mskd_extract_gtr()+0x28>)
10000690:	2220      	movs	r2, #32
10000692:	605a      	str	r2, [r3, #4]
10000694:	4770      	bx	lr
10000696:	4b03      	ldr	r3, [pc, #12]	; (100006a4 <mskd_extract_gtr()+0x28>)
10000698:	2240      	movs	r2, #64	; 0x40
1000069a:	605a      	str	r2, [r3, #4]
1000069c:	e7fa      	b.n	10000694 <mskd_extract_gtr()+0x18>
1000069e:	46c0      	nop			; (mov r8, r8)
100006a0:	10001d20 	.word	0x10001d20
100006a4:	10001dc0 	.word	0x10001dc0

100006a8 <set_bits_global()>:
100006a8:	4a02      	ldr	r2, [pc, #8]	; (100006b4 <set_bits_global()+0xc>)
100006aa:	6853      	ldr	r3, [r2, #4]
100006ac:	2140      	movs	r1, #64	; 0x40
100006ae:	430b      	orrs	r3, r1
100006b0:	6053      	str	r3, [r2, #4]
100006b2:	4770      	bx	lr
100006b4:	10001dc0 	.word	0x10001dc0

100006b8 <ins_mskd_global()>:
100006b8:	4a03      	ldr	r2, [pc, #12]	; (100006c8 <ins_mskd_global()+0x10>)
100006ba:	6853      	ldr	r3, [r2, #4]
100006bc:	2106      	movs	r1, #6
100006be:	438b      	bics	r3, r1
100006c0:	3904      	subs	r1, #4
100006c2:	430b      	orrs	r3, r1
100006c4:	6053      	str	r3, [r2, #4]
100006c6:	4770      	bx	lr
100006c8:	10001dc0 	.word	0x10001dc0

100006cc <assign_array_global()>:
100006cc:	4b01      	ldr	r3, [pc, #4]	; (100006d4 <assign_array_global()+0x8>)
100006ce:	22bd      	movs	r2, #189	; 0xbd
100006d0:	601a      	str	r2, [r3, #0]
100006d2:	4770      	bx	lr
100006d4:	10001c2c 	.word	0x10001c2c

100006d8 <shifted_global()>:
100006d8:	4b04      	ldr	r3, [pc, #16]	; (100006ec <shifted_global()+0x14>)
100006da:	22b8      	movs	r2, #184	; 0xb8
100006dc:	0592      	lsls	r2, r2, #22
100006de:	605a      	str	r2, [r3, #4]
100006e0:	685b      	ldr	r3, [r3, #4]
100006e2:	009b      	lsls	r3, r3, #2
100006e4:	0edb      	lsrs	r3, r3, #27
100006e6:	4a02      	ldr	r2, [pc, #8]	; (100006f0 <shifted_global()+0x18>)
100006e8:	62d3      	str	r3, [r2, #44]	; 0x2c
100006ea:	4770      	bx	lr
100006ec:	10001d20 	.word	0x10001d20
100006f0:	10001c00 	.word	0x10001c00

100006f4 <assign_register_global()>:
100006f4:	4b01      	ldr	r3, [pc, #4]	; (100006fc <assign_register_global()+0x8>)
100006f6:	2204      	movs	r2, #4
100006f8:	605a      	str	r2, [r3, #4]
100006fa:	4770      	bx	lr
100006fc:	10001dc0 	.word	0x10001dc0

10000700 <copy_bits_equ()>:
10000700:	4a06      	ldr	r2, [pc, #24]	; (1000071c <copy_bits_equ()+0x1c>)
10000702:	2340      	movs	r3, #64	; 0x40
10000704:	6053      	str	r3, [r2, #4]
10000706:	6852      	ldr	r2, [r2, #4]
10000708:	4213      	tst	r3, r2
1000070a:	d003      	beq.n	10000714 <copy_bits_equ()+0x14>
1000070c:	4b03      	ldr	r3, [pc, #12]	; (1000071c <copy_bits_equ()+0x1c>)
1000070e:	2202      	movs	r2, #2
10000710:	605a      	str	r2, [r3, #4]
10000712:	4770      	bx	lr
10000714:	4b01      	ldr	r3, [pc, #4]	; (1000071c <copy_bits_equ()+0x1c>)
10000716:	2204      	movs	r2, #4
10000718:	605a      	str	r2, [r3, #4]
1000071a:	e7fa      	b.n	10000712 <copy_bits_equ()+0x12>
1000071c:	10001dc0 	.word	0x10001dc0

10000720 <copy_bits_neq()>:
10000720:	4a06      	ldr	r2, [pc, #24]	; (1000073c <copy_bits_neq()+0x1c>)
10000722:	2340      	movs	r3, #64	; 0x40
10000724:	6053      	str	r3, [r2, #4]
10000726:	6852      	ldr	r2, [r2, #4]
10000728:	4213      	tst	r3, r2
1000072a:	d103      	bne.n	10000734 <copy_bits_neq()+0x14>
1000072c:	4b03      	ldr	r3, [pc, #12]	; (1000073c <copy_bits_neq()+0x1c>)
1000072e:	2202      	movs	r2, #2
10000730:	605a      	str	r2, [r3, #4]
10000732:	4770      	bx	lr
10000734:	4b01      	ldr	r3, [pc, #4]	; (1000073c <copy_bits_neq()+0x1c>)
10000736:	2204      	movs	r2, #4
10000738:	605a      	str	r2, [r3, #4]
1000073a:	e7fa      	b.n	10000732 <copy_bits_neq()+0x12>
1000073c:	10001dc0 	.word	0x10001dc0

10000740 <copy_mskd_equ()>:
10000740:	4b08      	ldr	r3, [pc, #32]	; (10000764 <copy_mskd_equ()+0x24>)
10000742:	22b0      	movs	r2, #176	; 0xb0
10000744:	0552      	lsls	r2, r2, #21
10000746:	605a      	str	r2, [r3, #4]
10000748:	685b      	ldr	r3, [r3, #4]
1000074a:	21f8      	movs	r1, #248	; 0xf8
1000074c:	0589      	lsls	r1, r1, #22
1000074e:	400b      	ands	r3, r1
10000750:	4293      	cmp	r3, r2
10000752:	d003      	beq.n	1000075c <copy_mskd_equ()+0x1c>
10000754:	4b04      	ldr	r3, [pc, #16]	; (10000768 <copy_mskd_equ()+0x28>)
10000756:	2204      	movs	r2, #4
10000758:	605a      	str	r2, [r3, #4]
1000075a:	4770      	bx	lr
1000075c:	4b02      	ldr	r3, [pc, #8]	; (10000768 <copy_mskd_equ()+0x28>)
1000075e:	2202      	movs	r2, #2
10000760:	605a      	str	r2, [r3, #4]
10000762:	e7fa      	b.n	1000075a <copy_mskd_equ()+0x1a>
10000764:	10001d20 	.word	0x10001d20
10000768:	10001dc0 	.word	0x10001dc0

1000076c <copy_mskd_neq()>:
1000076c:	4b08      	ldr	r3, [pc, #32]	; (10000790 <copy_mskd_neq()+0x24>)
1000076e:	22d0      	movs	r2, #208	; 0xd0
10000770:	0552      	lsls	r2, r2, #21
10000772:	605a      	str	r2, [r3, #4]
10000774:	685b      	ldr	r3, [r3, #4]
10000776:	21f8      	movs	r1, #248	; 0xf8
10000778:	0589      	lsls	r1, r1, #22
1000077a:	400b      	ands	r3, r1
1000077c:	4293      	cmp	r3, r2
1000077e:	d003      	beq.n	10000788 <copy_mskd_neq()+0x1c>
10000780:	4b04      	ldr	r3, [pc, #16]	; (10000794 <copy_mskd_neq()+0x28>)
10000782:	2202      	movs	r2, #2
10000784:	605a      	str	r2, [r3, #4]
10000786:	4770      	bx	lr
10000788:	4b02      	ldr	r3, [pc, #8]	; (10000794 <copy_mskd_neq()+0x28>)
1000078a:	2204      	movs	r2, #4
1000078c:	605a      	str	r2, [r3, #4]
1000078e:	e7fa      	b.n	10000786 <copy_mskd_neq()+0x1a>
10000790:	10001d20 	.word	0x10001d20
10000794:	10001dc0 	.word	0x10001dc0

10000798 <copy_mskd_lss()>:
10000798:	4b09      	ldr	r3, [pc, #36]	; (100007c0 <copy_mskd_lss()+0x28>)
1000079a:	22d8      	movs	r2, #216	; 0xd8
1000079c:	0592      	lsls	r2, r2, #22
1000079e:	605a      	str	r2, [r3, #4]
100007a0:	685b      	ldr	r3, [r3, #4]
100007a2:	22f8      	movs	r2, #248	; 0xf8
100007a4:	0592      	lsls	r2, r2, #22
100007a6:	4013      	ands	r3, r2
100007a8:	4a06      	ldr	r2, [pc, #24]	; (100007c4 <copy_mskd_lss()+0x2c>)
100007aa:	4293      	cmp	r3, r2
100007ac:	d803      	bhi.n	100007b6 <copy_mskd_lss()+0x1e>
100007ae:	4b06      	ldr	r3, [pc, #24]	; (100007c8 <copy_mskd_lss()+0x30>)
100007b0:	2202      	movs	r2, #2
100007b2:	605a      	str	r2, [r3, #4]
100007b4:	4770      	bx	lr
100007b6:	4b04      	ldr	r3, [pc, #16]	; (100007c8 <copy_mskd_lss()+0x30>)
100007b8:	2204      	movs	r2, #4
100007ba:	605a      	str	r2, [r3, #4]
100007bc:	e7fa      	b.n	100007b4 <copy_mskd_lss()+0x1c>
100007be:	46c0      	nop			; (mov r8, r8)
100007c0:	10001d20 	.word	0x10001d20
100007c4:	37ffffff 	.word	0x37ffffff
100007c8:	10001dc0 	.word	0x10001dc0

100007cc <copy_mskd_leq()>:
100007cc:	4b08      	ldr	r3, [pc, #32]	; (100007f0 <copy_mskd_leq()+0x24>)
100007ce:	22b8      	movs	r2, #184	; 0xb8
100007d0:	0592      	lsls	r2, r2, #22
100007d2:	605a      	str	r2, [r3, #4]
100007d4:	685b      	ldr	r3, [r3, #4]
100007d6:	21f8      	movs	r1, #248	; 0xf8
100007d8:	0589      	lsls	r1, r1, #22
100007da:	400b      	ands	r3, r1
100007dc:	4293      	cmp	r3, r2
100007de:	d903      	bls.n	100007e8 <copy_mskd_leq()+0x1c>
100007e0:	4b04      	ldr	r3, [pc, #16]	; (100007f4 <copy_mskd_leq()+0x28>)
100007e2:	2204      	movs	r2, #4
100007e4:	605a      	str	r2, [r3, #4]
100007e6:	4770      	bx	lr
100007e8:	4b02      	ldr	r3, [pc, #8]	; (100007f4 <copy_mskd_leq()+0x28>)
100007ea:	2202      	movs	r2, #2
100007ec:	605a      	str	r2, [r3, #4]
100007ee:	e7fa      	b.n	100007e6 <copy_mskd_leq()+0x1a>
100007f0:	10001d20 	.word	0x10001d20
100007f4:	10001dc0 	.word	0x10001dc0

100007f8 <copy_mskd_gtr()>:
100007f8:	4b09      	ldr	r3, [pc, #36]	; (10000820 <copy_mskd_gtr()+0x28>)
100007fa:	2298      	movs	r2, #152	; 0x98
100007fc:	0592      	lsls	r2, r2, #22
100007fe:	605a      	str	r2, [r3, #4]
10000800:	685b      	ldr	r3, [r3, #4]
10000802:	22f8      	movs	r2, #248	; 0xf8
10000804:	0592      	lsls	r2, r2, #22
10000806:	4013      	ands	r3, r2
10000808:	2290      	movs	r2, #144	; 0x90
1000080a:	0592      	lsls	r2, r2, #22
1000080c:	4293      	cmp	r3, r2
1000080e:	d903      	bls.n	10000818 <copy_mskd_gtr()+0x20>
10000810:	4b04      	ldr	r3, [pc, #16]	; (10000824 <copy_mskd_gtr()+0x2c>)
10000812:	2202      	movs	r2, #2
10000814:	605a      	str	r2, [r3, #4]
10000816:	4770      	bx	lr
10000818:	4b02      	ldr	r3, [pc, #8]	; (10000824 <copy_mskd_gtr()+0x2c>)
1000081a:	2204      	movs	r2, #4
1000081c:	605a      	str	r2, [r3, #4]
1000081e:	e7fa      	b.n	10000816 <copy_mskd_gtr()+0x1e>
10000820:	10001d20 	.word	0x10001d20
10000824:	10001dc0 	.word	0x10001dc0

10000828 <copy_mskd_geq()>:
10000828:	4b09      	ldr	r3, [pc, #36]	; (10000850 <copy_mskd_geq()+0x28>)
1000082a:	2288      	movs	r2, #136	; 0x88
1000082c:	0592      	lsls	r2, r2, #22
1000082e:	605a      	str	r2, [r3, #4]
10000830:	685b      	ldr	r3, [r3, #4]
10000832:	22f8      	movs	r2, #248	; 0xf8
10000834:	0592      	lsls	r2, r2, #22
10000836:	4013      	ands	r3, r2
10000838:	4a06      	ldr	r2, [pc, #24]	; (10000854 <copy_mskd_geq()+0x2c>)
1000083a:	4293      	cmp	r3, r2
1000083c:	d803      	bhi.n	10000846 <copy_mskd_geq()+0x1e>
1000083e:	4b06      	ldr	r3, [pc, #24]	; (10000858 <copy_mskd_geq()+0x30>)
10000840:	2204      	movs	r2, #4
10000842:	605a      	str	r2, [r3, #4]
10000844:	4770      	bx	lr
10000846:	4b04      	ldr	r3, [pc, #16]	; (10000858 <copy_mskd_geq()+0x30>)
10000848:	2202      	movs	r2, #2
1000084a:	605a      	str	r2, [r3, #4]
1000084c:	e7fa      	b.n	10000844 <copy_mskd_geq()+0x1c>
1000084e:	46c0      	nop			; (mov r8, r8)
10000850:	10001d20 	.word	0x10001d20
10000854:	21ffffff 	.word	0x21ffffff
10000858:	10001dc0 	.word	0x10001dc0

1000085c <copy_shifted()>:
1000085c:	4b08      	ldr	r3, [pc, #32]	; (10000880 <copy_shifted()+0x24>)
1000085e:	22b0      	movs	r2, #176	; 0xb0
10000860:	0552      	lsls	r2, r2, #21
10000862:	605a      	str	r2, [r3, #4]
10000864:	685b      	ldr	r3, [r3, #4]
10000866:	009b      	lsls	r3, r3, #2
10000868:	0edb      	lsrs	r3, r3, #27
1000086a:	2b0b      	cmp	r3, #11
1000086c:	d003      	beq.n	10000876 <copy_shifted()+0x1a>
1000086e:	4b05      	ldr	r3, [pc, #20]	; (10000884 <copy_shifted()+0x28>)
10000870:	2204      	movs	r2, #4
10000872:	605a      	str	r2, [r3, #4]
10000874:	4770      	bx	lr
10000876:	4b03      	ldr	r3, [pc, #12]	; (10000884 <copy_shifted()+0x28>)
10000878:	2202      	movs	r2, #2
1000087a:	605a      	str	r2, [r3, #4]
1000087c:	e7fa      	b.n	10000874 <copy_shifted()+0x18>
1000087e:	46c0      	nop			; (mov r8, r8)
10000880:	10001d20 	.word	0x10001d20
10000884:	10001dc0 	.word	0x10001dc0

10000888 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
10000888:	4b02      	ldr	r3, [pc, #8]	; (10000894 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0xc>)
1000088a:	685a      	ldr	r2, [r3, #4]
1000088c:	4310      	orrs	r0, r2
1000088e:	6058      	str	r0, [r3, #4]
10000890:	4770      	bx	lr
10000892:	46c0      	nop			; (mov r8, r8)
10000894:	10001dc0 	.word	0x10001dc0

10000898 <call_bits_val_var()>:
10000898:	b500      	push	{lr}
1000089a:	2040      	movs	r0, #64	; 0x40
1000089c:	f7ff fff4 	bl	10000888 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100008a0:	bd00      	pop	{pc}

100008a2 <call_bits_val_const()>:
100008a2:	b500      	push	{lr}
100008a4:	2040      	movs	r0, #64	; 0x40
100008a6:	f7ff ffef 	bl	10000888 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100008aa:	bd00      	pop	{pc}

100008ac <call_bits_val_global()>:
100008ac:	b500      	push	{lr}
100008ae:	2040      	movs	r0, #64	; 0x40
100008b0:	f7ff ffea 	bl	10000888 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100008b4:	bd00      	pop	{pc}

100008b6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
100008b6:	4a03      	ldr	r2, [pc, #12]	; (100008c4 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0xe>)
100008b8:	6853      	ldr	r3, [r2, #4]
100008ba:	6801      	ldr	r1, [r0, #0]
100008bc:	430b      	orrs	r3, r1
100008be:	6053      	str	r3, [r2, #4]
100008c0:	4770      	bx	lr
100008c2:	46c0      	nop			; (mov r8, r8)
100008c4:	10001dc0 	.word	0x10001dc0

100008c8 <call_bits_ref_var()>:
100008c8:	b500      	push	{lr}
100008ca:	b081      	sub	sp, #4
100008cc:	2301      	movs	r3, #1
100008ce:	9300      	str	r3, [sp, #0]
100008d0:	4668      	mov	r0, sp
100008d2:	f7ff fff0 	bl	100008b6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
100008d6:	b001      	add	sp, #4
100008d8:	bd00      	pop	{pc}

100008da <call_bits_ref_const()>:
100008da:	b500      	push	{lr}
100008dc:	b081      	sub	sp, #4
100008de:	2301      	movs	r3, #1
100008e0:	9300      	str	r3, [sp, #0]
100008e2:	4668      	mov	r0, sp
100008e4:	f7ff ffe7 	bl	100008b6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
100008e8:	b001      	add	sp, #4
100008ea:	bd00      	pop	{pc}

100008ec <call_bits_ref_global()>:
100008ec:	b500      	push	{lr}
100008ee:	b081      	sub	sp, #4
100008f0:	2340      	movs	r3, #64	; 0x40
100008f2:	9300      	str	r3, [sp, #0]
100008f4:	4668      	mov	r0, sp
100008f6:	f7ff ffde 	bl	100008b6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
100008fa:	b001      	add	sp, #4
100008fc:	bd00      	pop	{pc}

100008fe <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
100008fe:	4a03      	ldr	r2, [pc, #12]	; (1000090c <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
10000900:	6853      	ldr	r3, [r2, #4]
10000902:	4383      	bics	r3, r0
10000904:	430b      	orrs	r3, r1
10000906:	6053      	str	r3, [r2, #4]
10000908:	4770      	bx	lr
1000090a:	46c0      	nop			; (mov r8, r8)
1000090c:	10001dc0 	.word	0x10001dc0

10000910 <call_mskd_val_var()>:
10000910:	b500      	push	{lr}
10000912:	2006      	movs	r0, #6
10000914:	2102      	movs	r1, #2
10000916:	f7ff fff2 	bl	100008fe <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
1000091a:	bd00      	pop	{pc}

1000091c <call_mskd_val_const()>:
1000091c:	b500      	push	{lr}
1000091e:	2006      	movs	r0, #6
10000920:	2102      	movs	r1, #2
10000922:	f7ff ffec 	bl	100008fe <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000926:	bd00      	pop	{pc}

10000928 <call_mskd_val_global()>:
10000928:	b500      	push	{lr}
1000092a:	2006      	movs	r0, #6
1000092c:	2102      	movs	r1, #2
1000092e:	f7ff ffe6 	bl	100008fe <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000932:	bd00      	pop	{pc}

10000934 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
10000934:	4a03      	ldr	r2, [pc, #12]	; (10000944 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x10>)
10000936:	6853      	ldr	r3, [r2, #4]
10000938:	6801      	ldr	r1, [r0, #0]
1000093a:	438b      	bics	r3, r1
1000093c:	6841      	ldr	r1, [r0, #4]
1000093e:	430b      	orrs	r3, r1
10000940:	6053      	str	r3, [r2, #4]
10000942:	4770      	bx	lr
10000944:	10001dc0 	.word	0x10001dc0

10000948 <call_mskd_ref_var()>:
10000948:	b500      	push	{lr}
1000094a:	b082      	sub	sp, #8
1000094c:	4b04      	ldr	r3, [pc, #16]	; (10000960 <call_mskd_ref_var()+0x18>)
1000094e:	681a      	ldr	r2, [r3, #0]
10000950:	685b      	ldr	r3, [r3, #4]
10000952:	9200      	str	r2, [sp, #0]
10000954:	9301      	str	r3, [sp, #4]
10000956:	4668      	mov	r0, sp
10000958:	f7ff ffec 	bl	10000934 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
1000095c:	b002      	add	sp, #8
1000095e:	bd00      	pop	{pc}
10000960:	1000160c 	.word	0x1000160c

10000964 <call_mskd_ref_const()>:
10000964:	b500      	push	{lr}
10000966:	b082      	sub	sp, #8
10000968:	2306      	movs	r3, #6
1000096a:	9300      	str	r3, [sp, #0]
1000096c:	3b02      	subs	r3, #2
1000096e:	9301      	str	r3, [sp, #4]
10000970:	4668      	mov	r0, sp
10000972:	f7ff ffdf 	bl	10000934 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
10000976:	b002      	add	sp, #8
10000978:	bd00      	pop	{pc}

1000097a <call_mskd_ref_global()>:
1000097a:	b500      	push	{lr}
1000097c:	b082      	sub	sp, #8
1000097e:	2306      	movs	r3, #6
10000980:	9300      	str	r3, [sp, #0]
10000982:	3b04      	subs	r3, #4
10000984:	9301      	str	r3, [sp, #4]
10000986:	4668      	mov	r0, sp
10000988:	f7ff ffd4 	bl	10000934 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
1000098c:	b002      	add	sp, #8
1000098e:	bd00      	pop	{pc}

10000990 <periph_bits(mcu::Serial volatile*)>:
10000990:	6843      	ldr	r3, [r0, #4]
10000992:	2240      	movs	r2, #64	; 0x40
10000994:	4313      	orrs	r3, r2
10000996:	6043      	str	r3, [r0, #4]
10000998:	4770      	bx	lr

1000099a <call_periph_bits()>:
1000099a:	b500      	push	{lr}
1000099c:	4801      	ldr	r0, [pc, #4]	; (100009a4 <call_periph_bits()+0xa>)
1000099e:	f7ff fff7 	bl	10000990 <periph_bits(mcu::Serial volatile*)>
100009a2:	bd00      	pop	{pc}
100009a4:	10001dc0 	.word	0x10001dc0

100009a8 <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
100009a8:	6843      	ldr	r3, [r0, #4]
100009aa:	4319      	orrs	r1, r3
100009ac:	6041      	str	r1, [r0, #4]
100009ae:	4770      	bx	lr

100009b0 <call_periph_bits_val()>:
100009b0:	b500      	push	{lr}
100009b2:	2140      	movs	r1, #64	; 0x40
100009b4:	4801      	ldr	r0, [pc, #4]	; (100009bc <call_periph_bits_val()+0xc>)
100009b6:	f7ff fff7 	bl	100009a8 <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>
100009ba:	bd00      	pop	{pc}
100009bc:	10001dc0 	.word	0x10001dc0

100009c0 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
100009c0:	6803      	ldr	r3, [r0, #0]
100009c2:	4319      	orrs	r1, r3
100009c4:	6001      	str	r1, [r0, #0]
100009c6:	4770      	bx	lr

100009c8 <call_reg_bits_val()>:
100009c8:	b500      	push	{lr}
100009ca:	2140      	movs	r1, #64	; 0x40
100009cc:	4801      	ldr	r0, [pc, #4]	; (100009d4 <call_reg_bits_val()+0xc>)
100009ce:	f7ff fff7 	bl	100009c0 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
100009d2:	bd00      	pop	{pc}
100009d4:	10001dc4 	.word	0x10001dc4

100009d8 <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
100009d8:	6843      	ldr	r3, [r0, #4]
100009da:	680a      	ldr	r2, [r1, #0]
100009dc:	4313      	orrs	r3, r2
100009de:	6043      	str	r3, [r0, #4]
100009e0:	4770      	bx	lr

100009e2 <call_periph_bits_ref()>:
100009e2:	b500      	push	{lr}
100009e4:	b081      	sub	sp, #4
100009e6:	2340      	movs	r3, #64	; 0x40
100009e8:	9300      	str	r3, [sp, #0]
100009ea:	4669      	mov	r1, sp
100009ec:	4802      	ldr	r0, [pc, #8]	; (100009f8 <call_periph_bits_ref()+0x16>)
100009ee:	f7ff fff3 	bl	100009d8 <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
100009f2:	b001      	add	sp, #4
100009f4:	bd00      	pop	{pc}
100009f6:	46c0      	nop			; (mov r8, r8)
100009f8:	10001dc0 	.word	0x10001dc0

100009fc <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
100009fc:	6803      	ldr	r3, [r0, #0]
100009fe:	680a      	ldr	r2, [r1, #0]
10000a00:	4313      	orrs	r3, r2
10000a02:	6003      	str	r3, [r0, #0]
10000a04:	4770      	bx	lr

10000a06 <call_reg_bits_ref()>:
10000a06:	b500      	push	{lr}
10000a08:	b081      	sub	sp, #4
10000a0a:	2340      	movs	r3, #64	; 0x40
10000a0c:	9300      	str	r3, [sp, #0]
10000a0e:	4669      	mov	r1, sp
10000a10:	4802      	ldr	r0, [pc, #8]	; (10000a1c <call_reg_bits_ref()+0x16>)
10000a12:	f7ff fff3 	bl	100009fc <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
10000a16:	b001      	add	sp, #4
10000a18:	bd00      	pop	{pc}
10000a1a:	46c0      	nop			; (mov r8, r8)
10000a1c:	10001dc4 	.word	0x10001dc4

10000a20 <periph_mskd(mcu::Serial volatile*)>:
10000a20:	6843      	ldr	r3, [r0, #4]
10000a22:	2206      	movs	r2, #6
10000a24:	4393      	bics	r3, r2
10000a26:	3a04      	subs	r2, #4
10000a28:	4313      	orrs	r3, r2
10000a2a:	6043      	str	r3, [r0, #4]
10000a2c:	4770      	bx	lr

10000a2e <call_periph_mskd()>:
10000a2e:	b500      	push	{lr}
10000a30:	4801      	ldr	r0, [pc, #4]	; (10000a38 <call_periph_mskd()+0xa>)
10000a32:	f7ff fff5 	bl	10000a20 <periph_mskd(mcu::Serial volatile*)>
10000a36:	bd00      	pop	{pc}
10000a38:	10001dc0 	.word	0x10001dc0

10000a3c <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a3c:	6843      	ldr	r3, [r0, #4]
10000a3e:	438b      	bics	r3, r1
10000a40:	4313      	orrs	r3, r2
10000a42:	6043      	str	r3, [r0, #4]
10000a44:	4770      	bx	lr

10000a46 <call_periph_mskd_val()>:
10000a46:	b500      	push	{lr}
10000a48:	2106      	movs	r1, #6
10000a4a:	2202      	movs	r2, #2
10000a4c:	4801      	ldr	r0, [pc, #4]	; (10000a54 <call_periph_mskd_val()+0xe>)
10000a4e:	f7ff fff5 	bl	10000a3c <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000a52:	bd00      	pop	{pc}
10000a54:	10001dc0 	.word	0x10001dc0

10000a58 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a58:	6803      	ldr	r3, [r0, #0]
10000a5a:	438b      	bics	r3, r1
10000a5c:	4313      	orrs	r3, r2
10000a5e:	6003      	str	r3, [r0, #0]
10000a60:	4770      	bx	lr

10000a62 <call_reg_mskd_val()>:
10000a62:	b500      	push	{lr}
10000a64:	2106      	movs	r1, #6
10000a66:	2202      	movs	r2, #2
10000a68:	4801      	ldr	r0, [pc, #4]	; (10000a70 <call_reg_mskd_val()+0xe>)
10000a6a:	f7ff fff5 	bl	10000a58 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000a6e:	bd00      	pop	{pc}
10000a70:	10001dc4 	.word	0x10001dc4

10000a74 <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a74:	6843      	ldr	r3, [r0, #4]
10000a76:	438b      	bics	r3, r1
10000a78:	4313      	orrs	r3, r2
10000a7a:	6043      	str	r3, [r0, #4]
10000a7c:	4770      	bx	lr

10000a7e <call_periph_mskd_ref()>:
10000a7e:	b500      	push	{lr}
10000a80:	2106      	movs	r1, #6
10000a82:	2202      	movs	r2, #2
10000a84:	4801      	ldr	r0, [pc, #4]	; (10000a8c <call_periph_mskd_ref()+0xe>)
10000a86:	f7ff fff5 	bl	10000a74 <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000a8a:	bd00      	pop	{pc}
10000a8c:	10001dc0 	.word	0x10001dc0

10000a90 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a90:	6803      	ldr	r3, [r0, #0]
10000a92:	438b      	bics	r3, r1
10000a94:	4313      	orrs	r3, r2
10000a96:	6003      	str	r3, [r0, #0]
10000a98:	4770      	bx	lr

10000a9a <call_reg_mskd_ref()>:
10000a9a:	b500      	push	{lr}
10000a9c:	2106      	movs	r1, #6
10000a9e:	2202      	movs	r2, #2
10000aa0:	4801      	ldr	r0, [pc, #4]	; (10000aa8 <call_reg_mskd_ref()+0xe>)
10000aa2:	f7ff fff5 	bl	10000a90 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000aa6:	bd00      	pop	{pc}
10000aa8:	10001dc4 	.word	0x10001dc4

10000aac <return_bits()>:
10000aac:	2020      	movs	r0, #32
10000aae:	4770      	bx	lr

10000ab0 <call_return_bits()>:
10000ab0:	b500      	push	{lr}
10000ab2:	f7ff fffb 	bl	10000aac <return_bits()>
10000ab6:	2820      	cmp	r0, #32
10000ab8:	d004      	beq.n	10000ac4 <call_return_bits()+0x14>
10000aba:	4b05      	ldr	r3, [pc, #20]	; (10000ad0 <call_return_bits()+0x20>)
10000abc:	22c0      	movs	r2, #192	; 0xc0
10000abe:	04d2      	lsls	r2, r2, #19
10000ac0:	605a      	str	r2, [r3, #4]
10000ac2:	bd00      	pop	{pc}
10000ac4:	4b02      	ldr	r3, [pc, #8]	; (10000ad0 <call_return_bits()+0x20>)
10000ac6:	22a8      	movs	r2, #168	; 0xa8
10000ac8:	0592      	lsls	r2, r2, #22
10000aca:	605a      	str	r2, [r3, #4]
10000acc:	e7f9      	b.n	10000ac2 <call_return_bits()+0x12>
10000ace:	46c0      	nop			; (mov r8, r8)
10000ad0:	10001d20 	.word	0x10001d20

10000ad4 <return_mskd()>:
10000ad4:	2318      	movs	r3, #24
10000ad6:	6003      	str	r3, [r0, #0]
10000ad8:	3b10      	subs	r3, #16
10000ada:	6043      	str	r3, [r0, #4]
10000adc:	4770      	bx	lr

10000ade <call_return_mskd()>:
10000ade:	b500      	push	{lr}
10000ae0:	b082      	sub	sp, #8
10000ae2:	4668      	mov	r0, sp
10000ae4:	f7ff fff6 	bl	10000ad4 <return_mskd()>
10000ae8:	9b01      	ldr	r3, [sp, #4]
10000aea:	9a00      	ldr	r2, [sp, #0]
10000aec:	2a18      	cmp	r2, #24
10000aee:	d005      	beq.n	10000afc <call_return_mskd()+0x1e>
10000af0:	4b06      	ldr	r3, [pc, #24]	; (10000b0c <call_return_mskd()+0x2e>)
10000af2:	2298      	movs	r2, #152	; 0x98
10000af4:	0592      	lsls	r2, r2, #22
10000af6:	605a      	str	r2, [r3, #4]
10000af8:	b002      	add	sp, #8
10000afa:	bd00      	pop	{pc}
10000afc:	2b08      	cmp	r3, #8
10000afe:	d1f7      	bne.n	10000af0 <call_return_mskd()+0x12>
10000b00:	4b02      	ldr	r3, [pc, #8]	; (10000b0c <call_return_mskd()+0x2e>)
10000b02:	2288      	movs	r2, #136	; 0x88
10000b04:	0592      	lsls	r2, r2, #22
10000b06:	605a      	str	r2, [r3, #4]
10000b08:	e7f6      	b.n	10000af8 <call_return_mskd()+0x1a>
10000b0a:	46c0      	nop			; (mov r8, r8)
10000b0c:	10001d20 	.word	0x10001d20

10000b10 <return_reg()>:
10000b10:	4b02      	ldr	r3, [pc, #8]	; (10000b1c <return_reg()+0xc>)
10000b12:	2240      	movs	r2, #64	; 0x40
10000b14:	605a      	str	r2, [r3, #4]
10000b16:	4802      	ldr	r0, [pc, #8]	; (10000b20 <return_reg()+0x10>)
10000b18:	4770      	bx	lr
10000b1a:	46c0      	nop			; (mov r8, r8)
10000b1c:	10001dc0 	.word	0x10001dc0
10000b20:	10001dc4 	.word	0x10001dc4

10000b24 <call_return_reg()>:
10000b24:	b500      	push	{lr}
10000b26:	f7ff fff3 	bl	10000b10 <return_reg()>
10000b2a:	6803      	ldr	r3, [r0, #0]
10000b2c:	2b40      	cmp	r3, #64	; 0x40
10000b2e:	d004      	beq.n	10000b3a <call_return_reg()+0x16>
10000b30:	4b04      	ldr	r3, [pc, #16]	; (10000b44 <call_return_reg()+0x20>)
10000b32:	22b8      	movs	r2, #184	; 0xb8
10000b34:	0592      	lsls	r2, r2, #22
10000b36:	605a      	str	r2, [r3, #4]
10000b38:	bd00      	pop	{pc}
10000b3a:	4b02      	ldr	r3, [pc, #8]	; (10000b44 <call_return_reg()+0x20>)
10000b3c:	22f0      	movs	r2, #240	; 0xf0
10000b3e:	0552      	lsls	r2, r2, #21
10000b40:	605a      	str	r2, [r3, #4]
10000b42:	e7f9      	b.n	10000b38 <call_return_reg()+0x14>
10000b44:	10001d20 	.word	0x10001d20

10000b48 <return_periph()>:
10000b48:	4801      	ldr	r0, [pc, #4]	; (10000b50 <return_periph()+0x8>)
10000b4a:	2340      	movs	r3, #64	; 0x40
10000b4c:	6043      	str	r3, [r0, #4]
10000b4e:	4770      	bx	lr
10000b50:	10001dc0 	.word	0x10001dc0

10000b54 <call_return_periph()>:
10000b54:	b500      	push	{lr}
10000b56:	f7ff fff7 	bl	10000b48 <return_periph()>
10000b5a:	6843      	ldr	r3, [r0, #4]
10000b5c:	2b40      	cmp	r3, #64	; 0x40
10000b5e:	d004      	beq.n	10000b6a <call_return_periph()+0x16>
10000b60:	4b04      	ldr	r3, [pc, #16]	; (10000b74 <call_return_periph()+0x20>)
10000b62:	22a8      	movs	r2, #168	; 0xa8
10000b64:	0592      	lsls	r2, r2, #22
10000b66:	605a      	str	r2, [r3, #4]
10000b68:	bd00      	pop	{pc}
10000b6a:	4b02      	ldr	r3, [pc, #8]	; (10000b74 <call_return_periph()+0x20>)
10000b6c:	2298      	movs	r2, #152	; 0x98
10000b6e:	0592      	lsls	r2, r2, #22
10000b70:	605a      	str	r2, [r3, #4]
10000b72:	e7f9      	b.n	10000b68 <call_return_periph()+0x14>
10000b74:	10001d20 	.word	0x10001d20

10000b78 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
10000b78:	2805      	cmp	r0, #5
10000b7a:	d005      	beq.n	10000b88 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x10>
10000b7c:	2806      	cmp	r0, #6
10000b7e:	d007      	beq.n	10000b90 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x18>
10000b80:	4b05      	ldr	r3, [pc, #20]	; (10000b98 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
10000b82:	2255      	movs	r2, #85	; 0x55
10000b84:	62da      	str	r2, [r3, #44]	; 0x2c
10000b86:	4770      	bx	lr
10000b88:	4b03      	ldr	r3, [pc, #12]	; (10000b98 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
10000b8a:	2233      	movs	r2, #51	; 0x33
10000b8c:	62da      	str	r2, [r3, #44]	; 0x2c
10000b8e:	e7fa      	b.n	10000b86 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
10000b90:	4b01      	ldr	r3, [pc, #4]	; (10000b98 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
10000b92:	2244      	movs	r2, #68	; 0x44
10000b94:	62da      	str	r2, [r3, #44]	; 0x2c
10000b96:	e7f6      	b.n	10000b86 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
10000b98:	10001c00 	.word	0x10001c00

10000b9c <call_pos_val()>:
10000b9c:	b500      	push	{lr}
10000b9e:	2005      	movs	r0, #5
10000ba0:	f7ff ffea 	bl	10000b78 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
10000ba4:	2006      	movs	r0, #6
10000ba6:	f7ff ffe7 	bl	10000b78 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
10000baa:	bd00      	pop	{pc}

10000bac <call_pos_val_global()>:
10000bac:	b500      	push	{lr}
10000bae:	2006      	movs	r0, #6
10000bb0:	f7ff ffe2 	bl	10000b78 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
10000bb4:	bd00      	pop	{pc}

10000bb6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
10000bb6:	6803      	ldr	r3, [r0, #0]
10000bb8:	2b05      	cmp	r3, #5
10000bba:	d005      	beq.n	10000bc8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x12>
10000bbc:	2b06      	cmp	r3, #6
10000bbe:	d007      	beq.n	10000bd0 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1a>
10000bc0:	4b05      	ldr	r3, [pc, #20]	; (10000bd8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
10000bc2:	2288      	movs	r2, #136	; 0x88
10000bc4:	62da      	str	r2, [r3, #44]	; 0x2c
10000bc6:	4770      	bx	lr
10000bc8:	4b03      	ldr	r3, [pc, #12]	; (10000bd8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
10000bca:	2266      	movs	r2, #102	; 0x66
10000bcc:	62da      	str	r2, [r3, #44]	; 0x2c
10000bce:	e7fa      	b.n	10000bc6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
10000bd0:	4b01      	ldr	r3, [pc, #4]	; (10000bd8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
10000bd2:	2277      	movs	r2, #119	; 0x77
10000bd4:	62da      	str	r2, [r3, #44]	; 0x2c
10000bd6:	e7f6      	b.n	10000bc6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
10000bd8:	10001c00 	.word	0x10001c00

10000bdc <call_pos_ref()>:
10000bdc:	b510      	push	{r4, lr}
10000bde:	b082      	sub	sp, #8
10000be0:	2405      	movs	r4, #5
10000be2:	9401      	str	r4, [sp, #4]
10000be4:	a801      	add	r0, sp, #4
10000be6:	f7ff ffe6 	bl	10000bb6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000bea:	9400      	str	r4, [sp, #0]
10000bec:	4668      	mov	r0, sp
10000bee:	f7ff ffe2 	bl	10000bb6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000bf2:	b002      	add	sp, #8
10000bf4:	bd10      	pop	{r4, pc}

10000bf6 <call_pos_ref_global()>:
10000bf6:	b500      	push	{lr}
10000bf8:	b081      	sub	sp, #4
10000bfa:	2306      	movs	r3, #6
10000bfc:	9300      	str	r3, [sp, #0]
10000bfe:	4668      	mov	r0, sp
10000c00:	f7ff ffd9 	bl	10000bb6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000c04:	b001      	add	sp, #4
10000c06:	bd00      	pop	{pc}

10000c08 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000c08:	4a02      	ldr	r2, [pc, #8]	; (10000c14 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xc>)
10000c0a:	6853      	ldr	r3, [r2, #4]
10000c0c:	4383      	bics	r3, r0
10000c0e:	430b      	orrs	r3, r1
10000c10:	6053      	str	r3, [r2, #4]
10000c12:	4770      	bx	lr
10000c14:	10001dc0 	.word	0x10001dc0

10000c18 <call_range_val(unsigned int)>:
10000c18:	b500      	push	{lr}
10000c1a:	0001      	movs	r1, r0
10000c1c:	20f8      	movs	r0, #248	; 0xf8
10000c1e:	0309      	lsls	r1, r1, #12
10000c20:	0240      	lsls	r0, r0, #9
10000c22:	f7ff fff1 	bl	10000c08 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000c26:	bd00      	pop	{pc}

10000c28 <call_range_val_port()>:
10000c28:	b500      	push	{lr}
10000c2a:	201f      	movs	r0, #31
10000c2c:	f7ff fff4 	bl	10000c18 <call_range_val(unsigned int)>
10000c30:	bd00      	pop	{pc}

10000c32 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000c32:	4a03      	ldr	r2, [pc, #12]	; (10000c40 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
10000c34:	6853      	ldr	r3, [r2, #4]
10000c36:	4383      	bics	r3, r0
10000c38:	430b      	orrs	r3, r1
10000c3a:	6053      	str	r3, [r2, #4]
10000c3c:	4770      	bx	lr
10000c3e:	46c0      	nop			; (mov r8, r8)
10000c40:	10001dc0 	.word	0x10001dc0

10000c44 <call_range_ref(unsigned int)>:
10000c44:	b500      	push	{lr}
10000c46:	0001      	movs	r1, r0
10000c48:	20f8      	movs	r0, #248	; 0xf8
10000c4a:	0309      	lsls	r1, r1, #12
10000c4c:	0240      	lsls	r0, r0, #9
10000c4e:	f7ff fff0 	bl	10000c32 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000c52:	bd00      	pop	{pc}

10000c54 <call_range_ref_port()>:
10000c54:	b500      	push	{lr}
10000c56:	200c      	movs	r0, #12
10000c58:	f7ff fff4 	bl	10000c44 <call_range_ref(unsigned int)>
10000c5c:	bd00      	pop	{pc}

10000c5e <check_array_range_pass(unsigned int)>:
10000c5e:	2816      	cmp	r0, #22
10000c60:	d803      	bhi.n	10000c6a <check_array_range_pass(unsigned int)+0xc>
10000c62:	4b04      	ldr	r3, [pc, #16]	; (10000c74 <check_array_range_pass(unsigned int)+0x16>)
10000c64:	227f      	movs	r2, #127	; 0x7f
10000c66:	62da      	str	r2, [r3, #44]	; 0x2c
10000c68:	4770      	bx	lr
10000c6a:	4b02      	ldr	r3, [pc, #8]	; (10000c74 <check_array_range_pass(unsigned int)+0x16>)
10000c6c:	2283      	movs	r2, #131	; 0x83
10000c6e:	62da      	str	r2, [r3, #44]	; 0x2c
10000c70:	e7fa      	b.n	10000c68 <check_array_range_pass(unsigned int)+0xa>
10000c72:	46c0      	nop			; (mov r8, r8)
10000c74:	10001c00 	.word	0x10001c00

10000c78 <check_array_range_fail(unsigned int)>:
10000c78:	2816      	cmp	r0, #22
10000c7a:	d803      	bhi.n	10000c84 <check_array_range_fail(unsigned int)+0xc>
10000c7c:	4b03      	ldr	r3, [pc, #12]	; (10000c8c <check_array_range_fail(unsigned int)+0x14>)
10000c7e:	2295      	movs	r2, #149	; 0x95
10000c80:	62da      	str	r2, [r3, #44]	; 0x2c
10000c82:	4770      	bx	lr
10000c84:	4b01      	ldr	r3, [pc, #4]	; (10000c8c <check_array_range_fail(unsigned int)+0x14>)
10000c86:	2297      	movs	r2, #151	; 0x97
10000c88:	62da      	str	r2, [r3, #44]	; 0x2c
10000c8a:	e7fa      	b.n	10000c82 <check_array_range_fail(unsigned int)+0xa>
10000c8c:	10001c00 	.word	0x10001c00

10000c90 <check_bits_range_pass(unsigned int)>:
10000c90:	280f      	cmp	r0, #15
10000c92:	d803      	bhi.n	10000c9c <check_bits_range_pass(unsigned int)+0xc>
10000c94:	4b03      	ldr	r3, [pc, #12]	; (10000ca4 <check_bits_range_pass(unsigned int)+0x14>)
10000c96:	229d      	movs	r2, #157	; 0x9d
10000c98:	62da      	str	r2, [r3, #44]	; 0x2c
10000c9a:	4770      	bx	lr
10000c9c:	4b01      	ldr	r3, [pc, #4]	; (10000ca4 <check_bits_range_pass(unsigned int)+0x14>)
10000c9e:	22a3      	movs	r2, #163	; 0xa3
10000ca0:	62da      	str	r2, [r3, #44]	; 0x2c
10000ca2:	e7fa      	b.n	10000c9a <check_bits_range_pass(unsigned int)+0xa>
10000ca4:	10001c00 	.word	0x10001c00

10000ca8 <check_bits_range_fail(unsigned int)>:
10000ca8:	280f      	cmp	r0, #15
10000caa:	d803      	bhi.n	10000cb4 <check_bits_range_fail(unsigned int)+0xc>
10000cac:	4b03      	ldr	r3, [pc, #12]	; (10000cbc <check_bits_range_fail(unsigned int)+0x14>)
10000cae:	22a7      	movs	r2, #167	; 0xa7
10000cb0:	62da      	str	r2, [r3, #44]	; 0x2c
10000cb2:	4770      	bx	lr
10000cb4:	4b01      	ldr	r3, [pc, #4]	; (10000cbc <check_bits_range_fail(unsigned int)+0x14>)
10000cb6:	22ad      	movs	r2, #173	; 0xad
10000cb8:	62da      	str	r2, [r3, #44]	; 0x2c
10000cba:	e7fa      	b.n	10000cb2 <check_bits_range_fail(unsigned int)+0xa>
10000cbc:	10001c00 	.word	0x10001c00

10000cc0 <check_mskd_range_pass(unsigned int)>:
10000cc0:	281f      	cmp	r0, #31
10000cc2:	d803      	bhi.n	10000ccc <check_mskd_range_pass(unsigned int)+0xc>
10000cc4:	4b03      	ldr	r3, [pc, #12]	; (10000cd4 <check_mskd_range_pass(unsigned int)+0x14>)
10000cc6:	22b3      	movs	r2, #179	; 0xb3
10000cc8:	62da      	str	r2, [r3, #44]	; 0x2c
10000cca:	4770      	bx	lr
10000ccc:	4b01      	ldr	r3, [pc, #4]	; (10000cd4 <check_mskd_range_pass(unsigned int)+0x14>)
10000cce:	22b5      	movs	r2, #181	; 0xb5
10000cd0:	62da      	str	r2, [r3, #44]	; 0x2c
10000cd2:	e7fa      	b.n	10000cca <check_mskd_range_pass(unsigned int)+0xa>
10000cd4:	10001c00 	.word	0x10001c00

10000cd8 <check_mskd_range_fail(unsigned int)>:
10000cd8:	281f      	cmp	r0, #31
10000cda:	d803      	bhi.n	10000ce4 <check_mskd_range_fail(unsigned int)+0xc>
10000cdc:	4b03      	ldr	r3, [pc, #12]	; (10000cec <check_mskd_range_fail(unsigned int)+0x14>)
10000cde:	22bf      	movs	r2, #191	; 0xbf
10000ce0:	62da      	str	r2, [r3, #44]	; 0x2c
10000ce2:	4770      	bx	lr
10000ce4:	4b01      	ldr	r3, [pc, #4]	; (10000cec <check_mskd_range_fail(unsigned int)+0x14>)
10000ce6:	22c1      	movs	r2, #193	; 0xc1
10000ce8:	62da      	str	r2, [r3, #44]	; 0x2c
10000cea:	e7fa      	b.n	10000ce2 <check_mskd_range_fail(unsigned int)+0xa>
10000cec:	10001c00 	.word	0x10001c00

10000cf0 <bits_extract_ne()>:
10000cf0:	4b06      	ldr	r3, [pc, #24]	; (10000d0c <bits_extract_ne()+0x1c>)
10000cf2:	2220      	movs	r2, #32
10000cf4:	605a      	str	r2, [r3, #4]
10000cf6:	685b      	ldr	r3, [r3, #4]
10000cf8:	2b20      	cmp	r3, #32
10000cfa:	d003      	beq.n	10000d04 <bits_extract_ne()+0x14>
10000cfc:	4b03      	ldr	r3, [pc, #12]	; (10000d0c <bits_extract_ne()+0x1c>)
10000cfe:	3a1e      	subs	r2, #30
10000d00:	605a      	str	r2, [r3, #4]
10000d02:	4770      	bx	lr
10000d04:	4b01      	ldr	r3, [pc, #4]	; (10000d0c <bits_extract_ne()+0x1c>)
10000d06:	2204      	movs	r2, #4
10000d08:	605a      	str	r2, [r3, #4]
10000d0a:	e7fa      	b.n	10000d02 <bits_extract_ne()+0x12>
10000d0c:	10001dc0 	.word	0x10001dc0

10000d10 <mskd_extract_geq()>:
10000d10:	4b07      	ldr	r3, [pc, #28]	; (10000d30 <mskd_extract_geq()+0x20>)
10000d12:	22b0      	movs	r2, #176	; 0xb0
10000d14:	0552      	lsls	r2, r2, #21
10000d16:	605a      	str	r2, [r3, #4]
10000d18:	685a      	ldr	r2, [r3, #4]
10000d1a:	4b06      	ldr	r3, [pc, #24]	; (10000d34 <mskd_extract_geq()+0x24>)
10000d1c:	429a      	cmp	r2, r3
10000d1e:	d803      	bhi.n	10000d28 <mskd_extract_geq()+0x18>
10000d20:	4b05      	ldr	r3, [pc, #20]	; (10000d38 <mskd_extract_geq()+0x28>)
10000d22:	2240      	movs	r2, #64	; 0x40
10000d24:	605a      	str	r2, [r3, #4]
10000d26:	4770      	bx	lr
10000d28:	4b03      	ldr	r3, [pc, #12]	; (10000d38 <mskd_extract_geq()+0x28>)
10000d2a:	2220      	movs	r2, #32
10000d2c:	605a      	str	r2, [r3, #4]
10000d2e:	e7fa      	b.n	10000d26 <mskd_extract_geq()+0x16>
10000d30:	10001d20 	.word	0x10001d20
10000d34:	15ffffff 	.word	0x15ffffff
10000d38:	10001dc0 	.word	0x10001dc0

10000d3c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>:
10000d3c:	4b04      	ldr	r3, [pc, #16]	; (10000d50 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x14>)
10000d3e:	22b8      	movs	r2, #184	; 0xb8
10000d40:	0592      	lsls	r2, r2, #22
10000d42:	605a      	str	r2, [r3, #4]
10000d44:	685b      	ldr	r3, [r3, #4]
10000d46:	4018      	ands	r0, r3
10000d48:	40c8      	lsrs	r0, r1
10000d4a:	4b02      	ldr	r3, [pc, #8]	; (10000d54 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x18>)
10000d4c:	62d8      	str	r0, [r3, #44]	; 0x2c
10000d4e:	4770      	bx	lr
10000d50:	10001d20 	.word	0x10001d20
10000d54:	10001c00 	.word	0x10001c00

10000d58 <call_shifted_const_val()>:
10000d58:	b500      	push	{lr}
10000d5a:	20f8      	movs	r0, #248	; 0xf8
10000d5c:	0580      	lsls	r0, r0, #22
10000d5e:	2119      	movs	r1, #25
10000d60:	f7ff ffec 	bl	10000d3c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
10000d64:	bd00      	pop	{pc}

10000d66 <call_shifted_var_val()>:
10000d66:	b500      	push	{lr}
10000d68:	20f8      	movs	r0, #248	; 0xf8
10000d6a:	0580      	lsls	r0, r0, #22
10000d6c:	2119      	movs	r1, #25
10000d6e:	f7ff ffe5 	bl	10000d3c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
10000d72:	bd00      	pop	{pc}

10000d74 <call_shifted_global_val()>:
10000d74:	b500      	push	{lr}
10000d76:	20f8      	movs	r0, #248	; 0xf8
10000d78:	0580      	lsls	r0, r0, #22
10000d7a:	2119      	movs	r1, #25
10000d7c:	f7ff ffde 	bl	10000d3c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
10000d80:	bd00      	pop	{pc}

10000d82 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>:
10000d82:	4b06      	ldr	r3, [pc, #24]	; (10000d9c <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1a>)
10000d84:	22b8      	movs	r2, #184	; 0xb8
10000d86:	0592      	lsls	r2, r2, #22
10000d88:	605a      	str	r2, [r3, #4]
10000d8a:	685b      	ldr	r3, [r3, #4]
10000d8c:	6802      	ldr	r2, [r0, #0]
10000d8e:	4013      	ands	r3, r2
10000d90:	6842      	ldr	r2, [r0, #4]
10000d92:	40d3      	lsrs	r3, r2
10000d94:	4a02      	ldr	r2, [pc, #8]	; (10000da0 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1e>)
10000d96:	62d3      	str	r3, [r2, #44]	; 0x2c
10000d98:	4770      	bx	lr
10000d9a:	46c0      	nop			; (mov r8, r8)
10000d9c:	10001d20 	.word	0x10001d20
10000da0:	10001c00 	.word	0x10001c00

10000da4 <call_shifted_const_ref()>:
10000da4:	b500      	push	{lr}
10000da6:	b082      	sub	sp, #8
10000da8:	4b04      	ldr	r3, [pc, #16]	; (10000dbc <call_shifted_const_ref()+0x18>)
10000daa:	689a      	ldr	r2, [r3, #8]
10000dac:	68db      	ldr	r3, [r3, #12]
10000dae:	9200      	str	r2, [sp, #0]
10000db0:	9301      	str	r3, [sp, #4]
10000db2:	4668      	mov	r0, sp
10000db4:	f7ff ffe5 	bl	10000d82 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
10000db8:	b002      	add	sp, #8
10000dba:	bd00      	pop	{pc}
10000dbc:	1000160c 	.word	0x1000160c

10000dc0 <call_shifted_var_ref()>:
10000dc0:	b500      	push	{lr}
10000dc2:	b082      	sub	sp, #8
10000dc4:	4b04      	ldr	r3, [pc, #16]	; (10000dd8 <call_shifted_var_ref()+0x18>)
10000dc6:	691a      	ldr	r2, [r3, #16]
10000dc8:	695b      	ldr	r3, [r3, #20]
10000dca:	9200      	str	r2, [sp, #0]
10000dcc:	9301      	str	r3, [sp, #4]
10000dce:	4668      	mov	r0, sp
10000dd0:	f7ff ffd7 	bl	10000d82 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
10000dd4:	b002      	add	sp, #8
10000dd6:	bd00      	pop	{pc}
10000dd8:	1000160c 	.word	0x1000160c

10000ddc <call_shifted_global_ref()>:
10000ddc:	b500      	push	{lr}
10000dde:	b082      	sub	sp, #8
10000de0:	4b04      	ldr	r3, [pc, #16]	; (10000df4 <call_shifted_global_ref()+0x18>)
10000de2:	689a      	ldr	r2, [r3, #8]
10000de4:	68db      	ldr	r3, [r3, #12]
10000de6:	9200      	str	r2, [sp, #0]
10000de8:	9301      	str	r3, [sp, #4]
10000dea:	4668      	mov	r0, sp
10000dec:	f7ff ffc9 	bl	10000d82 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
10000df0:	b002      	add	sp, #8
10000df2:	bd00      	pop	{pc}
10000df4:	1000160c 	.word	0x1000160c

10000df8 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>:
10000df8:	0643      	lsls	r3, r0, #25
10000dfa:	d403      	bmi.n	10000e04 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0xc>
10000dfc:	4b03      	ldr	r3, [pc, #12]	; (10000e0c <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0x14>)
10000dfe:	2204      	movs	r2, #4
10000e00:	605a      	str	r2, [r3, #4]
10000e02:	4770      	bx	lr
10000e04:	4b01      	ldr	r3, [pc, #4]	; (10000e0c <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0x14>)
10000e06:	2202      	movs	r2, #2
10000e08:	605a      	str	r2, [r3, #4]
10000e0a:	e7fa      	b.n	10000e02 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0xa>
10000e0c:	10001dc0 	.word	0x10001dc0

10000e10 <call_copy_bits_val()>:
10000e10:	b500      	push	{lr}
10000e12:	4b03      	ldr	r3, [pc, #12]	; (10000e20 <call_copy_bits_val()+0x10>)
10000e14:	2240      	movs	r2, #64	; 0x40
10000e16:	605a      	str	r2, [r3, #4]
10000e18:	6858      	ldr	r0, [r3, #4]
10000e1a:	f7ff ffed 	bl	10000df8 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>
10000e1e:	bd00      	pop	{pc}
10000e20:	10001dc0 	.word	0x10001dc0

10000e24 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>:
10000e24:	6803      	ldr	r3, [r0, #0]
10000e26:	065b      	lsls	r3, r3, #25
10000e28:	d403      	bmi.n	10000e32 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0xe>
10000e2a:	4b04      	ldr	r3, [pc, #16]	; (10000e3c <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0x18>)
10000e2c:	2204      	movs	r2, #4
10000e2e:	605a      	str	r2, [r3, #4]
10000e30:	4770      	bx	lr
10000e32:	4b02      	ldr	r3, [pc, #8]	; (10000e3c <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0x18>)
10000e34:	2202      	movs	r2, #2
10000e36:	605a      	str	r2, [r3, #4]
10000e38:	e7fa      	b.n	10000e30 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0xc>
10000e3a:	46c0      	nop			; (mov r8, r8)
10000e3c:	10001dc0 	.word	0x10001dc0

10000e40 <call_copy_bits_ref()>:
10000e40:	b500      	push	{lr}
10000e42:	b081      	sub	sp, #4
10000e44:	4b04      	ldr	r3, [pc, #16]	; (10000e58 <call_copy_bits_ref()+0x18>)
10000e46:	2240      	movs	r2, #64	; 0x40
10000e48:	605a      	str	r2, [r3, #4]
10000e4a:	685b      	ldr	r3, [r3, #4]
10000e4c:	9300      	str	r3, [sp, #0]
10000e4e:	4668      	mov	r0, sp
10000e50:	f7ff ffe8 	bl	10000e24 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>
10000e54:	b001      	add	sp, #4
10000e56:	bd00      	pop	{pc}
10000e58:	10001dc0 	.word	0x10001dc0

10000e5c <run>:
10000e5c:	b530      	push	{r4, r5, lr}
10000e5e:	4bfb      	ldr	r3, [pc, #1004]	; (1000124c <run+0x3f0>)
10000e60:	781b      	ldrb	r3, [r3, #0]
10000e62:	2b00      	cmp	r3, #0
10000e64:	d104      	bne.n	10000e70 <run+0x14>
10000e66:	4bf9      	ldr	r3, [pc, #996]	; (1000124c <run+0x3f0>)
10000e68:	4af9      	ldr	r2, [pc, #996]	; (10001250 <run+0x3f4>)
10000e6a:	609a      	str	r2, [r3, #8]
10000e6c:	2201      	movs	r2, #1
10000e6e:	701a      	strb	r2, [r3, #0]
10000e70:	4bf6      	ldr	r3, [pc, #984]	; (1000124c <run+0x3f0>)
10000e72:	7b1b      	ldrb	r3, [r3, #12]
10000e74:	2b00      	cmp	r3, #0
10000e76:	d104      	bne.n	10000e82 <run+0x26>
10000e78:	4bf4      	ldr	r3, [pc, #976]	; (1000124c <run+0x3f0>)
10000e7a:	4af6      	ldr	r2, [pc, #984]	; (10001254 <run+0x3f8>)
10000e7c:	615a      	str	r2, [r3, #20]
10000e7e:	2201      	movs	r2, #1
10000e80:	731a      	strb	r2, [r3, #12]
10000e82:	4bf2      	ldr	r3, [pc, #968]	; (1000124c <run+0x3f0>)
10000e84:	7e1b      	ldrb	r3, [r3, #24]
10000e86:	2b00      	cmp	r3, #0
10000e88:	d104      	bne.n	10000e94 <run+0x38>
10000e8a:	4bf0      	ldr	r3, [pc, #960]	; (1000124c <run+0x3f0>)
10000e8c:	4af2      	ldr	r2, [pc, #968]	; (10001258 <run+0x3fc>)
10000e8e:	621a      	str	r2, [r3, #32]
10000e90:	2201      	movs	r2, #1
10000e92:	761a      	strb	r2, [r3, #24]
10000e94:	4ced      	ldr	r4, [pc, #948]	; (1000124c <run+0x3f0>)
10000e96:	2200      	movs	r2, #0
10000e98:	68a1      	ldr	r1, [r4, #8]
10000e9a:	48f0      	ldr	r0, [pc, #960]	; (1000125c <run+0x400>)
10000e9c:	f000 fb3a 	bl	10001514 <do_test>
10000ea0:	2201      	movs	r2, #1
10000ea2:	68a1      	ldr	r1, [r4, #8]
10000ea4:	48ee      	ldr	r0, [pc, #952]	; (10001260 <run+0x404>)
10000ea6:	f000 fb35 	bl	10001514 <do_test>
10000eaa:	2202      	movs	r2, #2
10000eac:	68a1      	ldr	r1, [r4, #8]
10000eae:	48ed      	ldr	r0, [pc, #948]	; (10001264 <run+0x408>)
10000eb0:	f000 fb30 	bl	10001514 <do_test>
10000eb4:	2203      	movs	r2, #3
10000eb6:	68a1      	ldr	r1, [r4, #8]
10000eb8:	48eb      	ldr	r0, [pc, #940]	; (10001268 <run+0x40c>)
10000eba:	f000 fb2b 	bl	10001514 <do_test>
10000ebe:	2204      	movs	r2, #4
10000ec0:	68a1      	ldr	r1, [r4, #8]
10000ec2:	48ea      	ldr	r0, [pc, #936]	; (1000126c <run+0x410>)
10000ec4:	f000 fb26 	bl	10001514 <do_test>
10000ec8:	2205      	movs	r2, #5
10000eca:	68a1      	ldr	r1, [r4, #8]
10000ecc:	48e8      	ldr	r0, [pc, #928]	; (10001270 <run+0x414>)
10000ece:	f000 fb21 	bl	10001514 <do_test>
10000ed2:	2206      	movs	r2, #6
10000ed4:	68a1      	ldr	r1, [r4, #8]
10000ed6:	48e7      	ldr	r0, [pc, #924]	; (10001274 <run+0x418>)
10000ed8:	f000 fb1c 	bl	10001514 <do_test>
10000edc:	2207      	movs	r2, #7
10000ede:	68a1      	ldr	r1, [r4, #8]
10000ee0:	48e5      	ldr	r0, [pc, #916]	; (10001278 <run+0x41c>)
10000ee2:	f000 fb17 	bl	10001514 <do_test>
10000ee6:	2208      	movs	r2, #8
10000ee8:	68a1      	ldr	r1, [r4, #8]
10000eea:	48e4      	ldr	r0, [pc, #912]	; (1000127c <run+0x420>)
10000eec:	f000 fb12 	bl	10001514 <do_test>
10000ef0:	2209      	movs	r2, #9
10000ef2:	68a1      	ldr	r1, [r4, #8]
10000ef4:	48e2      	ldr	r0, [pc, #904]	; (10001280 <run+0x424>)
10000ef6:	f000 fb0d 	bl	10001514 <do_test>
10000efa:	220a      	movs	r2, #10
10000efc:	68a1      	ldr	r1, [r4, #8]
10000efe:	48e1      	ldr	r0, [pc, #900]	; (10001284 <run+0x428>)
10000f00:	f000 fb08 	bl	10001514 <do_test>
10000f04:	220b      	movs	r2, #11
10000f06:	68a1      	ldr	r1, [r4, #8]
10000f08:	48df      	ldr	r0, [pc, #892]	; (10001288 <run+0x42c>)
10000f0a:	f000 fb03 	bl	10001514 <do_test>
10000f0e:	220c      	movs	r2, #12
10000f10:	68a1      	ldr	r1, [r4, #8]
10000f12:	48de      	ldr	r0, [pc, #888]	; (1000128c <run+0x430>)
10000f14:	f000 fafe 	bl	10001514 <do_test>
10000f18:	220d      	movs	r2, #13
10000f1a:	68a1      	ldr	r1, [r4, #8]
10000f1c:	48dc      	ldr	r0, [pc, #880]	; (10001290 <run+0x434>)
10000f1e:	f000 faf9 	bl	10001514 <do_test>
10000f22:	220e      	movs	r2, #14
10000f24:	68a1      	ldr	r1, [r4, #8]
10000f26:	48db      	ldr	r0, [pc, #876]	; (10001294 <run+0x438>)
10000f28:	f000 faf4 	bl	10001514 <do_test>
10000f2c:	220f      	movs	r2, #15
10000f2e:	68a1      	ldr	r1, [r4, #8]
10000f30:	48d9      	ldr	r0, [pc, #868]	; (10001298 <run+0x43c>)
10000f32:	f000 faef 	bl	10001514 <do_test>
10000f36:	2210      	movs	r2, #16
10000f38:	68a1      	ldr	r1, [r4, #8]
10000f3a:	48d8      	ldr	r0, [pc, #864]	; (1000129c <run+0x440>)
10000f3c:	f000 faea 	bl	10001514 <do_test>
10000f40:	2211      	movs	r2, #17
10000f42:	68a1      	ldr	r1, [r4, #8]
10000f44:	48d6      	ldr	r0, [pc, #856]	; (100012a0 <run+0x444>)
10000f46:	f000 fae5 	bl	10001514 <do_test>
10000f4a:	2212      	movs	r2, #18
10000f4c:	68a1      	ldr	r1, [r4, #8]
10000f4e:	48d5      	ldr	r0, [pc, #852]	; (100012a4 <run+0x448>)
10000f50:	f000 fae0 	bl	10001514 <do_test>
10000f54:	2213      	movs	r2, #19
10000f56:	68a1      	ldr	r1, [r4, #8]
10000f58:	48d3      	ldr	r0, [pc, #844]	; (100012a8 <run+0x44c>)
10000f5a:	f000 fadb 	bl	10001514 <do_test>
10000f5e:	2214      	movs	r2, #20
10000f60:	68a1      	ldr	r1, [r4, #8]
10000f62:	48d2      	ldr	r0, [pc, #840]	; (100012ac <run+0x450>)
10000f64:	f000 fad6 	bl	10001514 <do_test>
10000f68:	2215      	movs	r2, #21
10000f6a:	68a1      	ldr	r1, [r4, #8]
10000f6c:	48d0      	ldr	r0, [pc, #832]	; (100012b0 <run+0x454>)
10000f6e:	f000 fad1 	bl	10001514 <do_test>
10000f72:	2216      	movs	r2, #22
10000f74:	68a1      	ldr	r1, [r4, #8]
10000f76:	48cf      	ldr	r0, [pc, #828]	; (100012b4 <run+0x458>)
10000f78:	f000 facc 	bl	10001514 <do_test>
10000f7c:	2217      	movs	r2, #23
10000f7e:	68a1      	ldr	r1, [r4, #8]
10000f80:	48cd      	ldr	r0, [pc, #820]	; (100012b8 <run+0x45c>)
10000f82:	f000 fac7 	bl	10001514 <do_test>
10000f86:	2218      	movs	r2, #24
10000f88:	68a1      	ldr	r1, [r4, #8]
10000f8a:	48cc      	ldr	r0, [pc, #816]	; (100012bc <run+0x460>)
10000f8c:	f000 fac2 	bl	10001514 <do_test>
10000f90:	2219      	movs	r2, #25
10000f92:	68a1      	ldr	r1, [r4, #8]
10000f94:	48ca      	ldr	r0, [pc, #808]	; (100012c0 <run+0x464>)
10000f96:	f000 fabd 	bl	10001514 <do_test>
10000f9a:	221a      	movs	r2, #26
10000f9c:	68a1      	ldr	r1, [r4, #8]
10000f9e:	48c9      	ldr	r0, [pc, #804]	; (100012c4 <run+0x468>)
10000fa0:	f000 fab8 	bl	10001514 <do_test>
10000fa4:	221b      	movs	r2, #27
10000fa6:	68a1      	ldr	r1, [r4, #8]
10000fa8:	48c7      	ldr	r0, [pc, #796]	; (100012c8 <run+0x46c>)
10000faa:	f000 fab3 	bl	10001514 <do_test>
10000fae:	221c      	movs	r2, #28
10000fb0:	68a1      	ldr	r1, [r4, #8]
10000fb2:	48c6      	ldr	r0, [pc, #792]	; (100012cc <run+0x470>)
10000fb4:	f000 faae 	bl	10001514 <do_test>
10000fb8:	221d      	movs	r2, #29
10000fba:	68a1      	ldr	r1, [r4, #8]
10000fbc:	48c4      	ldr	r0, [pc, #784]	; (100012d0 <run+0x474>)
10000fbe:	f000 faa9 	bl	10001514 <do_test>
10000fc2:	221e      	movs	r2, #30
10000fc4:	68a1      	ldr	r1, [r4, #8]
10000fc6:	48c3      	ldr	r0, [pc, #780]	; (100012d4 <run+0x478>)
10000fc8:	f000 faa4 	bl	10001514 <do_test>
10000fcc:	221f      	movs	r2, #31
10000fce:	68a1      	ldr	r1, [r4, #8]
10000fd0:	48c1      	ldr	r0, [pc, #772]	; (100012d8 <run+0x47c>)
10000fd2:	f000 fa9f 	bl	10001514 <do_test>
10000fd6:	2220      	movs	r2, #32
10000fd8:	68a1      	ldr	r1, [r4, #8]
10000fda:	48c0      	ldr	r0, [pc, #768]	; (100012dc <run+0x480>)
10000fdc:	f000 fa9a 	bl	10001514 <do_test>
10000fe0:	2221      	movs	r2, #33	; 0x21
10000fe2:	68a1      	ldr	r1, [r4, #8]
10000fe4:	48be      	ldr	r0, [pc, #760]	; (100012e0 <run+0x484>)
10000fe6:	f000 fa95 	bl	10001514 <do_test>
10000fea:	2222      	movs	r2, #34	; 0x22
10000fec:	68a1      	ldr	r1, [r4, #8]
10000fee:	48bd      	ldr	r0, [pc, #756]	; (100012e4 <run+0x488>)
10000ff0:	f000 fa90 	bl	10001514 <do_test>
10000ff4:	2223      	movs	r2, #35	; 0x23
10000ff6:	68a1      	ldr	r1, [r4, #8]
10000ff8:	48bb      	ldr	r0, [pc, #748]	; (100012e8 <run+0x48c>)
10000ffa:	f000 fa8b 	bl	10001514 <do_test>
10000ffe:	2224      	movs	r2, #36	; 0x24
10001000:	68a1      	ldr	r1, [r4, #8]
10001002:	48ba      	ldr	r0, [pc, #744]	; (100012ec <run+0x490>)
10001004:	f000 fa86 	bl	10001514 <do_test>
10001008:	2225      	movs	r2, #37	; 0x25
1000100a:	6961      	ldr	r1, [r4, #20]
1000100c:	48b8      	ldr	r0, [pc, #736]	; (100012f0 <run+0x494>)
1000100e:	f000 fa81 	bl	10001514 <do_test>
10001012:	2226      	movs	r2, #38	; 0x26
10001014:	6961      	ldr	r1, [r4, #20]
10001016:	48b7      	ldr	r0, [pc, #732]	; (100012f4 <run+0x498>)
10001018:	f000 fa7c 	bl	10001514 <do_test>
1000101c:	2227      	movs	r2, #39	; 0x27
1000101e:	6961      	ldr	r1, [r4, #20]
10001020:	48b5      	ldr	r0, [pc, #724]	; (100012f8 <run+0x49c>)
10001022:	f000 fa77 	bl	10001514 <do_test>
10001026:	2228      	movs	r2, #40	; 0x28
10001028:	68a1      	ldr	r1, [r4, #8]
1000102a:	48b4      	ldr	r0, [pc, #720]	; (100012fc <run+0x4a0>)
1000102c:	f000 fa72 	bl	10001514 <do_test>
10001030:	2229      	movs	r2, #41	; 0x29
10001032:	68a1      	ldr	r1, [r4, #8]
10001034:	48b2      	ldr	r0, [pc, #712]	; (10001300 <run+0x4a4>)
10001036:	f000 fa6d 	bl	10001514 <do_test>
1000103a:	222a      	movs	r2, #42	; 0x2a
1000103c:	68a1      	ldr	r1, [r4, #8]
1000103e:	48b1      	ldr	r0, [pc, #708]	; (10001304 <run+0x4a8>)
10001040:	f000 fa68 	bl	10001514 <do_test>
10001044:	222b      	movs	r2, #43	; 0x2b
10001046:	68a1      	ldr	r1, [r4, #8]
10001048:	48af      	ldr	r0, [pc, #700]	; (10001308 <run+0x4ac>)
1000104a:	f000 fa63 	bl	10001514 <do_test>
1000104e:	222c      	movs	r2, #44	; 0x2c
10001050:	68a1      	ldr	r1, [r4, #8]
10001052:	48ae      	ldr	r0, [pc, #696]	; (1000130c <run+0x4b0>)
10001054:	f000 fa5e 	bl	10001514 <do_test>
10001058:	222d      	movs	r2, #45	; 0x2d
1000105a:	6a21      	ldr	r1, [r4, #32]
1000105c:	48ac      	ldr	r0, [pc, #688]	; (10001310 <run+0x4b4>)
1000105e:	f000 fa59 	bl	10001514 <do_test>
10001062:	222e      	movs	r2, #46	; 0x2e
10001064:	68a1      	ldr	r1, [r4, #8]
10001066:	48ab      	ldr	r0, [pc, #684]	; (10001314 <run+0x4b8>)
10001068:	f000 fa54 	bl	10001514 <do_test>
1000106c:	222f      	movs	r2, #47	; 0x2f
1000106e:	68a1      	ldr	r1, [r4, #8]
10001070:	48a9      	ldr	r0, [pc, #676]	; (10001318 <run+0x4bc>)
10001072:	f000 fa4f 	bl	10001514 <do_test>
10001076:	2230      	movs	r2, #48	; 0x30
10001078:	68a1      	ldr	r1, [r4, #8]
1000107a:	48a8      	ldr	r0, [pc, #672]	; (1000131c <run+0x4c0>)
1000107c:	f000 fa4a 	bl	10001514 <do_test>
10001080:	2231      	movs	r2, #49	; 0x31
10001082:	68a1      	ldr	r1, [r4, #8]
10001084:	48a6      	ldr	r0, [pc, #664]	; (10001320 <run+0x4c4>)
10001086:	f000 fa45 	bl	10001514 <do_test>
1000108a:	2232      	movs	r2, #50	; 0x32
1000108c:	68a1      	ldr	r1, [r4, #8]
1000108e:	48a5      	ldr	r0, [pc, #660]	; (10001324 <run+0x4c8>)
10001090:	f000 fa40 	bl	10001514 <do_test>
10001094:	2233      	movs	r2, #51	; 0x33
10001096:	68a1      	ldr	r1, [r4, #8]
10001098:	48a3      	ldr	r0, [pc, #652]	; (10001328 <run+0x4cc>)
1000109a:	f000 fa3b 	bl	10001514 <do_test>
1000109e:	2234      	movs	r2, #52	; 0x34
100010a0:	68a1      	ldr	r1, [r4, #8]
100010a2:	48a2      	ldr	r0, [pc, #648]	; (1000132c <run+0x4d0>)
100010a4:	f000 fa36 	bl	10001514 <do_test>
100010a8:	2235      	movs	r2, #53	; 0x35
100010aa:	68a1      	ldr	r1, [r4, #8]
100010ac:	48a0      	ldr	r0, [pc, #640]	; (10001330 <run+0x4d4>)
100010ae:	f000 fa31 	bl	10001514 <do_test>
100010b2:	2236      	movs	r2, #54	; 0x36
100010b4:	68a1      	ldr	r1, [r4, #8]
100010b6:	489f      	ldr	r0, [pc, #636]	; (10001334 <run+0x4d8>)
100010b8:	f000 fa2c 	bl	10001514 <do_test>
100010bc:	2237      	movs	r2, #55	; 0x37
100010be:	68a1      	ldr	r1, [r4, #8]
100010c0:	489d      	ldr	r0, [pc, #628]	; (10001338 <run+0x4dc>)
100010c2:	f000 fa27 	bl	10001514 <do_test>
100010c6:	2238      	movs	r2, #56	; 0x38
100010c8:	68a1      	ldr	r1, [r4, #8]
100010ca:	489c      	ldr	r0, [pc, #624]	; (1000133c <run+0x4e0>)
100010cc:	f000 fa22 	bl	10001514 <do_test>
100010d0:	2239      	movs	r2, #57	; 0x39
100010d2:	68a1      	ldr	r1, [r4, #8]
100010d4:	489a      	ldr	r0, [pc, #616]	; (10001340 <run+0x4e4>)
100010d6:	f000 fa1d 	bl	10001514 <do_test>
100010da:	223a      	movs	r2, #58	; 0x3a
100010dc:	68a1      	ldr	r1, [r4, #8]
100010de:	4899      	ldr	r0, [pc, #612]	; (10001344 <run+0x4e8>)
100010e0:	f000 fa18 	bl	10001514 <do_test>
100010e4:	223b      	movs	r2, #59	; 0x3b
100010e6:	68a1      	ldr	r1, [r4, #8]
100010e8:	4897      	ldr	r0, [pc, #604]	; (10001348 <run+0x4ec>)
100010ea:	f000 fa13 	bl	10001514 <do_test>
100010ee:	223c      	movs	r2, #60	; 0x3c
100010f0:	68a1      	ldr	r1, [r4, #8]
100010f2:	4896      	ldr	r0, [pc, #600]	; (1000134c <run+0x4f0>)
100010f4:	f000 fa0e 	bl	10001514 <do_test>
100010f8:	223d      	movs	r2, #61	; 0x3d
100010fa:	68a1      	ldr	r1, [r4, #8]
100010fc:	4894      	ldr	r0, [pc, #592]	; (10001350 <run+0x4f4>)
100010fe:	f000 fa09 	bl	10001514 <do_test>
10001102:	223e      	movs	r2, #62	; 0x3e
10001104:	68a1      	ldr	r1, [r4, #8]
10001106:	4893      	ldr	r0, [pc, #588]	; (10001354 <run+0x4f8>)
10001108:	f000 fa04 	bl	10001514 <do_test>
1000110c:	223f      	movs	r2, #63	; 0x3f
1000110e:	68a1      	ldr	r1, [r4, #8]
10001110:	4891      	ldr	r0, [pc, #580]	; (10001358 <run+0x4fc>)
10001112:	f000 f9ff 	bl	10001514 <do_test>
10001116:	2240      	movs	r2, #64	; 0x40
10001118:	6961      	ldr	r1, [r4, #20]
1000111a:	4890      	ldr	r0, [pc, #576]	; (1000135c <run+0x500>)
1000111c:	f000 f9fa 	bl	10001514 <do_test>
10001120:	2241      	movs	r2, #65	; 0x41
10001122:	6961      	ldr	r1, [r4, #20]
10001124:	488e      	ldr	r0, [pc, #568]	; (10001360 <run+0x504>)
10001126:	f000 f9f5 	bl	10001514 <do_test>
1000112a:	2242      	movs	r2, #66	; 0x42
1000112c:	6961      	ldr	r1, [r4, #20]
1000112e:	488d      	ldr	r0, [pc, #564]	; (10001364 <run+0x508>)
10001130:	f000 f9f0 	bl	10001514 <do_test>
10001134:	2243      	movs	r2, #67	; 0x43
10001136:	68a1      	ldr	r1, [r4, #8]
10001138:	488b      	ldr	r0, [pc, #556]	; (10001368 <run+0x50c>)
1000113a:	f000 f9eb 	bl	10001514 <do_test>
1000113e:	2244      	movs	r2, #68	; 0x44
10001140:	6a21      	ldr	r1, [r4, #32]
10001142:	488a      	ldr	r0, [pc, #552]	; (1000136c <run+0x510>)
10001144:	f000 f9e6 	bl	10001514 <do_test>
10001148:	2245      	movs	r2, #69	; 0x45
1000114a:	6a21      	ldr	r1, [r4, #32]
1000114c:	4888      	ldr	r0, [pc, #544]	; (10001370 <run+0x514>)
1000114e:	f000 f9e1 	bl	10001514 <do_test>
10001152:	2246      	movs	r2, #70	; 0x46
10001154:	68a1      	ldr	r1, [r4, #8]
10001156:	4887      	ldr	r0, [pc, #540]	; (10001374 <run+0x518>)
10001158:	f000 f9dc 	bl	10001514 <do_test>
1000115c:	2247      	movs	r2, #71	; 0x47
1000115e:	68a1      	ldr	r1, [r4, #8]
10001160:	4885      	ldr	r0, [pc, #532]	; (10001378 <run+0x51c>)
10001162:	f000 f9d7 	bl	10001514 <do_test>
10001166:	2248      	movs	r2, #72	; 0x48
10001168:	6a21      	ldr	r1, [r4, #32]
1000116a:	4884      	ldr	r0, [pc, #528]	; (1000137c <run+0x520>)
1000116c:	f000 f9d2 	bl	10001514 <do_test>
10001170:	2249      	movs	r2, #73	; 0x49
10001172:	6a21      	ldr	r1, [r4, #32]
10001174:	4882      	ldr	r0, [pc, #520]	; (10001380 <run+0x524>)
10001176:	f000 f9cd 	bl	10001514 <do_test>
1000117a:	224a      	movs	r2, #74	; 0x4a
1000117c:	68a1      	ldr	r1, [r4, #8]
1000117e:	4881      	ldr	r0, [pc, #516]	; (10001384 <run+0x528>)
10001180:	f000 f9c8 	bl	10001514 <do_test>
10001184:	224b      	movs	r2, #75	; 0x4b
10001186:	68a1      	ldr	r1, [r4, #8]
10001188:	487f      	ldr	r0, [pc, #508]	; (10001388 <run+0x52c>)
1000118a:	f000 f9c3 	bl	10001514 <do_test>
1000118e:	224c      	movs	r2, #76	; 0x4c
10001190:	68a1      	ldr	r1, [r4, #8]
10001192:	487e      	ldr	r0, [pc, #504]	; (1000138c <run+0x530>)
10001194:	f000 f9be 	bl	10001514 <do_test>
10001198:	224d      	movs	r2, #77	; 0x4d
1000119a:	68a1      	ldr	r1, [r4, #8]
1000119c:	487c      	ldr	r0, [pc, #496]	; (10001390 <run+0x534>)
1000119e:	f000 f9b9 	bl	10001514 <do_test>
100011a2:	224e      	movs	r2, #78	; 0x4e
100011a4:	68a1      	ldr	r1, [r4, #8]
100011a6:	487b      	ldr	r0, [pc, #492]	; (10001394 <run+0x538>)
100011a8:	f000 f9b4 	bl	10001514 <do_test>
100011ac:	224f      	movs	r2, #79	; 0x4f
100011ae:	68a1      	ldr	r1, [r4, #8]
100011b0:	4879      	ldr	r0, [pc, #484]	; (10001398 <run+0x53c>)
100011b2:	f000 f9af 	bl	10001514 <do_test>
100011b6:	4d79      	ldr	r5, [pc, #484]	; (1000139c <run+0x540>)
100011b8:	2250      	movs	r2, #80	; 0x50
100011ba:	68a1      	ldr	r1, [r4, #8]
100011bc:	0028      	movs	r0, r5
100011be:	f000 f9a9 	bl	10001514 <do_test>
100011c2:	2251      	movs	r2, #81	; 0x51
100011c4:	68a1      	ldr	r1, [r4, #8]
100011c6:	0028      	movs	r0, r5
100011c8:	f000 f9a4 	bl	10001514 <do_test>
100011cc:	2252      	movs	r2, #82	; 0x52
100011ce:	68a1      	ldr	r1, [r4, #8]
100011d0:	4873      	ldr	r0, [pc, #460]	; (100013a0 <run+0x544>)
100011d2:	f000 f99f 	bl	10001514 <do_test>
100011d6:	2253      	movs	r2, #83	; 0x53
100011d8:	68a1      	ldr	r1, [r4, #8]
100011da:	4872      	ldr	r0, [pc, #456]	; (100013a4 <run+0x548>)
100011dc:	f000 f99a 	bl	10001514 <do_test>
100011e0:	2254      	movs	r2, #84	; 0x54
100011e2:	68a1      	ldr	r1, [r4, #8]
100011e4:	4870      	ldr	r0, [pc, #448]	; (100013a8 <run+0x54c>)
100011e6:	f000 f995 	bl	10001514 <do_test>
100011ea:	4d70      	ldr	r5, [pc, #448]	; (100013ac <run+0x550>)
100011ec:	2255      	movs	r2, #85	; 0x55
100011ee:	68a1      	ldr	r1, [r4, #8]
100011f0:	0028      	movs	r0, r5
100011f2:	f000 f98f 	bl	10001514 <do_test>
100011f6:	2256      	movs	r2, #86	; 0x56
100011f8:	68a1      	ldr	r1, [r4, #8]
100011fa:	486d      	ldr	r0, [pc, #436]	; (100013b0 <run+0x554>)
100011fc:	f000 f98a 	bl	10001514 <do_test>
10001200:	2257      	movs	r2, #87	; 0x57
10001202:	68a1      	ldr	r1, [r4, #8]
10001204:	0028      	movs	r0, r5
10001206:	f000 f985 	bl	10001514 <do_test>
1000120a:	2258      	movs	r2, #88	; 0x58
1000120c:	68a1      	ldr	r1, [r4, #8]
1000120e:	4869      	ldr	r0, [pc, #420]	; (100013b4 <run+0x558>)
10001210:	f000 f980 	bl	10001514 <do_test>
10001214:	2259      	movs	r2, #89	; 0x59
10001216:	68a1      	ldr	r1, [r4, #8]
10001218:	4867      	ldr	r0, [pc, #412]	; (100013b8 <run+0x55c>)
1000121a:	f000 f97b 	bl	10001514 <do_test>
1000121e:	225a      	movs	r2, #90	; 0x5a
10001220:	6a21      	ldr	r1, [r4, #32]
10001222:	4866      	ldr	r0, [pc, #408]	; (100013bc <run+0x560>)
10001224:	f000 f976 	bl	10001514 <do_test>
10001228:	225b      	movs	r2, #91	; 0x5b
1000122a:	6a21      	ldr	r1, [r4, #32]
1000122c:	4864      	ldr	r0, [pc, #400]	; (100013c0 <run+0x564>)
1000122e:	f000 f971 	bl	10001514 <do_test>
10001232:	225c      	movs	r2, #92	; 0x5c
10001234:	68a1      	ldr	r1, [r4, #8]
10001236:	4863      	ldr	r0, [pc, #396]	; (100013c4 <run+0x568>)
10001238:	f000 f96c 	bl	10001514 <do_test>
1000123c:	225d      	movs	r2, #93	; 0x5d
1000123e:	6a21      	ldr	r1, [r4, #32]
10001240:	4861      	ldr	r0, [pc, #388]	; (100013c8 <run+0x56c>)
10001242:	f000 f967 	bl	10001514 <do_test>
10001246:	225e      	movs	r2, #94	; 0x5e
10001248:	6a21      	ldr	r1, [r4, #32]
1000124a:	e0bf      	b.n	100013cc <run+0x570>
1000124c:	10001624 	.word	0x10001624
10001250:	10001dc4 	.word	0x10001dc4
10001254:	10001d24 	.word	0x10001d24
10001258:	10001c2c 	.word	0x10001c2c
1000125c:	1000009d 	.word	0x1000009d
10001260:	100000a9 	.word	0x100000a9
10001264:	100000b5 	.word	0x100000b5
10001268:	100000c5 	.word	0x100000c5
1000126c:	100000d5 	.word	0x100000d5
10001270:	100000e5 	.word	0x100000e5
10001274:	100000f5 	.word	0x100000f5
10001278:	10000105 	.word	0x10000105
1000127c:	10000115 	.word	0x10000115
10001280:	10000125 	.word	0x10000125
10001284:	10000135 	.word	0x10000135
10001288:	10000141 	.word	0x10000141
1000128c:	1000014d 	.word	0x1000014d
10001290:	10000159 	.word	0x10000159
10001294:	10000165 	.word	0x10000165
10001298:	10000175 	.word	0x10000175
1000129c:	10000185 	.word	0x10000185
100012a0:	10000195 	.word	0x10000195
100012a4:	100001a5 	.word	0x100001a5
100012a8:	100001b9 	.word	0x100001b9
100012ac:	100001cd 	.word	0x100001cd
100012b0:	100001dd 	.word	0x100001dd
100012b4:	100001ed 	.word	0x100001ed
100012b8:	10000209 	.word	0x10000209
100012bc:	10000225 	.word	0x10000225
100012c0:	10000231 	.word	0x10000231
100012c4:	1000023d 	.word	0x1000023d
100012c8:	1000024d 	.word	0x1000024d
100012cc:	1000025d 	.word	0x1000025d
100012d0:	10000269 	.word	0x10000269
100012d4:	10000275 	.word	0x10000275
100012d8:	10000281 	.word	0x10000281
100012dc:	1000028d 	.word	0x1000028d
100012e0:	1000029d 	.word	0x1000029d
100012e4:	100002b1 	.word	0x100002b1
100012e8:	100002d9 	.word	0x100002d9
100012ec:	100002f9 	.word	0x100002f9
100012f0:	10000321 	.word	0x10000321
100012f4:	10000341 	.word	0x10000341
100012f8:	1000036d 	.word	0x1000036d
100012fc:	10000399 	.word	0x10000399
10001300:	100003e1 	.word	0x100003e1
10001304:	10000419 	.word	0x10000419
10001308:	10000441 	.word	0x10000441
1000130c:	10000461 	.word	0x10000461
10001310:	10000475 	.word	0x10000475
10001314:	100008a3 	.word	0x100008a3
10001318:	10000899 	.word	0x10000899
1000131c:	100008db 	.word	0x100008db
10001320:	100008c9 	.word	0x100008c9
10001324:	1000091d 	.word	0x1000091d
10001328:	10000911 	.word	0x10000911
1000132c:	10000965 	.word	0x10000965
10001330:	10000949 	.word	0x10000949
10001334:	1000099b 	.word	0x1000099b
10001338:	100009b1 	.word	0x100009b1
1000133c:	100009c9 	.word	0x100009c9
10001340:	100009e3 	.word	0x100009e3
10001344:	10000a07 	.word	0x10000a07
10001348:	10000a2f 	.word	0x10000a2f
1000134c:	10000a47 	.word	0x10000a47
10001350:	10000a63 	.word	0x10000a63
10001354:	10000a7f 	.word	0x10000a7f
10001358:	10000a9b 	.word	0x10000a9b
1000135c:	10000ab1 	.word	0x10000ab1
10001360:	10000adf 	.word	0x10000adf
10001364:	10000b25 	.word	0x10000b25
10001368:	10000b55 	.word	0x10000b55
1000136c:	10000b9d 	.word	0x10000b9d
10001370:	10000bdd 	.word	0x10000bdd
10001374:	10000c29 	.word	0x10000c29
10001378:	10000c55 	.word	0x10000c55
1000137c:	10000491 	.word	0x10000491
10001380:	100004ad 	.word	0x100004ad
10001384:	100004c9 	.word	0x100004c9
10001388:	100004fd 	.word	0x100004fd
1000138c:	10000539 	.word	0x10000539
10001390:	10000569 	.word	0x10000569
10001394:	100005b1 	.word	0x100005b1
10001398:	100005bd 	.word	0x100005bd
1000139c:	100005c9 	.word	0x100005c9
100013a0:	100005e9 	.word	0x100005e9
100013a4:	10000609 	.word	0x10000609
100013a8:	10000629 	.word	0x10000629
100013ac:	10000655 	.word	0x10000655
100013b0:	1000067d 	.word	0x1000067d
100013b4:	100006a9 	.word	0x100006a9
100013b8:	100006b9 	.word	0x100006b9
100013bc:	100006cd 	.word	0x100006cd
100013c0:	100006d9 	.word	0x100006d9
100013c4:	100006f5 	.word	0x100006f5
100013c8:	10000bad 	.word	0x10000bad
100013cc:	4836      	ldr	r0, [pc, #216]	; (100014a8 <run+0x64c>)
100013ce:	f000 f8a1 	bl	10001514 <do_test>
100013d2:	225f      	movs	r2, #95	; 0x5f
100013d4:	68a1      	ldr	r1, [r4, #8]
100013d6:	4835      	ldr	r0, [pc, #212]	; (100014ac <run+0x650>)
100013d8:	f000 f89c 	bl	10001514 <do_test>
100013dc:	2260      	movs	r2, #96	; 0x60
100013de:	68a1      	ldr	r1, [r4, #8]
100013e0:	4833      	ldr	r0, [pc, #204]	; (100014b0 <run+0x654>)
100013e2:	f000 f897 	bl	10001514 <do_test>
100013e6:	2261      	movs	r2, #97	; 0x61
100013e8:	68a1      	ldr	r1, [r4, #8]
100013ea:	4832      	ldr	r0, [pc, #200]	; (100014b4 <run+0x658>)
100013ec:	f000 f892 	bl	10001514 <do_test>
100013f0:	2262      	movs	r2, #98	; 0x62
100013f2:	68a1      	ldr	r1, [r4, #8]
100013f4:	4830      	ldr	r0, [pc, #192]	; (100014b8 <run+0x65c>)
100013f6:	f000 f88d 	bl	10001514 <do_test>
100013fa:	2263      	movs	r2, #99	; 0x63
100013fc:	6a21      	ldr	r1, [r4, #32]
100013fe:	482f      	ldr	r0, [pc, #188]	; (100014bc <run+0x660>)
10001400:	f000 f888 	bl	10001514 <do_test>
10001404:	2264      	movs	r2, #100	; 0x64
10001406:	6a21      	ldr	r1, [r4, #32]
10001408:	482d      	ldr	r0, [pc, #180]	; (100014c0 <run+0x664>)
1000140a:	f000 f883 	bl	10001514 <do_test>
1000140e:	2265      	movs	r2, #101	; 0x65
10001410:	6a21      	ldr	r1, [r4, #32]
10001412:	482c      	ldr	r0, [pc, #176]	; (100014c4 <run+0x668>)
10001414:	f000 f87e 	bl	10001514 <do_test>
10001418:	2266      	movs	r2, #102	; 0x66
1000141a:	6a21      	ldr	r1, [r4, #32]
1000141c:	482a      	ldr	r0, [pc, #168]	; (100014c8 <run+0x66c>)
1000141e:	f000 f879 	bl	10001514 <do_test>
10001422:	2267      	movs	r2, #103	; 0x67
10001424:	6a21      	ldr	r1, [r4, #32]
10001426:	4829      	ldr	r0, [pc, #164]	; (100014cc <run+0x670>)
10001428:	f000 f874 	bl	10001514 <do_test>
1000142c:	2268      	movs	r2, #104	; 0x68
1000142e:	6a21      	ldr	r1, [r4, #32]
10001430:	4827      	ldr	r0, [pc, #156]	; (100014d0 <run+0x674>)
10001432:	f000 f86f 	bl	10001514 <do_test>
10001436:	2269      	movs	r2, #105	; 0x69
10001438:	68a1      	ldr	r1, [r4, #8]
1000143a:	4826      	ldr	r0, [pc, #152]	; (100014d4 <run+0x678>)
1000143c:	f000 f86a 	bl	10001514 <do_test>
10001440:	226a      	movs	r2, #106	; 0x6a
10001442:	68a1      	ldr	r1, [r4, #8]
10001444:	4824      	ldr	r0, [pc, #144]	; (100014d8 <run+0x67c>)
10001446:	f000 f865 	bl	10001514 <do_test>
1000144a:	226b      	movs	r2, #107	; 0x6b
1000144c:	68a1      	ldr	r1, [r4, #8]
1000144e:	4823      	ldr	r0, [pc, #140]	; (100014dc <run+0x680>)
10001450:	f000 f860 	bl	10001514 <do_test>
10001454:	226c      	movs	r2, #108	; 0x6c
10001456:	68a1      	ldr	r1, [r4, #8]
10001458:	4821      	ldr	r0, [pc, #132]	; (100014e0 <run+0x684>)
1000145a:	f000 f85b 	bl	10001514 <do_test>
1000145e:	226d      	movs	r2, #109	; 0x6d
10001460:	68a1      	ldr	r1, [r4, #8]
10001462:	4820      	ldr	r0, [pc, #128]	; (100014e4 <run+0x688>)
10001464:	f000 f856 	bl	10001514 <do_test>
10001468:	226e      	movs	r2, #110	; 0x6e
1000146a:	68a1      	ldr	r1, [r4, #8]
1000146c:	481e      	ldr	r0, [pc, #120]	; (100014e8 <run+0x68c>)
1000146e:	f000 f851 	bl	10001514 <do_test>
10001472:	226f      	movs	r2, #111	; 0x6f
10001474:	68a1      	ldr	r1, [r4, #8]
10001476:	481d      	ldr	r0, [pc, #116]	; (100014ec <run+0x690>)
10001478:	f000 f84c 	bl	10001514 <do_test>
1000147c:	2270      	movs	r2, #112	; 0x70
1000147e:	68a1      	ldr	r1, [r4, #8]
10001480:	481b      	ldr	r0, [pc, #108]	; (100014f0 <run+0x694>)
10001482:	f000 f847 	bl	10001514 <do_test>
10001486:	2271      	movs	r2, #113	; 0x71
10001488:	68a1      	ldr	r1, [r4, #8]
1000148a:	481a      	ldr	r0, [pc, #104]	; (100014f4 <run+0x698>)
1000148c:	f000 f842 	bl	10001514 <do_test>
10001490:	2272      	movs	r2, #114	; 0x72
10001492:	68a1      	ldr	r1, [r4, #8]
10001494:	4818      	ldr	r0, [pc, #96]	; (100014f8 <run+0x69c>)
10001496:	f000 f83d 	bl	10001514 <do_test>
1000149a:	68a1      	ldr	r1, [r4, #8]
1000149c:	2273      	movs	r2, #115	; 0x73
1000149e:	4817      	ldr	r0, [pc, #92]	; (100014fc <run+0x6a0>)
100014a0:	f000 f838 	bl	10001514 <do_test>
100014a4:	bd30      	pop	{r4, r5, pc}
100014a6:	46c0      	nop			; (mov r8, r8)
100014a8:	10000bf7 	.word	0x10000bf7
100014ac:	100008ad 	.word	0x100008ad
100014b0:	100008ed 	.word	0x100008ed
100014b4:	10000929 	.word	0x10000929
100014b8:	1000097b 	.word	0x1000097b
100014bc:	10000d59 	.word	0x10000d59
100014c0:	10000d67 	.word	0x10000d67
100014c4:	10000d75 	.word	0x10000d75
100014c8:	10000da5 	.word	0x10000da5
100014cc:	10000dc1 	.word	0x10000dc1
100014d0:	10000ddd 	.word	0x10000ddd
100014d4:	10000701 	.word	0x10000701
100014d8:	10000721 	.word	0x10000721
100014dc:	10000741 	.word	0x10000741
100014e0:	1000076d 	.word	0x1000076d
100014e4:	10000799 	.word	0x10000799
100014e8:	100007cd 	.word	0x100007cd
100014ec:	100007f9 	.word	0x100007f9
100014f0:	10000829 	.word	0x10000829
100014f4:	1000085d 	.word	0x1000085d
100014f8:	10000e11 	.word	0x10000e11
100014fc:	10000e41 	.word	0x10000e41

10001500 <memset>:
10001500:	1882      	adds	r2, r0, r2
10001502:	4290      	cmp	r0, r2
10001504:	d205      	bcs.n	10001512 <memset+0x12>
10001506:	0003      	movs	r3, r0
10001508:	b2c9      	uxtb	r1, r1
1000150a:	7019      	strb	r1, [r3, #0]
1000150c:	3301      	adds	r3, #1
1000150e:	429a      	cmp	r2, r3
10001510:	d1fb      	bne.n	1000150a <memset+0xa>
10001512:	4770      	bx	lr

10001514 <do_test>:
10001514:	b5f0      	push	{r4, r5, r6, r7, lr}
10001516:	46d6      	mov	lr, sl
10001518:	464f      	mov	r7, r9
1000151a:	4646      	mov	r6, r8
1000151c:	b5c0      	push	{r6, r7, lr}
1000151e:	4681      	mov	r9, r0
10001520:	000e      	movs	r6, r1
10001522:	0017      	movs	r7, r2
10001524:	4b18      	ldr	r3, [pc, #96]	; (10001588 <do_test+0x74>)
10001526:	2200      	movs	r2, #0
10001528:	601a      	str	r2, [r3, #0]
1000152a:	609a      	str	r2, [r3, #8]
1000152c:	3205      	adds	r2, #5
1000152e:	601a      	str	r2, [r3, #0]
10001530:	4a16      	ldr	r2, [pc, #88]	; (1000158c <do_test+0x78>)
10001532:	605a      	str	r2, [r3, #4]
10001534:	689b      	ldr	r3, [r3, #8]
10001536:	2b00      	cmp	r3, #0
10001538:	d104      	bne.n	10001544 <do_test+0x30>
1000153a:	4a13      	ldr	r2, [pc, #76]	; (10001588 <do_test+0x74>)
1000153c:	46c0      	nop			; (mov r8, r8)
1000153e:	6893      	ldr	r3, [r2, #8]
10001540:	2b00      	cmp	r3, #0
10001542:	d0fb      	beq.n	1000153c <do_test+0x28>
10001544:	4b10      	ldr	r3, [pc, #64]	; (10001588 <do_test+0x74>)
10001546:	4698      	mov	r8, r3
10001548:	689c      	ldr	r4, [r3, #8]
1000154a:	2300      	movs	r3, #0
1000154c:	6033      	str	r3, [r6, #0]
1000154e:	47c8      	blx	r9
10001550:	007d      	lsls	r5, r7, #1
10001552:	6833      	ldr	r3, [r6, #0]
10001554:	4a0e      	ldr	r2, [pc, #56]	; (10001590 <do_test+0x7c>)
10001556:	4692      	mov	sl, r2
10001558:	00ff      	lsls	r7, r7, #3
1000155a:	50bb      	str	r3, [r7, r2]
1000155c:	2301      	movs	r3, #1
1000155e:	425b      	negs	r3, r3
10001560:	6033      	str	r3, [r6, #0]
10001562:	47c8      	blx	r9
10001564:	6833      	ldr	r3, [r6, #0]
10001566:	3501      	adds	r5, #1
10001568:	00ad      	lsls	r5, r5, #2
1000156a:	4652      	mov	r2, sl
1000156c:	50ab      	str	r3, [r5, r2]
1000156e:	4643      	mov	r3, r8
10001570:	689a      	ldr	r2, [r3, #8]
10001572:	4b08      	ldr	r3, [pc, #32]	; (10001594 <do_test+0x80>)
10001574:	6819      	ldr	r1, [r3, #0]
10001576:	468c      	mov	ip, r1
10001578:	4464      	add	r4, ip
1000157a:	1aa4      	subs	r4, r4, r2
1000157c:	601c      	str	r4, [r3, #0]
1000157e:	bc1c      	pop	{r2, r3, r4}
10001580:	4690      	mov	r8, r2
10001582:	4699      	mov	r9, r3
10001584:	46a2      	mov	sl, r4
10001586:	bdf0      	pop	{r4, r5, r6, r7, pc}
10001588:	e000e010 	.word	0xe000e010
1000158c:	00ffffff 	.word	0x00ffffff
10001590:	1000164c 	.word	0x1000164c
10001594:	10001648 	.word	0x10001648

10001598 <main>:
10001598:	b500      	push	{lr}
1000159a:	f7ff fc5f 	bl	10000e5c <run>
1000159e:	46c0      	nop			; (mov r8, r8)
100015a0:	e7fd      	b.n	1000159e <main+0x6>
100015a2:	46c0      	nop			; (mov r8, r8)

100015a4 <NMI_Handler>:
100015a4:	e7fe      	b.n	100015a4 <NMI_Handler>

100015a6 <HardFault_Handler>:
100015a6:	e7fe      	b.n	100015a6 <HardFault_Handler>

100015a8 <SVCall_Handler>:
100015a8:	e7fe      	b.n	100015a8 <SVCall_Handler>

100015aa <PendSV_Handler>:
100015aa:	e7fe      	b.n	100015aa <PendSV_Handler>

100015ac <SysTick_Handler>:
100015ac:	e7fe      	b.n	100015ac <SysTick_Handler>

100015ae <SPI0_IRQHandler>:
100015ae:	e7fe      	b.n	100015ae <SPI0_IRQHandler>

100015b0 <SPI1_IRQHandler>:
100015b0:	e7fe      	b.n	100015b0 <SPI1_IRQHandler>

100015b2 <UART0_IRQHandler>:
100015b2:	e7fe      	b.n	100015b2 <UART0_IRQHandler>

100015b4 <UART1_IRQHandler>:
100015b4:	e7fe      	b.n	100015b4 <UART1_IRQHandler>

100015b6 <UART2_IRQHandler>:
100015b6:	e7fe      	b.n	100015b6 <UART2_IRQHandler>

100015b8 <Reserved1_IRQHandler>:
100015b8:	e7fe      	b.n	100015b8 <Reserved1_IRQHandler>

100015ba <SCT_IRQHandler>:
100015ba:	e7fe      	b.n	100015ba <SCT_IRQHandler>

100015bc <MRT_IRQHandler>:
100015bc:	e7fe      	b.n	100015bc <MRT_IRQHandler>

100015be <CMP_IRQHandler>:
100015be:	e7fe      	b.n	100015be <CMP_IRQHandler>

100015c0 <WDT_IRQHandler>:
100015c0:	e7fe      	b.n	100015c0 <WDT_IRQHandler>

100015c2 <BOD_IRQHandler>:
100015c2:	e7fe      	b.n	100015c2 <BOD_IRQHandler>

100015c4 <WKT_IRQHandler>:
100015c4:	e7fe      	b.n	100015c4 <WKT_IRQHandler>

100015c6 <Reserved11_IRQHandler>:
100015c6:	e7fe      	b.n	100015c6 <Reserved11_IRQHandler>

100015c8 <PININT0_IRQHandler>:
100015c8:	e7fe      	b.n	100015c8 <PININT0_IRQHandler>

100015ca <PININT1_IRQHandler>:
100015ca:	e7fe      	b.n	100015ca <PININT1_IRQHandler>

100015cc <PININT2_IRQHandler>:
100015cc:	e7fe      	b.n	100015cc <PININT2_IRQHandler>

100015ce <PININT3_IRQHandler>:
100015ce:	e7fe      	b.n	100015ce <PININT3_IRQHandler>

100015d0 <PININT4_IRQHandler>:
100015d0:	e7fe      	b.n	100015d0 <PININT4_IRQHandler>

100015d2 <PININT5_IRQHandler>:
100015d2:	e7fe      	b.n	100015d2 <PININT5_IRQHandler>

100015d4 <PININT6_IRQHandler>:
100015d4:	e7fe      	b.n	100015d4 <PININT6_IRQHandler>

100015d6 <PININT7_IRQHandler>:
100015d6:	e7fe      	b.n	100015d6 <PININT7_IRQHandler>

100015d8 <init>:
100015d8:	b500      	push	{lr}
100015da:	4a08      	ldr	r2, [pc, #32]	; (100015fc <init+0x24>)
100015dc:	4b08      	ldr	r3, [pc, #32]	; (10001600 <init+0x28>)
100015de:	1ad2      	subs	r2, r2, r3
100015e0:	d005      	beq.n	100015ee <init+0x16>
100015e2:	189a      	adds	r2, r3, r2
100015e4:	2100      	movs	r1, #0
100015e6:	7019      	strb	r1, [r3, #0]
100015e8:	3301      	adds	r3, #1
100015ea:	4293      	cmp	r3, r2
100015ec:	d1fb      	bne.n	100015e6 <init+0xe>
100015ee:	4a05      	ldr	r2, [pc, #20]	; (10001604 <init+0x2c>)
100015f0:	4b05      	ldr	r3, [pc, #20]	; (10001608 <init+0x30>)
100015f2:	609a      	str	r2, [r3, #8]
100015f4:	f7ff ffd0 	bl	10001598 <main>
100015f8:	bd00      	pop	{pc}
100015fa:	46c0      	nop			; (mov r8, r8)
100015fc:	100019ec 	.word	0x100019ec
10001600:	10001624 	.word	0x10001624
10001604:	10000000 	.word	0x10000000
10001608:	e000ed00 	.word	0xe000ed00

Disassembly of section .rodata:

1000160c <.rodata>:
1000160c:	00000006 	.word	0x00000006
10001610:	00000002 	.word	0x00000002
10001614:	3e000000 	.word	0x3e000000
10001618:	00000019 	.word	0x00000019
1000161c:	3e000000 	.word	0x3e000000
10001620:	00000019 	.word	0x00000019

Disassembly of section .bss:

10001624 <guard variable for run::serial2_config>:
	...

1000162c <run::serial2_config>:
1000162c:	00000000                                ....

10001630 <guard variable for run::timer1_prescale>:
	...

10001638 <run::timer1_prescale>:
10001638:	00000000                                ....

1000163c <guard variable for run::gpio1_words_3>:
	...

10001644 <run::gpio1_words_3>:
10001644:	00000000                                ....

10001648 <elapsed_time>:
10001648:	00000000                                ....

1000164c <results>:
	...
