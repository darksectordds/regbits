
Allocating common symbols
Common symbol       size              file

finish              0x4               main.o
results             0x3a0             main.o
start               0x4               main.o

Discarded input sections

 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 raw.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .debug_macro   0x0000000000000000      0xa60 main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x8e main.o
 .debug_macro   0x0000000000000000       0x51 main.o
 .debug_macro   0x0000000000000000       0xef main.o
 .debug_macro   0x0000000000000000       0x6a main.o
 .debug_macro   0x0000000000000000      0x1df main.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .group         0x0000000000000000        0x8 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0xa60 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x22 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x8e lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x51 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0xef lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x6a lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0x1df lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x22 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x3a lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x26 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0x329 lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000       0x8f lpc8xx_ram_init.o
 .debug_macro   0x0000000000000000      0x1c4 lpc8xx_ram_init.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000008000 xr
RAM              0x0000000010000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD raw.o
LOAD main.o
LOAD lpc8xx_ram_init.o
                0x0000000000000020                PROVIDE (MINIMUM_STACK_SIZE, 0x20)
                0x0000000010000000                . = ORIGIN (RAM)

.text           0x0000000010000000     0x1680
 *(.isr_vectors)
 .isr_vectors   0x0000000010000000       0x9c lpc8xx_ram_init.o
                0x0000000010000000                INTERRUPT_VECTORS
 *(.text)
 .text          0x000000001000009c     0x1504 raw.o
                0x000000001000009c                zero_reg
                0x00000000100000a8                zero_array
                0x00000000100000b4                set_singl_bits_operator
                0x00000000100000c4                set_singl_bits_method
                0x00000000100000d4                clr_singl_bits_operator
                0x00000000100000e4                clr_singl_bits_method
                0x00000000100000f4                set_singl_mskd_operator
                0x0000000010000104                set_singl_mskd_method
                0x0000000010000114                clr_singl_mskd_operator
                0x0000000010000124                clr_singl_mskd_method
                0x0000000010000134                equ_singl_bits_operator
                0x0000000010000140                equ_singl_bits_method
                0x000000001000014c                equ_singl_mskd_operator
                0x0000000010000158                equ_singl_mskd_method
                0x0000000010000164                flp_singl_bits_operator
                0x0000000010000174                flp_singl_bits_method
                0x0000000010000184                flp_singl_mskd_operator
                0x0000000010000194                flp_singl_mskd_method
                0x00000000100001a4                ins_singl_mskd_operator
                0x00000000100001b8                ins_singl_mskd_method
                0x00000000100001cc                set_multi_bits_operator
                0x00000000100001dc                set_multi_bits_method
                0x00000000100001ec                ins_multi_mskd_operator
                0x0000000010000208                ins_multi_mskd_method
                0x0000000010000224                equ_multi_bits_operator
                0x0000000010000230                equ_multi_bits_method
                0x000000001000023c                equ_multi_mskd_operator
                0x000000001000024c                equ_multi_mskd_method
                0x000000001000025c                equ_bits_mskd_operator
                0x0000000010000268                equ_bits_mskd_method
                0x0000000010000274                equ_mskd_bits_operator
                0x0000000010000280                equ_mskd_bits_method
                0x000000001000028c                equ_bits_var
                0x000000001000029c                equ_mskd_var
                0x00000000100002b0                cmp_equ_zero
                0x00000000100002d8                cmp_neq_zero
                0x00000000100002f4                cmp_equ_bits
                0x000000001000031c                cmp_neq_bits
                0x0000000010000338                cmp_equ_multi_bits
                0x0000000010000364                cmp_neq_multi_bits
                0x0000000010000390                cmp_equ_mskd
                0x00000000100003d8                cmp_neq_mskd
                0x000000001000040c                cmp_equ_reg
                0x0000000010000434                cmp_neq_reg
                0x0000000010000450                constexpr_bits_array
                0x0000000010000468                runtime_bits_array
                0x0000000010000498                prescaler_low
                0x00000000100004b4                prescaler_high
                0x00000000100004d0                reg_mskd_lss
                0x0000000010000504                reg_mskd_leq
                0x000000001000053c                reg_mskd_gtr
                0x000000001000056c                reg_mskd_geq
                0x00000000100005ac                pos_cmp_eq
                0x00000000100005b8                pos_cmp_ne
                0x00000000100005c4                bits_extract_eq
                0x00000000100005e0                mskd_extract_eq
                0x0000000010000600                mskd_extract_ne
                0x0000000010000620                mskd_extract_lss
                0x0000000010000654                mskd_extract_leq
                0x0000000010000680                mskd_extract_gtr
                0x00000000100006b0                set_bits_global
                0x00000000100006c0                ins_mskd_global
                0x00000000100006d4                assign_array_global
                0x00000000100006e0                shifted_global
                0x00000000100006fc                assign_register_global
                0x0000000010000708                copy_bits_equ
                0x0000000010000724                copy_bits_neq
                0x0000000010000740                copy_mskd_equ
                0x000000001000076c                copy_mskd_neq
                0x0000000010000798                copy_mskd_lss
                0x00000000100007cc                copy_mskd_leq
                0x00000000100007f8                copy_mskd_gtr
                0x0000000010000828                copy_mskd_geq
                0x000000001000085c                copy_shifted
                0x00000000100008ac                call_range_val_port
                0x00000000100008cc                call_pos_ref_global
                0x00000000100008f8                call_pos_val
                0x0000000010000904                call_pos_val_global
                0x0000000010000920                call_mskd_val_const
                0x000000001000092c                call_mskd_val_var
                0x0000000010000938                call_mskd_val_global
                0x0000000010000950                call_bits_val_const
                0x0000000010000958                call_bits_val_var
                0x0000000010000960                call_bits_val_global
                0x0000000010000968                bits_val
                0x0000000010000978                bits_ref
                0x0000000010000988                call_bits_ref_const
                0x000000001000099c                call_bits_ref_var
                0x00000000100009b0                call_bits_ref_global
                0x00000000100009c4                mskd_val
                0x00000000100009d4                mskd_ref
                0x00000000100009e8                call_mskd_ref_const
                0x0000000010000a04                call_mskd_ref_var
                0x0000000010000a20                call_mskd_ref_global
                0x0000000010000a3c                periph_bits
                0x0000000010000a48                call_periph_bits
                0x0000000010000a58                periph_bits_val
                0x0000000010000a60                call_periph_bits_val
                0x0000000010000a70                reg_bits_val
                0x0000000010000a78                call_reg_bits_val
                0x0000000010000a88                periph_bits_ref
                0x0000000010000a94                call_periph_bits_ref
                0x0000000010000aac                reg_bits_ref
                0x0000000010000ab8                call_reg_bits_ref
                0x0000000010000ad0                periph_mskd
                0x0000000010000ae0                call_periph_mskd
                0x0000000010000af0                periph_mskd_val
                0x0000000010000afc                call_periph_mskd_val
                0x0000000010000b10                reg_mskd_val
                0x0000000010000b1c                call_reg_mskd_val
                0x0000000010000b30                periph_mskd_ref
                0x0000000010000b40                call_periph_mskd_ref
                0x0000000010000b64                reg_mskd_ref
                0x0000000010000b74                call_reg_mskd_ref
                0x0000000010000b98                return_bits
                0x0000000010000b9c                call_return_bits
                0x0000000010000bbc                return_mskd
                0x0000000010000bc8                call_return_mskd
                0x0000000010000bfc                return_reg
                0x0000000010000c08                call_return_reg
                0x0000000010000c2c                return_periph
                0x0000000010000c40                call_return_periph
                0x0000000010000c64                pos_val
                0x0000000010000c88                pos_ref
                0x0000000010000cb0                call_pos_ref
                0x0000000010000ccc                runtime_range_val
                0x0000000010000cdc                call_range_val
                0x0000000010000cec                runtime_range_ref
                0x0000000010000d00                call_range_ref
                0x0000000010000d1c                call_range_ref_port
                0x0000000010000d28                check_array_range_pass
                0x0000000010000d40                check_array_range_fail
                0x0000000010000d58                check_bits_range_pass
                0x0000000010000d70                check_bits_range_fail
                0x0000000010000d88                check_mskd_range_pass
                0x0000000010000da0                check_mskd_range_fail
                0x0000000010000db8                bits_extract_ne
                0x0000000010000dd4                mskd_extract_geq
                0x0000000010000e08                shifted_val
                0x0000000010000e24                call_shifted_const_val
                0x0000000010000e34                call_shifted_var_val
                0x0000000010000e44                call_shifted_global_val
                0x0000000010000e54                shifted_ref
                0x0000000010000e74                call_shifted_const_ref
                0x0000000010000e90                call_shifted_var_ref
                0x0000000010000eac                call_shifted_global_ref
                0x0000000010000ec8                copy_bits_val
                0x0000000010000ee0                call_copy_bits_val
                0x0000000010000ef4                copy_bits_ref
                0x0000000010000f10                call_copy_bits_ref
                0x0000000010000f2c                run
 .text          0x00000000100015a0       0x4c main.o
                0x00000000100015a0                memset
                0x00000000100015b4                do_test
 .text          0x00000000100015ec       0x94 lpc8xx_ram_init.o
                0x00000000100015ec                NMI_Handler
                0x00000000100015f0                HardFault_Handler
                0x00000000100015f4                SVCall_Handler
                0x00000000100015f8                PendSV_Handler
                0x00000000100015fc                SysTick_Handler
                0x0000000010001600                SPI0_IRQHandler
                0x0000000010001604                SPI1_IRQHandler
                0x0000000010001608                UART0_IRQHandler
                0x000000001000160c                UART1_IRQHandler
                0x0000000010001610                UART2_IRQHandler
                0x0000000010001614                Reserved1_IRQHandler
                0x0000000010001618                SCT_IRQHandler
                0x000000001000161c                MRT_IRQHandler
                0x0000000010001620                CMP_IRQHandler
                0x0000000010001624                WDT_IRQHandler
                0x0000000010001628                BOD_IRQHandler
                0x000000001000162c                WKT_IRQHandler
                0x0000000010001630                Reserved11_IRQHandler
                0x0000000010001634                PININT0_IRQHandler
                0x0000000010001638                PININT1_IRQHandler
                0x000000001000163c                PININT2_IRQHandler
                0x0000000010001640                PININT3_IRQHandler
                0x0000000010001644                PININT4_IRQHandler
                0x0000000010001648                PININT5_IRQHandler
                0x000000001000164c                PININT6_IRQHandler
                0x0000000010001650                PININT7_IRQHandler
                0x0000000010001654                init

.glue_7         0x0000000010001680        0x0
 .glue_7        0x0000000010001680        0x0 linker stubs

.glue_7t        0x0000000010001680        0x0
 .glue_7t       0x0000000010001680        0x0 linker stubs

.vfp11_veneer   0x0000000010001680        0x0
 .vfp11_veneer  0x0000000010001680        0x0 linker stubs

.v4_bx          0x0000000010001680        0x0
 .v4_bx         0x0000000010001680        0x0 linker stubs

.iplt           0x0000000010001680        0x0
 .iplt          0x0000000010001680        0x0 raw.o

.text.startup   0x0000000010001680       0x38
 .text.startup  0x0000000010001680       0x38 main.o
                0x0000000010001680                main

.rodata         0x00000000100016b8       0x18
 .rodata        0x00000000100016b8       0x18 raw.o

.rel.dyn        0x00000000100016d0        0x0
 .rel.iplt      0x00000000100016d0        0x0 raw.o

.data           0x00000000100016d0        0x0
                0x00000000100016d0                . = ALIGN (0x4)
 *(.data)
 .data          0x00000000100016d0        0x0 raw.o
 .data          0x00000000100016d0        0x0 main.o
 .data          0x00000000100016d0        0x0 lpc8xx_ram_init.o
                0x00000000100016d0                BSS_START = .

.igot.plt       0x00000000100016d0        0x0
 .igot.plt      0x00000000100016d0        0x0 raw.o

.bss            0x00000000100016d0      0x3a8
                0x00000000100016d0                . = ALIGN (0x4)
 *(.bss)
 .bss           0x00000000100016d0        0x0 raw.o
 .bss           0x00000000100016d0        0x0 main.o
 .bss           0x00000000100016d0        0x0 lpc8xx_ram_init.o
 COMMON         0x00000000100016d0      0x3a8 main.o
                0x00000000100016d0                finish
                0x00000000100016d4                results
                0x0000000010001a74                start
                0x0000000010001a78                BSS_END = .
                0x0000000010001a78                end = .
                0x0000000010000000                RAM_BASE_ADDR = ORIGIN (RAM)
                0x0000000000000000                FLASH_BASE_ADDR = ORIGIN (FLASH)
                0x0000000010002000                TOP_OF_STACK = (ORIGIN (RAM) + LENGTH (RAM))
                0x0000000000000000                ASSERT (((end + MINIMUM_STACK_SIZE) < TOP_OF_STACK), too big to fit in RAM)
OUTPUT(raw.elf elf32-littlearm)

.debug_info     0x0000000000000000     0x3064
 .debug_info    0x0000000000000000     0x2989 raw.o
 .debug_info    0x0000000000002989      0x2d4 main.o
 .debug_info    0x0000000000002c5d      0x407 lpc8xx_ram_init.o

.debug_abbrev   0x0000000000000000      0x5be
 .debug_abbrev  0x0000000000000000      0x26c raw.o
 .debug_abbrev  0x000000000000026c      0x1df main.o
 .debug_abbrev  0x000000000000044b      0x173 lpc8xx_ram_init.o

.debug_loc      0x0000000000000000      0x417
 .debug_loc     0x0000000000000000      0x29c raw.o
 .debug_loc     0x000000000000029c      0x157 main.o
 .debug_loc     0x00000000000003f3       0x24 lpc8xx_ram_init.o

.debug_aranges  0x0000000000000000       0x68
 .debug_aranges
                0x0000000000000000       0x20 raw.o
 .debug_aranges
                0x0000000000000020       0x28 main.o
 .debug_aranges
                0x0000000000000048       0x20 lpc8xx_ram_init.o

.debug_macro    0x0000000000000000     0x1f13
 .debug_macro   0x0000000000000000       0x80 raw.o
 .debug_macro   0x0000000000000080      0xa60 raw.o
 .debug_macro   0x0000000000000ae0       0x10 raw.o
 .debug_macro   0x0000000000000af0       0x22 raw.o
 .debug_macro   0x0000000000000b12       0x8e raw.o
 .debug_macro   0x0000000000000ba0       0x51 raw.o
 .debug_macro   0x0000000000000bf1       0xef raw.o
 .debug_macro   0x0000000000000ce0       0x6a raw.o
 .debug_macro   0x0000000000000d4a      0x1df raw.o
 .debug_macro   0x0000000000000f29      0x710 raw.o
 .debug_macro   0x0000000000001639       0xba main.o
 .debug_macro   0x00000000000016f3      0x174 main.o
 .debug_macro   0x0000000000001867       0x22 main.o
 .debug_macro   0x0000000000001889       0x3a main.o
 .debug_macro   0x00000000000018c3       0x26 main.o
 .debug_macro   0x00000000000018e9      0x329 main.o
 .debug_macro   0x0000000000001c12       0x8f main.o
 .debug_macro   0x0000000000001ca1      0x1c4 main.o
 .debug_macro   0x0000000000001e65       0xae lpc8xx_ram_init.o

.debug_line     0x0000000000000000     0x1d58
 .debug_line    0x0000000000000000     0x14e6 raw.o
 .debug_line    0x00000000000014e6      0x3a9 main.o
 .debug_line    0x000000000000188f      0x4c9 lpc8xx_ram_init.o

.debug_str      0x0000000000000000     0x8e3c
 .debug_str     0x0000000000000000     0x693e raw.o
                                       0x6be0 (size before relaxing)
 .debug_str     0x000000000000693e     0x22a9 main.o
                                       0x5f46 (size before relaxing)
 .debug_str     0x0000000000008be7      0x255 lpc8xx_ram_init.o
                                       0x5dea (size before relaxing)

.comment        0x0000000000000000       0x75
 .comment       0x0000000000000000       0x75 raw.o
                                         0x76 (size before relaxing)
 .comment       0x0000000000000075       0x76 main.o
 .comment       0x0000000000000075       0x76 lpc8xx_ram_init.o

.ARM.attributes
                0x0000000000000000       0x1c
 .ARM.attributes
                0x0000000000000000       0x1c raw.o
 .ARM.attributes
                0x000000000000001c       0x1c main.o
 .ARM.attributes
                0x0000000000000038       0x1c lpc8xx_ram_init.o

.debug_frame    0x0000000000000000      0xd90
 .debug_frame   0x0000000000000000      0xb6c raw.o
 .debug_frame   0x0000000000000b6c       0x5c main.o
 .debug_frame   0x0000000000000bc8      0x1c8 lpc8xx_ram_init.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 main.o
Memory region         Used Size  Region Size  %age Used
           FLASH:          0 GB        32 KB      0.00%
             RAM:        6776 B         8 KB     82.71%
