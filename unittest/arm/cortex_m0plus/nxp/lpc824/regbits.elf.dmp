
regbits.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <INTERRUPT_VECTORS>:
10000000:	00 20 00 10 e1 15 00 10 79 15 00 10 7d 15 00 10     . ......y...}...
	...
1000002c:	81 15 00 10 00 00 00 00 00 00 00 00 85 15 00 10     ................
1000003c:	89 15 00 10 8d 15 00 10 91 15 00 10 00 00 00 00     ................
1000004c:	95 15 00 10 99 15 00 10 9d 15 00 10 a1 15 00 10     ................
1000005c:	a5 15 00 10 a9 15 00 10 ad 15 00 10 b1 15 00 10     ................
1000006c:	b5 15 00 10 00 00 00 00 b9 15 00 10 bd 15 00 10     ................
1000007c:	c1 15 00 10 c5 15 00 10 c9 15 00 10 cd 15 00 10     ................
1000008c:	d1 15 00 10 d5 15 00 10 d9 15 00 10 dd 15 00 10     ................

1000009c <zero_reg()>:
1000009c:	4b01      	ldr	r3, [pc, #4]	; (100000a4 <zero_reg()+0x8>)
1000009e:	2200      	movs	r2, #0
100000a0:	605a      	str	r2, [r3, #4]
100000a2:	4770      	bx	lr
100000a4:	10001dc0 	.word	0x10001dc0

100000a8 <zero_array()>:
100000a8:	4b01      	ldr	r3, [pc, #4]	; (100000b0 <zero_array()+0x8>)
100000aa:	2200      	movs	r2, #0
100000ac:	62da      	str	r2, [r3, #44]	; 0x2c
100000ae:	4770      	bx	lr
100000b0:	10001c00 	.word	0x10001c00

100000b4 <set_singl_bits_operator()>:
100000b4:	4a02      	ldr	r2, [pc, #8]	; (100000c0 <set_singl_bits_operator()+0xc>)
100000b6:	6853      	ldr	r3, [r2, #4]
100000b8:	2140      	movs	r1, #64	; 0x40
100000ba:	430b      	orrs	r3, r1
100000bc:	6053      	str	r3, [r2, #4]
100000be:	4770      	bx	lr
100000c0:	10001dc0 	.word	0x10001dc0

100000c4 <set_singl_bits_method()>:
100000c4:	4a02      	ldr	r2, [pc, #8]	; (100000d0 <set_singl_bits_method()+0xc>)
100000c6:	6853      	ldr	r3, [r2, #4]
100000c8:	2140      	movs	r1, #64	; 0x40
100000ca:	430b      	orrs	r3, r1
100000cc:	6053      	str	r3, [r2, #4]
100000ce:	4770      	bx	lr
100000d0:	10001dc0 	.word	0x10001dc0

100000d4 <clr_singl_bits_operator()>:
100000d4:	4a02      	ldr	r2, [pc, #8]	; (100000e0 <clr_singl_bits_operator()+0xc>)
100000d6:	6853      	ldr	r3, [r2, #4]
100000d8:	2140      	movs	r1, #64	; 0x40
100000da:	438b      	bics	r3, r1
100000dc:	6053      	str	r3, [r2, #4]
100000de:	4770      	bx	lr
100000e0:	10001dc0 	.word	0x10001dc0

100000e4 <clr_singl_bits_method()>:
100000e4:	4a02      	ldr	r2, [pc, #8]	; (100000f0 <clr_singl_bits_method()+0xc>)
100000e6:	6853      	ldr	r3, [r2, #4]
100000e8:	2140      	movs	r1, #64	; 0x40
100000ea:	438b      	bics	r3, r1
100000ec:	6053      	str	r3, [r2, #4]
100000ee:	4770      	bx	lr
100000f0:	10001dc0 	.word	0x10001dc0

100000f4 <set_singl_mskd_operator()>:
100000f4:	4a02      	ldr	r2, [pc, #8]	; (10000100 <set_singl_mskd_operator()+0xc>)
100000f6:	6853      	ldr	r3, [r2, #4]
100000f8:	2102      	movs	r1, #2
100000fa:	430b      	orrs	r3, r1
100000fc:	6053      	str	r3, [r2, #4]
100000fe:	4770      	bx	lr
10000100:	10001dc0 	.word	0x10001dc0

10000104 <set_singl_mskd_method()>:
10000104:	4a02      	ldr	r2, [pc, #8]	; (10000110 <set_singl_mskd_method()+0xc>)
10000106:	6853      	ldr	r3, [r2, #4]
10000108:	2102      	movs	r1, #2
1000010a:	430b      	orrs	r3, r1
1000010c:	6053      	str	r3, [r2, #4]
1000010e:	4770      	bx	lr
10000110:	10001dc0 	.word	0x10001dc0

10000114 <clr_singl_mskd_operator()>:
10000114:	4a02      	ldr	r2, [pc, #8]	; (10000120 <clr_singl_mskd_operator()+0xc>)
10000116:	6853      	ldr	r3, [r2, #4]
10000118:	2102      	movs	r1, #2
1000011a:	438b      	bics	r3, r1
1000011c:	6053      	str	r3, [r2, #4]
1000011e:	4770      	bx	lr
10000120:	10001dc0 	.word	0x10001dc0

10000124 <clr_singl_mskd_method()>:
10000124:	4a02      	ldr	r2, [pc, #8]	; (10000130 <clr_singl_mskd_method()+0xc>)
10000126:	6853      	ldr	r3, [r2, #4]
10000128:	2102      	movs	r1, #2
1000012a:	438b      	bics	r3, r1
1000012c:	6053      	str	r3, [r2, #4]
1000012e:	4770      	bx	lr
10000130:	10001dc0 	.word	0x10001dc0

10000134 <equ_singl_bits_operator()>:
10000134:	4b01      	ldr	r3, [pc, #4]	; (1000013c <equ_singl_bits_operator()+0x8>)
10000136:	2240      	movs	r2, #64	; 0x40
10000138:	605a      	str	r2, [r3, #4]
1000013a:	4770      	bx	lr
1000013c:	10001dc0 	.word	0x10001dc0

10000140 <equ_singl_bits_method()>:
10000140:	4b01      	ldr	r3, [pc, #4]	; (10000148 <equ_singl_bits_method()+0x8>)
10000142:	2240      	movs	r2, #64	; 0x40
10000144:	605a      	str	r2, [r3, #4]
10000146:	4770      	bx	lr
10000148:	10001dc0 	.word	0x10001dc0

1000014c <equ_singl_mskd_operator()>:
1000014c:	4b01      	ldr	r3, [pc, #4]	; (10000154 <equ_singl_mskd_operator()+0x8>)
1000014e:	2202      	movs	r2, #2
10000150:	605a      	str	r2, [r3, #4]
10000152:	4770      	bx	lr
10000154:	10001dc0 	.word	0x10001dc0

10000158 <equ_singl_mskd_method()>:
10000158:	4b01      	ldr	r3, [pc, #4]	; (10000160 <equ_singl_mskd_method()+0x8>)
1000015a:	2202      	movs	r2, #2
1000015c:	605a      	str	r2, [r3, #4]
1000015e:	4770      	bx	lr
10000160:	10001dc0 	.word	0x10001dc0

10000164 <flp_singl_bits_operator()>:
10000164:	4a02      	ldr	r2, [pc, #8]	; (10000170 <flp_singl_bits_operator()+0xc>)
10000166:	6853      	ldr	r3, [r2, #4]
10000168:	2140      	movs	r1, #64	; 0x40
1000016a:	404b      	eors	r3, r1
1000016c:	6053      	str	r3, [r2, #4]
1000016e:	4770      	bx	lr
10000170:	10001dc0 	.word	0x10001dc0

10000174 <flp_singl_bits_method()>:
10000174:	4a02      	ldr	r2, [pc, #8]	; (10000180 <flp_singl_bits_method()+0xc>)
10000176:	6853      	ldr	r3, [r2, #4]
10000178:	2140      	movs	r1, #64	; 0x40
1000017a:	404b      	eors	r3, r1
1000017c:	6053      	str	r3, [r2, #4]
1000017e:	4770      	bx	lr
10000180:	10001dc0 	.word	0x10001dc0

10000184 <flp_singl_mskd_operator()>:
10000184:	4a02      	ldr	r2, [pc, #8]	; (10000190 <flp_singl_mskd_operator()+0xc>)
10000186:	6853      	ldr	r3, [r2, #4]
10000188:	2102      	movs	r1, #2
1000018a:	404b      	eors	r3, r1
1000018c:	6053      	str	r3, [r2, #4]
1000018e:	4770      	bx	lr
10000190:	10001dc0 	.word	0x10001dc0

10000194 <flp_singl_mskd_method()>:
10000194:	4a02      	ldr	r2, [pc, #8]	; (100001a0 <flp_singl_mskd_method()+0xc>)
10000196:	6853      	ldr	r3, [r2, #4]
10000198:	2102      	movs	r1, #2
1000019a:	404b      	eors	r3, r1
1000019c:	6053      	str	r3, [r2, #4]
1000019e:	4770      	bx	lr
100001a0:	10001dc0 	.word	0x10001dc0

100001a4 <ins_singl_mskd_operator()>:
100001a4:	4a03      	ldr	r2, [pc, #12]	; (100001b4 <ins_singl_mskd_operator()+0x10>)
100001a6:	6853      	ldr	r3, [r2, #4]
100001a8:	2106      	movs	r1, #6
100001aa:	438b      	bics	r3, r1
100001ac:	3902      	subs	r1, #2
100001ae:	430b      	orrs	r3, r1
100001b0:	6053      	str	r3, [r2, #4]
100001b2:	4770      	bx	lr
100001b4:	10001dc0 	.word	0x10001dc0

100001b8 <ins_singl_mskd_method()>:
100001b8:	4a03      	ldr	r2, [pc, #12]	; (100001c8 <ins_singl_mskd_method()+0x10>)
100001ba:	6853      	ldr	r3, [r2, #4]
100001bc:	2106      	movs	r1, #6
100001be:	438b      	bics	r3, r1
100001c0:	3902      	subs	r1, #2
100001c2:	430b      	orrs	r3, r1
100001c4:	6053      	str	r3, [r2, #4]
100001c6:	4770      	bx	lr
100001c8:	10001dc0 	.word	0x10001dc0

100001cc <set_multi_bits_operator()>:
100001cc:	4a02      	ldr	r2, [pc, #8]	; (100001d8 <set_multi_bits_operator()+0xc>)
100001ce:	6853      	ldr	r3, [r2, #4]
100001d0:	2121      	movs	r1, #33	; 0x21
100001d2:	430b      	orrs	r3, r1
100001d4:	6053      	str	r3, [r2, #4]
100001d6:	4770      	bx	lr
100001d8:	10001dc0 	.word	0x10001dc0

100001dc <set_multi_bits_method()>:
100001dc:	4a02      	ldr	r2, [pc, #8]	; (100001e8 <set_multi_bits_method()+0xc>)
100001de:	6853      	ldr	r3, [r2, #4]
100001e0:	2121      	movs	r1, #33	; 0x21
100001e2:	430b      	orrs	r3, r1
100001e4:	6053      	str	r3, [r2, #4]
100001e6:	4770      	bx	lr
100001e8:	10001dc0 	.word	0x10001dc0

100001ec <ins_multi_mskd_operator()>:
100001ec:	4904      	ldr	r1, [pc, #16]	; (10000200 <ins_multi_mskd_operator()+0x14>)
100001ee:	684b      	ldr	r3, [r1, #4]
100001f0:	4a04      	ldr	r2, [pc, #16]	; (10000204 <ins_multi_mskd_operator()+0x18>)
100001f2:	401a      	ands	r2, r3
100001f4:	23c1      	movs	r3, #193	; 0xc1
100001f6:	005b      	lsls	r3, r3, #1
100001f8:	4313      	orrs	r3, r2
100001fa:	604b      	str	r3, [r1, #4]
100001fc:	4770      	bx	lr
100001fe:	46c0      	nop			; (mov r8, r8)
10000200:	10001dc0 	.word	0x10001dc0
10000204:	fffff079 	.word	0xfffff079

10000208 <ins_multi_mskd_method()>:
10000208:	4904      	ldr	r1, [pc, #16]	; (1000021c <ins_multi_mskd_method()+0x14>)
1000020a:	684b      	ldr	r3, [r1, #4]
1000020c:	4a04      	ldr	r2, [pc, #16]	; (10000220 <ins_multi_mskd_method()+0x18>)
1000020e:	401a      	ands	r2, r3
10000210:	23c1      	movs	r3, #193	; 0xc1
10000212:	005b      	lsls	r3, r3, #1
10000214:	4313      	orrs	r3, r2
10000216:	604b      	str	r3, [r1, #4]
10000218:	4770      	bx	lr
1000021a:	46c0      	nop			; (mov r8, r8)
1000021c:	10001dc0 	.word	0x10001dc0
10000220:	fffff079 	.word	0xfffff079

10000224 <equ_multi_bits_operator()>:
10000224:	4b01      	ldr	r3, [pc, #4]	; (1000022c <equ_multi_bits_operator()+0x8>)
10000226:	2260      	movs	r2, #96	; 0x60
10000228:	605a      	str	r2, [r3, #4]
1000022a:	4770      	bx	lr
1000022c:	10001dc0 	.word	0x10001dc0

10000230 <equ_multi_bits_method()>:
10000230:	4b01      	ldr	r3, [pc, #4]	; (10000238 <equ_multi_bits_method()+0x8>)
10000232:	2260      	movs	r2, #96	; 0x60
10000234:	605a      	str	r2, [r3, #4]
10000236:	4770      	bx	lr
10000238:	10001dc0 	.word	0x10001dc0

1000023c <equ_multi_mskd_operator()>:
1000023c:	4b02      	ldr	r3, [pc, #8]	; (10000248 <equ_multi_mskd_operator()+0xc>)
1000023e:	22c2      	movs	r2, #194	; 0xc2
10000240:	0092      	lsls	r2, r2, #2
10000242:	605a      	str	r2, [r3, #4]
10000244:	4770      	bx	lr
10000246:	46c0      	nop			; (mov r8, r8)
10000248:	10001dc0 	.word	0x10001dc0

1000024c <equ_multi_mskd_method()>:
1000024c:	4b02      	ldr	r3, [pc, #8]	; (10000258 <equ_multi_mskd_method()+0xc>)
1000024e:	22c2      	movs	r2, #194	; 0xc2
10000250:	0092      	lsls	r2, r2, #2
10000252:	605a      	str	r2, [r3, #4]
10000254:	4770      	bx	lr
10000256:	46c0      	nop			; (mov r8, r8)
10000258:	10001dc0 	.word	0x10001dc0

1000025c <equ_bits_mskd_operator()>:
1000025c:	4b01      	ldr	r3, [pc, #4]	; (10000264 <equ_bits_mskd_operator()+0x8>)
1000025e:	2222      	movs	r2, #34	; 0x22
10000260:	605a      	str	r2, [r3, #4]
10000262:	4770      	bx	lr
10000264:	10001dc0 	.word	0x10001dc0

10000268 <equ_bits_mskd_method()>:
10000268:	4b01      	ldr	r3, [pc, #4]	; (10000270 <equ_bits_mskd_method()+0x8>)
1000026a:	2222      	movs	r2, #34	; 0x22
1000026c:	605a      	str	r2, [r3, #4]
1000026e:	4770      	bx	lr
10000270:	10001dc0 	.word	0x10001dc0

10000274 <equ_mskd_bits_operator()>:
10000274:	4b01      	ldr	r3, [pc, #4]	; (1000027c <equ_mskd_bits_operator()+0x8>)
10000276:	2244      	movs	r2, #68	; 0x44
10000278:	605a      	str	r2, [r3, #4]
1000027a:	4770      	bx	lr
1000027c:	10001dc0 	.word	0x10001dc0

10000280 <equ_mskd_bits_method()>:
10000280:	4b01      	ldr	r3, [pc, #4]	; (10000288 <equ_mskd_bits_method()+0x8>)
10000282:	2244      	movs	r2, #68	; 0x44
10000284:	605a      	str	r2, [r3, #4]
10000286:	4770      	bx	lr
10000288:	10001dc0 	.word	0x10001dc0

1000028c <equ_bits_var()>:
1000028c:	4b02      	ldr	r3, [pc, #8]	; (10000298 <equ_bits_var()+0xc>)
1000028e:	2240      	movs	r2, #64	; 0x40
10000290:	605a      	str	r2, [r3, #4]
10000292:	3a3f      	subs	r2, #63	; 0x3f
10000294:	605a      	str	r2, [r3, #4]
10000296:	4770      	bx	lr
10000298:	10001dc0 	.word	0x10001dc0

1000029c <equ_mskd_var()>:
1000029c:	4b03      	ldr	r3, [pc, #12]	; (100002ac <equ_mskd_var()+0x10>)
1000029e:	2202      	movs	r2, #2
100002a0:	605a      	str	r2, [r3, #4]
100002a2:	327f      	adds	r2, #127	; 0x7f
100002a4:	32ff      	adds	r2, #255	; 0xff
100002a6:	605a      	str	r2, [r3, #4]
100002a8:	4770      	bx	lr
100002aa:	46c0      	nop			; (mov r8, r8)
100002ac:	10001dc0 	.word	0x10001dc0

100002b0 <cmp_equ_zero()>:
100002b0:	4b07      	ldr	r3, [pc, #28]	; (100002d0 <cmp_equ_zero()+0x20>)
100002b2:	2200      	movs	r2, #0
100002b4:	605a      	str	r2, [r3, #4]
100002b6:	685b      	ldr	r3, [r3, #4]
100002b8:	2b00      	cmp	r3, #0
100002ba:	d104      	bne.n	100002c6 <cmp_equ_zero()+0x16>
100002bc:	4b05      	ldr	r3, [pc, #20]	; (100002d4 <cmp_equ_zero()+0x24>)
100002be:	22e8      	movs	r2, #232	; 0xe8
100002c0:	0592      	lsls	r2, r2, #22
100002c2:	605a      	str	r2, [r3, #4]
100002c4:	4770      	bx	lr
100002c6:	4b03      	ldr	r3, [pc, #12]	; (100002d4 <cmp_equ_zero()+0x24>)
100002c8:	2288      	movs	r2, #136	; 0x88
100002ca:	0592      	lsls	r2, r2, #22
100002cc:	605a      	str	r2, [r3, #4]
100002ce:	e7f9      	b.n	100002c4 <cmp_equ_zero()+0x14>
100002d0:	10001dc0 	.word	0x10001dc0
100002d4:	10001d20 	.word	0x10001d20

100002d8 <cmp_neq_zero()>:
100002d8:	4b06      	ldr	r3, [pc, #24]	; (100002f4 <cmp_neq_zero()+0x1c>)
100002da:	2200      	movs	r2, #0
100002dc:	605a      	str	r2, [r3, #4]
100002de:	685b      	ldr	r3, [r3, #4]
100002e0:	2b00      	cmp	r3, #0
100002e2:	d003      	beq.n	100002ec <cmp_neq_zero()+0x14>
100002e4:	4b03      	ldr	r3, [pc, #12]	; (100002f4 <cmp_neq_zero()+0x1c>)
100002e6:	3204      	adds	r2, #4
100002e8:	605a      	str	r2, [r3, #4]
100002ea:	4770      	bx	lr
100002ec:	4b01      	ldr	r3, [pc, #4]	; (100002f4 <cmp_neq_zero()+0x1c>)
100002ee:	2220      	movs	r2, #32
100002f0:	605a      	str	r2, [r3, #4]
100002f2:	e7fa      	b.n	100002ea <cmp_neq_zero()+0x12>
100002f4:	10001dc0 	.word	0x10001dc0

100002f8 <cmp_equ_bits()>:
100002f8:	4a07      	ldr	r2, [pc, #28]	; (10000318 <cmp_equ_bits()+0x20>)
100002fa:	2340      	movs	r3, #64	; 0x40
100002fc:	6053      	str	r3, [r2, #4]
100002fe:	6852      	ldr	r2, [r2, #4]
10000300:	4213      	tst	r3, r2
10000302:	d104      	bne.n	1000030e <cmp_equ_bits()+0x16>
10000304:	4b05      	ldr	r3, [pc, #20]	; (1000031c <cmp_equ_bits()+0x24>)
10000306:	22d0      	movs	r2, #208	; 0xd0
10000308:	0552      	lsls	r2, r2, #21
1000030a:	605a      	str	r2, [r3, #4]
1000030c:	4770      	bx	lr
1000030e:	4b03      	ldr	r3, [pc, #12]	; (1000031c <cmp_equ_bits()+0x24>)
10000310:	22b0      	movs	r2, #176	; 0xb0
10000312:	0552      	lsls	r2, r2, #21
10000314:	605a      	str	r2, [r3, #4]
10000316:	e7f9      	b.n	1000030c <cmp_equ_bits()+0x14>
10000318:	10001dc0 	.word	0x10001dc0
1000031c:	10001d20 	.word	0x10001d20

10000320 <cmp_neq_bits()>:
10000320:	4a06      	ldr	r2, [pc, #24]	; (1000033c <cmp_neq_bits()+0x1c>)
10000322:	2340      	movs	r3, #64	; 0x40
10000324:	6053      	str	r3, [r2, #4]
10000326:	6852      	ldr	r2, [r2, #4]
10000328:	4213      	tst	r3, r2
1000032a:	d103      	bne.n	10000334 <cmp_neq_bits()+0x14>
1000032c:	4b03      	ldr	r3, [pc, #12]	; (1000033c <cmp_neq_bits()+0x1c>)
1000032e:	2202      	movs	r2, #2
10000330:	605a      	str	r2, [r3, #4]
10000332:	4770      	bx	lr
10000334:	4b01      	ldr	r3, [pc, #4]	; (1000033c <cmp_neq_bits()+0x1c>)
10000336:	2220      	movs	r2, #32
10000338:	605a      	str	r2, [r3, #4]
1000033a:	e7fa      	b.n	10000332 <cmp_neq_bits()+0x12>
1000033c:	10001dc0 	.word	0x10001dc0

10000340 <cmp_equ_multi_bits()>:
10000340:	4a08      	ldr	r2, [pc, #32]	; (10000364 <cmp_equ_multi_bits()+0x24>)
10000342:	2360      	movs	r3, #96	; 0x60
10000344:	6053      	str	r3, [r2, #4]
10000346:	6852      	ldr	r2, [r2, #4]
10000348:	4013      	ands	r3, r2
1000034a:	2b60      	cmp	r3, #96	; 0x60
1000034c:	d004      	beq.n	10000358 <cmp_equ_multi_bits()+0x18>
1000034e:	4b06      	ldr	r3, [pc, #24]	; (10000368 <cmp_equ_multi_bits()+0x28>)
10000350:	22b8      	movs	r2, #184	; 0xb8
10000352:	0592      	lsls	r2, r2, #22
10000354:	605a      	str	r2, [r3, #4]
10000356:	4770      	bx	lr
10000358:	4b03      	ldr	r3, [pc, #12]	; (10000368 <cmp_equ_multi_bits()+0x28>)
1000035a:	2288      	movs	r2, #136	; 0x88
1000035c:	0592      	lsls	r2, r2, #22
1000035e:	605a      	str	r2, [r3, #4]
10000360:	e7f9      	b.n	10000356 <cmp_equ_multi_bits()+0x16>
10000362:	46c0      	nop			; (mov r8, r8)
10000364:	10001dc0 	.word	0x10001dc0
10000368:	10001d20 	.word	0x10001d20

1000036c <cmp_neq_multi_bits()>:
1000036c:	4a08      	ldr	r2, [pc, #32]	; (10000390 <cmp_neq_multi_bits()+0x24>)
1000036e:	2360      	movs	r3, #96	; 0x60
10000370:	6053      	str	r3, [r2, #4]
10000372:	6852      	ldr	r2, [r2, #4]
10000374:	4013      	ands	r3, r2
10000376:	2b60      	cmp	r3, #96	; 0x60
10000378:	d004      	beq.n	10000384 <cmp_neq_multi_bits()+0x18>
1000037a:	4b06      	ldr	r3, [pc, #24]	; (10000394 <cmp_neq_multi_bits()+0x28>)
1000037c:	22e8      	movs	r2, #232	; 0xe8
1000037e:	0592      	lsls	r2, r2, #22
10000380:	605a      	str	r2, [r3, #4]
10000382:	4770      	bx	lr
10000384:	4b03      	ldr	r3, [pc, #12]	; (10000394 <cmp_neq_multi_bits()+0x28>)
10000386:	22f8      	movs	r2, #248	; 0xf8
10000388:	0592      	lsls	r2, r2, #22
1000038a:	605a      	str	r2, [r3, #4]
1000038c:	e7f9      	b.n	10000382 <cmp_neq_multi_bits()+0x16>
1000038e:	46c0      	nop			; (mov r8, r8)
10000390:	10001dc0 	.word	0x10001dc0
10000394:	10001d20 	.word	0x10001d20

10000398 <cmp_equ_mskd()>:
10000398:	4b0e      	ldr	r3, [pc, #56]	; (100003d4 <cmp_equ_mskd()+0x3c>)
1000039a:	22e8      	movs	r2, #232	; 0xe8
1000039c:	0252      	lsls	r2, r2, #9
1000039e:	605a      	str	r2, [r3, #4]
100003a0:	685b      	ldr	r3, [r3, #4]
100003a2:	22f8      	movs	r2, #248	; 0xf8
100003a4:	0252      	lsls	r2, r2, #9
100003a6:	4013      	ands	r3, r2
100003a8:	2288      	movs	r2, #136	; 0x88
100003aa:	0252      	lsls	r2, r2, #9
100003ac:	4293      	cmp	r3, r2
100003ae:	d008      	beq.n	100003c2 <cmp_equ_mskd()+0x2a>
100003b0:	4909      	ldr	r1, [pc, #36]	; (100003d8 <cmp_equ_mskd()+0x40>)
100003b2:	684b      	ldr	r3, [r1, #4]
100003b4:	4a09      	ldr	r2, [pc, #36]	; (100003dc <cmp_equ_mskd()+0x44>)
100003b6:	401a      	ands	r2, r3
100003b8:	2388      	movs	r3, #136	; 0x88
100003ba:	059b      	lsls	r3, r3, #22
100003bc:	4313      	orrs	r3, r2
100003be:	604b      	str	r3, [r1, #4]
100003c0:	4770      	bx	lr
100003c2:	4905      	ldr	r1, [pc, #20]	; (100003d8 <cmp_equ_mskd()+0x40>)
100003c4:	684b      	ldr	r3, [r1, #4]
100003c6:	4a05      	ldr	r2, [pc, #20]	; (100003dc <cmp_equ_mskd()+0x44>)
100003c8:	401a      	ands	r2, r3
100003ca:	23e0      	movs	r3, #224	; 0xe0
100003cc:	051b      	lsls	r3, r3, #20
100003ce:	4313      	orrs	r3, r2
100003d0:	604b      	str	r3, [r1, #4]
100003d2:	e7f5      	b.n	100003c0 <cmp_equ_mskd()+0x28>
100003d4:	10001dc0 	.word	0x10001dc0
100003d8:	10001d20 	.word	0x10001d20
100003dc:	c1ffffff 	.word	0xc1ffffff

100003e0 <cmp_neq_mskd()>:
100003e0:	4b0c      	ldr	r3, [pc, #48]	; (10000414 <cmp_neq_mskd()+0x34>)
100003e2:	22e8      	movs	r2, #232	; 0xe8
100003e4:	0252      	lsls	r2, r2, #9
100003e6:	605a      	str	r2, [r3, #4]
100003e8:	685b      	ldr	r3, [r3, #4]
100003ea:	22f8      	movs	r2, #248	; 0xf8
100003ec:	0252      	lsls	r2, r2, #9
100003ee:	4013      	ands	r3, r2
100003f0:	2288      	movs	r2, #136	; 0x88
100003f2:	0252      	lsls	r2, r2, #9
100003f4:	4293      	cmp	r3, r2
100003f6:	d007      	beq.n	10000408 <cmp_neq_mskd()+0x28>
100003f8:	4a06      	ldr	r2, [pc, #24]	; (10000414 <cmp_neq_mskd()+0x34>)
100003fa:	6853      	ldr	r3, [r2, #4]
100003fc:	2106      	movs	r1, #6
100003fe:	438b      	bics	r3, r1
10000400:	3902      	subs	r1, #2
10000402:	430b      	orrs	r3, r1
10000404:	6053      	str	r3, [r2, #4]
10000406:	4770      	bx	lr
10000408:	4a02      	ldr	r2, [pc, #8]	; (10000414 <cmp_neq_mskd()+0x34>)
1000040a:	6853      	ldr	r3, [r2, #4]
1000040c:	2140      	movs	r1, #64	; 0x40
1000040e:	430b      	orrs	r3, r1
10000410:	6053      	str	r3, [r2, #4]
10000412:	e7f8      	b.n	10000406 <cmp_neq_mskd()+0x26>
10000414:	10001dc0 	.word	0x10001dc0

10000418 <cmp_equ_reg()>:
10000418:	4b07      	ldr	r3, [pc, #28]	; (10000438 <cmp_equ_reg()+0x20>)
1000041a:	2222      	movs	r2, #34	; 0x22
1000041c:	605a      	str	r2, [r3, #4]
1000041e:	685b      	ldr	r3, [r3, #4]
10000420:	2b22      	cmp	r3, #34	; 0x22
10000422:	d004      	beq.n	1000042e <cmp_equ_reg()+0x16>
10000424:	4b05      	ldr	r3, [pc, #20]	; (1000043c <cmp_equ_reg()+0x24>)
10000426:	22b8      	movs	r2, #184	; 0xb8
10000428:	0592      	lsls	r2, r2, #22
1000042a:	605a      	str	r2, [r3, #4]
1000042c:	4770      	bx	lr
1000042e:	4b03      	ldr	r3, [pc, #12]	; (1000043c <cmp_equ_reg()+0x24>)
10000430:	22a8      	movs	r2, #168	; 0xa8
10000432:	0592      	lsls	r2, r2, #22
10000434:	605a      	str	r2, [r3, #4]
10000436:	e7f9      	b.n	1000042c <cmp_equ_reg()+0x14>
10000438:	10001dc0 	.word	0x10001dc0
1000043c:	10001d20 	.word	0x10001d20

10000440 <cmp_neq_reg()>:
10000440:	4b06      	ldr	r3, [pc, #24]	; (1000045c <cmp_neq_reg()+0x1c>)
10000442:	2222      	movs	r2, #34	; 0x22
10000444:	605a      	str	r2, [r3, #4]
10000446:	685b      	ldr	r3, [r3, #4]
10000448:	2b22      	cmp	r3, #34	; 0x22
1000044a:	d003      	beq.n	10000454 <cmp_neq_reg()+0x14>
1000044c:	4b03      	ldr	r3, [pc, #12]	; (1000045c <cmp_neq_reg()+0x1c>)
1000044e:	3a20      	subs	r2, #32
10000450:	605a      	str	r2, [r3, #4]
10000452:	4770      	bx	lr
10000454:	4b01      	ldr	r3, [pc, #4]	; (1000045c <cmp_neq_reg()+0x1c>)
10000456:	2220      	movs	r2, #32
10000458:	605a      	str	r2, [r3, #4]
1000045a:	e7fa      	b.n	10000452 <cmp_neq_reg()+0x12>
1000045c:	10001dc0 	.word	0x10001dc0

10000460 <constexpr_bits_array()>:
10000460:	4b03      	ldr	r3, [pc, #12]	; (10000470 <constexpr_bits_array()+0x10>)
10000462:	2206      	movs	r2, #6
10000464:	62da      	str	r2, [r3, #44]	; 0x2c
10000466:	329a      	adds	r2, #154	; 0x9a
10000468:	2180      	movs	r1, #128	; 0x80
1000046a:	0189      	lsls	r1, r1, #6
1000046c:	5099      	str	r1, [r3, r2]
1000046e:	4770      	bx	lr
10000470:	10001c00 	.word	0x10001c00

10000474 <runtime_bits_array()>:
10000474:	b081      	sub	sp, #4
10000476:	2303      	movs	r3, #3
10000478:	9300      	str	r3, [sp, #0]
1000047a:	9b00      	ldr	r3, [sp, #0]
1000047c:	009b      	lsls	r3, r3, #2
1000047e:	4a07      	ldr	r2, [pc, #28]	; (1000049c <runtime_bits_array()+0x28>)
10000480:	4694      	mov	ip, r2
10000482:	4463      	add	r3, ip
10000484:	2221      	movs	r2, #33	; 0x21
10000486:	621a      	str	r2, [r3, #32]
10000488:	2307      	movs	r3, #7
1000048a:	9300      	str	r3, [sp, #0]
1000048c:	9a00      	ldr	r2, [sp, #0]
1000048e:	3b06      	subs	r3, #6
10000490:	4093      	lsls	r3, r2
10000492:	4661      	mov	r1, ip
10000494:	22a0      	movs	r2, #160	; 0xa0
10000496:	508b      	str	r3, [r1, r2]
10000498:	b001      	add	sp, #4
1000049a:	4770      	bx	lr
1000049c:	10001c00 	.word	0x10001c00

100004a0 <prescaler_low()>:
100004a0:	4b04      	ldr	r3, [pc, #16]	; (100004b4 <prescaler_low()+0x14>)
100004a2:	2277      	movs	r2, #119	; 0x77
100004a4:	605a      	str	r2, [r3, #4]
100004a6:	685a      	ldr	r2, [r3, #4]
100004a8:	237f      	movs	r3, #127	; 0x7f
100004aa:	4013      	ands	r3, r2
100004ac:	4a02      	ldr	r2, [pc, #8]	; (100004b8 <prescaler_low()+0x18>)
100004ae:	62d3      	str	r3, [r2, #44]	; 0x2c
100004b0:	4770      	bx	lr
100004b2:	46c0      	nop			; (mov r8, r8)
100004b4:	10001d20 	.word	0x10001d20
100004b8:	10001c00 	.word	0x10001c00

100004bc <prescaler_high()>:
100004bc:	4b04      	ldr	r3, [pc, #16]	; (100004d0 <prescaler_high()+0x14>)
100004be:	22e8      	movs	r2, #232	; 0xe8
100004c0:	0592      	lsls	r2, r2, #22
100004c2:	605a      	str	r2, [r3, #4]
100004c4:	685b      	ldr	r3, [r3, #4]
100004c6:	009b      	lsls	r3, r3, #2
100004c8:	0edb      	lsrs	r3, r3, #27
100004ca:	4a02      	ldr	r2, [pc, #8]	; (100004d4 <prescaler_high()+0x18>)
100004cc:	62d3      	str	r3, [r2, #44]	; 0x2c
100004ce:	4770      	bx	lr
100004d0:	10001d20 	.word	0x10001d20
100004d4:	10001c00 	.word	0x10001c00

100004d8 <reg_mskd_lss()>:
100004d8:	4b09      	ldr	r3, [pc, #36]	; (10000500 <reg_mskd_lss()+0x28>)
100004da:	22d8      	movs	r2, #216	; 0xd8
100004dc:	0592      	lsls	r2, r2, #22
100004de:	605a      	str	r2, [r3, #4]
100004e0:	685b      	ldr	r3, [r3, #4]
100004e2:	22f8      	movs	r2, #248	; 0xf8
100004e4:	0592      	lsls	r2, r2, #22
100004e6:	4013      	ands	r3, r2
100004e8:	4a06      	ldr	r2, [pc, #24]	; (10000504 <reg_mskd_lss()+0x2c>)
100004ea:	4293      	cmp	r3, r2
100004ec:	d803      	bhi.n	100004f6 <reg_mskd_lss()+0x1e>
100004ee:	4b06      	ldr	r3, [pc, #24]	; (10000508 <reg_mskd_lss()+0x30>)
100004f0:	2202      	movs	r2, #2
100004f2:	605a      	str	r2, [r3, #4]
100004f4:	4770      	bx	lr
100004f6:	4b04      	ldr	r3, [pc, #16]	; (10000508 <reg_mskd_lss()+0x30>)
100004f8:	2204      	movs	r2, #4
100004fa:	605a      	str	r2, [r3, #4]
100004fc:	e7fa      	b.n	100004f4 <reg_mskd_lss()+0x1c>
100004fe:	46c0      	nop			; (mov r8, r8)
10000500:	10001d20 	.word	0x10001d20
10000504:	37ffffff 	.word	0x37ffffff
10000508:	10001dc0 	.word	0x10001dc0

1000050c <reg_mskd_leq()>:
1000050c:	4b0c      	ldr	r3, [pc, #48]	; (10000540 <reg_mskd_leq()+0x34>)
1000050e:	22b8      	movs	r2, #184	; 0xb8
10000510:	0592      	lsls	r2, r2, #22
10000512:	605a      	str	r2, [r3, #4]
10000514:	685b      	ldr	r3, [r3, #4]
10000516:	21f8      	movs	r1, #248	; 0xf8
10000518:	0589      	lsls	r1, r1, #22
1000051a:	400b      	ands	r3, r1
1000051c:	4293      	cmp	r3, r2
1000051e:	d80a      	bhi.n	10000536 <reg_mskd_leq()+0x2a>
10000520:	4b07      	ldr	r3, [pc, #28]	; (10000540 <reg_mskd_leq()+0x34>)
10000522:	685b      	ldr	r3, [r3, #4]
10000524:	400b      	ands	r3, r1
10000526:	22c0      	movs	r2, #192	; 0xc0
10000528:	0592      	lsls	r2, r2, #22
1000052a:	4293      	cmp	r3, r2
1000052c:	d803      	bhi.n	10000536 <reg_mskd_leq()+0x2a>
1000052e:	4b05      	ldr	r3, [pc, #20]	; (10000544 <reg_mskd_leq()+0x38>)
10000530:	2202      	movs	r2, #2
10000532:	605a      	str	r2, [r3, #4]
10000534:	e002      	b.n	1000053c <reg_mskd_leq()+0x30>
10000536:	4b03      	ldr	r3, [pc, #12]	; (10000544 <reg_mskd_leq()+0x38>)
10000538:	2204      	movs	r2, #4
1000053a:	605a      	str	r2, [r3, #4]
1000053c:	4770      	bx	lr
1000053e:	46c0      	nop			; (mov r8, r8)
10000540:	10001d20 	.word	0x10001d20
10000544:	10001dc0 	.word	0x10001dc0

10000548 <reg_mskd_gtr()>:
10000548:	4b09      	ldr	r3, [pc, #36]	; (10000570 <reg_mskd_gtr()+0x28>)
1000054a:	2298      	movs	r2, #152	; 0x98
1000054c:	0592      	lsls	r2, r2, #22
1000054e:	605a      	str	r2, [r3, #4]
10000550:	685b      	ldr	r3, [r3, #4]
10000552:	22f8      	movs	r2, #248	; 0xf8
10000554:	0592      	lsls	r2, r2, #22
10000556:	4013      	ands	r3, r2
10000558:	2290      	movs	r2, #144	; 0x90
1000055a:	0592      	lsls	r2, r2, #22
1000055c:	4293      	cmp	r3, r2
1000055e:	d903      	bls.n	10000568 <reg_mskd_gtr()+0x20>
10000560:	4b04      	ldr	r3, [pc, #16]	; (10000574 <reg_mskd_gtr()+0x2c>)
10000562:	2202      	movs	r2, #2
10000564:	605a      	str	r2, [r3, #4]
10000566:	4770      	bx	lr
10000568:	4b02      	ldr	r3, [pc, #8]	; (10000574 <reg_mskd_gtr()+0x2c>)
1000056a:	2204      	movs	r2, #4
1000056c:	605a      	str	r2, [r3, #4]
1000056e:	e7fa      	b.n	10000566 <reg_mskd_gtr()+0x1e>
10000570:	10001d20 	.word	0x10001d20
10000574:	10001dc0 	.word	0x10001dc0

10000578 <reg_mskd_geq()>:
10000578:	4b0d      	ldr	r3, [pc, #52]	; (100005b0 <reg_mskd_geq()+0x38>)
1000057a:	2288      	movs	r2, #136	; 0x88
1000057c:	0592      	lsls	r2, r2, #22
1000057e:	605a      	str	r2, [r3, #4]
10000580:	685b      	ldr	r3, [r3, #4]
10000582:	22f8      	movs	r2, #248	; 0xf8
10000584:	0592      	lsls	r2, r2, #22
10000586:	4013      	ands	r3, r2
10000588:	4a0a      	ldr	r2, [pc, #40]	; (100005b4 <reg_mskd_geq()+0x3c>)
1000058a:	4293      	cmp	r3, r2
1000058c:	d90b      	bls.n	100005a6 <reg_mskd_geq()+0x2e>
1000058e:	4b08      	ldr	r3, [pc, #32]	; (100005b0 <reg_mskd_geq()+0x38>)
10000590:	685b      	ldr	r3, [r3, #4]
10000592:	22f8      	movs	r2, #248	; 0xf8
10000594:	0592      	lsls	r2, r2, #22
10000596:	4013      	ands	r3, r2
10000598:	4a07      	ldr	r2, [pc, #28]	; (100005b8 <reg_mskd_geq()+0x40>)
1000059a:	4293      	cmp	r3, r2
1000059c:	d903      	bls.n	100005a6 <reg_mskd_geq()+0x2e>
1000059e:	4b07      	ldr	r3, [pc, #28]	; (100005bc <reg_mskd_geq()+0x44>)
100005a0:	2202      	movs	r2, #2
100005a2:	605a      	str	r2, [r3, #4]
100005a4:	e002      	b.n	100005ac <reg_mskd_geq()+0x34>
100005a6:	4b05      	ldr	r3, [pc, #20]	; (100005bc <reg_mskd_geq()+0x44>)
100005a8:	2204      	movs	r2, #4
100005aa:	605a      	str	r2, [r3, #4]
100005ac:	4770      	bx	lr
100005ae:	46c0      	nop			; (mov r8, r8)
100005b0:	10001d20 	.word	0x10001d20
100005b4:	1fffffff 	.word	0x1fffffff
100005b8:	21ffffff 	.word	0x21ffffff
100005bc:	10001dc0 	.word	0x10001dc0

100005c0 <pos_cmp_eq()>:
100005c0:	4b01      	ldr	r3, [pc, #4]	; (100005c8 <pos_cmp_eq()+0x8>)
100005c2:	2202      	movs	r2, #2
100005c4:	605a      	str	r2, [r3, #4]
100005c6:	4770      	bx	lr
100005c8:	10001dc0 	.word	0x10001dc0

100005cc <pos_cmp_ne()>:
100005cc:	4b01      	ldr	r3, [pc, #4]	; (100005d4 <pos_cmp_ne()+0x8>)
100005ce:	2202      	movs	r2, #2
100005d0:	605a      	str	r2, [r3, #4]
100005d2:	4770      	bx	lr
100005d4:	10001dc0 	.word	0x10001dc0

100005d8 <bits_extract_eq()>:
100005d8:	4b06      	ldr	r3, [pc, #24]	; (100005f4 <bits_extract_eq()+0x1c>)
100005da:	2240      	movs	r2, #64	; 0x40
100005dc:	605a      	str	r2, [r3, #4]
100005de:	685b      	ldr	r3, [r3, #4]
100005e0:	2b40      	cmp	r3, #64	; 0x40
100005e2:	d003      	beq.n	100005ec <bits_extract_eq()+0x14>
100005e4:	4b03      	ldr	r3, [pc, #12]	; (100005f4 <bits_extract_eq()+0x1c>)
100005e6:	2204      	movs	r2, #4
100005e8:	605a      	str	r2, [r3, #4]
100005ea:	4770      	bx	lr
100005ec:	4b01      	ldr	r3, [pc, #4]	; (100005f4 <bits_extract_eq()+0x1c>)
100005ee:	3a3e      	subs	r2, #62	; 0x3e
100005f0:	605a      	str	r2, [r3, #4]
100005f2:	e7fa      	b.n	100005ea <bits_extract_eq()+0x12>
100005f4:	10001dc0 	.word	0x10001dc0

100005f8 <mskd_extract_eq()>:
100005f8:	4b06      	ldr	r3, [pc, #24]	; (10000614 <mskd_extract_eq()+0x1c>)
100005fa:	2202      	movs	r2, #2
100005fc:	605a      	str	r2, [r3, #4]
100005fe:	685b      	ldr	r3, [r3, #4]
10000600:	2b02      	cmp	r3, #2
10000602:	d003      	beq.n	1000060c <mskd_extract_eq()+0x14>
10000604:	4b03      	ldr	r3, [pc, #12]	; (10000614 <mskd_extract_eq()+0x1c>)
10000606:	2240      	movs	r2, #64	; 0x40
10000608:	605a      	str	r2, [r3, #4]
1000060a:	4770      	bx	lr
1000060c:	4b01      	ldr	r3, [pc, #4]	; (10000614 <mskd_extract_eq()+0x1c>)
1000060e:	321e      	adds	r2, #30
10000610:	605a      	str	r2, [r3, #4]
10000612:	e7fa      	b.n	1000060a <mskd_extract_eq()+0x12>
10000614:	10001dc0 	.word	0x10001dc0

10000618 <mskd_extract_ne()>:
10000618:	4b06      	ldr	r3, [pc, #24]	; (10000634 <mskd_extract_ne()+0x1c>)
1000061a:	2204      	movs	r2, #4
1000061c:	605a      	str	r2, [r3, #4]
1000061e:	685b      	ldr	r3, [r3, #4]
10000620:	2b04      	cmp	r3, #4
10000622:	d003      	beq.n	1000062c <mskd_extract_ne()+0x14>
10000624:	4b03      	ldr	r3, [pc, #12]	; (10000634 <mskd_extract_ne()+0x1c>)
10000626:	2220      	movs	r2, #32
10000628:	605a      	str	r2, [r3, #4]
1000062a:	4770      	bx	lr
1000062c:	4b01      	ldr	r3, [pc, #4]	; (10000634 <mskd_extract_ne()+0x1c>)
1000062e:	323c      	adds	r2, #60	; 0x3c
10000630:	605a      	str	r2, [r3, #4]
10000632:	e7fa      	b.n	1000062a <mskd_extract_ne()+0x12>
10000634:	10001dc0 	.word	0x10001dc0

10000638 <mskd_extract_lss()>:
10000638:	4b07      	ldr	r3, [pc, #28]	; (10000658 <mskd_extract_lss()+0x20>)
1000063a:	22b0      	movs	r2, #176	; 0xb0
1000063c:	0552      	lsls	r2, r2, #21
1000063e:	605a      	str	r2, [r3, #4]
10000640:	685a      	ldr	r2, [r3, #4]
10000642:	4b06      	ldr	r3, [pc, #24]	; (1000065c <mskd_extract_lss()+0x24>)
10000644:	429a      	cmp	r2, r3
10000646:	d803      	bhi.n	10000650 <mskd_extract_lss()+0x18>
10000648:	4b05      	ldr	r3, [pc, #20]	; (10000660 <mskd_extract_lss()+0x28>)
1000064a:	2220      	movs	r2, #32
1000064c:	605a      	str	r2, [r3, #4]
1000064e:	4770      	bx	lr
10000650:	4b03      	ldr	r3, [pc, #12]	; (10000660 <mskd_extract_lss()+0x28>)
10000652:	2240      	movs	r2, #64	; 0x40
10000654:	605a      	str	r2, [r3, #4]
10000656:	e7fa      	b.n	1000064e <mskd_extract_lss()+0x16>
10000658:	10001d20 	.word	0x10001d20
1000065c:	17ffffff 	.word	0x17ffffff
10000660:	10001dc0 	.word	0x10001dc0

10000664 <mskd_extract_leq()>:
10000664:	4a07      	ldr	r2, [pc, #28]	; (10000684 <mskd_extract_leq()+0x20>)
10000666:	23b8      	movs	r3, #184	; 0xb8
10000668:	059b      	lsls	r3, r3, #22
1000066a:	6053      	str	r3, [r2, #4]
1000066c:	6852      	ldr	r2, [r2, #4]
1000066e:	429a      	cmp	r2, r3
10000670:	d903      	bls.n	1000067a <mskd_extract_leq()+0x16>
10000672:	4b05      	ldr	r3, [pc, #20]	; (10000688 <mskd_extract_leq()+0x24>)
10000674:	2240      	movs	r2, #64	; 0x40
10000676:	605a      	str	r2, [r3, #4]
10000678:	4770      	bx	lr
1000067a:	4b03      	ldr	r3, [pc, #12]	; (10000688 <mskd_extract_leq()+0x24>)
1000067c:	2220      	movs	r2, #32
1000067e:	605a      	str	r2, [r3, #4]
10000680:	e7fa      	b.n	10000678 <mskd_extract_leq()+0x14>
10000682:	46c0      	nop			; (mov r8, r8)
10000684:	10001d20 	.word	0x10001d20
10000688:	10001dc0 	.word	0x10001dc0

1000068c <mskd_extract_gtr()>:
1000068c:	4b08      	ldr	r3, [pc, #32]	; (100006b0 <mskd_extract_gtr()+0x24>)
1000068e:	2298      	movs	r2, #152	; 0x98
10000690:	0592      	lsls	r2, r2, #22
10000692:	605a      	str	r2, [r3, #4]
10000694:	685a      	ldr	r2, [r3, #4]
10000696:	2390      	movs	r3, #144	; 0x90
10000698:	059b      	lsls	r3, r3, #22
1000069a:	429a      	cmp	r2, r3
1000069c:	d903      	bls.n	100006a6 <mskd_extract_gtr()+0x1a>
1000069e:	4b05      	ldr	r3, [pc, #20]	; (100006b4 <mskd_extract_gtr()+0x28>)
100006a0:	2220      	movs	r2, #32
100006a2:	605a      	str	r2, [r3, #4]
100006a4:	4770      	bx	lr
100006a6:	4b03      	ldr	r3, [pc, #12]	; (100006b4 <mskd_extract_gtr()+0x28>)
100006a8:	2240      	movs	r2, #64	; 0x40
100006aa:	605a      	str	r2, [r3, #4]
100006ac:	e7fa      	b.n	100006a4 <mskd_extract_gtr()+0x18>
100006ae:	46c0      	nop			; (mov r8, r8)
100006b0:	10001d20 	.word	0x10001d20
100006b4:	10001dc0 	.word	0x10001dc0

100006b8 <set_bits_global()>:
100006b8:	4a02      	ldr	r2, [pc, #8]	; (100006c4 <set_bits_global()+0xc>)
100006ba:	6853      	ldr	r3, [r2, #4]
100006bc:	2140      	movs	r1, #64	; 0x40
100006be:	430b      	orrs	r3, r1
100006c0:	6053      	str	r3, [r2, #4]
100006c2:	4770      	bx	lr
100006c4:	10001dc0 	.word	0x10001dc0

100006c8 <ins_mskd_global()>:
100006c8:	4a03      	ldr	r2, [pc, #12]	; (100006d8 <ins_mskd_global()+0x10>)
100006ca:	6853      	ldr	r3, [r2, #4]
100006cc:	2106      	movs	r1, #6
100006ce:	438b      	bics	r3, r1
100006d0:	3904      	subs	r1, #4
100006d2:	430b      	orrs	r3, r1
100006d4:	6053      	str	r3, [r2, #4]
100006d6:	4770      	bx	lr
100006d8:	10001dc0 	.word	0x10001dc0

100006dc <assign_array_global()>:
100006dc:	4b01      	ldr	r3, [pc, #4]	; (100006e4 <assign_array_global()+0x8>)
100006de:	22bd      	movs	r2, #189	; 0xbd
100006e0:	601a      	str	r2, [r3, #0]
100006e2:	4770      	bx	lr
100006e4:	10001c2c 	.word	0x10001c2c

100006e8 <shifted_global()>:
100006e8:	4b04      	ldr	r3, [pc, #16]	; (100006fc <shifted_global()+0x14>)
100006ea:	22b8      	movs	r2, #184	; 0xb8
100006ec:	0592      	lsls	r2, r2, #22
100006ee:	605a      	str	r2, [r3, #4]
100006f0:	685b      	ldr	r3, [r3, #4]
100006f2:	009b      	lsls	r3, r3, #2
100006f4:	0edb      	lsrs	r3, r3, #27
100006f6:	4a02      	ldr	r2, [pc, #8]	; (10000700 <shifted_global()+0x18>)
100006f8:	62d3      	str	r3, [r2, #44]	; 0x2c
100006fa:	4770      	bx	lr
100006fc:	10001d20 	.word	0x10001d20
10000700:	10001c00 	.word	0x10001c00

10000704 <assign_register_global()>:
10000704:	4b01      	ldr	r3, [pc, #4]	; (1000070c <assign_register_global()+0x8>)
10000706:	2204      	movs	r2, #4
10000708:	605a      	str	r2, [r3, #4]
1000070a:	4770      	bx	lr
1000070c:	10001dc0 	.word	0x10001dc0

10000710 <copy_bits_equ()>:
10000710:	4a06      	ldr	r2, [pc, #24]	; (1000072c <copy_bits_equ()+0x1c>)
10000712:	2340      	movs	r3, #64	; 0x40
10000714:	6053      	str	r3, [r2, #4]
10000716:	6852      	ldr	r2, [r2, #4]
10000718:	4213      	tst	r3, r2
1000071a:	d103      	bne.n	10000724 <copy_bits_equ()+0x14>
1000071c:	4b03      	ldr	r3, [pc, #12]	; (1000072c <copy_bits_equ()+0x1c>)
1000071e:	2204      	movs	r2, #4
10000720:	605a      	str	r2, [r3, #4]
10000722:	4770      	bx	lr
10000724:	4b01      	ldr	r3, [pc, #4]	; (1000072c <copy_bits_equ()+0x1c>)
10000726:	2202      	movs	r2, #2
10000728:	605a      	str	r2, [r3, #4]
1000072a:	e7fa      	b.n	10000722 <copy_bits_equ()+0x12>
1000072c:	10001dc0 	.word	0x10001dc0

10000730 <copy_bits_neq()>:
10000730:	4a06      	ldr	r2, [pc, #24]	; (1000074c <copy_bits_neq()+0x1c>)
10000732:	2340      	movs	r3, #64	; 0x40
10000734:	6053      	str	r3, [r2, #4]
10000736:	6852      	ldr	r2, [r2, #4]
10000738:	4213      	tst	r3, r2
1000073a:	d103      	bne.n	10000744 <copy_bits_neq()+0x14>
1000073c:	4b03      	ldr	r3, [pc, #12]	; (1000074c <copy_bits_neq()+0x1c>)
1000073e:	2202      	movs	r2, #2
10000740:	605a      	str	r2, [r3, #4]
10000742:	4770      	bx	lr
10000744:	4b01      	ldr	r3, [pc, #4]	; (1000074c <copy_bits_neq()+0x1c>)
10000746:	2204      	movs	r2, #4
10000748:	605a      	str	r2, [r3, #4]
1000074a:	e7fa      	b.n	10000742 <copy_bits_neq()+0x12>
1000074c:	10001dc0 	.word	0x10001dc0

10000750 <copy_mskd_equ()>:
10000750:	4b08      	ldr	r3, [pc, #32]	; (10000774 <copy_mskd_equ()+0x24>)
10000752:	22b0      	movs	r2, #176	; 0xb0
10000754:	0552      	lsls	r2, r2, #21
10000756:	605a      	str	r2, [r3, #4]
10000758:	685b      	ldr	r3, [r3, #4]
1000075a:	21f8      	movs	r1, #248	; 0xf8
1000075c:	0589      	lsls	r1, r1, #22
1000075e:	400b      	ands	r3, r1
10000760:	4293      	cmp	r3, r2
10000762:	d003      	beq.n	1000076c <copy_mskd_equ()+0x1c>
10000764:	4b04      	ldr	r3, [pc, #16]	; (10000778 <copy_mskd_equ()+0x28>)
10000766:	2204      	movs	r2, #4
10000768:	605a      	str	r2, [r3, #4]
1000076a:	4770      	bx	lr
1000076c:	4b02      	ldr	r3, [pc, #8]	; (10000778 <copy_mskd_equ()+0x28>)
1000076e:	2202      	movs	r2, #2
10000770:	605a      	str	r2, [r3, #4]
10000772:	e7fa      	b.n	1000076a <copy_mskd_equ()+0x1a>
10000774:	10001d20 	.word	0x10001d20
10000778:	10001dc0 	.word	0x10001dc0

1000077c <copy_mskd_neq()>:
1000077c:	4b08      	ldr	r3, [pc, #32]	; (100007a0 <copy_mskd_neq()+0x24>)
1000077e:	22d0      	movs	r2, #208	; 0xd0
10000780:	0552      	lsls	r2, r2, #21
10000782:	605a      	str	r2, [r3, #4]
10000784:	685b      	ldr	r3, [r3, #4]
10000786:	21f8      	movs	r1, #248	; 0xf8
10000788:	0589      	lsls	r1, r1, #22
1000078a:	400b      	ands	r3, r1
1000078c:	4293      	cmp	r3, r2
1000078e:	d003      	beq.n	10000798 <copy_mskd_neq()+0x1c>
10000790:	4b04      	ldr	r3, [pc, #16]	; (100007a4 <copy_mskd_neq()+0x28>)
10000792:	2202      	movs	r2, #2
10000794:	605a      	str	r2, [r3, #4]
10000796:	4770      	bx	lr
10000798:	4b02      	ldr	r3, [pc, #8]	; (100007a4 <copy_mskd_neq()+0x28>)
1000079a:	2204      	movs	r2, #4
1000079c:	605a      	str	r2, [r3, #4]
1000079e:	e7fa      	b.n	10000796 <copy_mskd_neq()+0x1a>
100007a0:	10001d20 	.word	0x10001d20
100007a4:	10001dc0 	.word	0x10001dc0

100007a8 <copy_mskd_lss()>:
100007a8:	4b09      	ldr	r3, [pc, #36]	; (100007d0 <copy_mskd_lss()+0x28>)
100007aa:	22d8      	movs	r2, #216	; 0xd8
100007ac:	0592      	lsls	r2, r2, #22
100007ae:	605a      	str	r2, [r3, #4]
100007b0:	685b      	ldr	r3, [r3, #4]
100007b2:	22f8      	movs	r2, #248	; 0xf8
100007b4:	0592      	lsls	r2, r2, #22
100007b6:	4013      	ands	r3, r2
100007b8:	4a06      	ldr	r2, [pc, #24]	; (100007d4 <copy_mskd_lss()+0x2c>)
100007ba:	4293      	cmp	r3, r2
100007bc:	d803      	bhi.n	100007c6 <copy_mskd_lss()+0x1e>
100007be:	4b06      	ldr	r3, [pc, #24]	; (100007d8 <copy_mskd_lss()+0x30>)
100007c0:	2202      	movs	r2, #2
100007c2:	605a      	str	r2, [r3, #4]
100007c4:	4770      	bx	lr
100007c6:	4b04      	ldr	r3, [pc, #16]	; (100007d8 <copy_mskd_lss()+0x30>)
100007c8:	2204      	movs	r2, #4
100007ca:	605a      	str	r2, [r3, #4]
100007cc:	e7fa      	b.n	100007c4 <copy_mskd_lss()+0x1c>
100007ce:	46c0      	nop			; (mov r8, r8)
100007d0:	10001d20 	.word	0x10001d20
100007d4:	37ffffff 	.word	0x37ffffff
100007d8:	10001dc0 	.word	0x10001dc0

100007dc <copy_mskd_leq()>:
100007dc:	4b08      	ldr	r3, [pc, #32]	; (10000800 <copy_mskd_leq()+0x24>)
100007de:	22b8      	movs	r2, #184	; 0xb8
100007e0:	0592      	lsls	r2, r2, #22
100007e2:	605a      	str	r2, [r3, #4]
100007e4:	685b      	ldr	r3, [r3, #4]
100007e6:	21f8      	movs	r1, #248	; 0xf8
100007e8:	0589      	lsls	r1, r1, #22
100007ea:	400b      	ands	r3, r1
100007ec:	4293      	cmp	r3, r2
100007ee:	d903      	bls.n	100007f8 <copy_mskd_leq()+0x1c>
100007f0:	4b04      	ldr	r3, [pc, #16]	; (10000804 <copy_mskd_leq()+0x28>)
100007f2:	2204      	movs	r2, #4
100007f4:	605a      	str	r2, [r3, #4]
100007f6:	4770      	bx	lr
100007f8:	4b02      	ldr	r3, [pc, #8]	; (10000804 <copy_mskd_leq()+0x28>)
100007fa:	2202      	movs	r2, #2
100007fc:	605a      	str	r2, [r3, #4]
100007fe:	e7fa      	b.n	100007f6 <copy_mskd_leq()+0x1a>
10000800:	10001d20 	.word	0x10001d20
10000804:	10001dc0 	.word	0x10001dc0

10000808 <copy_mskd_gtr()>:
10000808:	4b09      	ldr	r3, [pc, #36]	; (10000830 <copy_mskd_gtr()+0x28>)
1000080a:	2298      	movs	r2, #152	; 0x98
1000080c:	0592      	lsls	r2, r2, #22
1000080e:	605a      	str	r2, [r3, #4]
10000810:	685b      	ldr	r3, [r3, #4]
10000812:	22f8      	movs	r2, #248	; 0xf8
10000814:	0592      	lsls	r2, r2, #22
10000816:	4013      	ands	r3, r2
10000818:	2290      	movs	r2, #144	; 0x90
1000081a:	0592      	lsls	r2, r2, #22
1000081c:	4293      	cmp	r3, r2
1000081e:	d903      	bls.n	10000828 <copy_mskd_gtr()+0x20>
10000820:	4b04      	ldr	r3, [pc, #16]	; (10000834 <copy_mskd_gtr()+0x2c>)
10000822:	2202      	movs	r2, #2
10000824:	605a      	str	r2, [r3, #4]
10000826:	4770      	bx	lr
10000828:	4b02      	ldr	r3, [pc, #8]	; (10000834 <copy_mskd_gtr()+0x2c>)
1000082a:	2204      	movs	r2, #4
1000082c:	605a      	str	r2, [r3, #4]
1000082e:	e7fa      	b.n	10000826 <copy_mskd_gtr()+0x1e>
10000830:	10001d20 	.word	0x10001d20
10000834:	10001dc0 	.word	0x10001dc0

10000838 <copy_mskd_geq()>:
10000838:	4b09      	ldr	r3, [pc, #36]	; (10000860 <copy_mskd_geq()+0x28>)
1000083a:	2288      	movs	r2, #136	; 0x88
1000083c:	0592      	lsls	r2, r2, #22
1000083e:	605a      	str	r2, [r3, #4]
10000840:	685b      	ldr	r3, [r3, #4]
10000842:	22f8      	movs	r2, #248	; 0xf8
10000844:	0592      	lsls	r2, r2, #22
10000846:	4013      	ands	r3, r2
10000848:	4a06      	ldr	r2, [pc, #24]	; (10000864 <copy_mskd_geq()+0x2c>)
1000084a:	4293      	cmp	r3, r2
1000084c:	d803      	bhi.n	10000856 <copy_mskd_geq()+0x1e>
1000084e:	4b06      	ldr	r3, [pc, #24]	; (10000868 <copy_mskd_geq()+0x30>)
10000850:	2204      	movs	r2, #4
10000852:	605a      	str	r2, [r3, #4]
10000854:	4770      	bx	lr
10000856:	4b04      	ldr	r3, [pc, #16]	; (10000868 <copy_mskd_geq()+0x30>)
10000858:	2202      	movs	r2, #2
1000085a:	605a      	str	r2, [r3, #4]
1000085c:	e7fa      	b.n	10000854 <copy_mskd_geq()+0x1c>
1000085e:	46c0      	nop			; (mov r8, r8)
10000860:	10001d20 	.word	0x10001d20
10000864:	21ffffff 	.word	0x21ffffff
10000868:	10001dc0 	.word	0x10001dc0

1000086c <copy_shifted()>:
1000086c:	4b08      	ldr	r3, [pc, #32]	; (10000890 <copy_shifted()+0x24>)
1000086e:	22b0      	movs	r2, #176	; 0xb0
10000870:	0552      	lsls	r2, r2, #21
10000872:	605a      	str	r2, [r3, #4]
10000874:	685b      	ldr	r3, [r3, #4]
10000876:	009b      	lsls	r3, r3, #2
10000878:	0edb      	lsrs	r3, r3, #27
1000087a:	2b0b      	cmp	r3, #11
1000087c:	d003      	beq.n	10000886 <copy_shifted()+0x1a>
1000087e:	4b05      	ldr	r3, [pc, #20]	; (10000894 <copy_shifted()+0x28>)
10000880:	2204      	movs	r2, #4
10000882:	605a      	str	r2, [r3, #4]
10000884:	4770      	bx	lr
10000886:	4b03      	ldr	r3, [pc, #12]	; (10000894 <copy_shifted()+0x28>)
10000888:	2202      	movs	r2, #2
1000088a:	605a      	str	r2, [r3, #4]
1000088c:	e7fa      	b.n	10000884 <copy_shifted()+0x18>
1000088e:	46c0      	nop			; (mov r8, r8)
10000890:	10001d20 	.word	0x10001d20
10000894:	10001dc0 	.word	0x10001dc0

10000898 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
10000898:	4b02      	ldr	r3, [pc, #8]	; (100008a4 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0xc>)
1000089a:	685a      	ldr	r2, [r3, #4]
1000089c:	4310      	orrs	r0, r2
1000089e:	6058      	str	r0, [r3, #4]
100008a0:	4770      	bx	lr
100008a2:	46c0      	nop			; (mov r8, r8)
100008a4:	10001dc0 	.word	0x10001dc0

100008a8 <call_bits_val_var()>:
100008a8:	b500      	push	{lr}
100008aa:	2040      	movs	r0, #64	; 0x40
100008ac:	f7ff fff4 	bl	10000898 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100008b0:	bd00      	pop	{pc}

100008b2 <call_bits_val_const()>:
100008b2:	b500      	push	{lr}
100008b4:	2040      	movs	r0, #64	; 0x40
100008b6:	f7ff ffef 	bl	10000898 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100008ba:	bd00      	pop	{pc}

100008bc <call_bits_val_global()>:
100008bc:	b500      	push	{lr}
100008be:	2040      	movs	r0, #64	; 0x40
100008c0:	f7ff ffea 	bl	10000898 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100008c4:	bd00      	pop	{pc}

100008c6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
100008c6:	4a03      	ldr	r2, [pc, #12]	; (100008d4 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0xe>)
100008c8:	6853      	ldr	r3, [r2, #4]
100008ca:	6801      	ldr	r1, [r0, #0]
100008cc:	430b      	orrs	r3, r1
100008ce:	6053      	str	r3, [r2, #4]
100008d0:	4770      	bx	lr
100008d2:	46c0      	nop			; (mov r8, r8)
100008d4:	10001dc0 	.word	0x10001dc0

100008d8 <call_bits_ref_var()>:
100008d8:	b500      	push	{lr}
100008da:	b081      	sub	sp, #4
100008dc:	2301      	movs	r3, #1
100008de:	9300      	str	r3, [sp, #0]
100008e0:	4668      	mov	r0, sp
100008e2:	f7ff fff0 	bl	100008c6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
100008e6:	b001      	add	sp, #4
100008e8:	bd00      	pop	{pc}

100008ea <call_bits_ref_const()>:
100008ea:	b500      	push	{lr}
100008ec:	b081      	sub	sp, #4
100008ee:	2301      	movs	r3, #1
100008f0:	9300      	str	r3, [sp, #0]
100008f2:	4668      	mov	r0, sp
100008f4:	f7ff ffe7 	bl	100008c6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
100008f8:	b001      	add	sp, #4
100008fa:	bd00      	pop	{pc}

100008fc <call_bits_ref_global()>:
100008fc:	b500      	push	{lr}
100008fe:	b081      	sub	sp, #4
10000900:	2340      	movs	r3, #64	; 0x40
10000902:	9300      	str	r3, [sp, #0]
10000904:	4668      	mov	r0, sp
10000906:	f7ff ffde 	bl	100008c6 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
1000090a:	b001      	add	sp, #4
1000090c:	bd00      	pop	{pc}

1000090e <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
1000090e:	4a03      	ldr	r2, [pc, #12]	; (1000091c <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
10000910:	6853      	ldr	r3, [r2, #4]
10000912:	4383      	bics	r3, r0
10000914:	430b      	orrs	r3, r1
10000916:	6053      	str	r3, [r2, #4]
10000918:	4770      	bx	lr
1000091a:	46c0      	nop			; (mov r8, r8)
1000091c:	10001dc0 	.word	0x10001dc0

10000920 <call_mskd_val_var()>:
10000920:	b500      	push	{lr}
10000922:	2006      	movs	r0, #6
10000924:	2102      	movs	r1, #2
10000926:	f7ff fff2 	bl	1000090e <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
1000092a:	bd00      	pop	{pc}

1000092c <call_mskd_val_const()>:
1000092c:	b500      	push	{lr}
1000092e:	2006      	movs	r0, #6
10000930:	2102      	movs	r1, #2
10000932:	f7ff ffec 	bl	1000090e <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000936:	bd00      	pop	{pc}

10000938 <call_mskd_val_global()>:
10000938:	b500      	push	{lr}
1000093a:	2006      	movs	r0, #6
1000093c:	2102      	movs	r1, #2
1000093e:	f7ff ffe6 	bl	1000090e <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000942:	bd00      	pop	{pc}

10000944 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
10000944:	4a03      	ldr	r2, [pc, #12]	; (10000954 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x10>)
10000946:	6853      	ldr	r3, [r2, #4]
10000948:	6801      	ldr	r1, [r0, #0]
1000094a:	438b      	bics	r3, r1
1000094c:	6841      	ldr	r1, [r0, #4]
1000094e:	430b      	orrs	r3, r1
10000950:	6053      	str	r3, [r2, #4]
10000952:	4770      	bx	lr
10000954:	10001dc0 	.word	0x10001dc0

10000958 <call_mskd_ref_var()>:
10000958:	b500      	push	{lr}
1000095a:	b082      	sub	sp, #8
1000095c:	4b04      	ldr	r3, [pc, #16]	; (10000970 <call_mskd_ref_var()+0x18>)
1000095e:	681a      	ldr	r2, [r3, #0]
10000960:	685b      	ldr	r3, [r3, #4]
10000962:	9200      	str	r2, [sp, #0]
10000964:	9301      	str	r3, [sp, #4]
10000966:	4668      	mov	r0, sp
10000968:	f7ff ffec 	bl	10000944 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
1000096c:	b002      	add	sp, #8
1000096e:	bd00      	pop	{pc}
10000970:	10001644 	.word	0x10001644

10000974 <call_mskd_ref_const()>:
10000974:	b500      	push	{lr}
10000976:	b082      	sub	sp, #8
10000978:	2306      	movs	r3, #6
1000097a:	9300      	str	r3, [sp, #0]
1000097c:	3b02      	subs	r3, #2
1000097e:	9301      	str	r3, [sp, #4]
10000980:	4668      	mov	r0, sp
10000982:	f7ff ffdf 	bl	10000944 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
10000986:	b002      	add	sp, #8
10000988:	bd00      	pop	{pc}

1000098a <call_mskd_ref_global()>:
1000098a:	b500      	push	{lr}
1000098c:	b082      	sub	sp, #8
1000098e:	2306      	movs	r3, #6
10000990:	9300      	str	r3, [sp, #0]
10000992:	3b04      	subs	r3, #4
10000994:	9301      	str	r3, [sp, #4]
10000996:	4668      	mov	r0, sp
10000998:	f7ff ffd4 	bl	10000944 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
1000099c:	b002      	add	sp, #8
1000099e:	bd00      	pop	{pc}

100009a0 <periph_bits(mcu::Serial*)>:
100009a0:	6843      	ldr	r3, [r0, #4]
100009a2:	2240      	movs	r2, #64	; 0x40
100009a4:	4313      	orrs	r3, r2
100009a6:	6043      	str	r3, [r0, #4]
100009a8:	4770      	bx	lr

100009aa <call_periph_bits()>:
100009aa:	b500      	push	{lr}
100009ac:	4801      	ldr	r0, [pc, #4]	; (100009b4 <call_periph_bits()+0xa>)
100009ae:	f7ff fff7 	bl	100009a0 <periph_bits(mcu::Serial*)>
100009b2:	bd00      	pop	{pc}
100009b4:	10001dc0 	.word	0x10001dc0

100009b8 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
100009b8:	6843      	ldr	r3, [r0, #4]
100009ba:	4319      	orrs	r1, r3
100009bc:	6041      	str	r1, [r0, #4]
100009be:	4770      	bx	lr

100009c0 <call_periph_bits_val()>:
100009c0:	b500      	push	{lr}
100009c2:	2140      	movs	r1, #64	; 0x40
100009c4:	4801      	ldr	r0, [pc, #4]	; (100009cc <call_periph_bits_val()+0xc>)
100009c6:	f7ff fff7 	bl	100009b8 <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)>
100009ca:	bd00      	pop	{pc}
100009cc:	10001dc0 	.word	0x10001dc0

100009d0 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
100009d0:	6803      	ldr	r3, [r0, #0]
100009d2:	4319      	orrs	r1, r3
100009d4:	6001      	str	r1, [r0, #0]
100009d6:	4770      	bx	lr

100009d8 <call_reg_bits_val()>:
100009d8:	b500      	push	{lr}
100009da:	2140      	movs	r1, #64	; 0x40
100009dc:	4801      	ldr	r0, [pc, #4]	; (100009e4 <call_reg_bits_val()+0xc>)
100009de:	f7ff fff7 	bl	100009d0 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
100009e2:	bd00      	pop	{pc}
100009e4:	10001dc4 	.word	0x10001dc4

100009e8 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
100009e8:	6843      	ldr	r3, [r0, #4]
100009ea:	680a      	ldr	r2, [r1, #0]
100009ec:	4313      	orrs	r3, r2
100009ee:	6043      	str	r3, [r0, #4]
100009f0:	4770      	bx	lr

100009f2 <call_periph_bits_ref()>:
100009f2:	b500      	push	{lr}
100009f4:	b081      	sub	sp, #4
100009f6:	2340      	movs	r3, #64	; 0x40
100009f8:	9300      	str	r3, [sp, #0]
100009fa:	4669      	mov	r1, sp
100009fc:	4802      	ldr	r0, [pc, #8]	; (10000a08 <call_periph_bits_ref()+0x16>)
100009fe:	f7ff fff3 	bl	100009e8 <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
10000a02:	b001      	add	sp, #4
10000a04:	bd00      	pop	{pc}
10000a06:	46c0      	nop			; (mov r8, r8)
10000a08:	10001dc0 	.word	0x10001dc0

10000a0c <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
10000a0c:	6803      	ldr	r3, [r0, #0]
10000a0e:	680a      	ldr	r2, [r1, #0]
10000a10:	4313      	orrs	r3, r2
10000a12:	6003      	str	r3, [r0, #0]
10000a14:	4770      	bx	lr

10000a16 <call_reg_bits_ref()>:
10000a16:	b500      	push	{lr}
10000a18:	b081      	sub	sp, #4
10000a1a:	2340      	movs	r3, #64	; 0x40
10000a1c:	9300      	str	r3, [sp, #0]
10000a1e:	4669      	mov	r1, sp
10000a20:	4802      	ldr	r0, [pc, #8]	; (10000a2c <call_reg_bits_ref()+0x16>)
10000a22:	f7ff fff3 	bl	10000a0c <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
10000a26:	b001      	add	sp, #4
10000a28:	bd00      	pop	{pc}
10000a2a:	46c0      	nop			; (mov r8, r8)
10000a2c:	10001dc4 	.word	0x10001dc4

10000a30 <periph_mskd(mcu::Serial*)>:
10000a30:	6843      	ldr	r3, [r0, #4]
10000a32:	2206      	movs	r2, #6
10000a34:	4393      	bics	r3, r2
10000a36:	3a04      	subs	r2, #4
10000a38:	4313      	orrs	r3, r2
10000a3a:	6043      	str	r3, [r0, #4]
10000a3c:	4770      	bx	lr

10000a3e <call_periph_mskd()>:
10000a3e:	b500      	push	{lr}
10000a40:	4801      	ldr	r0, [pc, #4]	; (10000a48 <call_periph_mskd()+0xa>)
10000a42:	f7ff fff5 	bl	10000a30 <periph_mskd(mcu::Serial*)>
10000a46:	bd00      	pop	{pc}
10000a48:	10001dc0 	.word	0x10001dc0

10000a4c <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a4c:	6843      	ldr	r3, [r0, #4]
10000a4e:	438b      	bics	r3, r1
10000a50:	4313      	orrs	r3, r2
10000a52:	6043      	str	r3, [r0, #4]
10000a54:	4770      	bx	lr

10000a56 <call_periph_mskd_val()>:
10000a56:	b500      	push	{lr}
10000a58:	2106      	movs	r1, #6
10000a5a:	2202      	movs	r2, #2
10000a5c:	4801      	ldr	r0, [pc, #4]	; (10000a64 <call_periph_mskd_val()+0xe>)
10000a5e:	f7ff fff5 	bl	10000a4c <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000a62:	bd00      	pop	{pc}
10000a64:	10001dc0 	.word	0x10001dc0

10000a68 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a68:	6803      	ldr	r3, [r0, #0]
10000a6a:	438b      	bics	r3, r1
10000a6c:	4313      	orrs	r3, r2
10000a6e:	6003      	str	r3, [r0, #0]
10000a70:	4770      	bx	lr

10000a72 <call_reg_mskd_val()>:
10000a72:	b500      	push	{lr}
10000a74:	2106      	movs	r1, #6
10000a76:	2202      	movs	r2, #2
10000a78:	4801      	ldr	r0, [pc, #4]	; (10000a80 <call_reg_mskd_val()+0xe>)
10000a7a:	f7ff fff5 	bl	10000a68 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000a7e:	bd00      	pop	{pc}
10000a80:	10001dc4 	.word	0x10001dc4

10000a84 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000a84:	6843      	ldr	r3, [r0, #4]
10000a86:	438b      	bics	r3, r1
10000a88:	4313      	orrs	r3, r2
10000a8a:	6043      	str	r3, [r0, #4]
10000a8c:	4770      	bx	lr

10000a8e <call_periph_mskd_ref()>:
10000a8e:	b500      	push	{lr}
10000a90:	2106      	movs	r1, #6
10000a92:	2202      	movs	r2, #2
10000a94:	4801      	ldr	r0, [pc, #4]	; (10000a9c <call_periph_mskd_ref()+0xe>)
10000a96:	f7ff fff5 	bl	10000a84 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000a9a:	bd00      	pop	{pc}
10000a9c:	10001dc0 	.word	0x10001dc0

10000aa0 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000aa0:	6803      	ldr	r3, [r0, #0]
10000aa2:	438b      	bics	r3, r1
10000aa4:	4313      	orrs	r3, r2
10000aa6:	6003      	str	r3, [r0, #0]
10000aa8:	4770      	bx	lr

10000aaa <call_reg_mskd_ref()>:
10000aaa:	b500      	push	{lr}
10000aac:	2106      	movs	r1, #6
10000aae:	2202      	movs	r2, #2
10000ab0:	4801      	ldr	r0, [pc, #4]	; (10000ab8 <call_reg_mskd_ref()+0xe>)
10000ab2:	f7ff fff5 	bl	10000aa0 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000ab6:	bd00      	pop	{pc}
10000ab8:	10001dc4 	.word	0x10001dc4

10000abc <return_bits()>:
10000abc:	2020      	movs	r0, #32
10000abe:	4770      	bx	lr

10000ac0 <call_return_bits()>:
10000ac0:	b500      	push	{lr}
10000ac2:	f7ff fffb 	bl	10000abc <return_bits()>
10000ac6:	2820      	cmp	r0, #32
10000ac8:	d004      	beq.n	10000ad4 <call_return_bits()+0x14>
10000aca:	4b05      	ldr	r3, [pc, #20]	; (10000ae0 <call_return_bits()+0x20>)
10000acc:	22c0      	movs	r2, #192	; 0xc0
10000ace:	04d2      	lsls	r2, r2, #19
10000ad0:	605a      	str	r2, [r3, #4]
10000ad2:	bd00      	pop	{pc}
10000ad4:	4b02      	ldr	r3, [pc, #8]	; (10000ae0 <call_return_bits()+0x20>)
10000ad6:	22a8      	movs	r2, #168	; 0xa8
10000ad8:	0592      	lsls	r2, r2, #22
10000ada:	605a      	str	r2, [r3, #4]
10000adc:	e7f9      	b.n	10000ad2 <call_return_bits()+0x12>
10000ade:	46c0      	nop			; (mov r8, r8)
10000ae0:	10001d20 	.word	0x10001d20

10000ae4 <return_mskd()>:
10000ae4:	2318      	movs	r3, #24
10000ae6:	6003      	str	r3, [r0, #0]
10000ae8:	3b10      	subs	r3, #16
10000aea:	6043      	str	r3, [r0, #4]
10000aec:	4770      	bx	lr

10000aee <call_return_mskd()>:
10000aee:	b500      	push	{lr}
10000af0:	b082      	sub	sp, #8
10000af2:	4668      	mov	r0, sp
10000af4:	f7ff fff6 	bl	10000ae4 <return_mskd()>
10000af8:	9b01      	ldr	r3, [sp, #4]
10000afa:	9a00      	ldr	r2, [sp, #0]
10000afc:	2a18      	cmp	r2, #24
10000afe:	d005      	beq.n	10000b0c <call_return_mskd()+0x1e>
10000b00:	4b06      	ldr	r3, [pc, #24]	; (10000b1c <call_return_mskd()+0x2e>)
10000b02:	2298      	movs	r2, #152	; 0x98
10000b04:	0592      	lsls	r2, r2, #22
10000b06:	605a      	str	r2, [r3, #4]
10000b08:	b002      	add	sp, #8
10000b0a:	bd00      	pop	{pc}
10000b0c:	2b08      	cmp	r3, #8
10000b0e:	d1f7      	bne.n	10000b00 <call_return_mskd()+0x12>
10000b10:	4b02      	ldr	r3, [pc, #8]	; (10000b1c <call_return_mskd()+0x2e>)
10000b12:	2288      	movs	r2, #136	; 0x88
10000b14:	0592      	lsls	r2, r2, #22
10000b16:	605a      	str	r2, [r3, #4]
10000b18:	e7f6      	b.n	10000b08 <call_return_mskd()+0x1a>
10000b1a:	46c0      	nop			; (mov r8, r8)
10000b1c:	10001d20 	.word	0x10001d20

10000b20 <return_reg()>:
10000b20:	4b02      	ldr	r3, [pc, #8]	; (10000b2c <return_reg()+0xc>)
10000b22:	2240      	movs	r2, #64	; 0x40
10000b24:	605a      	str	r2, [r3, #4]
10000b26:	4802      	ldr	r0, [pc, #8]	; (10000b30 <return_reg()+0x10>)
10000b28:	4770      	bx	lr
10000b2a:	46c0      	nop			; (mov r8, r8)
10000b2c:	10001dc0 	.word	0x10001dc0
10000b30:	10001dc4 	.word	0x10001dc4

10000b34 <call_return_reg()>:
10000b34:	b500      	push	{lr}
10000b36:	f7ff fff3 	bl	10000b20 <return_reg()>
10000b3a:	6803      	ldr	r3, [r0, #0]
10000b3c:	065b      	lsls	r3, r3, #25
10000b3e:	d404      	bmi.n	10000b4a <call_return_reg()+0x16>
10000b40:	4b04      	ldr	r3, [pc, #16]	; (10000b54 <call_return_reg()+0x20>)
10000b42:	22b8      	movs	r2, #184	; 0xb8
10000b44:	0592      	lsls	r2, r2, #22
10000b46:	605a      	str	r2, [r3, #4]
10000b48:	bd00      	pop	{pc}
10000b4a:	4b02      	ldr	r3, [pc, #8]	; (10000b54 <call_return_reg()+0x20>)
10000b4c:	22f0      	movs	r2, #240	; 0xf0
10000b4e:	0552      	lsls	r2, r2, #21
10000b50:	605a      	str	r2, [r3, #4]
10000b52:	e7f9      	b.n	10000b48 <call_return_reg()+0x14>
10000b54:	10001d20 	.word	0x10001d20

10000b58 <return_periph()>:
10000b58:	4801      	ldr	r0, [pc, #4]	; (10000b60 <return_periph()+0x8>)
10000b5a:	2340      	movs	r3, #64	; 0x40
10000b5c:	6043      	str	r3, [r0, #4]
10000b5e:	4770      	bx	lr
10000b60:	10001dc0 	.word	0x10001dc0

10000b64 <call_return_periph()>:
10000b64:	b500      	push	{lr}
10000b66:	f7ff fff7 	bl	10000b58 <return_periph()>
10000b6a:	6843      	ldr	r3, [r0, #4]
10000b6c:	065b      	lsls	r3, r3, #25
10000b6e:	d404      	bmi.n	10000b7a <call_return_periph()+0x16>
10000b70:	4b04      	ldr	r3, [pc, #16]	; (10000b84 <call_return_periph()+0x20>)
10000b72:	22a8      	movs	r2, #168	; 0xa8
10000b74:	0592      	lsls	r2, r2, #22
10000b76:	605a      	str	r2, [r3, #4]
10000b78:	bd00      	pop	{pc}
10000b7a:	4b02      	ldr	r3, [pc, #8]	; (10000b84 <call_return_periph()+0x20>)
10000b7c:	2298      	movs	r2, #152	; 0x98
10000b7e:	0592      	lsls	r2, r2, #22
10000b80:	605a      	str	r2, [r3, #4]
10000b82:	e7f9      	b.n	10000b78 <call_return_periph()+0x14>
10000b84:	10001d20 	.word	0x10001d20

10000b88 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
10000b88:	2805      	cmp	r0, #5
10000b8a:	d005      	beq.n	10000b98 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x10>
10000b8c:	2806      	cmp	r0, #6
10000b8e:	d007      	beq.n	10000ba0 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x18>
10000b90:	4b05      	ldr	r3, [pc, #20]	; (10000ba8 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
10000b92:	2255      	movs	r2, #85	; 0x55
10000b94:	62da      	str	r2, [r3, #44]	; 0x2c
10000b96:	4770      	bx	lr
10000b98:	4b03      	ldr	r3, [pc, #12]	; (10000ba8 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
10000b9a:	2233      	movs	r2, #51	; 0x33
10000b9c:	62da      	str	r2, [r3, #44]	; 0x2c
10000b9e:	e7fa      	b.n	10000b96 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
10000ba0:	4b01      	ldr	r3, [pc, #4]	; (10000ba8 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
10000ba2:	2244      	movs	r2, #68	; 0x44
10000ba4:	62da      	str	r2, [r3, #44]	; 0x2c
10000ba6:	e7f6      	b.n	10000b96 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
10000ba8:	10001c00 	.word	0x10001c00

10000bac <call_pos_val()>:
10000bac:	b500      	push	{lr}
10000bae:	2005      	movs	r0, #5
10000bb0:	f7ff ffea 	bl	10000b88 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
10000bb4:	2006      	movs	r0, #6
10000bb6:	f7ff ffe7 	bl	10000b88 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
10000bba:	bd00      	pop	{pc}

10000bbc <call_pos_val_global()>:
10000bbc:	b500      	push	{lr}
10000bbe:	2006      	movs	r0, #6
10000bc0:	f7ff ffe2 	bl	10000b88 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
10000bc4:	bd00      	pop	{pc}

10000bc6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
10000bc6:	6803      	ldr	r3, [r0, #0]
10000bc8:	2b05      	cmp	r3, #5
10000bca:	d005      	beq.n	10000bd8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x12>
10000bcc:	2b06      	cmp	r3, #6
10000bce:	d007      	beq.n	10000be0 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1a>
10000bd0:	4b05      	ldr	r3, [pc, #20]	; (10000be8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
10000bd2:	2288      	movs	r2, #136	; 0x88
10000bd4:	62da      	str	r2, [r3, #44]	; 0x2c
10000bd6:	4770      	bx	lr
10000bd8:	4b03      	ldr	r3, [pc, #12]	; (10000be8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
10000bda:	2266      	movs	r2, #102	; 0x66
10000bdc:	62da      	str	r2, [r3, #44]	; 0x2c
10000bde:	e7fa      	b.n	10000bd6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
10000be0:	4b01      	ldr	r3, [pc, #4]	; (10000be8 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
10000be2:	2277      	movs	r2, #119	; 0x77
10000be4:	62da      	str	r2, [r3, #44]	; 0x2c
10000be6:	e7f6      	b.n	10000bd6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
10000be8:	10001c00 	.word	0x10001c00

10000bec <call_pos_ref()>:
10000bec:	b510      	push	{r4, lr}
10000bee:	b082      	sub	sp, #8
10000bf0:	2405      	movs	r4, #5
10000bf2:	9401      	str	r4, [sp, #4]
10000bf4:	a801      	add	r0, sp, #4
10000bf6:	f7ff ffe6 	bl	10000bc6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000bfa:	9400      	str	r4, [sp, #0]
10000bfc:	4668      	mov	r0, sp
10000bfe:	f7ff ffe2 	bl	10000bc6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000c02:	b002      	add	sp, #8
10000c04:	bd10      	pop	{r4, pc}

10000c06 <call_pos_ref_global()>:
10000c06:	b500      	push	{lr}
10000c08:	b081      	sub	sp, #4
10000c0a:	2306      	movs	r3, #6
10000c0c:	9300      	str	r3, [sp, #0]
10000c0e:	4668      	mov	r0, sp
10000c10:	f7ff ffd9 	bl	10000bc6 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000c14:	b001      	add	sp, #4
10000c16:	bd00      	pop	{pc}

10000c18 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000c18:	4a02      	ldr	r2, [pc, #8]	; (10000c24 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xc>)
10000c1a:	6853      	ldr	r3, [r2, #4]
10000c1c:	4383      	bics	r3, r0
10000c1e:	430b      	orrs	r3, r1
10000c20:	6053      	str	r3, [r2, #4]
10000c22:	4770      	bx	lr
10000c24:	10001dc0 	.word	0x10001dc0

10000c28 <call_range_val(unsigned int)>:
10000c28:	b500      	push	{lr}
10000c2a:	0001      	movs	r1, r0
10000c2c:	20f8      	movs	r0, #248	; 0xf8
10000c2e:	0309      	lsls	r1, r1, #12
10000c30:	0240      	lsls	r0, r0, #9
10000c32:	f7ff fff1 	bl	10000c18 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000c36:	bd00      	pop	{pc}

10000c38 <call_range_val_port()>:
10000c38:	b500      	push	{lr}
10000c3a:	201f      	movs	r0, #31
10000c3c:	f7ff fff4 	bl	10000c28 <call_range_val(unsigned int)>
10000c40:	bd00      	pop	{pc}

10000c42 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000c42:	4a03      	ldr	r2, [pc, #12]	; (10000c50 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
10000c44:	6853      	ldr	r3, [r2, #4]
10000c46:	4383      	bics	r3, r0
10000c48:	430b      	orrs	r3, r1
10000c4a:	6053      	str	r3, [r2, #4]
10000c4c:	4770      	bx	lr
10000c4e:	46c0      	nop			; (mov r8, r8)
10000c50:	10001dc0 	.word	0x10001dc0

10000c54 <call_range_ref(unsigned int)>:
10000c54:	b500      	push	{lr}
10000c56:	0001      	movs	r1, r0
10000c58:	20f8      	movs	r0, #248	; 0xf8
10000c5a:	0309      	lsls	r1, r1, #12
10000c5c:	0240      	lsls	r0, r0, #9
10000c5e:	f7ff fff0 	bl	10000c42 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000c62:	bd00      	pop	{pc}

10000c64 <call_range_ref_port()>:
10000c64:	b500      	push	{lr}
10000c66:	200c      	movs	r0, #12
10000c68:	f7ff fff4 	bl	10000c54 <call_range_ref(unsigned int)>
10000c6c:	bd00      	pop	{pc}

10000c6e <check_array_range_pass(unsigned int)>:
10000c6e:	2816      	cmp	r0, #22
10000c70:	d803      	bhi.n	10000c7a <check_array_range_pass(unsigned int)+0xc>
10000c72:	4b04      	ldr	r3, [pc, #16]	; (10000c84 <check_array_range_pass(unsigned int)+0x16>)
10000c74:	227f      	movs	r2, #127	; 0x7f
10000c76:	62da      	str	r2, [r3, #44]	; 0x2c
10000c78:	4770      	bx	lr
10000c7a:	4b02      	ldr	r3, [pc, #8]	; (10000c84 <check_array_range_pass(unsigned int)+0x16>)
10000c7c:	2283      	movs	r2, #131	; 0x83
10000c7e:	62da      	str	r2, [r3, #44]	; 0x2c
10000c80:	e7fa      	b.n	10000c78 <check_array_range_pass(unsigned int)+0xa>
10000c82:	46c0      	nop			; (mov r8, r8)
10000c84:	10001c00 	.word	0x10001c00

10000c88 <check_array_range_fail(unsigned int)>:
10000c88:	2816      	cmp	r0, #22
10000c8a:	d803      	bhi.n	10000c94 <check_array_range_fail(unsigned int)+0xc>
10000c8c:	4b03      	ldr	r3, [pc, #12]	; (10000c9c <check_array_range_fail(unsigned int)+0x14>)
10000c8e:	2295      	movs	r2, #149	; 0x95
10000c90:	62da      	str	r2, [r3, #44]	; 0x2c
10000c92:	4770      	bx	lr
10000c94:	4b01      	ldr	r3, [pc, #4]	; (10000c9c <check_array_range_fail(unsigned int)+0x14>)
10000c96:	2297      	movs	r2, #151	; 0x97
10000c98:	62da      	str	r2, [r3, #44]	; 0x2c
10000c9a:	e7fa      	b.n	10000c92 <check_array_range_fail(unsigned int)+0xa>
10000c9c:	10001c00 	.word	0x10001c00

10000ca0 <check_bits_range_pass(unsigned int)>:
10000ca0:	280f      	cmp	r0, #15
10000ca2:	d803      	bhi.n	10000cac <check_bits_range_pass(unsigned int)+0xc>
10000ca4:	4b03      	ldr	r3, [pc, #12]	; (10000cb4 <check_bits_range_pass(unsigned int)+0x14>)
10000ca6:	229d      	movs	r2, #157	; 0x9d
10000ca8:	62da      	str	r2, [r3, #44]	; 0x2c
10000caa:	4770      	bx	lr
10000cac:	4b01      	ldr	r3, [pc, #4]	; (10000cb4 <check_bits_range_pass(unsigned int)+0x14>)
10000cae:	22a3      	movs	r2, #163	; 0xa3
10000cb0:	62da      	str	r2, [r3, #44]	; 0x2c
10000cb2:	e7fa      	b.n	10000caa <check_bits_range_pass(unsigned int)+0xa>
10000cb4:	10001c00 	.word	0x10001c00

10000cb8 <check_bits_range_fail(unsigned int)>:
10000cb8:	280f      	cmp	r0, #15
10000cba:	d803      	bhi.n	10000cc4 <check_bits_range_fail(unsigned int)+0xc>
10000cbc:	4b03      	ldr	r3, [pc, #12]	; (10000ccc <check_bits_range_fail(unsigned int)+0x14>)
10000cbe:	22a7      	movs	r2, #167	; 0xa7
10000cc0:	62da      	str	r2, [r3, #44]	; 0x2c
10000cc2:	4770      	bx	lr
10000cc4:	4b01      	ldr	r3, [pc, #4]	; (10000ccc <check_bits_range_fail(unsigned int)+0x14>)
10000cc6:	22ad      	movs	r2, #173	; 0xad
10000cc8:	62da      	str	r2, [r3, #44]	; 0x2c
10000cca:	e7fa      	b.n	10000cc2 <check_bits_range_fail(unsigned int)+0xa>
10000ccc:	10001c00 	.word	0x10001c00

10000cd0 <check_mskd_range_pass(unsigned int)>:
10000cd0:	281f      	cmp	r0, #31
10000cd2:	d803      	bhi.n	10000cdc <check_mskd_range_pass(unsigned int)+0xc>
10000cd4:	4b03      	ldr	r3, [pc, #12]	; (10000ce4 <check_mskd_range_pass(unsigned int)+0x14>)
10000cd6:	22b3      	movs	r2, #179	; 0xb3
10000cd8:	62da      	str	r2, [r3, #44]	; 0x2c
10000cda:	4770      	bx	lr
10000cdc:	4b01      	ldr	r3, [pc, #4]	; (10000ce4 <check_mskd_range_pass(unsigned int)+0x14>)
10000cde:	22b5      	movs	r2, #181	; 0xb5
10000ce0:	62da      	str	r2, [r3, #44]	; 0x2c
10000ce2:	e7fa      	b.n	10000cda <check_mskd_range_pass(unsigned int)+0xa>
10000ce4:	10001c00 	.word	0x10001c00

10000ce8 <check_mskd_range_fail(unsigned int)>:
10000ce8:	281f      	cmp	r0, #31
10000cea:	d803      	bhi.n	10000cf4 <check_mskd_range_fail(unsigned int)+0xc>
10000cec:	4b03      	ldr	r3, [pc, #12]	; (10000cfc <check_mskd_range_fail(unsigned int)+0x14>)
10000cee:	22bf      	movs	r2, #191	; 0xbf
10000cf0:	62da      	str	r2, [r3, #44]	; 0x2c
10000cf2:	4770      	bx	lr
10000cf4:	4b01      	ldr	r3, [pc, #4]	; (10000cfc <check_mskd_range_fail(unsigned int)+0x14>)
10000cf6:	22c1      	movs	r2, #193	; 0xc1
10000cf8:	62da      	str	r2, [r3, #44]	; 0x2c
10000cfa:	e7fa      	b.n	10000cf2 <check_mskd_range_fail(unsigned int)+0xa>
10000cfc:	10001c00 	.word	0x10001c00

10000d00 <bits_extract_ne()>:
10000d00:	4b06      	ldr	r3, [pc, #24]	; (10000d1c <bits_extract_ne()+0x1c>)
10000d02:	2220      	movs	r2, #32
10000d04:	605a      	str	r2, [r3, #4]
10000d06:	685b      	ldr	r3, [r3, #4]
10000d08:	2b20      	cmp	r3, #32
10000d0a:	d003      	beq.n	10000d14 <bits_extract_ne()+0x14>
10000d0c:	4b03      	ldr	r3, [pc, #12]	; (10000d1c <bits_extract_ne()+0x1c>)
10000d0e:	3a1e      	subs	r2, #30
10000d10:	605a      	str	r2, [r3, #4]
10000d12:	4770      	bx	lr
10000d14:	4b01      	ldr	r3, [pc, #4]	; (10000d1c <bits_extract_ne()+0x1c>)
10000d16:	2204      	movs	r2, #4
10000d18:	605a      	str	r2, [r3, #4]
10000d1a:	e7fa      	b.n	10000d12 <bits_extract_ne()+0x12>
10000d1c:	10001dc0 	.word	0x10001dc0

10000d20 <mskd_extract_geq()>:
10000d20:	4b07      	ldr	r3, [pc, #28]	; (10000d40 <mskd_extract_geq()+0x20>)
10000d22:	22b0      	movs	r2, #176	; 0xb0
10000d24:	0552      	lsls	r2, r2, #21
10000d26:	605a      	str	r2, [r3, #4]
10000d28:	685a      	ldr	r2, [r3, #4]
10000d2a:	4b06      	ldr	r3, [pc, #24]	; (10000d44 <mskd_extract_geq()+0x24>)
10000d2c:	429a      	cmp	r2, r3
10000d2e:	d803      	bhi.n	10000d38 <mskd_extract_geq()+0x18>
10000d30:	4b05      	ldr	r3, [pc, #20]	; (10000d48 <mskd_extract_geq()+0x28>)
10000d32:	2240      	movs	r2, #64	; 0x40
10000d34:	605a      	str	r2, [r3, #4]
10000d36:	4770      	bx	lr
10000d38:	4b03      	ldr	r3, [pc, #12]	; (10000d48 <mskd_extract_geq()+0x28>)
10000d3a:	2220      	movs	r2, #32
10000d3c:	605a      	str	r2, [r3, #4]
10000d3e:	e7fa      	b.n	10000d36 <mskd_extract_geq()+0x16>
10000d40:	10001d20 	.word	0x10001d20
10000d44:	15ffffff 	.word	0x15ffffff
10000d48:	10001dc0 	.word	0x10001dc0

10000d4c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>:
10000d4c:	4b04      	ldr	r3, [pc, #16]	; (10000d60 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x14>)
10000d4e:	22b8      	movs	r2, #184	; 0xb8
10000d50:	0592      	lsls	r2, r2, #22
10000d52:	605a      	str	r2, [r3, #4]
10000d54:	685b      	ldr	r3, [r3, #4]
10000d56:	4018      	ands	r0, r3
10000d58:	40c8      	lsrs	r0, r1
10000d5a:	4b02      	ldr	r3, [pc, #8]	; (10000d64 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x18>)
10000d5c:	62d8      	str	r0, [r3, #44]	; 0x2c
10000d5e:	4770      	bx	lr
10000d60:	10001d20 	.word	0x10001d20
10000d64:	10001c00 	.word	0x10001c00

10000d68 <call_shifted_const_val()>:
10000d68:	b500      	push	{lr}
10000d6a:	20f8      	movs	r0, #248	; 0xf8
10000d6c:	0580      	lsls	r0, r0, #22
10000d6e:	2119      	movs	r1, #25
10000d70:	f7ff ffec 	bl	10000d4c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
10000d74:	bd00      	pop	{pc}

10000d76 <call_shifted_var_val()>:
10000d76:	b500      	push	{lr}
10000d78:	20f8      	movs	r0, #248	; 0xf8
10000d7a:	0580      	lsls	r0, r0, #22
10000d7c:	2119      	movs	r1, #25
10000d7e:	f7ff ffe5 	bl	10000d4c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
10000d82:	bd00      	pop	{pc}

10000d84 <call_shifted_global_val()>:
10000d84:	b500      	push	{lr}
10000d86:	4b03      	ldr	r3, [pc, #12]	; (10000d94 <call_shifted_global_val()+0x10>)
10000d88:	6898      	ldr	r0, [r3, #8]
10000d8a:	68d9      	ldr	r1, [r3, #12]
10000d8c:	f7ff ffde 	bl	10000d4c <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
10000d90:	bd00      	pop	{pc}
10000d92:	46c0      	nop			; (mov r8, r8)
10000d94:	10001644 	.word	0x10001644

10000d98 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>:
10000d98:	4b05      	ldr	r3, [pc, #20]	; (10000db0 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x18>)
10000d9a:	22b8      	movs	r2, #184	; 0xb8
10000d9c:	0592      	lsls	r2, r2, #22
10000d9e:	605a      	str	r2, [r3, #4]
10000da0:	685b      	ldr	r3, [r3, #4]
10000da2:	6802      	ldr	r2, [r0, #0]
10000da4:	4013      	ands	r3, r2
10000da6:	6842      	ldr	r2, [r0, #4]
10000da8:	40d3      	lsrs	r3, r2
10000daa:	4a02      	ldr	r2, [pc, #8]	; (10000db4 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1c>)
10000dac:	62d3      	str	r3, [r2, #44]	; 0x2c
10000dae:	4770      	bx	lr
10000db0:	10001d20 	.word	0x10001d20
10000db4:	10001c00 	.word	0x10001c00

10000db8 <call_shifted_const_ref()>:
10000db8:	b500      	push	{lr}
10000dba:	b082      	sub	sp, #8
10000dbc:	4b04      	ldr	r3, [pc, #16]	; (10000dd0 <call_shifted_const_ref()+0x18>)
10000dbe:	691a      	ldr	r2, [r3, #16]
10000dc0:	695b      	ldr	r3, [r3, #20]
10000dc2:	9200      	str	r2, [sp, #0]
10000dc4:	9301      	str	r3, [sp, #4]
10000dc6:	4668      	mov	r0, sp
10000dc8:	f7ff ffe6 	bl	10000d98 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
10000dcc:	b002      	add	sp, #8
10000dce:	bd00      	pop	{pc}
10000dd0:	10001644 	.word	0x10001644

10000dd4 <call_shifted_var_ref()>:
10000dd4:	b500      	push	{lr}
10000dd6:	b082      	sub	sp, #8
10000dd8:	4b04      	ldr	r3, [pc, #16]	; (10000dec <call_shifted_var_ref()+0x18>)
10000dda:	699a      	ldr	r2, [r3, #24]
10000ddc:	69db      	ldr	r3, [r3, #28]
10000dde:	9200      	str	r2, [sp, #0]
10000de0:	9301      	str	r3, [sp, #4]
10000de2:	4668      	mov	r0, sp
10000de4:	f7ff ffd8 	bl	10000d98 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
10000de8:	b002      	add	sp, #8
10000dea:	bd00      	pop	{pc}
10000dec:	10001644 	.word	0x10001644

10000df0 <call_shifted_global_ref()>:
10000df0:	b500      	push	{lr}
10000df2:	b082      	sub	sp, #8
10000df4:	4b04      	ldr	r3, [pc, #16]	; (10000e08 <call_shifted_global_ref()+0x18>)
10000df6:	689a      	ldr	r2, [r3, #8]
10000df8:	68db      	ldr	r3, [r3, #12]
10000dfa:	9200      	str	r2, [sp, #0]
10000dfc:	9301      	str	r3, [sp, #4]
10000dfe:	4668      	mov	r0, sp
10000e00:	f7ff ffca 	bl	10000d98 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
10000e04:	b002      	add	sp, #8
10000e06:	bd00      	pop	{pc}
10000e08:	10001644 	.word	0x10001644

10000e0c <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)>:
10000e0c:	0643      	lsls	r3, r0, #25
10000e0e:	d403      	bmi.n	10000e18 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0xc>
10000e10:	4b03      	ldr	r3, [pc, #12]	; (10000e20 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0x14>)
10000e12:	2204      	movs	r2, #4
10000e14:	605a      	str	r2, [r3, #4]
10000e16:	4770      	bx	lr
10000e18:	4b01      	ldr	r3, [pc, #4]	; (10000e20 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0x14>)
10000e1a:	2202      	movs	r2, #2
10000e1c:	605a      	str	r2, [r3, #4]
10000e1e:	e7fa      	b.n	10000e16 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0xa>
10000e20:	10001dc0 	.word	0x10001dc0

10000e24 <call_copy_bits_val()>:
10000e24:	b500      	push	{lr}
10000e26:	4b03      	ldr	r3, [pc, #12]	; (10000e34 <call_copy_bits_val()+0x10>)
10000e28:	2240      	movs	r2, #64	; 0x40
10000e2a:	605a      	str	r2, [r3, #4]
10000e2c:	6858      	ldr	r0, [r3, #4]
10000e2e:	f7ff ffed 	bl	10000e0c <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)>
10000e32:	bd00      	pop	{pc}
10000e34:	10001dc0 	.word	0x10001dc0

10000e38 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)>:
10000e38:	6803      	ldr	r3, [r0, #0]
10000e3a:	065b      	lsls	r3, r3, #25
10000e3c:	d403      	bmi.n	10000e46 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0xe>
10000e3e:	4b04      	ldr	r3, [pc, #16]	; (10000e50 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0x18>)
10000e40:	2204      	movs	r2, #4
10000e42:	605a      	str	r2, [r3, #4]
10000e44:	4770      	bx	lr
10000e46:	4b02      	ldr	r3, [pc, #8]	; (10000e50 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0x18>)
10000e48:	2202      	movs	r2, #2
10000e4a:	605a      	str	r2, [r3, #4]
10000e4c:	e7fa      	b.n	10000e44 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0xc>
10000e4e:	46c0      	nop			; (mov r8, r8)
10000e50:	10001dc0 	.word	0x10001dc0

10000e54 <call_copy_bits_ref()>:
10000e54:	b500      	push	{lr}
10000e56:	b081      	sub	sp, #4
10000e58:	4b04      	ldr	r3, [pc, #16]	; (10000e6c <call_copy_bits_ref()+0x18>)
10000e5a:	2240      	movs	r2, #64	; 0x40
10000e5c:	605a      	str	r2, [r3, #4]
10000e5e:	685b      	ldr	r3, [r3, #4]
10000e60:	9300      	str	r3, [sp, #0]
10000e62:	4668      	mov	r0, sp
10000e64:	f7ff ffe8 	bl	10000e38 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)>
10000e68:	b001      	add	sp, #4
10000e6a:	bd00      	pop	{pc}
10000e6c:	10001dc0 	.word	0x10001dc0

10000e70 <run>:
10000e70:	b530      	push	{r4, r5, lr}
10000e72:	4bf9      	ldr	r3, [pc, #996]	; (10001258 <run+0x3e8>)
10000e74:	781b      	ldrb	r3, [r3, #0]
10000e76:	2b00      	cmp	r3, #0
10000e78:	d104      	bne.n	10000e84 <run+0x14>
10000e7a:	4bf7      	ldr	r3, [pc, #988]	; (10001258 <run+0x3e8>)
10000e7c:	4af7      	ldr	r2, [pc, #988]	; (1000125c <run+0x3ec>)
10000e7e:	609a      	str	r2, [r3, #8]
10000e80:	2201      	movs	r2, #1
10000e82:	701a      	strb	r2, [r3, #0]
10000e84:	4bf4      	ldr	r3, [pc, #976]	; (10001258 <run+0x3e8>)
10000e86:	7b1b      	ldrb	r3, [r3, #12]
10000e88:	2b00      	cmp	r3, #0
10000e8a:	d104      	bne.n	10000e96 <run+0x26>
10000e8c:	4bf2      	ldr	r3, [pc, #968]	; (10001258 <run+0x3e8>)
10000e8e:	4af4      	ldr	r2, [pc, #976]	; (10001260 <run+0x3f0>)
10000e90:	615a      	str	r2, [r3, #20]
10000e92:	2201      	movs	r2, #1
10000e94:	731a      	strb	r2, [r3, #12]
10000e96:	4bf0      	ldr	r3, [pc, #960]	; (10001258 <run+0x3e8>)
10000e98:	7e1b      	ldrb	r3, [r3, #24]
10000e9a:	2b00      	cmp	r3, #0
10000e9c:	d104      	bne.n	10000ea8 <run+0x38>
10000e9e:	4bee      	ldr	r3, [pc, #952]	; (10001258 <run+0x3e8>)
10000ea0:	4af0      	ldr	r2, [pc, #960]	; (10001264 <run+0x3f4>)
10000ea2:	621a      	str	r2, [r3, #32]
10000ea4:	2201      	movs	r2, #1
10000ea6:	761a      	strb	r2, [r3, #24]
10000ea8:	4aeb      	ldr	r2, [pc, #940]	; (10001258 <run+0x3e8>)
10000eaa:	2324      	movs	r3, #36	; 0x24
10000eac:	5cd3      	ldrb	r3, [r2, r3]
10000eae:	2b00      	cmp	r3, #0
10000eb0:	d105      	bne.n	10000ebe <run+0x4e>
10000eb2:	0013      	movs	r3, r2
10000eb4:	4aec      	ldr	r2, [pc, #944]	; (10001268 <run+0x3f8>)
10000eb6:	62da      	str	r2, [r3, #44]	; 0x2c
10000eb8:	2224      	movs	r2, #36	; 0x24
10000eba:	2101      	movs	r1, #1
10000ebc:	5499      	strb	r1, [r3, r2]
10000ebe:	4ce6      	ldr	r4, [pc, #920]	; (10001258 <run+0x3e8>)
10000ec0:	2200      	movs	r2, #0
10000ec2:	68a1      	ldr	r1, [r4, #8]
10000ec4:	48e9      	ldr	r0, [pc, #932]	; (1000126c <run+0x3fc>)
10000ec6:	f000 fb3b 	bl	10001540 <do_test>
10000eca:	2201      	movs	r2, #1
10000ecc:	68a1      	ldr	r1, [r4, #8]
10000ece:	48e8      	ldr	r0, [pc, #928]	; (10001270 <run+0x400>)
10000ed0:	f000 fb36 	bl	10001540 <do_test>
10000ed4:	2202      	movs	r2, #2
10000ed6:	68a1      	ldr	r1, [r4, #8]
10000ed8:	48e6      	ldr	r0, [pc, #920]	; (10001274 <run+0x404>)
10000eda:	f000 fb31 	bl	10001540 <do_test>
10000ede:	2203      	movs	r2, #3
10000ee0:	68a1      	ldr	r1, [r4, #8]
10000ee2:	48e5      	ldr	r0, [pc, #916]	; (10001278 <run+0x408>)
10000ee4:	f000 fb2c 	bl	10001540 <do_test>
10000ee8:	2204      	movs	r2, #4
10000eea:	68a1      	ldr	r1, [r4, #8]
10000eec:	48e3      	ldr	r0, [pc, #908]	; (1000127c <run+0x40c>)
10000eee:	f000 fb27 	bl	10001540 <do_test>
10000ef2:	2205      	movs	r2, #5
10000ef4:	68a1      	ldr	r1, [r4, #8]
10000ef6:	48e2      	ldr	r0, [pc, #904]	; (10001280 <run+0x410>)
10000ef8:	f000 fb22 	bl	10001540 <do_test>
10000efc:	2206      	movs	r2, #6
10000efe:	68a1      	ldr	r1, [r4, #8]
10000f00:	48e0      	ldr	r0, [pc, #896]	; (10001284 <run+0x414>)
10000f02:	f000 fb1d 	bl	10001540 <do_test>
10000f06:	2207      	movs	r2, #7
10000f08:	68a1      	ldr	r1, [r4, #8]
10000f0a:	48df      	ldr	r0, [pc, #892]	; (10001288 <run+0x418>)
10000f0c:	f000 fb18 	bl	10001540 <do_test>
10000f10:	2208      	movs	r2, #8
10000f12:	68a1      	ldr	r1, [r4, #8]
10000f14:	48dd      	ldr	r0, [pc, #884]	; (1000128c <run+0x41c>)
10000f16:	f000 fb13 	bl	10001540 <do_test>
10000f1a:	2209      	movs	r2, #9
10000f1c:	68a1      	ldr	r1, [r4, #8]
10000f1e:	48dc      	ldr	r0, [pc, #880]	; (10001290 <run+0x420>)
10000f20:	f000 fb0e 	bl	10001540 <do_test>
10000f24:	220a      	movs	r2, #10
10000f26:	68a1      	ldr	r1, [r4, #8]
10000f28:	48da      	ldr	r0, [pc, #872]	; (10001294 <run+0x424>)
10000f2a:	f000 fb09 	bl	10001540 <do_test>
10000f2e:	220b      	movs	r2, #11
10000f30:	68a1      	ldr	r1, [r4, #8]
10000f32:	48d9      	ldr	r0, [pc, #868]	; (10001298 <run+0x428>)
10000f34:	f000 fb04 	bl	10001540 <do_test>
10000f38:	220c      	movs	r2, #12
10000f3a:	68a1      	ldr	r1, [r4, #8]
10000f3c:	48d7      	ldr	r0, [pc, #860]	; (1000129c <run+0x42c>)
10000f3e:	f000 faff 	bl	10001540 <do_test>
10000f42:	220d      	movs	r2, #13
10000f44:	68a1      	ldr	r1, [r4, #8]
10000f46:	48d6      	ldr	r0, [pc, #856]	; (100012a0 <run+0x430>)
10000f48:	f000 fafa 	bl	10001540 <do_test>
10000f4c:	220e      	movs	r2, #14
10000f4e:	68a1      	ldr	r1, [r4, #8]
10000f50:	48d4      	ldr	r0, [pc, #848]	; (100012a4 <run+0x434>)
10000f52:	f000 faf5 	bl	10001540 <do_test>
10000f56:	220f      	movs	r2, #15
10000f58:	68a1      	ldr	r1, [r4, #8]
10000f5a:	48d3      	ldr	r0, [pc, #844]	; (100012a8 <run+0x438>)
10000f5c:	f000 faf0 	bl	10001540 <do_test>
10000f60:	2210      	movs	r2, #16
10000f62:	68a1      	ldr	r1, [r4, #8]
10000f64:	48d1      	ldr	r0, [pc, #836]	; (100012ac <run+0x43c>)
10000f66:	f000 faeb 	bl	10001540 <do_test>
10000f6a:	2211      	movs	r2, #17
10000f6c:	68a1      	ldr	r1, [r4, #8]
10000f6e:	48d0      	ldr	r0, [pc, #832]	; (100012b0 <run+0x440>)
10000f70:	f000 fae6 	bl	10001540 <do_test>
10000f74:	2212      	movs	r2, #18
10000f76:	68a1      	ldr	r1, [r4, #8]
10000f78:	48ce      	ldr	r0, [pc, #824]	; (100012b4 <run+0x444>)
10000f7a:	f000 fae1 	bl	10001540 <do_test>
10000f7e:	2213      	movs	r2, #19
10000f80:	68a1      	ldr	r1, [r4, #8]
10000f82:	48cd      	ldr	r0, [pc, #820]	; (100012b8 <run+0x448>)
10000f84:	f000 fadc 	bl	10001540 <do_test>
10000f88:	2214      	movs	r2, #20
10000f8a:	68a1      	ldr	r1, [r4, #8]
10000f8c:	48cb      	ldr	r0, [pc, #812]	; (100012bc <run+0x44c>)
10000f8e:	f000 fad7 	bl	10001540 <do_test>
10000f92:	2215      	movs	r2, #21
10000f94:	68a1      	ldr	r1, [r4, #8]
10000f96:	48ca      	ldr	r0, [pc, #808]	; (100012c0 <run+0x450>)
10000f98:	f000 fad2 	bl	10001540 <do_test>
10000f9c:	2216      	movs	r2, #22
10000f9e:	68a1      	ldr	r1, [r4, #8]
10000fa0:	48c8      	ldr	r0, [pc, #800]	; (100012c4 <run+0x454>)
10000fa2:	f000 facd 	bl	10001540 <do_test>
10000fa6:	2217      	movs	r2, #23
10000fa8:	68a1      	ldr	r1, [r4, #8]
10000faa:	48c7      	ldr	r0, [pc, #796]	; (100012c8 <run+0x458>)
10000fac:	f000 fac8 	bl	10001540 <do_test>
10000fb0:	2218      	movs	r2, #24
10000fb2:	68a1      	ldr	r1, [r4, #8]
10000fb4:	48c5      	ldr	r0, [pc, #788]	; (100012cc <run+0x45c>)
10000fb6:	f000 fac3 	bl	10001540 <do_test>
10000fba:	2219      	movs	r2, #25
10000fbc:	68a1      	ldr	r1, [r4, #8]
10000fbe:	48c4      	ldr	r0, [pc, #784]	; (100012d0 <run+0x460>)
10000fc0:	f000 fabe 	bl	10001540 <do_test>
10000fc4:	221a      	movs	r2, #26
10000fc6:	68a1      	ldr	r1, [r4, #8]
10000fc8:	48c2      	ldr	r0, [pc, #776]	; (100012d4 <run+0x464>)
10000fca:	f000 fab9 	bl	10001540 <do_test>
10000fce:	221b      	movs	r2, #27
10000fd0:	68a1      	ldr	r1, [r4, #8]
10000fd2:	48c1      	ldr	r0, [pc, #772]	; (100012d8 <run+0x468>)
10000fd4:	f000 fab4 	bl	10001540 <do_test>
10000fd8:	221c      	movs	r2, #28
10000fda:	68a1      	ldr	r1, [r4, #8]
10000fdc:	48bf      	ldr	r0, [pc, #764]	; (100012dc <run+0x46c>)
10000fde:	f000 faaf 	bl	10001540 <do_test>
10000fe2:	221d      	movs	r2, #29
10000fe4:	68a1      	ldr	r1, [r4, #8]
10000fe6:	48be      	ldr	r0, [pc, #760]	; (100012e0 <run+0x470>)
10000fe8:	f000 faaa 	bl	10001540 <do_test>
10000fec:	221e      	movs	r2, #30
10000fee:	68a1      	ldr	r1, [r4, #8]
10000ff0:	48bc      	ldr	r0, [pc, #752]	; (100012e4 <run+0x474>)
10000ff2:	f000 faa5 	bl	10001540 <do_test>
10000ff6:	221f      	movs	r2, #31
10000ff8:	68a1      	ldr	r1, [r4, #8]
10000ffa:	48bb      	ldr	r0, [pc, #748]	; (100012e8 <run+0x478>)
10000ffc:	f000 faa0 	bl	10001540 <do_test>
10001000:	2220      	movs	r2, #32
10001002:	68a1      	ldr	r1, [r4, #8]
10001004:	48b9      	ldr	r0, [pc, #740]	; (100012ec <run+0x47c>)
10001006:	f000 fa9b 	bl	10001540 <do_test>
1000100a:	2221      	movs	r2, #33	; 0x21
1000100c:	68a1      	ldr	r1, [r4, #8]
1000100e:	48b8      	ldr	r0, [pc, #736]	; (100012f0 <run+0x480>)
10001010:	f000 fa96 	bl	10001540 <do_test>
10001014:	2222      	movs	r2, #34	; 0x22
10001016:	68a1      	ldr	r1, [r4, #8]
10001018:	48b6      	ldr	r0, [pc, #728]	; (100012f4 <run+0x484>)
1000101a:	f000 fa91 	bl	10001540 <do_test>
1000101e:	2223      	movs	r2, #35	; 0x23
10001020:	68a1      	ldr	r1, [r4, #8]
10001022:	48b5      	ldr	r0, [pc, #724]	; (100012f8 <run+0x488>)
10001024:	f000 fa8c 	bl	10001540 <do_test>
10001028:	2224      	movs	r2, #36	; 0x24
1000102a:	68a1      	ldr	r1, [r4, #8]
1000102c:	48b3      	ldr	r0, [pc, #716]	; (100012fc <run+0x48c>)
1000102e:	f000 fa87 	bl	10001540 <do_test>
10001032:	2225      	movs	r2, #37	; 0x25
10001034:	6961      	ldr	r1, [r4, #20]
10001036:	48b2      	ldr	r0, [pc, #712]	; (10001300 <run+0x490>)
10001038:	f000 fa82 	bl	10001540 <do_test>
1000103c:	2226      	movs	r2, #38	; 0x26
1000103e:	6961      	ldr	r1, [r4, #20]
10001040:	48b0      	ldr	r0, [pc, #704]	; (10001304 <run+0x494>)
10001042:	f000 fa7d 	bl	10001540 <do_test>
10001046:	2227      	movs	r2, #39	; 0x27
10001048:	6961      	ldr	r1, [r4, #20]
1000104a:	48af      	ldr	r0, [pc, #700]	; (10001308 <run+0x498>)
1000104c:	f000 fa78 	bl	10001540 <do_test>
10001050:	2228      	movs	r2, #40	; 0x28
10001052:	68a1      	ldr	r1, [r4, #8]
10001054:	48ad      	ldr	r0, [pc, #692]	; (1000130c <run+0x49c>)
10001056:	f000 fa73 	bl	10001540 <do_test>
1000105a:	2229      	movs	r2, #41	; 0x29
1000105c:	68a1      	ldr	r1, [r4, #8]
1000105e:	48ac      	ldr	r0, [pc, #688]	; (10001310 <run+0x4a0>)
10001060:	f000 fa6e 	bl	10001540 <do_test>
10001064:	222a      	movs	r2, #42	; 0x2a
10001066:	68a1      	ldr	r1, [r4, #8]
10001068:	48aa      	ldr	r0, [pc, #680]	; (10001314 <run+0x4a4>)
1000106a:	f000 fa69 	bl	10001540 <do_test>
1000106e:	222b      	movs	r2, #43	; 0x2b
10001070:	68a1      	ldr	r1, [r4, #8]
10001072:	48a9      	ldr	r0, [pc, #676]	; (10001318 <run+0x4a8>)
10001074:	f000 fa64 	bl	10001540 <do_test>
10001078:	222c      	movs	r2, #44	; 0x2c
1000107a:	68a1      	ldr	r1, [r4, #8]
1000107c:	48a7      	ldr	r0, [pc, #668]	; (1000131c <run+0x4ac>)
1000107e:	f000 fa5f 	bl	10001540 <do_test>
10001082:	222d      	movs	r2, #45	; 0x2d
10001084:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001086:	48a6      	ldr	r0, [pc, #664]	; (10001320 <run+0x4b0>)
10001088:	f000 fa5a 	bl	10001540 <do_test>
1000108c:	222e      	movs	r2, #46	; 0x2e
1000108e:	68a1      	ldr	r1, [r4, #8]
10001090:	48a4      	ldr	r0, [pc, #656]	; (10001324 <run+0x4b4>)
10001092:	f000 fa55 	bl	10001540 <do_test>
10001096:	222f      	movs	r2, #47	; 0x2f
10001098:	68a1      	ldr	r1, [r4, #8]
1000109a:	48a3      	ldr	r0, [pc, #652]	; (10001328 <run+0x4b8>)
1000109c:	f000 fa50 	bl	10001540 <do_test>
100010a0:	2230      	movs	r2, #48	; 0x30
100010a2:	68a1      	ldr	r1, [r4, #8]
100010a4:	48a1      	ldr	r0, [pc, #644]	; (1000132c <run+0x4bc>)
100010a6:	f000 fa4b 	bl	10001540 <do_test>
100010aa:	2231      	movs	r2, #49	; 0x31
100010ac:	68a1      	ldr	r1, [r4, #8]
100010ae:	48a0      	ldr	r0, [pc, #640]	; (10001330 <run+0x4c0>)
100010b0:	f000 fa46 	bl	10001540 <do_test>
100010b4:	2232      	movs	r2, #50	; 0x32
100010b6:	68a1      	ldr	r1, [r4, #8]
100010b8:	489e      	ldr	r0, [pc, #632]	; (10001334 <run+0x4c4>)
100010ba:	f000 fa41 	bl	10001540 <do_test>
100010be:	2233      	movs	r2, #51	; 0x33
100010c0:	68a1      	ldr	r1, [r4, #8]
100010c2:	489d      	ldr	r0, [pc, #628]	; (10001338 <run+0x4c8>)
100010c4:	f000 fa3c 	bl	10001540 <do_test>
100010c8:	2234      	movs	r2, #52	; 0x34
100010ca:	68a1      	ldr	r1, [r4, #8]
100010cc:	489b      	ldr	r0, [pc, #620]	; (1000133c <run+0x4cc>)
100010ce:	f000 fa37 	bl	10001540 <do_test>
100010d2:	2235      	movs	r2, #53	; 0x35
100010d4:	68a1      	ldr	r1, [r4, #8]
100010d6:	489a      	ldr	r0, [pc, #616]	; (10001340 <run+0x4d0>)
100010d8:	f000 fa32 	bl	10001540 <do_test>
100010dc:	2236      	movs	r2, #54	; 0x36
100010de:	68a1      	ldr	r1, [r4, #8]
100010e0:	4898      	ldr	r0, [pc, #608]	; (10001344 <run+0x4d4>)
100010e2:	f000 fa2d 	bl	10001540 <do_test>
100010e6:	2237      	movs	r2, #55	; 0x37
100010e8:	68a1      	ldr	r1, [r4, #8]
100010ea:	4897      	ldr	r0, [pc, #604]	; (10001348 <run+0x4d8>)
100010ec:	f000 fa28 	bl	10001540 <do_test>
100010f0:	2238      	movs	r2, #56	; 0x38
100010f2:	68a1      	ldr	r1, [r4, #8]
100010f4:	4895      	ldr	r0, [pc, #596]	; (1000134c <run+0x4dc>)
100010f6:	f000 fa23 	bl	10001540 <do_test>
100010fa:	2239      	movs	r2, #57	; 0x39
100010fc:	68a1      	ldr	r1, [r4, #8]
100010fe:	4894      	ldr	r0, [pc, #592]	; (10001350 <run+0x4e0>)
10001100:	f000 fa1e 	bl	10001540 <do_test>
10001104:	223a      	movs	r2, #58	; 0x3a
10001106:	68a1      	ldr	r1, [r4, #8]
10001108:	4892      	ldr	r0, [pc, #584]	; (10001354 <run+0x4e4>)
1000110a:	f000 fa19 	bl	10001540 <do_test>
1000110e:	223b      	movs	r2, #59	; 0x3b
10001110:	68a1      	ldr	r1, [r4, #8]
10001112:	4891      	ldr	r0, [pc, #580]	; (10001358 <run+0x4e8>)
10001114:	f000 fa14 	bl	10001540 <do_test>
10001118:	223c      	movs	r2, #60	; 0x3c
1000111a:	68a1      	ldr	r1, [r4, #8]
1000111c:	488f      	ldr	r0, [pc, #572]	; (1000135c <run+0x4ec>)
1000111e:	f000 fa0f 	bl	10001540 <do_test>
10001122:	223d      	movs	r2, #61	; 0x3d
10001124:	68a1      	ldr	r1, [r4, #8]
10001126:	488e      	ldr	r0, [pc, #568]	; (10001360 <run+0x4f0>)
10001128:	f000 fa0a 	bl	10001540 <do_test>
1000112c:	223e      	movs	r2, #62	; 0x3e
1000112e:	68a1      	ldr	r1, [r4, #8]
10001130:	488c      	ldr	r0, [pc, #560]	; (10001364 <run+0x4f4>)
10001132:	f000 fa05 	bl	10001540 <do_test>
10001136:	223f      	movs	r2, #63	; 0x3f
10001138:	68a1      	ldr	r1, [r4, #8]
1000113a:	488b      	ldr	r0, [pc, #556]	; (10001368 <run+0x4f8>)
1000113c:	f000 fa00 	bl	10001540 <do_test>
10001140:	2240      	movs	r2, #64	; 0x40
10001142:	6961      	ldr	r1, [r4, #20]
10001144:	4889      	ldr	r0, [pc, #548]	; (1000136c <run+0x4fc>)
10001146:	f000 f9fb 	bl	10001540 <do_test>
1000114a:	2241      	movs	r2, #65	; 0x41
1000114c:	6961      	ldr	r1, [r4, #20]
1000114e:	4888      	ldr	r0, [pc, #544]	; (10001370 <run+0x500>)
10001150:	f000 f9f6 	bl	10001540 <do_test>
10001154:	2242      	movs	r2, #66	; 0x42
10001156:	6961      	ldr	r1, [r4, #20]
10001158:	4886      	ldr	r0, [pc, #536]	; (10001374 <run+0x504>)
1000115a:	f000 f9f1 	bl	10001540 <do_test>
1000115e:	2243      	movs	r2, #67	; 0x43
10001160:	68a1      	ldr	r1, [r4, #8]
10001162:	4885      	ldr	r0, [pc, #532]	; (10001378 <run+0x508>)
10001164:	f000 f9ec 	bl	10001540 <do_test>
10001168:	2244      	movs	r2, #68	; 0x44
1000116a:	6a21      	ldr	r1, [r4, #32]
1000116c:	4883      	ldr	r0, [pc, #524]	; (1000137c <run+0x50c>)
1000116e:	f000 f9e7 	bl	10001540 <do_test>
10001172:	2245      	movs	r2, #69	; 0x45
10001174:	6a21      	ldr	r1, [r4, #32]
10001176:	4882      	ldr	r0, [pc, #520]	; (10001380 <run+0x510>)
10001178:	f000 f9e2 	bl	10001540 <do_test>
1000117c:	2246      	movs	r2, #70	; 0x46
1000117e:	68a1      	ldr	r1, [r4, #8]
10001180:	4880      	ldr	r0, [pc, #512]	; (10001384 <run+0x514>)
10001182:	f000 f9dd 	bl	10001540 <do_test>
10001186:	2247      	movs	r2, #71	; 0x47
10001188:	68a1      	ldr	r1, [r4, #8]
1000118a:	487f      	ldr	r0, [pc, #508]	; (10001388 <run+0x518>)
1000118c:	f000 f9d8 	bl	10001540 <do_test>
10001190:	2248      	movs	r2, #72	; 0x48
10001192:	6a21      	ldr	r1, [r4, #32]
10001194:	487d      	ldr	r0, [pc, #500]	; (1000138c <run+0x51c>)
10001196:	f000 f9d3 	bl	10001540 <do_test>
1000119a:	2249      	movs	r2, #73	; 0x49
1000119c:	6a21      	ldr	r1, [r4, #32]
1000119e:	487c      	ldr	r0, [pc, #496]	; (10001390 <run+0x520>)
100011a0:	f000 f9ce 	bl	10001540 <do_test>
100011a4:	224a      	movs	r2, #74	; 0x4a
100011a6:	68a1      	ldr	r1, [r4, #8]
100011a8:	487a      	ldr	r0, [pc, #488]	; (10001394 <run+0x524>)
100011aa:	f000 f9c9 	bl	10001540 <do_test>
100011ae:	224b      	movs	r2, #75	; 0x4b
100011b0:	68a1      	ldr	r1, [r4, #8]
100011b2:	4879      	ldr	r0, [pc, #484]	; (10001398 <run+0x528>)
100011b4:	f000 f9c4 	bl	10001540 <do_test>
100011b8:	224c      	movs	r2, #76	; 0x4c
100011ba:	68a1      	ldr	r1, [r4, #8]
100011bc:	4877      	ldr	r0, [pc, #476]	; (1000139c <run+0x52c>)
100011be:	f000 f9bf 	bl	10001540 <do_test>
100011c2:	224d      	movs	r2, #77	; 0x4d
100011c4:	68a1      	ldr	r1, [r4, #8]
100011c6:	4876      	ldr	r0, [pc, #472]	; (100013a0 <run+0x530>)
100011c8:	f000 f9ba 	bl	10001540 <do_test>
100011cc:	224e      	movs	r2, #78	; 0x4e
100011ce:	68a1      	ldr	r1, [r4, #8]
100011d0:	4874      	ldr	r0, [pc, #464]	; (100013a4 <run+0x534>)
100011d2:	f000 f9b5 	bl	10001540 <do_test>
100011d6:	224f      	movs	r2, #79	; 0x4f
100011d8:	68a1      	ldr	r1, [r4, #8]
100011da:	4873      	ldr	r0, [pc, #460]	; (100013a8 <run+0x538>)
100011dc:	f000 f9b0 	bl	10001540 <do_test>
100011e0:	4d72      	ldr	r5, [pc, #456]	; (100013ac <run+0x53c>)
100011e2:	2250      	movs	r2, #80	; 0x50
100011e4:	68a1      	ldr	r1, [r4, #8]
100011e6:	0028      	movs	r0, r5
100011e8:	f000 f9aa 	bl	10001540 <do_test>
100011ec:	2251      	movs	r2, #81	; 0x51
100011ee:	68a1      	ldr	r1, [r4, #8]
100011f0:	0028      	movs	r0, r5
100011f2:	f000 f9a5 	bl	10001540 <do_test>
100011f6:	2252      	movs	r2, #82	; 0x52
100011f8:	68a1      	ldr	r1, [r4, #8]
100011fa:	486d      	ldr	r0, [pc, #436]	; (100013b0 <run+0x540>)
100011fc:	f000 f9a0 	bl	10001540 <do_test>
10001200:	2253      	movs	r2, #83	; 0x53
10001202:	68a1      	ldr	r1, [r4, #8]
10001204:	486b      	ldr	r0, [pc, #428]	; (100013b4 <run+0x544>)
10001206:	f000 f99b 	bl	10001540 <do_test>
1000120a:	2254      	movs	r2, #84	; 0x54
1000120c:	68a1      	ldr	r1, [r4, #8]
1000120e:	486a      	ldr	r0, [pc, #424]	; (100013b8 <run+0x548>)
10001210:	f000 f996 	bl	10001540 <do_test>
10001214:	4d69      	ldr	r5, [pc, #420]	; (100013bc <run+0x54c>)
10001216:	2255      	movs	r2, #85	; 0x55
10001218:	68a1      	ldr	r1, [r4, #8]
1000121a:	0028      	movs	r0, r5
1000121c:	f000 f990 	bl	10001540 <do_test>
10001220:	2256      	movs	r2, #86	; 0x56
10001222:	68a1      	ldr	r1, [r4, #8]
10001224:	4866      	ldr	r0, [pc, #408]	; (100013c0 <run+0x550>)
10001226:	f000 f98b 	bl	10001540 <do_test>
1000122a:	2257      	movs	r2, #87	; 0x57
1000122c:	68a1      	ldr	r1, [r4, #8]
1000122e:	0028      	movs	r0, r5
10001230:	f000 f986 	bl	10001540 <do_test>
10001234:	2258      	movs	r2, #88	; 0x58
10001236:	68a1      	ldr	r1, [r4, #8]
10001238:	4862      	ldr	r0, [pc, #392]	; (100013c4 <run+0x554>)
1000123a:	f000 f981 	bl	10001540 <do_test>
1000123e:	2259      	movs	r2, #89	; 0x59
10001240:	68a1      	ldr	r1, [r4, #8]
10001242:	4861      	ldr	r0, [pc, #388]	; (100013c8 <run+0x558>)
10001244:	f000 f97c 	bl	10001540 <do_test>
10001248:	225a      	movs	r2, #90	; 0x5a
1000124a:	6a21      	ldr	r1, [r4, #32]
1000124c:	485f      	ldr	r0, [pc, #380]	; (100013cc <run+0x55c>)
1000124e:	f000 f977 	bl	10001540 <do_test>
10001252:	225b      	movs	r2, #91	; 0x5b
10001254:	6a21      	ldr	r1, [r4, #32]
10001256:	e0bb      	b.n	100013d0 <run+0x560>
10001258:	10001664 	.word	0x10001664
1000125c:	10001dc4 	.word	0x10001dc4
10001260:	10001d24 	.word	0x10001d24
10001264:	10001c2c 	.word	0x10001c2c
10001268:	10001ca0 	.word	0x10001ca0
1000126c:	1000009d 	.word	0x1000009d
10001270:	100000a9 	.word	0x100000a9
10001274:	100000b5 	.word	0x100000b5
10001278:	100000c5 	.word	0x100000c5
1000127c:	100000d5 	.word	0x100000d5
10001280:	100000e5 	.word	0x100000e5
10001284:	100000f5 	.word	0x100000f5
10001288:	10000105 	.word	0x10000105
1000128c:	10000115 	.word	0x10000115
10001290:	10000125 	.word	0x10000125
10001294:	10000135 	.word	0x10000135
10001298:	10000141 	.word	0x10000141
1000129c:	1000014d 	.word	0x1000014d
100012a0:	10000159 	.word	0x10000159
100012a4:	10000165 	.word	0x10000165
100012a8:	10000175 	.word	0x10000175
100012ac:	10000185 	.word	0x10000185
100012b0:	10000195 	.word	0x10000195
100012b4:	100001a5 	.word	0x100001a5
100012b8:	100001b9 	.word	0x100001b9
100012bc:	100001cd 	.word	0x100001cd
100012c0:	100001dd 	.word	0x100001dd
100012c4:	100001ed 	.word	0x100001ed
100012c8:	10000209 	.word	0x10000209
100012cc:	10000225 	.word	0x10000225
100012d0:	10000231 	.word	0x10000231
100012d4:	1000023d 	.word	0x1000023d
100012d8:	1000024d 	.word	0x1000024d
100012dc:	1000025d 	.word	0x1000025d
100012e0:	10000269 	.word	0x10000269
100012e4:	10000275 	.word	0x10000275
100012e8:	10000281 	.word	0x10000281
100012ec:	1000028d 	.word	0x1000028d
100012f0:	1000029d 	.word	0x1000029d
100012f4:	100002b1 	.word	0x100002b1
100012f8:	100002d9 	.word	0x100002d9
100012fc:	100002f9 	.word	0x100002f9
10001300:	10000321 	.word	0x10000321
10001304:	10000341 	.word	0x10000341
10001308:	1000036d 	.word	0x1000036d
1000130c:	10000399 	.word	0x10000399
10001310:	100003e1 	.word	0x100003e1
10001314:	10000419 	.word	0x10000419
10001318:	10000441 	.word	0x10000441
1000131c:	10000461 	.word	0x10000461
10001320:	10000475 	.word	0x10000475
10001324:	100008b3 	.word	0x100008b3
10001328:	100008a9 	.word	0x100008a9
1000132c:	100008eb 	.word	0x100008eb
10001330:	100008d9 	.word	0x100008d9
10001334:	1000092d 	.word	0x1000092d
10001338:	10000921 	.word	0x10000921
1000133c:	10000975 	.word	0x10000975
10001340:	10000959 	.word	0x10000959
10001344:	100009ab 	.word	0x100009ab
10001348:	100009c1 	.word	0x100009c1
1000134c:	100009d9 	.word	0x100009d9
10001350:	100009f3 	.word	0x100009f3
10001354:	10000a17 	.word	0x10000a17
10001358:	10000a3f 	.word	0x10000a3f
1000135c:	10000a57 	.word	0x10000a57
10001360:	10000a73 	.word	0x10000a73
10001364:	10000a8f 	.word	0x10000a8f
10001368:	10000aab 	.word	0x10000aab
1000136c:	10000ac1 	.word	0x10000ac1
10001370:	10000aef 	.word	0x10000aef
10001374:	10000b35 	.word	0x10000b35
10001378:	10000b65 	.word	0x10000b65
1000137c:	10000bad 	.word	0x10000bad
10001380:	10000bed 	.word	0x10000bed
10001384:	10000c39 	.word	0x10000c39
10001388:	10000c65 	.word	0x10000c65
1000138c:	100004a1 	.word	0x100004a1
10001390:	100004bd 	.word	0x100004bd
10001394:	100004d9 	.word	0x100004d9
10001398:	1000050d 	.word	0x1000050d
1000139c:	10000549 	.word	0x10000549
100013a0:	10000579 	.word	0x10000579
100013a4:	100005c1 	.word	0x100005c1
100013a8:	100005cd 	.word	0x100005cd
100013ac:	100005d9 	.word	0x100005d9
100013b0:	100005f9 	.word	0x100005f9
100013b4:	10000619 	.word	0x10000619
100013b8:	10000639 	.word	0x10000639
100013bc:	10000665 	.word	0x10000665
100013c0:	1000068d 	.word	0x1000068d
100013c4:	100006b9 	.word	0x100006b9
100013c8:	100006c9 	.word	0x100006c9
100013cc:	100006dd 	.word	0x100006dd
100013d0:	483d      	ldr	r0, [pc, #244]	; (100014c8 <run+0x658>)
100013d2:	f000 f8b5 	bl	10001540 <do_test>
100013d6:	225c      	movs	r2, #92	; 0x5c
100013d8:	68a1      	ldr	r1, [r4, #8]
100013da:	483c      	ldr	r0, [pc, #240]	; (100014cc <run+0x65c>)
100013dc:	f000 f8b0 	bl	10001540 <do_test>
100013e0:	225d      	movs	r2, #93	; 0x5d
100013e2:	6a21      	ldr	r1, [r4, #32]
100013e4:	483a      	ldr	r0, [pc, #232]	; (100014d0 <run+0x660>)
100013e6:	f000 f8ab 	bl	10001540 <do_test>
100013ea:	225e      	movs	r2, #94	; 0x5e
100013ec:	6a21      	ldr	r1, [r4, #32]
100013ee:	4839      	ldr	r0, [pc, #228]	; (100014d4 <run+0x664>)
100013f0:	f000 f8a6 	bl	10001540 <do_test>
100013f4:	225f      	movs	r2, #95	; 0x5f
100013f6:	68a1      	ldr	r1, [r4, #8]
100013f8:	4837      	ldr	r0, [pc, #220]	; (100014d8 <run+0x668>)
100013fa:	f000 f8a1 	bl	10001540 <do_test>
100013fe:	2260      	movs	r2, #96	; 0x60
10001400:	68a1      	ldr	r1, [r4, #8]
10001402:	4836      	ldr	r0, [pc, #216]	; (100014dc <run+0x66c>)
10001404:	f000 f89c 	bl	10001540 <do_test>
10001408:	2261      	movs	r2, #97	; 0x61
1000140a:	68a1      	ldr	r1, [r4, #8]
1000140c:	4834      	ldr	r0, [pc, #208]	; (100014e0 <run+0x670>)
1000140e:	f000 f897 	bl	10001540 <do_test>
10001412:	2262      	movs	r2, #98	; 0x62
10001414:	68a1      	ldr	r1, [r4, #8]
10001416:	4833      	ldr	r0, [pc, #204]	; (100014e4 <run+0x674>)
10001418:	f000 f892 	bl	10001540 <do_test>
1000141c:	2263      	movs	r2, #99	; 0x63
1000141e:	6a21      	ldr	r1, [r4, #32]
10001420:	4831      	ldr	r0, [pc, #196]	; (100014e8 <run+0x678>)
10001422:	f000 f88d 	bl	10001540 <do_test>
10001426:	2264      	movs	r2, #100	; 0x64
10001428:	6a21      	ldr	r1, [r4, #32]
1000142a:	4830      	ldr	r0, [pc, #192]	; (100014ec <run+0x67c>)
1000142c:	f000 f888 	bl	10001540 <do_test>
10001430:	2265      	movs	r2, #101	; 0x65
10001432:	6a21      	ldr	r1, [r4, #32]
10001434:	482e      	ldr	r0, [pc, #184]	; (100014f0 <run+0x680>)
10001436:	f000 f883 	bl	10001540 <do_test>
1000143a:	2266      	movs	r2, #102	; 0x66
1000143c:	6a21      	ldr	r1, [r4, #32]
1000143e:	482d      	ldr	r0, [pc, #180]	; (100014f4 <run+0x684>)
10001440:	f000 f87e 	bl	10001540 <do_test>
10001444:	2267      	movs	r2, #103	; 0x67
10001446:	6a21      	ldr	r1, [r4, #32]
10001448:	482b      	ldr	r0, [pc, #172]	; (100014f8 <run+0x688>)
1000144a:	f000 f879 	bl	10001540 <do_test>
1000144e:	2268      	movs	r2, #104	; 0x68
10001450:	6a21      	ldr	r1, [r4, #32]
10001452:	482a      	ldr	r0, [pc, #168]	; (100014fc <run+0x68c>)
10001454:	f000 f874 	bl	10001540 <do_test>
10001458:	2269      	movs	r2, #105	; 0x69
1000145a:	68a1      	ldr	r1, [r4, #8]
1000145c:	4828      	ldr	r0, [pc, #160]	; (10001500 <run+0x690>)
1000145e:	f000 f86f 	bl	10001540 <do_test>
10001462:	226a      	movs	r2, #106	; 0x6a
10001464:	68a1      	ldr	r1, [r4, #8]
10001466:	4827      	ldr	r0, [pc, #156]	; (10001504 <run+0x694>)
10001468:	f000 f86a 	bl	10001540 <do_test>
1000146c:	226b      	movs	r2, #107	; 0x6b
1000146e:	68a1      	ldr	r1, [r4, #8]
10001470:	4825      	ldr	r0, [pc, #148]	; (10001508 <run+0x698>)
10001472:	f000 f865 	bl	10001540 <do_test>
10001476:	226c      	movs	r2, #108	; 0x6c
10001478:	68a1      	ldr	r1, [r4, #8]
1000147a:	4824      	ldr	r0, [pc, #144]	; (1000150c <run+0x69c>)
1000147c:	f000 f860 	bl	10001540 <do_test>
10001480:	226d      	movs	r2, #109	; 0x6d
10001482:	68a1      	ldr	r1, [r4, #8]
10001484:	4822      	ldr	r0, [pc, #136]	; (10001510 <run+0x6a0>)
10001486:	f000 f85b 	bl	10001540 <do_test>
1000148a:	226e      	movs	r2, #110	; 0x6e
1000148c:	68a1      	ldr	r1, [r4, #8]
1000148e:	4821      	ldr	r0, [pc, #132]	; (10001514 <run+0x6a4>)
10001490:	f000 f856 	bl	10001540 <do_test>
10001494:	226f      	movs	r2, #111	; 0x6f
10001496:	68a1      	ldr	r1, [r4, #8]
10001498:	481f      	ldr	r0, [pc, #124]	; (10001518 <run+0x6a8>)
1000149a:	f000 f851 	bl	10001540 <do_test>
1000149e:	2270      	movs	r2, #112	; 0x70
100014a0:	68a1      	ldr	r1, [r4, #8]
100014a2:	481e      	ldr	r0, [pc, #120]	; (1000151c <run+0x6ac>)
100014a4:	f000 f84c 	bl	10001540 <do_test>
100014a8:	2271      	movs	r2, #113	; 0x71
100014aa:	68a1      	ldr	r1, [r4, #8]
100014ac:	481c      	ldr	r0, [pc, #112]	; (10001520 <run+0x6b0>)
100014ae:	f000 f847 	bl	10001540 <do_test>
100014b2:	2272      	movs	r2, #114	; 0x72
100014b4:	68a1      	ldr	r1, [r4, #8]
100014b6:	481b      	ldr	r0, [pc, #108]	; (10001524 <run+0x6b4>)
100014b8:	f000 f842 	bl	10001540 <do_test>
100014bc:	68a1      	ldr	r1, [r4, #8]
100014be:	2273      	movs	r2, #115	; 0x73
100014c0:	4819      	ldr	r0, [pc, #100]	; (10001528 <run+0x6b8>)
100014c2:	f000 f83d 	bl	10001540 <do_test>
100014c6:	bd30      	pop	{r4, r5, pc}
100014c8:	100006e9 	.word	0x100006e9
100014cc:	10000705 	.word	0x10000705
100014d0:	10000bbd 	.word	0x10000bbd
100014d4:	10000c07 	.word	0x10000c07
100014d8:	100008bd 	.word	0x100008bd
100014dc:	100008fd 	.word	0x100008fd
100014e0:	10000939 	.word	0x10000939
100014e4:	1000098b 	.word	0x1000098b
100014e8:	10000d69 	.word	0x10000d69
100014ec:	10000d77 	.word	0x10000d77
100014f0:	10000d85 	.word	0x10000d85
100014f4:	10000db9 	.word	0x10000db9
100014f8:	10000dd5 	.word	0x10000dd5
100014fc:	10000df1 	.word	0x10000df1
10001500:	10000711 	.word	0x10000711
10001504:	10000731 	.word	0x10000731
10001508:	10000751 	.word	0x10000751
1000150c:	1000077d 	.word	0x1000077d
10001510:	100007a9 	.word	0x100007a9
10001514:	100007dd 	.word	0x100007dd
10001518:	10000809 	.word	0x10000809
1000151c:	10000839 	.word	0x10000839
10001520:	1000086d 	.word	0x1000086d
10001524:	10000e25 	.word	0x10000e25
10001528:	10000e55 	.word	0x10000e55

1000152c <memset>:
1000152c:	1882      	adds	r2, r0, r2
1000152e:	4290      	cmp	r0, r2
10001530:	d205      	bcs.n	1000153e <memset+0x12>
10001532:	0003      	movs	r3, r0
10001534:	b2c9      	uxtb	r1, r1
10001536:	7019      	strb	r1, [r3, #0]
10001538:	3301      	adds	r3, #1
1000153a:	429a      	cmp	r2, r3
1000153c:	d1fb      	bne.n	10001536 <memset+0xa>
1000153e:	4770      	bx	lr

10001540 <do_test>:
10001540:	b5f0      	push	{r4, r5, r6, r7, lr}
10001542:	2300      	movs	r3, #0
10001544:	46c6      	mov	lr, r8
10001546:	000d      	movs	r5, r1
10001548:	0016      	movs	r6, r2
1000154a:	b500      	push	{lr}
1000154c:	600b      	str	r3, [r1, #0]
1000154e:	4680      	mov	r8, r0
10001550:	4780      	blx	r0
10001552:	682b      	ldr	r3, [r5, #0]
10001554:	4f07      	ldr	r7, [pc, #28]	; (10001574 <do_test+0x34>)
10001556:	0074      	lsls	r4, r6, #1
10001558:	00f6      	lsls	r6, r6, #3
1000155a:	51f3      	str	r3, [r6, r7]
1000155c:	2301      	movs	r3, #1
1000155e:	425b      	negs	r3, r3
10001560:	602b      	str	r3, [r5, #0]
10001562:	47c0      	blx	r8
10001564:	3401      	adds	r4, #1
10001566:	682b      	ldr	r3, [r5, #0]
10001568:	00a4      	lsls	r4, r4, #2
1000156a:	51e3      	str	r3, [r4, r7]
1000156c:	bc04      	pop	{r2}
1000156e:	4690      	mov	r8, r2
10001570:	bdf0      	pop	{r4, r5, r6, r7, pc}
10001572:	46c0      	nop			; (mov r8, r8)
10001574:	10001698 	.word	0x10001698

10001578 <NMI_Handler>:
10001578:	e7fe      	b.n	10001578 <NMI_Handler>
1000157a:	46c0      	nop			; (mov r8, r8)

1000157c <HardFault_Handler>:
1000157c:	e7fe      	b.n	1000157c <HardFault_Handler>
1000157e:	46c0      	nop			; (mov r8, r8)

10001580 <SVCall_Handler>:
10001580:	e7fe      	b.n	10001580 <SVCall_Handler>
10001582:	46c0      	nop			; (mov r8, r8)

10001584 <PendSV_Handler>:
10001584:	e7fe      	b.n	10001584 <PendSV_Handler>
10001586:	46c0      	nop			; (mov r8, r8)

10001588 <SysTick_Handler>:
10001588:	e7fe      	b.n	10001588 <SysTick_Handler>
1000158a:	46c0      	nop			; (mov r8, r8)

1000158c <SPI0_IRQHandler>:
1000158c:	e7fe      	b.n	1000158c <SPI0_IRQHandler>
1000158e:	46c0      	nop			; (mov r8, r8)

10001590 <SPI1_IRQHandler>:
10001590:	e7fe      	b.n	10001590 <SPI1_IRQHandler>
10001592:	46c0      	nop			; (mov r8, r8)

10001594 <UART0_IRQHandler>:
10001594:	e7fe      	b.n	10001594 <UART0_IRQHandler>
10001596:	46c0      	nop			; (mov r8, r8)

10001598 <UART1_IRQHandler>:
10001598:	e7fe      	b.n	10001598 <UART1_IRQHandler>
1000159a:	46c0      	nop			; (mov r8, r8)

1000159c <UART2_IRQHandler>:
1000159c:	e7fe      	b.n	1000159c <UART2_IRQHandler>
1000159e:	46c0      	nop			; (mov r8, r8)

100015a0 <Reserved1_IRQHandler>:
100015a0:	e7fe      	b.n	100015a0 <Reserved1_IRQHandler>
100015a2:	46c0      	nop			; (mov r8, r8)

100015a4 <SCT_IRQHandler>:
100015a4:	e7fe      	b.n	100015a4 <SCT_IRQHandler>
100015a6:	46c0      	nop			; (mov r8, r8)

100015a8 <MRT_IRQHandler>:
100015a8:	e7fe      	b.n	100015a8 <MRT_IRQHandler>
100015aa:	46c0      	nop			; (mov r8, r8)

100015ac <CMP_IRQHandler>:
100015ac:	e7fe      	b.n	100015ac <CMP_IRQHandler>
100015ae:	46c0      	nop			; (mov r8, r8)

100015b0 <WDT_IRQHandler>:
100015b0:	e7fe      	b.n	100015b0 <WDT_IRQHandler>
100015b2:	46c0      	nop			; (mov r8, r8)

100015b4 <BOD_IRQHandler>:
100015b4:	e7fe      	b.n	100015b4 <BOD_IRQHandler>
100015b6:	46c0      	nop			; (mov r8, r8)

100015b8 <WKT_IRQHandler>:
100015b8:	e7fe      	b.n	100015b8 <WKT_IRQHandler>
100015ba:	46c0      	nop			; (mov r8, r8)

100015bc <Reserved11_IRQHandler>:
100015bc:	e7fe      	b.n	100015bc <Reserved11_IRQHandler>
100015be:	46c0      	nop			; (mov r8, r8)

100015c0 <PININT0_IRQHandler>:
100015c0:	e7fe      	b.n	100015c0 <PININT0_IRQHandler>
100015c2:	46c0      	nop			; (mov r8, r8)

100015c4 <PININT1_IRQHandler>:
100015c4:	e7fe      	b.n	100015c4 <PININT1_IRQHandler>
100015c6:	46c0      	nop			; (mov r8, r8)

100015c8 <PININT2_IRQHandler>:
100015c8:	e7fe      	b.n	100015c8 <PININT2_IRQHandler>
100015ca:	46c0      	nop			; (mov r8, r8)

100015cc <PININT3_IRQHandler>:
100015cc:	e7fe      	b.n	100015cc <PININT3_IRQHandler>
100015ce:	46c0      	nop			; (mov r8, r8)

100015d0 <PININT4_IRQHandler>:
100015d0:	e7fe      	b.n	100015d0 <PININT4_IRQHandler>
100015d2:	46c0      	nop			; (mov r8, r8)

100015d4 <PININT5_IRQHandler>:
100015d4:	e7fe      	b.n	100015d4 <PININT5_IRQHandler>
100015d6:	46c0      	nop			; (mov r8, r8)

100015d8 <PININT6_IRQHandler>:
100015d8:	e7fe      	b.n	100015d8 <PININT6_IRQHandler>
100015da:	46c0      	nop			; (mov r8, r8)

100015dc <PININT7_IRQHandler>:
100015dc:	e7fe      	b.n	100015dc <PININT7_IRQHandler>
100015de:	46c0      	nop			; (mov r8, r8)

100015e0 <init>:
100015e0:	4806      	ldr	r0, [pc, #24]	; (100015fc <init+0x1c>)
100015e2:	4a07      	ldr	r2, [pc, #28]	; (10001600 <init+0x20>)
100015e4:	b500      	push	{lr}
100015e6:	1a12      	subs	r2, r2, r0
100015e8:	d002      	beq.n	100015f0 <init+0x10>
100015ea:	2100      	movs	r1, #0
100015ec:	f7ff ff9e 	bl	1000152c <memset>
100015f0:	4a04      	ldr	r2, [pc, #16]	; (10001604 <init+0x24>)
100015f2:	4b05      	ldr	r3, [pc, #20]	; (10001608 <init+0x28>)
100015f4:	609a      	str	r2, [r3, #8]
100015f6:	f000 f809 	bl	1000160c <main>
100015fa:	bd00      	pop	{pc}
100015fc:	10001664 	.word	0x10001664
10001600:	10001a3c 	.word	0x10001a3c
10001604:	10000000 	.word	0x10000000
10001608:	e000ed00 	.word	0xe000ed00

Disassembly of section .rodata:

10001644 <app_config::TIMER_PRESCALER_SHIFT-0x8>:
10001644:	00000006 	.word	0x00000006
10001648:	00000002 	.word	0x00000002

1000164c <app_config::TIMER_PRESCALER_SHIFT>:
1000164c:	3e000000 00000019 3e000000 00000019     ...>.......>....
1000165c:	3e000000 00000019                       ...>....
