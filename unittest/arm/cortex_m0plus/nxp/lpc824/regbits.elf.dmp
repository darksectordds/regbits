
regbits.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <INTERRUPT_VECTORS>:
10000000:	00 20 00 10 d1 00 00 10 9d 00 00 10 9f 00 00 10     . ..............
	...
1000002c:	a1 00 00 10 00 00 00 00 00 00 00 00 a3 00 00 10     ................
1000003c:	a5 00 00 10 a7 00 00 10 a9 00 00 10 00 00 00 00     ................
1000004c:	ab 00 00 10 ad 00 00 10 af 00 00 10 b1 00 00 10     ................
1000005c:	b3 00 00 10 b5 00 00 10 b7 00 00 10 b9 00 00 10     ................
1000006c:	bb 00 00 10 00 00 00 00 bd 00 00 10 bf 00 00 10     ................
1000007c:	c1 00 00 10 c3 00 00 10 c5 00 00 10 c7 00 00 10     ................
1000008c:	c9 00 00 10 cb 00 00 10 cd 00 00 10 cf 00 00 10     ................

1000009c <NMI_Handler>:
1000009c:	e7fe      	b.n	1000009c <NMI_Handler>

1000009e <HardFault_Handler>:
1000009e:	e7fe      	b.n	1000009e <HardFault_Handler>

100000a0 <SVCall_Handler>:
100000a0:	e7fe      	b.n	100000a0 <SVCall_Handler>

100000a2 <PendSV_Handler>:
100000a2:	e7fe      	b.n	100000a2 <PendSV_Handler>

100000a4 <SysTick_Handler>:
100000a4:	e7fe      	b.n	100000a4 <SysTick_Handler>

100000a6 <SPI0_IRQHandler>:
100000a6:	e7fe      	b.n	100000a6 <SPI0_IRQHandler>

100000a8 <SPI1_IRQHandler>:
100000a8:	e7fe      	b.n	100000a8 <SPI1_IRQHandler>

100000aa <UART0_IRQHandler>:
100000aa:	e7fe      	b.n	100000aa <UART0_IRQHandler>

100000ac <UART1_IRQHandler>:
100000ac:	e7fe      	b.n	100000ac <UART1_IRQHandler>

100000ae <UART2_IRQHandler>:
100000ae:	e7fe      	b.n	100000ae <UART2_IRQHandler>

100000b0 <Reserved1_IRQHandler>:
100000b0:	e7fe      	b.n	100000b0 <Reserved1_IRQHandler>

100000b2 <SCT_IRQHandler>:
100000b2:	e7fe      	b.n	100000b2 <SCT_IRQHandler>

100000b4 <MRT_IRQHandler>:
100000b4:	e7fe      	b.n	100000b4 <MRT_IRQHandler>

100000b6 <CMP_IRQHandler>:
100000b6:	e7fe      	b.n	100000b6 <CMP_IRQHandler>

100000b8 <WDT_IRQHandler>:
100000b8:	e7fe      	b.n	100000b8 <WDT_IRQHandler>

100000ba <BOD_IRQHandler>:
100000ba:	e7fe      	b.n	100000ba <BOD_IRQHandler>

100000bc <WKT_IRQHandler>:
100000bc:	e7fe      	b.n	100000bc <WKT_IRQHandler>

100000be <Reserved11_IRQHandler>:
100000be:	e7fe      	b.n	100000be <Reserved11_IRQHandler>

100000c0 <PININT0_IRQHandler>:
100000c0:	e7fe      	b.n	100000c0 <PININT0_IRQHandler>

100000c2 <PININT1_IRQHandler>:
100000c2:	e7fe      	b.n	100000c2 <PININT1_IRQHandler>

100000c4 <PININT2_IRQHandler>:
100000c4:	e7fe      	b.n	100000c4 <PININT2_IRQHandler>

100000c6 <PININT3_IRQHandler>:
100000c6:	e7fe      	b.n	100000c6 <PININT3_IRQHandler>

100000c8 <PININT4_IRQHandler>:
100000c8:	e7fe      	b.n	100000c8 <PININT4_IRQHandler>

100000ca <PININT5_IRQHandler>:
100000ca:	e7fe      	b.n	100000ca <PININT5_IRQHandler>

100000cc <PININT6_IRQHandler>:
100000cc:	e7fe      	b.n	100000cc <PININT6_IRQHandler>

100000ce <PININT7_IRQHandler>:
100000ce:	e7fe      	b.n	100000ce <PININT7_IRQHandler>

100000d0 <init>:
100000d0:	b500      	push	{lr}
100000d2:	4a08      	ldr	r2, [pc, #32]	; (100000f4 <init+0x24>)
100000d4:	4b08      	ldr	r3, [pc, #32]	; (100000f8 <init+0x28>)
100000d6:	1ad2      	subs	r2, r2, r3
100000d8:	d005      	beq.n	100000e6 <init+0x16>
100000da:	189a      	adds	r2, r3, r2
100000dc:	2100      	movs	r1, #0
100000de:	7019      	strb	r1, [r3, #0]
100000e0:	3301      	adds	r3, #1
100000e2:	4293      	cmp	r3, r2
100000e4:	d1fb      	bne.n	100000de <init+0xe>
100000e6:	4a05      	ldr	r2, [pc, #20]	; (100000fc <init+0x2c>)
100000e8:	4b05      	ldr	r3, [pc, #20]	; (10000100 <init+0x30>)
100000ea:	609a      	str	r2, [r3, #8]
100000ec:	f000 fd06 	bl	10000afc <main>
100000f0:	bd00      	pop	{pc}
100000f2:	46c0      	nop			; (mov r8, r8)
100000f4:	10000e24 	.word	0x10000e24
100000f8:	10000b3c 	.word	0x10000b3c
100000fc:	10000000 	.word	0x10000000
10000100:	e000ed00 	.word	0xe000ed00

10000104 <zero()>:
10000104:	2300      	movs	r3, #0
10000106:	4a04      	ldr	r2, [pc, #16]	; (10000118 <zero()+0x14>)
10000108:	6053      	str	r3, [r2, #4]
1000010a:	4a04      	ldr	r2, [pc, #16]	; (1000011c <zero()+0x18>)
1000010c:	6053      	str	r3, [r2, #4]
1000010e:	4a04      	ldr	r2, [pc, #16]	; (10000120 <zero()+0x1c>)
10000110:	70d3      	strb	r3, [r2, #3]
10000112:	21a0      	movs	r1, #160	; 0xa0
10000114:	5053      	str	r3, [r2, r1]
10000116:	4770      	bx	lr
10000118:	100016c0 	.word	0x100016c0
1000011c:	10001620 	.word	0x10001620
10000120:	10001500 	.word	0x10001500

10000124 <set_singl_bits()>:
10000124:	4b04      	ldr	r3, [pc, #16]	; (10000138 <set_singl_bits()+0x14>)
10000126:	6859      	ldr	r1, [r3, #4]
10000128:	2040      	movs	r0, #64	; 0x40
1000012a:	4301      	orrs	r1, r0
1000012c:	6059      	str	r1, [r3, #4]
1000012e:	685a      	ldr	r2, [r3, #4]
10000130:	4302      	orrs	r2, r0
10000132:	605a      	str	r2, [r3, #4]
10000134:	4770      	bx	lr
10000136:	46c0      	nop			; (mov r8, r8)
10000138:	100016c0 	.word	0x100016c0

1000013c <clr_singl_bits()>:
1000013c:	4b04      	ldr	r3, [pc, #16]	; (10000150 <clr_singl_bits()+0x14>)
1000013e:	685a      	ldr	r2, [r3, #4]
10000140:	2140      	movs	r1, #64	; 0x40
10000142:	438a      	bics	r2, r1
10000144:	605a      	str	r2, [r3, #4]
10000146:	685a      	ldr	r2, [r3, #4]
10000148:	438a      	bics	r2, r1
1000014a:	605a      	str	r2, [r3, #4]
1000014c:	4770      	bx	lr
1000014e:	46c0      	nop			; (mov r8, r8)
10000150:	100016c0 	.word	0x100016c0

10000154 <set_singl_mskd()>:
10000154:	4b04      	ldr	r3, [pc, #16]	; (10000168 <set_singl_mskd()+0x14>)
10000156:	6859      	ldr	r1, [r3, #4]
10000158:	2002      	movs	r0, #2
1000015a:	4301      	orrs	r1, r0
1000015c:	6059      	str	r1, [r3, #4]
1000015e:	685a      	ldr	r2, [r3, #4]
10000160:	4302      	orrs	r2, r0
10000162:	605a      	str	r2, [r3, #4]
10000164:	4770      	bx	lr
10000166:	46c0      	nop			; (mov r8, r8)
10000168:	100016c0 	.word	0x100016c0

1000016c <clr_singl_mskd()>:
1000016c:	4b04      	ldr	r3, [pc, #16]	; (10000180 <clr_singl_mskd()+0x14>)
1000016e:	685a      	ldr	r2, [r3, #4]
10000170:	2102      	movs	r1, #2
10000172:	438a      	bics	r2, r1
10000174:	605a      	str	r2, [r3, #4]
10000176:	685a      	ldr	r2, [r3, #4]
10000178:	438a      	bics	r2, r1
1000017a:	605a      	str	r2, [r3, #4]
1000017c:	4770      	bx	lr
1000017e:	46c0      	nop			; (mov r8, r8)
10000180:	100016c0 	.word	0x100016c0

10000184 <equ_singl_bits()>:
10000184:	4b02      	ldr	r3, [pc, #8]	; (10000190 <equ_singl_bits()+0xc>)
10000186:	2240      	movs	r2, #64	; 0x40
10000188:	605a      	str	r2, [r3, #4]
1000018a:	605a      	str	r2, [r3, #4]
1000018c:	4770      	bx	lr
1000018e:	46c0      	nop			; (mov r8, r8)
10000190:	100016c0 	.word	0x100016c0

10000194 <equ_singl_mskd()>:
10000194:	4b02      	ldr	r3, [pc, #8]	; (100001a0 <equ_singl_mskd()+0xc>)
10000196:	2202      	movs	r2, #2
10000198:	605a      	str	r2, [r3, #4]
1000019a:	605a      	str	r2, [r3, #4]
1000019c:	4770      	bx	lr
1000019e:	46c0      	nop			; (mov r8, r8)
100001a0:	100016c0 	.word	0x100016c0

100001a4 <flp_singl_bits()>:
100001a4:	4b05      	ldr	r3, [pc, #20]	; (100001bc <flp_singl_bits()+0x18>)
100001a6:	685a      	ldr	r2, [r3, #4]
100001a8:	2140      	movs	r1, #64	; 0x40
100001aa:	404a      	eors	r2, r1
100001ac:	605a      	str	r2, [r3, #4]
100001ae:	685a      	ldr	r2, [r3, #4]
100001b0:	404a      	eors	r2, r1
100001b2:	605a      	str	r2, [r3, #4]
100001b4:	685a      	ldr	r2, [r3, #4]
100001b6:	404a      	eors	r2, r1
100001b8:	605a      	str	r2, [r3, #4]
100001ba:	4770      	bx	lr
100001bc:	100016c0 	.word	0x100016c0

100001c0 <flp_singl_mskd()>:
100001c0:	4b05      	ldr	r3, [pc, #20]	; (100001d8 <flp_singl_mskd()+0x18>)
100001c2:	685a      	ldr	r2, [r3, #4]
100001c4:	2102      	movs	r1, #2
100001c6:	404a      	eors	r2, r1
100001c8:	605a      	str	r2, [r3, #4]
100001ca:	685a      	ldr	r2, [r3, #4]
100001cc:	404a      	eors	r2, r1
100001ce:	605a      	str	r2, [r3, #4]
100001d0:	685a      	ldr	r2, [r3, #4]
100001d2:	404a      	eors	r2, r1
100001d4:	605a      	str	r2, [r3, #4]
100001d6:	4770      	bx	lr
100001d8:	100016c0 	.word	0x100016c0

100001dc <ins_singl_mskd()>:
100001dc:	b510      	push	{r4, lr}
100001de:	4906      	ldr	r1, [pc, #24]	; (100001f8 <ins_singl_mskd()+0x1c>)
100001e0:	684a      	ldr	r2, [r1, #4]
100001e2:	2406      	movs	r4, #6
100001e4:	43a2      	bics	r2, r4
100001e6:	2004      	movs	r0, #4
100001e8:	4302      	orrs	r2, r0
100001ea:	604a      	str	r2, [r1, #4]
100001ec:	684b      	ldr	r3, [r1, #4]
100001ee:	43a3      	bics	r3, r4
100001f0:	4303      	orrs	r3, r0
100001f2:	604b      	str	r3, [r1, #4]
100001f4:	bd10      	pop	{r4, pc}
100001f6:	46c0      	nop			; (mov r8, r8)
100001f8:	100016c0 	.word	0x100016c0

100001fc <set_multi_bits()>:
100001fc:	4b04      	ldr	r3, [pc, #16]	; (10000210 <set_multi_bits()+0x14>)
100001fe:	6859      	ldr	r1, [r3, #4]
10000200:	2021      	movs	r0, #33	; 0x21
10000202:	4301      	orrs	r1, r0
10000204:	6059      	str	r1, [r3, #4]
10000206:	685a      	ldr	r2, [r3, #4]
10000208:	4302      	orrs	r2, r0
1000020a:	605a      	str	r2, [r3, #4]
1000020c:	4770      	bx	lr
1000020e:	46c0      	nop			; (mov r8, r8)
10000210:	100016c0 	.word	0x100016c0

10000214 <ins_multi_mskd()>:
10000214:	4a06      	ldr	r2, [pc, #24]	; (10000230 <ins_multi_mskd()+0x1c>)
10000216:	6853      	ldr	r3, [r2, #4]
10000218:	4806      	ldr	r0, [pc, #24]	; (10000234 <ins_multi_mskd()+0x20>)
1000021a:	4003      	ands	r3, r0
1000021c:	21c1      	movs	r1, #193	; 0xc1
1000021e:	0049      	lsls	r1, r1, #1
10000220:	430b      	orrs	r3, r1
10000222:	6053      	str	r3, [r2, #4]
10000224:	6853      	ldr	r3, [r2, #4]
10000226:	4003      	ands	r3, r0
10000228:	4319      	orrs	r1, r3
1000022a:	6051      	str	r1, [r2, #4]
1000022c:	4770      	bx	lr
1000022e:	46c0      	nop			; (mov r8, r8)
10000230:	100016c0 	.word	0x100016c0
10000234:	fffff079 	.word	0xfffff079

10000238 <equ_multi_bits()>:
10000238:	4b02      	ldr	r3, [pc, #8]	; (10000244 <equ_multi_bits()+0xc>)
1000023a:	2260      	movs	r2, #96	; 0x60
1000023c:	605a      	str	r2, [r3, #4]
1000023e:	605a      	str	r2, [r3, #4]
10000240:	4770      	bx	lr
10000242:	46c0      	nop			; (mov r8, r8)
10000244:	100016c0 	.word	0x100016c0

10000248 <equ_multi_mskd()>:
10000248:	4b02      	ldr	r3, [pc, #8]	; (10000254 <equ_multi_mskd()+0xc>)
1000024a:	22c2      	movs	r2, #194	; 0xc2
1000024c:	0092      	lsls	r2, r2, #2
1000024e:	605a      	str	r2, [r3, #4]
10000250:	605a      	str	r2, [r3, #4]
10000252:	4770      	bx	lr
10000254:	100016c0 	.word	0x100016c0

10000258 <equ_bits_mskd()>:
10000258:	4b02      	ldr	r3, [pc, #8]	; (10000264 <equ_bits_mskd()+0xc>)
1000025a:	2222      	movs	r2, #34	; 0x22
1000025c:	605a      	str	r2, [r3, #4]
1000025e:	605a      	str	r2, [r3, #4]
10000260:	4770      	bx	lr
10000262:	46c0      	nop			; (mov r8, r8)
10000264:	100016c0 	.word	0x100016c0

10000268 <equ_mskd_bits()>:
10000268:	4b02      	ldr	r3, [pc, #8]	; (10000274 <equ_mskd_bits()+0xc>)
1000026a:	2244      	movs	r2, #68	; 0x44
1000026c:	605a      	str	r2, [r3, #4]
1000026e:	605a      	str	r2, [r3, #4]
10000270:	4770      	bx	lr
10000272:	46c0      	nop			; (mov r8, r8)
10000274:	100016c0 	.word	0x100016c0

10000278 <equ_bits_var()>:
10000278:	4b02      	ldr	r3, [pc, #8]	; (10000284 <equ_bits_var()+0xc>)
1000027a:	2240      	movs	r2, #64	; 0x40
1000027c:	605a      	str	r2, [r3, #4]
1000027e:	3a3f      	subs	r2, #63	; 0x3f
10000280:	605a      	str	r2, [r3, #4]
10000282:	4770      	bx	lr
10000284:	100016c0 	.word	0x100016c0

10000288 <equ_mskd_var()>:
10000288:	4b03      	ldr	r3, [pc, #12]	; (10000298 <equ_mskd_var()+0x10>)
1000028a:	2202      	movs	r2, #2
1000028c:	605a      	str	r2, [r3, #4]
1000028e:	327f      	adds	r2, #127	; 0x7f
10000290:	32ff      	adds	r2, #255	; 0xff
10000292:	605a      	str	r2, [r3, #4]
10000294:	4770      	bx	lr
10000296:	46c0      	nop			; (mov r8, r8)
10000298:	100016c0 	.word	0x100016c0

1000029c <cmp_zero()>:
1000029c:	4b0d      	ldr	r3, [pc, #52]	; (100002d4 <cmp_zero()+0x38>)
1000029e:	2200      	movs	r2, #0
100002a0:	605a      	str	r2, [r3, #4]
100002a2:	685a      	ldr	r2, [r3, #4]
100002a4:	685b      	ldr	r3, [r3, #4]
100002a6:	2b00      	cmp	r3, #0
100002a8:	d10b      	bne.n	100002c2 <cmp_zero()+0x26>
100002aa:	4b0b      	ldr	r3, [pc, #44]	; (100002d8 <cmp_zero()+0x3c>)
100002ac:	22ac      	movs	r2, #172	; 0xac
100002ae:	0592      	lsls	r2, r2, #22
100002b0:	605a      	str	r2, [r3, #4]
100002b2:	4b08      	ldr	r3, [pc, #32]	; (100002d4 <cmp_zero()+0x38>)
100002b4:	685b      	ldr	r3, [r3, #4]
100002b6:	2b00      	cmp	r3, #0
100002b8:	d008      	beq.n	100002cc <cmp_zero()+0x30>
100002ba:	4b06      	ldr	r3, [pc, #24]	; (100002d4 <cmp_zero()+0x38>)
100002bc:	2204      	movs	r2, #4
100002be:	605a      	str	r2, [r3, #4]
100002c0:	4770      	bx	lr
100002c2:	4b05      	ldr	r3, [pc, #20]	; (100002d8 <cmp_zero()+0x3c>)
100002c4:	2288      	movs	r2, #136	; 0x88
100002c6:	0552      	lsls	r2, r2, #21
100002c8:	605a      	str	r2, [r3, #4]
100002ca:	e7f2      	b.n	100002b2 <cmp_zero()+0x16>
100002cc:	4b01      	ldr	r3, [pc, #4]	; (100002d4 <cmp_zero()+0x38>)
100002ce:	2220      	movs	r2, #32
100002d0:	605a      	str	r2, [r3, #4]
100002d2:	e7f5      	b.n	100002c0 <cmp_zero()+0x24>
100002d4:	100016c0 	.word	0x100016c0
100002d8:	10001620 	.word	0x10001620

100002dc <cmp_bits()>:
100002dc:	4a0d      	ldr	r2, [pc, #52]	; (10000314 <cmp_bits()+0x38>)
100002de:	2340      	movs	r3, #64	; 0x40
100002e0:	6053      	str	r3, [r2, #4]
100002e2:	6852      	ldr	r2, [r2, #4]
100002e4:	4213      	tst	r3, r2
100002e6:	d00b      	beq.n	10000300 <cmp_bits()+0x24>
100002e8:	4b0b      	ldr	r3, [pc, #44]	; (10000318 <cmp_bits()+0x3c>)
100002ea:	22b0      	movs	r2, #176	; 0xb0
100002ec:	0512      	lsls	r2, r2, #20
100002ee:	605a      	str	r2, [r3, #4]
100002f0:	4b08      	ldr	r3, [pc, #32]	; (10000314 <cmp_bits()+0x38>)
100002f2:	685b      	ldr	r3, [r3, #4]
100002f4:	065b      	lsls	r3, r3, #25
100002f6:	d408      	bmi.n	1000030a <cmp_bits()+0x2e>
100002f8:	4b06      	ldr	r3, [pc, #24]	; (10000314 <cmp_bits()+0x38>)
100002fa:	2202      	movs	r2, #2
100002fc:	605a      	str	r2, [r3, #4]
100002fe:	4770      	bx	lr
10000300:	4b05      	ldr	r3, [pc, #20]	; (10000318 <cmp_bits()+0x3c>)
10000302:	2286      	movs	r2, #134	; 0x86
10000304:	05d2      	lsls	r2, r2, #23
10000306:	605a      	str	r2, [r3, #4]
10000308:	e7f2      	b.n	100002f0 <cmp_bits()+0x14>
1000030a:	4b02      	ldr	r3, [pc, #8]	; (10000314 <cmp_bits()+0x38>)
1000030c:	2220      	movs	r2, #32
1000030e:	605a      	str	r2, [r3, #4]
10000310:	e7f5      	b.n	100002fe <cmp_bits()+0x22>
10000312:	46c0      	nop			; (mov r8, r8)
10000314:	100016c0 	.word	0x100016c0
10000318:	10001620 	.word	0x10001620

1000031c <cmp_mskd()>:
1000031c:	4b19      	ldr	r3, [pc, #100]	; (10000384 <cmp_mskd()+0x68>)
1000031e:	22e8      	movs	r2, #232	; 0xe8
10000320:	0252      	lsls	r2, r2, #9
10000322:	605a      	str	r2, [r3, #4]
10000324:	685b      	ldr	r3, [r3, #4]
10000326:	22f8      	movs	r2, #248	; 0xf8
10000328:	0252      	lsls	r2, r2, #9
1000032a:	4013      	ands	r3, r2
1000032c:	2288      	movs	r2, #136	; 0x88
1000032e:	0252      	lsls	r2, r2, #9
10000330:	4293      	cmp	r3, r2
10000332:	d018      	beq.n	10000366 <cmp_mskd()+0x4a>
10000334:	4914      	ldr	r1, [pc, #80]	; (10000388 <cmp_mskd()+0x6c>)
10000336:	684b      	ldr	r3, [r1, #4]
10000338:	021b      	lsls	r3, r3, #8
1000033a:	0a1b      	lsrs	r3, r3, #8
1000033c:	22ad      	movs	r2, #173	; 0xad
1000033e:	0612      	lsls	r2, r2, #24
10000340:	4313      	orrs	r3, r2
10000342:	604b      	str	r3, [r1, #4]
10000344:	4b0f      	ldr	r3, [pc, #60]	; (10000384 <cmp_mskd()+0x68>)
10000346:	685b      	ldr	r3, [r3, #4]
10000348:	22f8      	movs	r2, #248	; 0xf8
1000034a:	0252      	lsls	r2, r2, #9
1000034c:	4013      	ands	r3, r2
1000034e:	2288      	movs	r2, #136	; 0x88
10000350:	0252      	lsls	r2, r2, #9
10000352:	4293      	cmp	r3, r2
10000354:	d010      	beq.n	10000378 <cmp_mskd()+0x5c>
10000356:	4a0b      	ldr	r2, [pc, #44]	; (10000384 <cmp_mskd()+0x68>)
10000358:	6853      	ldr	r3, [r2, #4]
1000035a:	2106      	movs	r1, #6
1000035c:	438b      	bics	r3, r1
1000035e:	3902      	subs	r1, #2
10000360:	430b      	orrs	r3, r1
10000362:	6053      	str	r3, [r2, #4]
10000364:	4770      	bx	lr
10000366:	4908      	ldr	r1, [pc, #32]	; (10000388 <cmp_mskd()+0x6c>)
10000368:	684b      	ldr	r3, [r1, #4]
1000036a:	021b      	lsls	r3, r3, #8
1000036c:	0a1b      	lsrs	r3, r3, #8
1000036e:	22e2      	movs	r2, #226	; 0xe2
10000370:	05d2      	lsls	r2, r2, #23
10000372:	4313      	orrs	r3, r2
10000374:	604b      	str	r3, [r1, #4]
10000376:	e7e5      	b.n	10000344 <cmp_mskd()+0x28>
10000378:	4a02      	ldr	r2, [pc, #8]	; (10000384 <cmp_mskd()+0x68>)
1000037a:	6853      	ldr	r3, [r2, #4]
1000037c:	2140      	movs	r1, #64	; 0x40
1000037e:	430b      	orrs	r3, r1
10000380:	6053      	str	r3, [r2, #4]
10000382:	e7ef      	b.n	10000364 <cmp_mskd()+0x48>
10000384:	100016c0 	.word	0x100016c0
10000388:	10001620 	.word	0x10001620

1000038c <cmp_reg()>:
1000038c:	4b0d      	ldr	r3, [pc, #52]	; (100003c4 <cmp_reg()+0x38>)
1000038e:	2222      	movs	r2, #34	; 0x22
10000390:	605a      	str	r2, [r3, #4]
10000392:	685b      	ldr	r3, [r3, #4]
10000394:	2b22      	cmp	r3, #34	; 0x22
10000396:	d00b      	beq.n	100003b0 <cmp_reg()+0x24>
10000398:	4b0b      	ldr	r3, [pc, #44]	; (100003c8 <cmp_reg()+0x3c>)
1000039a:	22f1      	movs	r2, #241	; 0xf1
1000039c:	0612      	lsls	r2, r2, #24
1000039e:	605a      	str	r2, [r3, #4]
100003a0:	4b08      	ldr	r3, [pc, #32]	; (100003c4 <cmp_reg()+0x38>)
100003a2:	685b      	ldr	r3, [r3, #4]
100003a4:	2b22      	cmp	r3, #34	; 0x22
100003a6:	d008      	beq.n	100003ba <cmp_reg()+0x2e>
100003a8:	4b06      	ldr	r3, [pc, #24]	; (100003c4 <cmp_reg()+0x38>)
100003aa:	2202      	movs	r2, #2
100003ac:	605a      	str	r2, [r3, #4]
100003ae:	4770      	bx	lr
100003b0:	4b05      	ldr	r3, [pc, #20]	; (100003c8 <cmp_reg()+0x3c>)
100003b2:	22df      	movs	r2, #223	; 0xdf
100003b4:	0612      	lsls	r2, r2, #24
100003b6:	605a      	str	r2, [r3, #4]
100003b8:	e7f2      	b.n	100003a0 <cmp_reg()+0x14>
100003ba:	4b02      	ldr	r3, [pc, #8]	; (100003c4 <cmp_reg()+0x38>)
100003bc:	2220      	movs	r2, #32
100003be:	605a      	str	r2, [r3, #4]
100003c0:	e7f5      	b.n	100003ae <cmp_reg()+0x22>
100003c2:	46c0      	nop			; (mov r8, r8)
100003c4:	100016c0 	.word	0x100016c0
100003c8:	10001620 	.word	0x10001620

100003cc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
100003cc:	4b03      	ldr	r3, [pc, #12]	; (100003dc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0x10>)
100003ce:	685a      	ldr	r2, [r3, #4]
100003d0:	4302      	orrs	r2, r0
100003d2:	605a      	str	r2, [r3, #4]
100003d4:	685a      	ldr	r2, [r3, #4]
100003d6:	4310      	orrs	r0, r2
100003d8:	6058      	str	r0, [r3, #4]
100003da:	4770      	bx	lr
100003dc:	100016c0 	.word	0x100016c0

100003e0 <call_bits_val()>:
100003e0:	b500      	push	{lr}
100003e2:	2040      	movs	r0, #64	; 0x40
100003e4:	f7ff fff2 	bl	100003cc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100003e8:	2040      	movs	r0, #64	; 0x40
100003ea:	f7ff ffef 	bl	100003cc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
100003ee:	bd00      	pop	{pc}

100003f0 <constexpr_bits_array()>:
100003f0:	4b03      	ldr	r3, [pc, #12]	; (10000400 <constexpr_bits_array()+0x10>)
100003f2:	2206      	movs	r2, #6
100003f4:	70da      	strb	r2, [r3, #3]
100003f6:	329a      	adds	r2, #154	; 0x9a
100003f8:	2180      	movs	r1, #128	; 0x80
100003fa:	0189      	lsls	r1, r1, #6
100003fc:	5099      	str	r1, [r3, r2]
100003fe:	4770      	bx	lr
10000400:	10001500 	.word	0x10001500

10000404 <runtime_bits_array()>:
10000404:	b081      	sub	sp, #4
10000406:	2303      	movs	r3, #3
10000408:	9300      	str	r3, [sp, #0]
1000040a:	9b00      	ldr	r3, [sp, #0]
1000040c:	4a05      	ldr	r2, [pc, #20]	; (10000424 <runtime_bits_array()+0x20>)
1000040e:	2121      	movs	r1, #33	; 0x21
10000410:	54d1      	strb	r1, [r2, r3]
10000412:	2307      	movs	r3, #7
10000414:	9300      	str	r3, [sp, #0]
10000416:	9900      	ldr	r1, [sp, #0]
10000418:	3b06      	subs	r3, #6
1000041a:	408b      	lsls	r3, r1
1000041c:	21a0      	movs	r1, #160	; 0xa0
1000041e:	5053      	str	r3, [r2, r1]
10000420:	b001      	add	sp, #4
10000422:	4770      	bx	lr
10000424:	10001500 	.word	0x10001500

10000428 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
10000428:	4b04      	ldr	r3, [pc, #16]	; (1000043c <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0x14>)
1000042a:	685a      	ldr	r2, [r3, #4]
1000042c:	6801      	ldr	r1, [r0, #0]
1000042e:	430a      	orrs	r2, r1
10000430:	605a      	str	r2, [r3, #4]
10000432:	685a      	ldr	r2, [r3, #4]
10000434:	6801      	ldr	r1, [r0, #0]
10000436:	430a      	orrs	r2, r1
10000438:	605a      	str	r2, [r3, #4]
1000043a:	4770      	bx	lr
1000043c:	100016c0 	.word	0x100016c0

10000440 <call_bits_ref()>:
10000440:	b510      	push	{r4, lr}
10000442:	b082      	sub	sp, #8
10000444:	2401      	movs	r4, #1
10000446:	9400      	str	r4, [sp, #0]
10000448:	4668      	mov	r0, sp
1000044a:	f7ff ffed 	bl	10000428 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
1000044e:	9401      	str	r4, [sp, #4]
10000450:	a801      	add	r0, sp, #4
10000452:	f7ff ffe9 	bl	10000428 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
10000456:	b002      	add	sp, #8
10000458:	bd10      	pop	{r4, pc}

1000045a <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
1000045a:	4a05      	ldr	r2, [pc, #20]	; (10000470 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x16>)
1000045c:	6853      	ldr	r3, [r2, #4]
1000045e:	43c0      	mvns	r0, r0
10000460:	4003      	ands	r3, r0
10000462:	430b      	orrs	r3, r1
10000464:	6053      	str	r3, [r2, #4]
10000466:	6853      	ldr	r3, [r2, #4]
10000468:	4018      	ands	r0, r3
1000046a:	4308      	orrs	r0, r1
1000046c:	6050      	str	r0, [r2, #4]
1000046e:	4770      	bx	lr
10000470:	100016c0 	.word	0x100016c0

10000474 <call_mskd_val()>:
10000474:	b500      	push	{lr}
10000476:	2006      	movs	r0, #6
10000478:	2102      	movs	r1, #2
1000047a:	f7ff ffee 	bl	1000045a <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
1000047e:	2006      	movs	r0, #6
10000480:	2102      	movs	r1, #2
10000482:	f7ff ffea 	bl	1000045a <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
10000486:	bd00      	pop	{pc}

10000488 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
10000488:	4a06      	ldr	r2, [pc, #24]	; (100004a4 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x1c>)
1000048a:	6853      	ldr	r3, [r2, #4]
1000048c:	6801      	ldr	r1, [r0, #0]
1000048e:	438b      	bics	r3, r1
10000490:	6841      	ldr	r1, [r0, #4]
10000492:	430b      	orrs	r3, r1
10000494:	6053      	str	r3, [r2, #4]
10000496:	6853      	ldr	r3, [r2, #4]
10000498:	6801      	ldr	r1, [r0, #0]
1000049a:	438b      	bics	r3, r1
1000049c:	6841      	ldr	r1, [r0, #4]
1000049e:	430b      	orrs	r3, r1
100004a0:	6053      	str	r3, [r2, #4]
100004a2:	4770      	bx	lr
100004a4:	100016c0 	.word	0x100016c0

100004a8 <call_mskd_ref()>:
100004a8:	b510      	push	{r4, lr}
100004aa:	b084      	sub	sp, #16
100004ac:	2406      	movs	r4, #6
100004ae:	9400      	str	r4, [sp, #0]
100004b0:	2302      	movs	r3, #2
100004b2:	9301      	str	r3, [sp, #4]
100004b4:	4668      	mov	r0, sp
100004b6:	f7ff ffe7 	bl	10000488 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
100004ba:	9402      	str	r4, [sp, #8]
100004bc:	2304      	movs	r3, #4
100004be:	9303      	str	r3, [sp, #12]
100004c0:	a802      	add	r0, sp, #8
100004c2:	f7ff ffe1 	bl	10000488 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
100004c6:	4a03      	ldr	r2, [pc, #12]	; (100004d4 <call_mskd_ref()+0x2c>)
100004c8:	6853      	ldr	r3, [r2, #4]
100004ca:	2140      	movs	r1, #64	; 0x40
100004cc:	438b      	bics	r3, r1
100004ce:	6053      	str	r3, [r2, #4]
100004d0:	b004      	add	sp, #16
100004d2:	bd10      	pop	{r4, pc}
100004d4:	100016c0 	.word	0x100016c0

100004d8 <periph_reg_bits_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
100004d8:	b530      	push	{r4, r5, lr}
100004da:	4b07      	ldr	r3, [pc, #28]	; (100004f8 <periph_reg_bits_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)+0x20>)
100004dc:	685c      	ldr	r4, [r3, #4]
100004de:	2540      	movs	r5, #64	; 0x40
100004e0:	432c      	orrs	r4, r5
100004e2:	605c      	str	r4, [r3, #4]
100004e4:	6843      	ldr	r3, [r0, #4]
100004e6:	432b      	orrs	r3, r5
100004e8:	6043      	str	r3, [r0, #4]
100004ea:	6843      	ldr	r3, [r0, #4]
100004ec:	4313      	orrs	r3, r2
100004ee:	6043      	str	r3, [r0, #4]
100004f0:	680b      	ldr	r3, [r1, #0]
100004f2:	431a      	orrs	r2, r3
100004f4:	600a      	str	r2, [r1, #0]
100004f6:	bd30      	pop	{r4, r5, pc}
100004f8:	100016c0 	.word	0x100016c0

100004fc <call_periph_reg_bits_val()>:
100004fc:	b500      	push	{lr}
100004fe:	2240      	movs	r2, #64	; 0x40
10000500:	4902      	ldr	r1, [pc, #8]	; (1000050c <call_periph_reg_bits_val()+0x10>)
10000502:	4803      	ldr	r0, [pc, #12]	; (10000510 <call_periph_reg_bits_val()+0x14>)
10000504:	f7ff ffe8 	bl	100004d8 <periph_reg_bits_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
10000508:	bd00      	pop	{pc}
1000050a:	46c0      	nop			; (mov r8, r8)
1000050c:	100016c4 	.word	0x100016c4
10000510:	100016c0 	.word	0x100016c0

10000514 <periph_reg_bits_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
10000514:	b530      	push	{r4, r5, lr}
10000516:	4b08      	ldr	r3, [pc, #32]	; (10000538 <periph_reg_bits_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0x24>)
10000518:	685c      	ldr	r4, [r3, #4]
1000051a:	2540      	movs	r5, #64	; 0x40
1000051c:	432c      	orrs	r4, r5
1000051e:	605c      	str	r4, [r3, #4]
10000520:	6843      	ldr	r3, [r0, #4]
10000522:	432b      	orrs	r3, r5
10000524:	6043      	str	r3, [r0, #4]
10000526:	6843      	ldr	r3, [r0, #4]
10000528:	6814      	ldr	r4, [r2, #0]
1000052a:	4323      	orrs	r3, r4
1000052c:	6043      	str	r3, [r0, #4]
1000052e:	680b      	ldr	r3, [r1, #0]
10000530:	6812      	ldr	r2, [r2, #0]
10000532:	4313      	orrs	r3, r2
10000534:	600b      	str	r3, [r1, #0]
10000536:	bd30      	pop	{r4, r5, pc}
10000538:	100016c0 	.word	0x100016c0

1000053c <call_periph_reg_bits_ref()>:
1000053c:	b500      	push	{lr}
1000053e:	b081      	sub	sp, #4
10000540:	2340      	movs	r3, #64	; 0x40
10000542:	9300      	str	r3, [sp, #0]
10000544:	466a      	mov	r2, sp
10000546:	4903      	ldr	r1, [pc, #12]	; (10000554 <call_periph_reg_bits_ref()+0x18>)
10000548:	4803      	ldr	r0, [pc, #12]	; (10000558 <call_periph_reg_bits_ref()+0x1c>)
1000054a:	f7ff ffe3 	bl	10000514 <periph_reg_bits_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
1000054e:	b001      	add	sp, #4
10000550:	bd00      	pop	{pc}
10000552:	46c0      	nop			; (mov r8, r8)
10000554:	100016c4 	.word	0x100016c4
10000558:	100016c0 	.word	0x100016c0

1000055c <periph_reg_mskd_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
1000055c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000055e:	4c0a      	ldr	r4, [pc, #40]	; (10000588 <periph_reg_mskd_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x2c>)
10000560:	6865      	ldr	r5, [r4, #4]
10000562:	2706      	movs	r7, #6
10000564:	43bd      	bics	r5, r7
10000566:	2602      	movs	r6, #2
10000568:	4335      	orrs	r5, r6
1000056a:	6065      	str	r5, [r4, #4]
1000056c:	6844      	ldr	r4, [r0, #4]
1000056e:	43bc      	bics	r4, r7
10000570:	4334      	orrs	r4, r6
10000572:	6044      	str	r4, [r0, #4]
10000574:	6844      	ldr	r4, [r0, #4]
10000576:	43d2      	mvns	r2, r2
10000578:	4014      	ands	r4, r2
1000057a:	431c      	orrs	r4, r3
1000057c:	6044      	str	r4, [r0, #4]
1000057e:	6808      	ldr	r0, [r1, #0]
10000580:	4002      	ands	r2, r0
10000582:	431a      	orrs	r2, r3
10000584:	600a      	str	r2, [r1, #0]
10000586:	bdf0      	pop	{r4, r5, r6, r7, pc}
10000588:	100016c0 	.word	0x100016c0

1000058c <call_periph_reg_mskd_val()>:
1000058c:	b500      	push	{lr}
1000058e:	2206      	movs	r2, #6
10000590:	2302      	movs	r3, #2
10000592:	4902      	ldr	r1, [pc, #8]	; (1000059c <call_periph_reg_mskd_val()+0x10>)
10000594:	4802      	ldr	r0, [pc, #8]	; (100005a0 <call_periph_reg_mskd_val()+0x14>)
10000596:	f7ff ffe1 	bl	1000055c <periph_reg_mskd_val(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
1000059a:	bd00      	pop	{pc}
1000059c:	100016c4 	.word	0x100016c4
100005a0:	100016c0 	.word	0x100016c0

100005a4 <periph_reg_mskd_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
100005a4:	b570      	push	{r4, r5, r6, lr}
100005a6:	4b0c      	ldr	r3, [pc, #48]	; (100005d8 <periph_reg_mskd_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x34>)
100005a8:	685c      	ldr	r4, [r3, #4]
100005aa:	2606      	movs	r6, #6
100005ac:	43b4      	bics	r4, r6
100005ae:	2504      	movs	r5, #4
100005b0:	432c      	orrs	r4, r5
100005b2:	605c      	str	r4, [r3, #4]
100005b4:	6843      	ldr	r3, [r0, #4]
100005b6:	43b3      	bics	r3, r6
100005b8:	432b      	orrs	r3, r5
100005ba:	6043      	str	r3, [r0, #4]
100005bc:	6843      	ldr	r3, [r0, #4]
100005be:	6814      	ldr	r4, [r2, #0]
100005c0:	43a3      	bics	r3, r4
100005c2:	6854      	ldr	r4, [r2, #4]
100005c4:	4323      	orrs	r3, r4
100005c6:	6043      	str	r3, [r0, #4]
100005c8:	680b      	ldr	r3, [r1, #0]
100005ca:	6810      	ldr	r0, [r2, #0]
100005cc:	4383      	bics	r3, r0
100005ce:	6852      	ldr	r2, [r2, #4]
100005d0:	4313      	orrs	r3, r2
100005d2:	600b      	str	r3, [r1, #0]
100005d4:	bd70      	pop	{r4, r5, r6, pc}
100005d6:	46c0      	nop			; (mov r8, r8)
100005d8:	100016c0 	.word	0x100016c0

100005dc <call_periph_reg_mskd_ref()>:
100005dc:	b500      	push	{lr}
100005de:	b082      	sub	sp, #8
100005e0:	2306      	movs	r3, #6
100005e2:	9300      	str	r3, [sp, #0]
100005e4:	3b02      	subs	r3, #2
100005e6:	9301      	str	r3, [sp, #4]
100005e8:	466a      	mov	r2, sp
100005ea:	4903      	ldr	r1, [pc, #12]	; (100005f8 <call_periph_reg_mskd_ref()+0x1c>)
100005ec:	4803      	ldr	r0, [pc, #12]	; (100005fc <call_periph_reg_mskd_ref()+0x20>)
100005ee:	f7ff ffd9 	bl	100005a4 <periph_reg_mskd_ref(mcu::Serial*, regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
100005f2:	b002      	add	sp, #8
100005f4:	bd00      	pop	{pc}
100005f6:	46c0      	nop			; (mov r8, r8)
100005f8:	100016c4 	.word	0x100016c4
100005fc:	100016c0 	.word	0x100016c0

10000600 <return_bits()>:
10000600:	2020      	movs	r0, #32
10000602:	4770      	bx	lr

10000604 <call_return_bits()>:
10000604:	b500      	push	{lr}
10000606:	f7ff fffb 	bl	10000600 <return_bits()>
1000060a:	2820      	cmp	r0, #32
1000060c:	d004      	beq.n	10000618 <call_return_bits()+0x14>
1000060e:	4b05      	ldr	r3, [pc, #20]	; (10000624 <call_return_bits()+0x20>)
10000610:	22b2      	movs	r2, #178	; 0xb2
10000612:	05d2      	lsls	r2, r2, #23
10000614:	605a      	str	r2, [r3, #4]
10000616:	bd00      	pop	{pc}
10000618:	4b02      	ldr	r3, [pc, #8]	; (10000624 <call_return_bits()+0x20>)
1000061a:	22a6      	movs	r2, #166	; 0xa6
1000061c:	05d2      	lsls	r2, r2, #23
1000061e:	605a      	str	r2, [r3, #4]
10000620:	e7f9      	b.n	10000616 <call_return_bits()+0x12>
10000622:	46c0      	nop			; (mov r8, r8)
10000624:	10001620 	.word	0x10001620

10000628 <return_mskd()>:
10000628:	2318      	movs	r3, #24
1000062a:	6003      	str	r3, [r0, #0]
1000062c:	3b10      	subs	r3, #16
1000062e:	6043      	str	r3, [r0, #4]
10000630:	4770      	bx	lr

10000632 <call_return_mskd()>:
10000632:	b500      	push	{lr}
10000634:	b082      	sub	sp, #8
10000636:	4668      	mov	r0, sp
10000638:	f7ff fff6 	bl	10000628 <return_mskd()>
1000063c:	9b01      	ldr	r3, [sp, #4]
1000063e:	9a00      	ldr	r2, [sp, #0]
10000640:	2a18      	cmp	r2, #24
10000642:	d005      	beq.n	10000650 <call_return_mskd()+0x1e>
10000644:	4b06      	ldr	r3, [pc, #24]	; (10000660 <call_return_mskd()+0x2e>)
10000646:	22a3      	movs	r2, #163	; 0xa3
10000648:	0612      	lsls	r2, r2, #24
1000064a:	605a      	str	r2, [r3, #4]
1000064c:	b002      	add	sp, #8
1000064e:	bd00      	pop	{pc}
10000650:	2b08      	cmp	r3, #8
10000652:	d1f7      	bne.n	10000644 <call_return_mskd()+0x12>
10000654:	4b02      	ldr	r3, [pc, #8]	; (10000660 <call_return_mskd()+0x2e>)
10000656:	229d      	movs	r2, #157	; 0x9d
10000658:	0612      	lsls	r2, r2, #24
1000065a:	605a      	str	r2, [r3, #4]
1000065c:	e7f6      	b.n	1000064c <call_return_mskd()+0x1a>
1000065e:	46c0      	nop			; (mov r8, r8)
10000660:	10001620 	.word	0x10001620

10000664 <return_reg()>:
10000664:	4b02      	ldr	r3, [pc, #8]	; (10000670 <return_reg()+0xc>)
10000666:	2240      	movs	r2, #64	; 0x40
10000668:	605a      	str	r2, [r3, #4]
1000066a:	4802      	ldr	r0, [pc, #8]	; (10000674 <return_reg()+0x10>)
1000066c:	4770      	bx	lr
1000066e:	46c0      	nop			; (mov r8, r8)
10000670:	100016c0 	.word	0x100016c0
10000674:	100016c4 	.word	0x100016c4

10000678 <call_return_reg()>:
10000678:	b500      	push	{lr}
1000067a:	f7ff fff3 	bl	10000664 <return_reg()>
1000067e:	6803      	ldr	r3, [r0, #0]
10000680:	065b      	lsls	r3, r3, #25
10000682:	d504      	bpl.n	1000068e <call_return_reg()+0x16>
10000684:	4b04      	ldr	r3, [pc, #16]	; (10000698 <call_return_reg()+0x20>)
10000686:	22d4      	movs	r2, #212	; 0xd4
10000688:	0592      	lsls	r2, r2, #22
1000068a:	605a      	str	r2, [r3, #4]
1000068c:	bd00      	pop	{pc}
1000068e:	4b02      	ldr	r3, [pc, #8]	; (10000698 <call_return_reg()+0x20>)
10000690:	22ec      	movs	r2, #236	; 0xec
10000692:	0592      	lsls	r2, r2, #22
10000694:	605a      	str	r2, [r3, #4]
10000696:	e7f9      	b.n	1000068c <call_return_reg()+0x14>
10000698:	10001620 	.word	0x10001620

1000069c <return_periph()>:
1000069c:	4801      	ldr	r0, [pc, #4]	; (100006a4 <return_periph()+0x8>)
1000069e:	2340      	movs	r3, #64	; 0x40
100006a0:	6043      	str	r3, [r0, #4]
100006a2:	4770      	bx	lr
100006a4:	100016c0 	.word	0x100016c0

100006a8 <call_return_periph()>:
100006a8:	b500      	push	{lr}
100006aa:	f7ff fff7 	bl	1000069c <return_periph()>
100006ae:	6843      	ldr	r3, [r0, #4]
100006b0:	065b      	lsls	r3, r3, #25
100006b2:	d504      	bpl.n	100006be <call_return_periph()+0x16>
100006b4:	4b04      	ldr	r3, [pc, #16]	; (100006c8 <call_return_periph()+0x20>)
100006b6:	22c7      	movs	r2, #199	; 0xc7
100006b8:	0612      	lsls	r2, r2, #24
100006ba:	605a      	str	r2, [r3, #4]
100006bc:	bd00      	pop	{pc}
100006be:	4b02      	ldr	r3, [pc, #8]	; (100006c8 <call_return_periph()+0x20>)
100006c0:	22d3      	movs	r2, #211	; 0xd3
100006c2:	0612      	lsls	r2, r2, #24
100006c4:	605a      	str	r2, [r3, #4]
100006c6:	e7f9      	b.n	100006bc <call_return_periph()+0x14>
100006c8:	10001620 	.word	0x10001620

100006cc <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
100006cc:	2805      	cmp	r0, #5
100006ce:	d005      	beq.n	100006dc <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x10>
100006d0:	2806      	cmp	r0, #6
100006d2:	d007      	beq.n	100006e4 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x18>
100006d4:	4b05      	ldr	r3, [pc, #20]	; (100006ec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
100006d6:	2255      	movs	r2, #85	; 0x55
100006d8:	70da      	strb	r2, [r3, #3]
100006da:	4770      	bx	lr
100006dc:	4b03      	ldr	r3, [pc, #12]	; (100006ec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
100006de:	2233      	movs	r2, #51	; 0x33
100006e0:	70da      	strb	r2, [r3, #3]
100006e2:	e7fa      	b.n	100006da <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
100006e4:	4b01      	ldr	r3, [pc, #4]	; (100006ec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
100006e6:	2244      	movs	r2, #68	; 0x44
100006e8:	70da      	strb	r2, [r3, #3]
100006ea:	e7f6      	b.n	100006da <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
100006ec:	10001500 	.word	0x10001500

100006f0 <call_pos_val()>:
100006f0:	b500      	push	{lr}
100006f2:	2005      	movs	r0, #5
100006f4:	f7ff ffea 	bl	100006cc <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
100006f8:	2006      	movs	r0, #6
100006fa:	f7ff ffe7 	bl	100006cc <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
100006fe:	bd00      	pop	{pc}

10000700 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
10000700:	6803      	ldr	r3, [r0, #0]
10000702:	2b05      	cmp	r3, #5
10000704:	d005      	beq.n	10000712 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x12>
10000706:	2b06      	cmp	r3, #6
10000708:	d007      	beq.n	1000071a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1a>
1000070a:	4b06      	ldr	r3, [pc, #24]	; (10000724 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x24>)
1000070c:	2288      	movs	r2, #136	; 0x88
1000070e:	70da      	strb	r2, [r3, #3]
10000710:	4770      	bx	lr
10000712:	4b04      	ldr	r3, [pc, #16]	; (10000724 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x24>)
10000714:	2266      	movs	r2, #102	; 0x66
10000716:	70da      	strb	r2, [r3, #3]
10000718:	e7fa      	b.n	10000710 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
1000071a:	4b02      	ldr	r3, [pc, #8]	; (10000724 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x24>)
1000071c:	2277      	movs	r2, #119	; 0x77
1000071e:	70da      	strb	r2, [r3, #3]
10000720:	e7f6      	b.n	10000710 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
10000722:	46c0      	nop			; (mov r8, r8)
10000724:	10001500 	.word	0x10001500

10000728 <call_pos_ref()>:
10000728:	b510      	push	{r4, lr}
1000072a:	b082      	sub	sp, #8
1000072c:	2405      	movs	r4, #5
1000072e:	9401      	str	r4, [sp, #4]
10000730:	a801      	add	r0, sp, #4
10000732:	f7ff ffe5 	bl	10000700 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
10000736:	9400      	str	r4, [sp, #0]
10000738:	4668      	mov	r0, sp
1000073a:	f7ff ffe1 	bl	10000700 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
1000073e:	b002      	add	sp, #8
10000740:	bd10      	pop	{r4, pc}

10000742 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000742:	4a03      	ldr	r2, [pc, #12]	; (10000750 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
10000744:	6853      	ldr	r3, [r2, #4]
10000746:	4383      	bics	r3, r0
10000748:	430b      	orrs	r3, r1
1000074a:	6053      	str	r3, [r2, #4]
1000074c:	4770      	bx	lr
1000074e:	46c0      	nop			; (mov r8, r8)
10000750:	100016c0 	.word	0x100016c0

10000754 <call_range_val(unsigned int)>:
10000754:	b500      	push	{lr}
10000756:	4a06      	ldr	r2, [pc, #24]	; (10000770 <call_range_val(unsigned int)+0x1c>)
10000758:	6853      	ldr	r3, [r2, #4]
1000075a:	4906      	ldr	r1, [pc, #24]	; (10000774 <call_range_val(unsigned int)+0x20>)
1000075c:	400b      	ands	r3, r1
1000075e:	01c1      	lsls	r1, r0, #7
10000760:	430b      	orrs	r3, r1
10000762:	6053      	str	r3, [r2, #4]
10000764:	23f8      	movs	r3, #248	; 0xf8
10000766:	0301      	lsls	r1, r0, #12
10000768:	0258      	lsls	r0, r3, #9
1000076a:	f7ff ffea 	bl	10000742 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
1000076e:	bd00      	pop	{pc}
10000770:	100016c0 	.word	0x100016c0
10000774:	fffff07f 	.word	0xfffff07f

10000778 <call_range_val_port()>:
10000778:	b500      	push	{lr}
1000077a:	201f      	movs	r0, #31
1000077c:	f7ff ffea 	bl	10000754 <call_range_val(unsigned int)>
10000780:	bd00      	pop	{pc}

10000782 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
10000782:	4a03      	ldr	r2, [pc, #12]	; (10000790 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
10000784:	6853      	ldr	r3, [r2, #4]
10000786:	4383      	bics	r3, r0
10000788:	430b      	orrs	r3, r1
1000078a:	6053      	str	r3, [r2, #4]
1000078c:	4770      	bx	lr
1000078e:	46c0      	nop			; (mov r8, r8)
10000790:	100016c0 	.word	0x100016c0

10000794 <call_range_ref(unsigned int)>:
10000794:	b500      	push	{lr}
10000796:	4a06      	ldr	r2, [pc, #24]	; (100007b0 <call_range_ref(unsigned int)+0x1c>)
10000798:	6853      	ldr	r3, [r2, #4]
1000079a:	4906      	ldr	r1, [pc, #24]	; (100007b4 <call_range_ref(unsigned int)+0x20>)
1000079c:	400b      	ands	r3, r1
1000079e:	01c1      	lsls	r1, r0, #7
100007a0:	430b      	orrs	r3, r1
100007a2:	6053      	str	r3, [r2, #4]
100007a4:	23f8      	movs	r3, #248	; 0xf8
100007a6:	0301      	lsls	r1, r0, #12
100007a8:	0258      	lsls	r0, r3, #9
100007aa:	f7ff ffea 	bl	10000782 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
100007ae:	bd00      	pop	{pc}
100007b0:	100016c0 	.word	0x100016c0
100007b4:	fffff07f 	.word	0xfffff07f

100007b8 <call_range_ref_port()>:
100007b8:	b500      	push	{lr}
100007ba:	200c      	movs	r0, #12
100007bc:	f7ff ffea 	bl	10000794 <call_range_ref(unsigned int)>
100007c0:	bd00      	pop	{pc}

100007c2 <check_array_range_pass(unsigned int)>:
100007c2:	237f      	movs	r3, #127	; 0x7f
100007c4:	2816      	cmp	r0, #22
100007c6:	d900      	bls.n	100007ca <check_array_range_pass(unsigned int)+0x8>
100007c8:	3304      	adds	r3, #4
100007ca:	4a01      	ldr	r2, [pc, #4]	; (100007d0 <check_array_range_pass(unsigned int)+0xe>)
100007cc:	70d3      	strb	r3, [r2, #3]
100007ce:	4770      	bx	lr
100007d0:	10001500 	.word	0x10001500

100007d4 <check_array_range_fail(unsigned int)>:
100007d4:	2395      	movs	r3, #149	; 0x95
100007d6:	2816      	cmp	r0, #22
100007d8:	d900      	bls.n	100007dc <check_array_range_fail(unsigned int)+0x8>
100007da:	3302      	adds	r3, #2
100007dc:	4a01      	ldr	r2, [pc, #4]	; (100007e4 <check_array_range_fail(unsigned int)+0x10>)
100007de:	70d3      	strb	r3, [r2, #3]
100007e0:	4770      	bx	lr
100007e2:	46c0      	nop			; (mov r8, r8)
100007e4:	10001500 	.word	0x10001500

100007e8 <check_bits_range_pass(unsigned int)>:
100007e8:	239d      	movs	r3, #157	; 0x9d
100007ea:	280f      	cmp	r0, #15
100007ec:	d900      	bls.n	100007f0 <check_bits_range_pass(unsigned int)+0x8>
100007ee:	3306      	adds	r3, #6
100007f0:	4a01      	ldr	r2, [pc, #4]	; (100007f8 <check_bits_range_pass(unsigned int)+0x10>)
100007f2:	70d3      	strb	r3, [r2, #3]
100007f4:	4770      	bx	lr
100007f6:	46c0      	nop			; (mov r8, r8)
100007f8:	10001500 	.word	0x10001500

100007fc <check_bits_range_fail(unsigned int)>:
100007fc:	23a7      	movs	r3, #167	; 0xa7
100007fe:	280f      	cmp	r0, #15
10000800:	d900      	bls.n	10000804 <check_bits_range_fail(unsigned int)+0x8>
10000802:	3306      	adds	r3, #6
10000804:	4a01      	ldr	r2, [pc, #4]	; (1000080c <check_bits_range_fail(unsigned int)+0x10>)
10000806:	70d3      	strb	r3, [r2, #3]
10000808:	4770      	bx	lr
1000080a:	46c0      	nop			; (mov r8, r8)
1000080c:	10001500 	.word	0x10001500

10000810 <check_mskd_range_pass(unsigned int)>:
10000810:	23b3      	movs	r3, #179	; 0xb3
10000812:	281f      	cmp	r0, #31
10000814:	d900      	bls.n	10000818 <check_mskd_range_pass(unsigned int)+0x8>
10000816:	3302      	adds	r3, #2
10000818:	4a01      	ldr	r2, [pc, #4]	; (10000820 <check_mskd_range_pass(unsigned int)+0x10>)
1000081a:	70d3      	strb	r3, [r2, #3]
1000081c:	4770      	bx	lr
1000081e:	46c0      	nop			; (mov r8, r8)
10000820:	10001500 	.word	0x10001500

10000824 <check_mskd_range_fail(unsigned int)>:
10000824:	23bf      	movs	r3, #191	; 0xbf
10000826:	281f      	cmp	r0, #31
10000828:	d900      	bls.n	1000082c <check_mskd_range_fail(unsigned int)+0x8>
1000082a:	3302      	adds	r3, #2
1000082c:	4a01      	ldr	r2, [pc, #4]	; (10000834 <check_mskd_range_fail(unsigned int)+0x10>)
1000082e:	70d3      	strb	r3, [r2, #3]
10000830:	4770      	bx	lr
10000832:	46c0      	nop			; (mov r8, r8)
10000834:	10001500 	.word	0x10001500

10000838 <check_bits_extract()>:
10000838:	4b0d      	ldr	r3, [pc, #52]	; (10000870 <check_bits_extract()+0x38>)
1000083a:	2260      	movs	r2, #96	; 0x60
1000083c:	605a      	str	r2, [r3, #4]
1000083e:	685b      	ldr	r3, [r3, #4]
10000840:	3b60      	subs	r3, #96	; 0x60
10000842:	425a      	negs	r2, r3
10000844:	4153      	adcs	r3, r2
10000846:	425b      	negs	r3, r3
10000848:	221b      	movs	r2, #27
1000084a:	4393      	bics	r3, r2
1000084c:	33e3      	adds	r3, #227	; 0xe3
1000084e:	4a09      	ldr	r2, [pc, #36]	; (10000874 <check_bits_extract()+0x3c>)
10000850:	70d3      	strb	r3, [r2, #3]
10000852:	4b07      	ldr	r3, [pc, #28]	; (10000870 <check_bits_extract()+0x38>)
10000854:	2201      	movs	r2, #1
10000856:	605a      	str	r2, [r3, #4]
10000858:	685b      	ldr	r3, [r3, #4]
1000085a:	2b01      	cmp	r3, #1
1000085c:	d003      	beq.n	10000866 <check_bits_extract()+0x2e>
1000085e:	4b04      	ldr	r3, [pc, #16]	; (10000870 <check_bits_extract()+0x38>)
10000860:	321f      	adds	r2, #31
10000862:	605a      	str	r2, [r3, #4]
10000864:	4770      	bx	lr
10000866:	4b02      	ldr	r3, [pc, #8]	; (10000870 <check_bits_extract()+0x38>)
10000868:	2204      	movs	r2, #4
1000086a:	605a      	str	r2, [r3, #4]
1000086c:	e7fa      	b.n	10000864 <check_bits_extract()+0x2c>
1000086e:	46c0      	nop			; (mov r8, r8)
10000870:	100016c0 	.word	0x100016c0
10000874:	10001500 	.word	0x10001500

10000878 <check_mskd_extract()>:
10000878:	4b10      	ldr	r3, [pc, #64]	; (100008bc <check_mskd_extract()+0x44>)
1000087a:	22b8      	movs	r2, #184	; 0xb8
1000087c:	0112      	lsls	r2, r2, #4
1000087e:	605a      	str	r2, [r3, #4]
10000880:	685b      	ldr	r3, [r3, #4]
10000882:	21f8      	movs	r1, #248	; 0xf8
10000884:	0109      	lsls	r1, r1, #4
10000886:	400b      	ands	r3, r1
10000888:	1a9b      	subs	r3, r3, r2
1000088a:	425a      	negs	r2, r3
1000088c:	4153      	adcs	r3, r2
1000088e:	425b      	negs	r3, r3
10000890:	2203      	movs	r2, #3
10000892:	4393      	bics	r3, r2
10000894:	33e9      	adds	r3, #233	; 0xe9
10000896:	4a0a      	ldr	r2, [pc, #40]	; (100008c0 <check_mskd_extract()+0x48>)
10000898:	70d3      	strb	r3, [r2, #3]
1000089a:	4b08      	ldr	r3, [pc, #32]	; (100008bc <check_mskd_extract()+0x44>)
1000089c:	22e0      	movs	r2, #224	; 0xe0
1000089e:	0092      	lsls	r2, r2, #2
100008a0:	605a      	str	r2, [r3, #4]
100008a2:	685b      	ldr	r3, [r3, #4]
100008a4:	400b      	ands	r3, r1
100008a6:	4293      	cmp	r3, r2
100008a8:	d003      	beq.n	100008b2 <check_mskd_extract()+0x3a>
100008aa:	4b04      	ldr	r3, [pc, #16]	; (100008bc <check_mskd_extract()+0x44>)
100008ac:	2210      	movs	r2, #16
100008ae:	605a      	str	r2, [r3, #4]
100008b0:	4770      	bx	lr
100008b2:	4b02      	ldr	r3, [pc, #8]	; (100008bc <check_mskd_extract()+0x44>)
100008b4:	2220      	movs	r2, #32
100008b6:	605a      	str	r2, [r3, #4]
100008b8:	e7fa      	b.n	100008b0 <check_mskd_extract()+0x38>
100008ba:	46c0      	nop			; (mov r8, r8)
100008bc:	100016c0 	.word	0x100016c0
100008c0:	10001500 	.word	0x10001500

100008c4 <record_registers(unsigned int)>:
100008c4:	b510      	push	{r4, lr}
100008c6:	b081      	sub	sp, #4
100008c8:	4b06      	ldr	r3, [pc, #24]	; (100008e4 <record_registers(unsigned int)+0x20>)
100008ca:	6859      	ldr	r1, [r3, #4]
100008cc:	4b06      	ldr	r3, [pc, #24]	; (100008e8 <record_registers(unsigned int)+0x24>)
100008ce:	685a      	ldr	r2, [r3, #4]
100008d0:	4b06      	ldr	r3, [pc, #24]	; (100008ec <record_registers(unsigned int)+0x28>)
100008d2:	24a0      	movs	r4, #160	; 0xa0
100008d4:	591c      	ldr	r4, [r3, r4]
100008d6:	78db      	ldrb	r3, [r3, #3]
100008d8:	9400      	str	r4, [sp, #0]
100008da:	f000 f901 	bl	10000ae0 <unittest_record_registers>
100008de:	b001      	add	sp, #4
100008e0:	bd10      	pop	{r4, pc}
100008e2:	46c0      	nop			; (mov r8, r8)
100008e4:	100016c0 	.word	0x100016c0
100008e8:	10001620 	.word	0x10001620
100008ec:	10001500 	.word	0x10001500

100008f0 <run>:
100008f0:	b500      	push	{lr}
100008f2:	f7ff fc07 	bl	10000104 <zero()>
100008f6:	2000      	movs	r0, #0
100008f8:	f7ff ffe4 	bl	100008c4 <record_registers(unsigned int)>
100008fc:	f7ff fc12 	bl	10000124 <set_singl_bits()>
10000900:	2001      	movs	r0, #1
10000902:	f7ff ffdf 	bl	100008c4 <record_registers(unsigned int)>
10000906:	f7ff fc19 	bl	1000013c <clr_singl_bits()>
1000090a:	2002      	movs	r0, #2
1000090c:	f7ff ffda 	bl	100008c4 <record_registers(unsigned int)>
10000910:	f7ff fc20 	bl	10000154 <set_singl_mskd()>
10000914:	2003      	movs	r0, #3
10000916:	f7ff ffd5 	bl	100008c4 <record_registers(unsigned int)>
1000091a:	f7ff fc27 	bl	1000016c <clr_singl_mskd()>
1000091e:	2004      	movs	r0, #4
10000920:	f7ff ffd0 	bl	100008c4 <record_registers(unsigned int)>
10000924:	f7ff fc2e 	bl	10000184 <equ_singl_bits()>
10000928:	2005      	movs	r0, #5
1000092a:	f7ff ffcb 	bl	100008c4 <record_registers(unsigned int)>
1000092e:	f7ff fc31 	bl	10000194 <equ_singl_mskd()>
10000932:	2006      	movs	r0, #6
10000934:	f7ff ffc6 	bl	100008c4 <record_registers(unsigned int)>
10000938:	f7ff fc34 	bl	100001a4 <flp_singl_bits()>
1000093c:	2007      	movs	r0, #7
1000093e:	f7ff ffc1 	bl	100008c4 <record_registers(unsigned int)>
10000942:	f7ff fc3d 	bl	100001c0 <flp_singl_mskd()>
10000946:	2008      	movs	r0, #8
10000948:	f7ff ffbc 	bl	100008c4 <record_registers(unsigned int)>
1000094c:	f7ff fc46 	bl	100001dc <ins_singl_mskd()>
10000950:	2009      	movs	r0, #9
10000952:	f7ff ffb7 	bl	100008c4 <record_registers(unsigned int)>
10000956:	f7ff fc51 	bl	100001fc <set_multi_bits()>
1000095a:	200a      	movs	r0, #10
1000095c:	f7ff ffb2 	bl	100008c4 <record_registers(unsigned int)>
10000960:	f7ff fc58 	bl	10000214 <ins_multi_mskd()>
10000964:	200b      	movs	r0, #11
10000966:	f7ff ffad 	bl	100008c4 <record_registers(unsigned int)>
1000096a:	f7ff fc65 	bl	10000238 <equ_multi_bits()>
1000096e:	200c      	movs	r0, #12
10000970:	f7ff ffa8 	bl	100008c4 <record_registers(unsigned int)>
10000974:	f7ff fc68 	bl	10000248 <equ_multi_mskd()>
10000978:	200d      	movs	r0, #13
1000097a:	f7ff ffa3 	bl	100008c4 <record_registers(unsigned int)>
1000097e:	f7ff fc6b 	bl	10000258 <equ_bits_mskd()>
10000982:	200e      	movs	r0, #14
10000984:	f7ff ff9e 	bl	100008c4 <record_registers(unsigned int)>
10000988:	f7ff fc6e 	bl	10000268 <equ_mskd_bits()>
1000098c:	200f      	movs	r0, #15
1000098e:	f7ff ff99 	bl	100008c4 <record_registers(unsigned int)>
10000992:	f7ff fc71 	bl	10000278 <equ_bits_var()>
10000996:	2010      	movs	r0, #16
10000998:	f7ff ff94 	bl	100008c4 <record_registers(unsigned int)>
1000099c:	f7ff fc74 	bl	10000288 <equ_mskd_var()>
100009a0:	2011      	movs	r0, #17
100009a2:	f7ff ff8f 	bl	100008c4 <record_registers(unsigned int)>
100009a6:	f7ff fc79 	bl	1000029c <cmp_zero()>
100009aa:	2012      	movs	r0, #18
100009ac:	f7ff ff8a 	bl	100008c4 <record_registers(unsigned int)>
100009b0:	f7ff fc94 	bl	100002dc <cmp_bits()>
100009b4:	2013      	movs	r0, #19
100009b6:	f7ff ff85 	bl	100008c4 <record_registers(unsigned int)>
100009ba:	f7ff fcaf 	bl	1000031c <cmp_mskd()>
100009be:	2014      	movs	r0, #20
100009c0:	f7ff ff80 	bl	100008c4 <record_registers(unsigned int)>
100009c4:	f7ff fce2 	bl	1000038c <cmp_reg()>
100009c8:	2015      	movs	r0, #21
100009ca:	f7ff ff7b 	bl	100008c4 <record_registers(unsigned int)>
100009ce:	f7ff fd0f 	bl	100003f0 <constexpr_bits_array()>
100009d2:	2016      	movs	r0, #22
100009d4:	f7ff ff76 	bl	100008c4 <record_registers(unsigned int)>
100009d8:	f7ff fd14 	bl	10000404 <runtime_bits_array()>
100009dc:	2017      	movs	r0, #23
100009de:	f7ff ff71 	bl	100008c4 <record_registers(unsigned int)>
100009e2:	f7ff fcfd 	bl	100003e0 <call_bits_val()>
100009e6:	2018      	movs	r0, #24
100009e8:	f7ff ff6c 	bl	100008c4 <record_registers(unsigned int)>
100009ec:	f7ff fd28 	bl	10000440 <call_bits_ref()>
100009f0:	2019      	movs	r0, #25
100009f2:	f7ff ff67 	bl	100008c4 <record_registers(unsigned int)>
100009f6:	f7ff fd3d 	bl	10000474 <call_mskd_val()>
100009fa:	201a      	movs	r0, #26
100009fc:	f7ff ff62 	bl	100008c4 <record_registers(unsigned int)>
10000a00:	f7ff fd52 	bl	100004a8 <call_mskd_ref()>
10000a04:	201b      	movs	r0, #27
10000a06:	f7ff ff5d 	bl	100008c4 <record_registers(unsigned int)>
10000a0a:	f7ff fd77 	bl	100004fc <call_periph_reg_bits_val()>
10000a0e:	201c      	movs	r0, #28
10000a10:	f7ff ff58 	bl	100008c4 <record_registers(unsigned int)>
10000a14:	f7ff fd92 	bl	1000053c <call_periph_reg_bits_ref()>
10000a18:	2027      	movs	r0, #39	; 0x27
10000a1a:	f7ff ff53 	bl	100008c4 <record_registers(unsigned int)>
10000a1e:	f7ff fdb5 	bl	1000058c <call_periph_reg_mskd_val()>
10000a22:	201e      	movs	r0, #30
10000a24:	f7ff ff4e 	bl	100008c4 <record_registers(unsigned int)>
10000a28:	f7ff fdd8 	bl	100005dc <call_periph_reg_mskd_ref()>
10000a2c:	201f      	movs	r0, #31
10000a2e:	f7ff ff49 	bl	100008c4 <record_registers(unsigned int)>
10000a32:	f7ff fde7 	bl	10000604 <call_return_bits()>
10000a36:	2020      	movs	r0, #32
10000a38:	f7ff ff44 	bl	100008c4 <record_registers(unsigned int)>
10000a3c:	f7ff fdf9 	bl	10000632 <call_return_mskd()>
10000a40:	2021      	movs	r0, #33	; 0x21
10000a42:	f7ff ff3f 	bl	100008c4 <record_registers(unsigned int)>
10000a46:	f7ff fe17 	bl	10000678 <call_return_reg()>
10000a4a:	2022      	movs	r0, #34	; 0x22
10000a4c:	f7ff ff3a 	bl	100008c4 <record_registers(unsigned int)>
10000a50:	f7ff fe2a 	bl	100006a8 <call_return_periph()>
10000a54:	2023      	movs	r0, #35	; 0x23
10000a56:	f7ff ff35 	bl	100008c4 <record_registers(unsigned int)>
10000a5a:	f7ff fe49 	bl	100006f0 <call_pos_val()>
10000a5e:	2024      	movs	r0, #36	; 0x24
10000a60:	f7ff ff30 	bl	100008c4 <record_registers(unsigned int)>
10000a64:	f7ff fe60 	bl	10000728 <call_pos_ref()>
10000a68:	2025      	movs	r0, #37	; 0x25
10000a6a:	f7ff ff2b 	bl	100008c4 <record_registers(unsigned int)>
10000a6e:	2016      	movs	r0, #22
10000a70:	f7ff fea7 	bl	100007c2 <check_array_range_pass(unsigned int)>
10000a74:	2026      	movs	r0, #38	; 0x26
10000a76:	f7ff ff25 	bl	100008c4 <record_registers(unsigned int)>
10000a7a:	2017      	movs	r0, #23
10000a7c:	f7ff feaa 	bl	100007d4 <check_array_range_fail(unsigned int)>
10000a80:	2027      	movs	r0, #39	; 0x27
10000a82:	f7ff ff1f 	bl	100008c4 <record_registers(unsigned int)>
10000a86:	201f      	movs	r0, #31
10000a88:	f7ff feae 	bl	100007e8 <check_bits_range_pass(unsigned int)>
10000a8c:	2028      	movs	r0, #40	; 0x28
10000a8e:	f7ff ff19 	bl	100008c4 <record_registers(unsigned int)>
10000a92:	2020      	movs	r0, #32
10000a94:	f7ff feb2 	bl	100007fc <check_bits_range_fail(unsigned int)>
10000a98:	2029      	movs	r0, #41	; 0x29
10000a9a:	f7ff ff13 	bl	100008c4 <record_registers(unsigned int)>
10000a9e:	201f      	movs	r0, #31
10000aa0:	f7ff feb6 	bl	10000810 <check_mskd_range_pass(unsigned int)>
10000aa4:	202a      	movs	r0, #42	; 0x2a
10000aa6:	f7ff ff0d 	bl	100008c4 <record_registers(unsigned int)>
10000aaa:	2020      	movs	r0, #32
10000aac:	f7ff feba 	bl	10000824 <check_mskd_range_fail(unsigned int)>
10000ab0:	202b      	movs	r0, #43	; 0x2b
10000ab2:	f7ff ff07 	bl	100008c4 <record_registers(unsigned int)>
10000ab6:	f7ff febf 	bl	10000838 <check_bits_extract()>
10000aba:	202c      	movs	r0, #44	; 0x2c
10000abc:	f7ff ff02 	bl	100008c4 <record_registers(unsigned int)>
10000ac0:	f7ff feda 	bl	10000878 <check_mskd_extract()>
10000ac4:	202d      	movs	r0, #45	; 0x2d
10000ac6:	f7ff fefd 	bl	100008c4 <record_registers(unsigned int)>
10000aca:	bd00      	pop	{pc}

10000acc <memset>:
10000acc:	1882      	adds	r2, r0, r2
10000ace:	4290      	cmp	r0, r2
10000ad0:	d205      	bcs.n	10000ade <memset+0x12>
10000ad2:	0003      	movs	r3, r0
10000ad4:	b2c9      	uxtb	r1, r1
10000ad6:	7019      	strb	r1, [r3, #0]
10000ad8:	3301      	adds	r3, #1
10000ada:	429a      	cmp	r2, r3
10000adc:	d1fb      	bne.n	10000ad6 <memset+0xa>
10000ade:	4770      	bx	lr

10000ae0 <unittest_record_registers>:
10000ae0:	b510      	push	{r4, lr}
10000ae2:	b2db      	uxtb	r3, r3
10000ae4:	4c04      	ldr	r4, [pc, #16]	; (10000af8 <unittest_record_registers+0x18>)
10000ae6:	0100      	lsls	r0, r0, #4
10000ae8:	5101      	str	r1, [r0, r4]
10000aea:	1820      	adds	r0, r4, r0
10000aec:	6042      	str	r2, [r0, #4]
10000aee:	6083      	str	r3, [r0, #8]
10000af0:	9b02      	ldr	r3, [sp, #8]
10000af2:	60c3      	str	r3, [r0, #12]
10000af4:	bd10      	pop	{r4, pc}
10000af6:	46c0      	nop			; (mov r8, r8)
10000af8:	10000b3c 	.word	0x10000b3c

10000afc <main>:
10000afc:	b510      	push	{r4, lr}
10000afe:	4b0a      	ldr	r3, [pc, #40]	; (10000b28 <main+0x2c>)
10000b00:	2201      	movs	r2, #1
10000b02:	679a      	str	r2, [r3, #120]	; 0x78
10000b04:	4c09      	ldr	r4, [pc, #36]	; (10000b2c <main+0x30>)
10000b06:	2300      	movs	r3, #0
10000b08:	6023      	str	r3, [r4, #0]
10000b0a:	60a3      	str	r3, [r4, #8]
10000b0c:	3305      	adds	r3, #5
10000b0e:	6023      	str	r3, [r4, #0]
10000b10:	4b07      	ldr	r3, [pc, #28]	; (10000b30 <main+0x34>)
10000b12:	6063      	str	r3, [r4, #4]
10000b14:	68a2      	ldr	r2, [r4, #8]
10000b16:	4b07      	ldr	r3, [pc, #28]	; (10000b34 <main+0x38>)
10000b18:	601a      	str	r2, [r3, #0]
10000b1a:	f7ff fee9 	bl	100008f0 <run>
10000b1e:	68a2      	ldr	r2, [r4, #8]
10000b20:	4b05      	ldr	r3, [pc, #20]	; (10000b38 <main+0x3c>)
10000b22:	601a      	str	r2, [r3, #0]
10000b24:	46c0      	nop			; (mov r8, r8)
10000b26:	e7fd      	b.n	10000b24 <main+0x28>
10000b28:	40048000 	.word	0x40048000
10000b2c:	e000e010 	.word	0xe000e010
10000b30:	00ffffff 	.word	0x00ffffff
10000b34:	10000e20 	.word	0x10000e20
10000b38:	10000e1c 	.word	0x10000e1c
