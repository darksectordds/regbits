
Allocating common symbols
Common symbol       size              file

finish              0x4               main.o
results             0x390             main.o
start               0x4               main.o

Discarded input sections

 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x51 main.o
 .debug_macro   0x0000000000000000       0xef main.o
 .debug_macro   0x0000000000000000       0x6a main.o
 .debug_macro   0x0000000000000000      0x1df main.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000      0xa7e stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x22 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x8e stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x51 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0xef stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x6a stm32f103_ram_init.o
 .debug_macro   0x0000000000000000      0x1df stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x3a stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x34 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000      0xb8e stm32f103_ram_init.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000008000000 0x0000000000010000 xr
RAM              0x0000000020000000 0x0000000000005000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD regbits.o
LOAD main.o
LOAD stm32f103_ram_init.o
                0x0000000020000000                . = ORIGIN (RAM)

.text           0x0000000020000000     0x1564
 *(.vectors)
 .vectors       0x0000000020000000       0xec stm32f103_ram_init.o
                0x0000000020000000                INTERRUPT_VECTORS
 *(.text)
 .text          0x00000000200000ec     0x1314 regbits.o
                0x00000000200000ec                zero_reg()
                0x00000000200000f8                zero_array()
                0x0000000020000104                set_singl_bits_operator()
                0x0000000020000114                set_singl_bits_method()
                0x0000000020000124                clr_singl_bits_operator()
                0x0000000020000134                clr_singl_bits_method()
                0x0000000020000144                set_singl_mskd_operator()
                0x0000000020000154                set_singl_mskd_method()
                0x0000000020000164                clr_singl_mskd_operator()
                0x0000000020000174                clr_singl_mskd_method()
                0x0000000020000184                equ_singl_bits_operator()
                0x0000000020000190                equ_singl_bits_method()
                0x000000002000019c                equ_singl_mskd_operator()
                0x00000000200001a8                equ_singl_mskd_method()
                0x00000000200001b4                flp_singl_bits_operator()
                0x00000000200001c4                flp_singl_bits_method()
                0x00000000200001d4                flp_singl_mskd_operator()
                0x00000000200001e4                flp_singl_mskd_method()
                0x00000000200001f4                ins_singl_mskd_operator()
                0x0000000020000208                ins_singl_mskd_method()
                0x000000002000021c                set_multi_bits_operator()
                0x000000002000022c                set_multi_bits_method()
                0x000000002000023c                ins_multi_mskd_operator()
                0x0000000020000254                ins_multi_mskd_method()
                0x000000002000026c                equ_multi_bits_operator()
                0x0000000020000278                equ_multi_bits_method()
                0x0000000020000284                equ_multi_mskd_operator()
                0x0000000020000294                equ_multi_mskd_method()
                0x00000000200002a4                equ_bits_mskd_operator()
                0x00000000200002b0                equ_bits_mskd_method()
                0x00000000200002bc                equ_mskd_bits_operator()
                0x00000000200002c8                equ_mskd_bits_method()
                0x00000000200002d4                equ_bits_var()
                0x00000000200002e4                equ_mskd_var()
                0x00000000200002f8                cmp_equ_zero()
                0x0000000020000320                cmp_neq_zero()
                0x000000002000033c                cmp_equ_bits()
                0x0000000020000360                cmp_neq_bits()
                0x0000000020000378                cmp_equ_mskd()
                0x00000000200003a8                cmp_neq_mskd()
                0x00000000200003d4                cmp_equ_reg()
                0x00000000200003f8                cmp_neq_reg()
                0x0000000020000410                constexpr_bits_array()
                0x0000000020000424                runtime_bits_array()
                0x0000000020000450                prescaler_low()
                0x000000002000046c                prescaler_high()
                0x0000000020000488                reg_mskd_lss()
                0x00000000200004b0                reg_mskd_leq()
                0x00000000200004e8                reg_mskd_gtr()
                0x0000000020000510                reg_mskd_geq()
                0x0000000020000548                pos_cmp_eq()
                0x0000000020000554                pos_cmp_ne()
                0x0000000020000560                bits_extract_eq()
                0x0000000020000578                mskd_extract_eq()
                0x0000000020000590                mskd_extract_ne()
                0x00000000200005a8                mskd_extract_lss()
                0x00000000200005cc                mskd_extract_leq()
                0x00000000200005ec                mskd_extract_gtr()
                0x0000000020000610                set_bits_global()
                0x0000000020000620                ins_mskd_global()
                0x0000000020000634                assign_array_global()
                0x0000000020000640                shifted_global()
                0x000000002000065c                assign_register_global()
                0x0000000020000668                copy_bits_equ()
                0x0000000020000680                copy_bits_neq()
                0x0000000020000698                copy_mskd_equ()
                0x00000000200006bc                copy_mskd_neq()
                0x00000000200006e0                copy_mskd_lss()
                0x0000000020000708                copy_mskd_leq()
                0x000000002000072c                copy_mskd_gtr()
                0x0000000020000754                copy_mskd_geq()
                0x0000000020000778                copy_shifted()
                0x00000000200007a8                call_pos_ref()
                0x00000000200007d0                call_pos_ref_global()
                0x00000000200007fc                call_pos_val()
                0x000000002000080c                call_pos_val_global()
                0x0000000020000824                call_mskd_val_const()
                0x000000002000082c                call_mskd_val_var()
                0x0000000020000834                call_mskd_val_global()
                0x000000002000084c                call_bits_val_const()
                0x0000000020000850                call_bits_val_var()
                0x0000000020000854                call_bits_val_global()
                0x0000000020000858                bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000020000868                bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000020000878                call_bits_ref_var()
                0x000000002000088c                call_bits_ref_const()
                0x00000000200008a0                call_bits_ref_global()
                0x00000000200008b4                mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x00000000200008c8                mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)
                0x00000000200008e4                call_mskd_ref_var()
                0x0000000020000900                call_mskd_ref_const()
                0x0000000020000918                call_mskd_ref_global()
                0x0000000020000930                periph_bits(mcu::Serial*)
                0x000000002000093c                call_periph_bits()
                0x0000000020000948                periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000020000950                call_periph_bits_val()
                0x000000002000095c                reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000020000964                call_reg_bits_val()
                0x0000000020000970                periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x000000002000097c                call_periph_bits_ref()
                0x0000000020000998                reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x00000000200009a4                call_reg_bits_ref()
                0x00000000200009c0                periph_mskd(mcu::Serial*)
                0x00000000200009d0                call_periph_mskd()
                0x00000000200009dc                periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x00000000200009e8                call_periph_mskd_val()
                0x00000000200009f8                reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a04                call_reg_mskd_val()
                0x0000000020000a14                periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a20                call_periph_mskd_ref()
                0x0000000020000a30                reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a3c                call_reg_mskd_ref()
                0x0000000020000a4c                return_bits()
                0x0000000020000a50                call_return_bits()
                0x0000000020000a70                return_mskd()
                0x0000000020000a7c                call_return_mskd()
                0x0000000020000ab4                return_reg()
                0x0000000020000ac8                call_return_reg()
                0x0000000020000ae8                return_periph()
                0x0000000020000af4                call_return_periph()
                0x0000000020000b14                pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)
                0x0000000020000b34                pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)
                0x0000000020000b54                runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000b68                call_range_val(unsigned int)
                0x0000000020000b74                call_range_val_port()
                0x0000000020000b7c                runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000b90                call_range_ref(unsigned int)
                0x0000000020000b9c                call_range_ref_port()
                0x0000000020000ba4                check_array_range_pass(unsigned int)
                0x0000000020000bb8                check_array_range_fail(unsigned int)
                0x0000000020000bcc                check_bits_range_pass(unsigned int)
                0x0000000020000be0                check_bits_range_fail(unsigned int)
                0x0000000020000bf4                check_mskd_range_pass(unsigned int)
                0x0000000020000c08                check_mskd_range_fail(unsigned int)
                0x0000000020000c1c                bits_extract_ne()
                0x0000000020000c34                mskd_extract_geq()
                0x0000000020000c54                shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)
                0x0000000020000c74                call_shifted_const_val()
                0x0000000020000c80                call_shifted_var_val()
                0x0000000020000c8c                call_shifted_global_val()
                0x0000000020000c98                shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)
                0x0000000020000cbc                call_shifted_const_ref()
                0x0000000020000cdc                call_shifted_var_ref()
                0x0000000020000cfc                call_shifted_global_ref()
                0x0000000020000d18                copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)
                0x0000000020000d2c                call_copy_bits_val()
                0x0000000020000d3c                copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)
                0x0000000020000d50                call_copy_bits_ref()
                0x0000000020000d70                run
 .text          0x0000000020001400       0x44 main.o
                0x0000000020001400                memset
                0x0000000020001414                do_test
 .text          0x0000000020001444      0x120 stm32f103_ram_init.o
                0x0000000020001444                NMI_Handler
                0x0000000020001448                HardFault_Handler
                0x000000002000144c                MemManage_Handler
                0x0000000020001450                BusFault_Handler
                0x0000000020001454                UsageFault_Handler
                0x0000000020001458                Reserved1_Handler
                0x000000002000145c                Reserved2_Handler
                0x0000000020001460                Reserved3_Handler
                0x0000000020001464                Reserved4_Handler
                0x0000000020001468                SVCall_Handler
                0x000000002000146c                Debug_Handler
                0x0000000020001470                Reserved5_Handler
                0x0000000020001474                PendSV_Handler
                0x0000000020001478                SysTick_Handler
                0x000000002000147c                WWDG_IRQHandler
                0x0000000020001480                PVD_IRQHandler
                0x0000000020001484                TAMPER_IRQHandler
                0x0000000020001488                RTC_IRQHandler
                0x000000002000148c                FLASH_IRQHandler
                0x0000000020001490                RCC_IRQHandler
                0x0000000020001494                EXTI0_IRQHandler
                0x0000000020001498                EXTI1_IRQHandler
                0x000000002000149c                EXTI2_IRQHandler
                0x00000000200014a0                EXTI3_IRQHandler
                0x00000000200014a4                EXTI4_IRQHandler
                0x00000000200014a8                DMA1_Channel1_IRQHandler
                0x00000000200014ac                DMA1_Channel2_IRQHandler
                0x00000000200014b0                DMA1_Channel3_IRQHandler
                0x00000000200014b4                DMA1_Channel4_IRQHandler
                0x00000000200014b8                DMA1_Channel5_IRQHandler
                0x00000000200014bc                DMA1_Channel6_IRQHandler
                0x00000000200014c0                DMA1_Channel7_IRQHandler
                0x00000000200014c4                ADC1_2_IRQHandler
                0x00000000200014c8                USB_HP_CAN1_TX_IRQHandle
                0x00000000200014cc                USB_LP_CAN1_RX0_IRQHandler
                0x00000000200014d0                CAN1_RX1_IRQHandler
                0x00000000200014d4                CAN1_SCE_IRQHandler
                0x00000000200014d8                EXTI9_5_IRQHandler
                0x00000000200014dc                TIM1_BRK_IRQHandler
                0x00000000200014e0                TIM1_UP_IRQHandler
                0x00000000200014e4                TIM1_TRG_COM_IRQHandler
                0x00000000200014e8                TIM1_CC_IRQHandler
                0x00000000200014ec                TIM2_IRQHandler
                0x00000000200014f0                TIM3_IRQHandler
                0x00000000200014f4                TIM4_IRQHandler
                0x00000000200014f8                I2C1_EV_IRQHandler
                0x00000000200014fc                I2C1_ER_IRQHandler
                0x0000000020001500                I2C2_EV_IRQHandler
                0x0000000020001504                I2C2_ER_IRQHandler
                0x0000000020001508                SPI1_IRQHandler
                0x000000002000150c                SPI2_IRQHandler
                0x0000000020001510                USART1_IRQHandler
                0x0000000020001514                USART2_IRQHandler
                0x0000000020001518                USART3_IRQHandler
                0x000000002000151c                EXTI15_10_IRQHandler
                0x0000000020001520                RTC_Alarm_IRQHandler
                0x0000000020001524                USBWakeUp_IRQHandler
                0x0000000020001528                init

.glue_7         0x0000000020001564        0x0
 .glue_7        0x0000000020001564        0x0 linker stubs

.glue_7t        0x0000000020001564        0x0
 .glue_7t       0x0000000020001564        0x0 linker stubs

.vfp11_veneer   0x0000000020001564        0x0
 .vfp11_veneer  0x0000000020001564        0x0 linker stubs

.v4_bx          0x0000000020001564        0x0
 .v4_bx         0x0000000020001564        0x0 linker stubs

.iplt           0x0000000020001564        0x0
 .iplt          0x0000000020001564        0x0 regbits.o

.text.startup   0x0000000020001564       0x34
 .text.startup  0x0000000020001564       0x34 main.o
                0x0000000020001564                main

.rodata         0x0000000020001598       0x18
 .rodata        0x0000000020001598       0x18 regbits.o

.rel.dyn        0x00000000200015b0        0x0
 .rel.iplt      0x00000000200015b0        0x0 regbits.o

.data           0x00000000200015b0        0x0
                0x00000000200015b0                . = ALIGN (0x4)
 *(.data)
 .data          0x00000000200015b0        0x0 regbits.o
 .data          0x00000000200015b0        0x0 main.o
 .data          0x00000000200015b0        0x0 stm32f103_ram_init.o
                0x00000000200015b0                BSS_START = .

.igot.plt       0x00000000200015b0        0x0
 .igot.plt      0x00000000200015b0        0x0 regbits.o

.bss            0x00000000200015b0      0x3c8
                0x00000000200015b0                . = ALIGN (0x4)
 *(.bss)
 .bss           0x00000000200015b0       0x30 regbits.o
 .bss           0x00000000200015e0        0x0 main.o
 .bss           0x00000000200015e0        0x0 stm32f103_ram_init.o
 COMMON         0x00000000200015e0      0x398 main.o
                0x00000000200015e0                finish
                0x00000000200015e4                results
                0x0000000020001974                start
                0x0000000020001978                BSS_END = .
                0x0000000020001978                end = .
                0x0000000020005000                TOP_OF_STACK = (ORIGIN (RAM) + LENGTH (RAM))
OUTPUT(regbits.elf elf32-littlearm)

.debug_info     0x0000000000000000    0x1300b
 .debug_info    0x0000000000000000    0x12551 regbits.o
 .debug_info    0x0000000000012551      0x2f2 main.o
 .debug_info    0x0000000000012843      0x7c8 stm32f103_ram_init.o

.debug_abbrev   0x0000000000000000      0xa7e
 .debug_abbrev  0x0000000000000000      0x6ff regbits.o
 .debug_abbrev  0x00000000000006ff      0x1df main.o
 .debug_abbrev  0x00000000000008de      0x1a0 stm32f103_ram_init.o

.debug_loc      0x0000000000000000     0x259b
 .debug_loc     0x0000000000000000     0x2424 regbits.o
 .debug_loc     0x0000000000002424      0x13b main.o
 .debug_loc     0x000000000000255f       0x3c stm32f103_ram_init.o

.debug_aranges  0x0000000000000000       0x68
 .debug_aranges
                0x0000000000000000       0x20 regbits.o
 .debug_aranges
                0x0000000000000020       0x28 main.o
 .debug_aranges
                0x0000000000000048       0x20 stm32f103_ram_init.o

.debug_ranges   0x0000000000000000      0x2a0
 .debug_ranges  0x0000000000000000      0x288 regbits.o
 .debug_ranges  0x0000000000000288       0x18 main.o

.debug_macro    0x0000000000000000    0x114cb
 .debug_macro   0x0000000000000000       0x8e regbits.o
 .debug_macro   0x000000000000008e      0xb2c regbits.o
 .debug_macro   0x0000000000000bba       0x1c regbits.o
 .debug_macro   0x0000000000000bd6       0x22 regbits.o
 .debug_macro   0x0000000000000bf8       0x56 regbits.o
 .debug_macro   0x0000000000000c4e       0x51 regbits.o
 .debug_macro   0x0000000000000c9f       0xef regbits.o
 .debug_macro   0x0000000000000d8e       0x6a regbits.o
 .debug_macro   0x0000000000000df8      0x1df regbits.o
 .debug_macro   0x0000000000000fd7       0x1f regbits.o
 .debug_macro   0x0000000000000ff6       0x58 regbits.o
 .debug_macro   0x000000000000104e      0x17b regbits.o
 .debug_macro   0x00000000000011c9       0xa9 main.o
 .debug_macro   0x0000000000001272      0xa7e main.o
 .debug_macro   0x0000000000001cf0      0x174 main.o
 .debug_macro   0x0000000000001e64       0x8e main.o
 .debug_macro   0x0000000000001ef2       0x3a main.o
 .debug_macro   0x0000000000001f2c       0x34 main.o
 .debug_macro   0x0000000000001f60      0xb8e main.o
 .debug_macro   0x0000000000002aee       0xb1 stm32f103_ram_init.o
 .debug_macro   0x0000000000002b9f       0x22 stm32f103_ram_init.o
 .debug_macro   0x0000000000002bc1     0xe90a stm32f103_ram_init.o

.debug_line     0x0000000000000000     0x3150
 .debug_line    0x0000000000000000     0x2559 regbits.o
 .debug_line    0x0000000000002559      0x38a main.o
 .debug_line    0x00000000000028e3      0x86d stm32f103_ram_init.o

.debug_str      0x0000000000000000    0x69478
 .debug_str     0x0000000000000000    0x172f1 regbits.o
                                      0x17655 (size before relaxing)
 .debug_str     0x00000000000172f1     0x456d main.o
                                       0x82cf (size before relaxing)
 .debug_str     0x000000000001b85e    0x4dc1a stm32f103_ram_init.o
                                      0x55c64 (size before relaxing)

.comment        0x0000000000000000       0x75
 .comment       0x0000000000000000       0x75 regbits.o
                                         0x76 (size before relaxing)
 .comment       0x0000000000000075       0x76 main.o
 .comment       0x0000000000000075       0x76 stm32f103_ram_init.o

.ARM.attributes
                0x0000000000000000       0x1b
 .ARM.attributes
                0x0000000000000000       0x1b regbits.o
 .ARM.attributes
                0x000000000000001b       0x1b main.o
 .ARM.attributes
                0x0000000000000036       0x1b stm32f103_ram_init.o

.debug_frame    0x0000000000000000      0xf00
 .debug_frame   0x0000000000000000      0xae8 regbits.o
 .debug_frame   0x0000000000000ae8       0x58 main.o
 .debug_frame   0x0000000000000b40      0x3c0 stm32f103_ram_init.o
Memory region         Used Size  Region Size  %age Used
           FLASH:          0 GB        64 KB      0.00%
             RAM:        6520 B        20 KB     31.84%
