
Allocating common symbols
Common symbol       size              file

finish              0x4               main.o
results             0x3a0             main.o
start               0x4               main.o

Discarded input sections

 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x51 main.o
 .debug_macro   0x0000000000000000       0xef main.o
 .debug_macro   0x0000000000000000       0x6a main.o
 .debug_macro   0x0000000000000000      0x1df main.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .group         0x0000000000000000        0x8 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000      0xa7e stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x22 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x8e stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x51 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0xef stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x6a stm32f103_ram_init.o
 .debug_macro   0x0000000000000000      0x1df stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x3a stm32f103_ram_init.o
 .debug_macro   0x0000000000000000       0x34 stm32f103_ram_init.o
 .debug_macro   0x0000000000000000      0xb8e stm32f103_ram_init.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000008000000 0x0000000000010000 xr
RAM              0x0000000020000000 0x0000000000005000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD regbits.o
LOAD main.o
LOAD stm32f103_ram_init.o
                0x0000000020000000                . = ORIGIN (RAM)

.text           0x0000000020000000     0x15c8
 *(.vectors)
 .vectors       0x0000000020000000       0xec stm32f103_ram_init.o
                0x0000000020000000                INTERRUPT_VECTORS
 *(.text)
 .text          0x00000000200000ec     0x1378 regbits.o
                0x00000000200000ec                zero_reg()
                0x00000000200000f8                zero_array()
                0x0000000020000104                set_singl_bits_operator()
                0x0000000020000114                set_singl_bits_method()
                0x0000000020000124                clr_singl_bits_operator()
                0x0000000020000134                clr_singl_bits_method()
                0x0000000020000144                set_singl_mskd_operator()
                0x0000000020000154                set_singl_mskd_method()
                0x0000000020000164                clr_singl_mskd_operator()
                0x0000000020000174                clr_singl_mskd_method()
                0x0000000020000184                equ_singl_bits_operator()
                0x0000000020000190                equ_singl_bits_method()
                0x000000002000019c                equ_singl_mskd_operator()
                0x00000000200001a8                equ_singl_mskd_method()
                0x00000000200001b4                flp_singl_bits_operator()
                0x00000000200001c4                flp_singl_bits_method()
                0x00000000200001d4                flp_singl_mskd_operator()
                0x00000000200001e4                flp_singl_mskd_method()
                0x00000000200001f4                ins_singl_mskd_operator()
                0x0000000020000208                ins_singl_mskd_method()
                0x000000002000021c                set_multi_bits_operator()
                0x000000002000022c                set_multi_bits_method()
                0x000000002000023c                ins_multi_mskd_operator()
                0x0000000020000254                ins_multi_mskd_method()
                0x000000002000026c                equ_multi_bits_operator()
                0x0000000020000278                equ_multi_bits_method()
                0x0000000020000284                equ_multi_mskd_operator()
                0x0000000020000294                equ_multi_mskd_method()
                0x00000000200002a4                equ_bits_mskd_operator()
                0x00000000200002b0                equ_bits_mskd_method()
                0x00000000200002bc                equ_mskd_bits_operator()
                0x00000000200002c8                equ_mskd_bits_method()
                0x00000000200002d4                equ_bits_var()
                0x00000000200002e4                equ_mskd_var()
                0x00000000200002f8                cmp_equ_zero()
                0x0000000020000320                cmp_neq_zero()
                0x000000002000033c                cmp_equ_bits()
                0x0000000020000360                cmp_neq_bits()
                0x0000000020000378                cmp_equ_multi_bits()
                0x000000002000039c                cmp_neq_multi_bits()
                0x00000000200003c0                cmp_equ_mskd()
                0x00000000200003f0                cmp_neq_mskd()
                0x000000002000041c                cmp_equ_reg()
                0x0000000020000440                cmp_neq_reg()
                0x0000000020000458                constexpr_bits_array()
                0x000000002000046c                runtime_bits_array()
                0x0000000020000498                prescaler_low()
                0x00000000200004b4                prescaler_high()
                0x00000000200004d0                reg_mskd_lss()
                0x00000000200004f8                reg_mskd_leq()
                0x0000000020000530                reg_mskd_gtr()
                0x0000000020000558                reg_mskd_geq()
                0x0000000020000590                pos_cmp_eq()
                0x000000002000059c                pos_cmp_ne()
                0x00000000200005a8                bits_extract_eq()
                0x00000000200005c0                mskd_extract_eq()
                0x00000000200005d8                mskd_extract_ne()
                0x00000000200005f0                mskd_extract_lss()
                0x0000000020000614                mskd_extract_leq()
                0x0000000020000634                mskd_extract_gtr()
                0x0000000020000658                set_bits_global()
                0x0000000020000668                ins_mskd_global()
                0x000000002000067c                assign_array_global()
                0x0000000020000688                shifted_global()
                0x00000000200006a4                assign_register_global()
                0x00000000200006b0                copy_bits_equ()
                0x00000000200006c8                copy_bits_neq()
                0x00000000200006e0                copy_mskd_equ()
                0x0000000020000704                copy_mskd_neq()
                0x0000000020000728                copy_mskd_lss()
                0x0000000020000750                copy_mskd_leq()
                0x0000000020000774                copy_mskd_gtr()
                0x000000002000079c                copy_mskd_geq()
                0x00000000200007c0                copy_shifted()
                0x00000000200007f0                call_pos_ref()
                0x0000000020000818                call_pos_ref_global()
                0x0000000020000844                call_pos_val()
                0x0000000020000854                call_pos_val_global()
                0x000000002000086c                call_mskd_val_const()
                0x0000000020000874                call_mskd_val_var()
                0x000000002000087c                call_mskd_val_global()
                0x0000000020000894                call_bits_val_const()
                0x0000000020000898                call_bits_val_var()
                0x000000002000089c                call_bits_val_global()
                0x00000000200008a0                bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x00000000200008b0                bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x00000000200008c0                call_bits_ref_var()
                0x00000000200008d4                call_bits_ref_const()
                0x00000000200008e8                call_bits_ref_global()
                0x00000000200008fc                mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000910                mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)
                0x000000002000092c                call_mskd_ref_var()
                0x0000000020000948                call_mskd_ref_const()
                0x0000000020000960                call_mskd_ref_global()
                0x0000000020000978                periph_bits(mcu::Serial*)
                0x0000000020000984                call_periph_bits()
                0x0000000020000990                periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000020000998                call_periph_bits_val()
                0x00000000200009a4                reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x00000000200009ac                call_reg_bits_val()
                0x00000000200009b8                periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x00000000200009c4                call_periph_bits_ref()
                0x00000000200009e0                reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x00000000200009ec                call_reg_bits_ref()
                0x0000000020000a08                periph_mskd(mcu::Serial*)
                0x0000000020000a18                call_periph_mskd()
                0x0000000020000a24                periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a30                call_periph_mskd_val()
                0x0000000020000a40                reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a4c                call_reg_mskd_val()
                0x0000000020000a5c                periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a68                call_periph_mskd_ref()
                0x0000000020000a78                reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000a84                call_reg_mskd_ref()
                0x0000000020000a94                return_bits()
                0x0000000020000a98                call_return_bits()
                0x0000000020000ab8                return_mskd()
                0x0000000020000ac4                call_return_mskd()
                0x0000000020000afc                return_reg()
                0x0000000020000b10                call_return_reg()
                0x0000000020000b30                return_periph()
                0x0000000020000b3c                call_return_periph()
                0x0000000020000b5c                pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)
                0x0000000020000b7c                pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)
                0x0000000020000b9c                runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000bb0                call_range_val(unsigned int)
                0x0000000020000bbc                call_range_val_port()
                0x0000000020000bc4                runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020000bd8                call_range_ref(unsigned int)
                0x0000000020000be4                call_range_ref_port()
                0x0000000020000bec                check_array_range_pass(unsigned int)
                0x0000000020000c00                check_array_range_fail(unsigned int)
                0x0000000020000c14                check_bits_range_pass(unsigned int)
                0x0000000020000c28                check_bits_range_fail(unsigned int)
                0x0000000020000c3c                check_mskd_range_pass(unsigned int)
                0x0000000020000c50                check_mskd_range_fail(unsigned int)
                0x0000000020000c64                bits_extract_ne()
                0x0000000020000c7c                mskd_extract_geq()
                0x0000000020000c9c                shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)
                0x0000000020000cbc                call_shifted_const_val()
                0x0000000020000cc8                call_shifted_var_val()
                0x0000000020000cd4                call_shifted_global_val()
                0x0000000020000ce0                shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)
                0x0000000020000d04                call_shifted_const_ref()
                0x0000000020000d24                call_shifted_var_ref()
                0x0000000020000d44                call_shifted_global_ref()
                0x0000000020000d60                copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)
                0x0000000020000d74                call_copy_bits_val()
                0x0000000020000d84                copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)
                0x0000000020000d98                call_copy_bits_ref()
                0x0000000020000db8                run
 .text          0x0000000020001464       0x44 main.o
                0x0000000020001464                memset
                0x0000000020001478                do_test
 .text          0x00000000200014a8      0x120 stm32f103_ram_init.o
                0x00000000200014a8                NMI_Handler
                0x00000000200014ac                HardFault_Handler
                0x00000000200014b0                MemManage_Handler
                0x00000000200014b4                BusFault_Handler
                0x00000000200014b8                UsageFault_Handler
                0x00000000200014bc                Reserved1_Handler
                0x00000000200014c0                Reserved2_Handler
                0x00000000200014c4                Reserved3_Handler
                0x00000000200014c8                Reserved4_Handler
                0x00000000200014cc                SVCall_Handler
                0x00000000200014d0                Debug_Handler
                0x00000000200014d4                Reserved5_Handler
                0x00000000200014d8                PendSV_Handler
                0x00000000200014dc                SysTick_Handler
                0x00000000200014e0                WWDG_IRQHandler
                0x00000000200014e4                PVD_IRQHandler
                0x00000000200014e8                TAMPER_IRQHandler
                0x00000000200014ec                RTC_IRQHandler
                0x00000000200014f0                FLASH_IRQHandler
                0x00000000200014f4                RCC_IRQHandler
                0x00000000200014f8                EXTI0_IRQHandler
                0x00000000200014fc                EXTI1_IRQHandler
                0x0000000020001500                EXTI2_IRQHandler
                0x0000000020001504                EXTI3_IRQHandler
                0x0000000020001508                EXTI4_IRQHandler
                0x000000002000150c                DMA1_Channel1_IRQHandler
                0x0000000020001510                DMA1_Channel2_IRQHandler
                0x0000000020001514                DMA1_Channel3_IRQHandler
                0x0000000020001518                DMA1_Channel4_IRQHandler
                0x000000002000151c                DMA1_Channel5_IRQHandler
                0x0000000020001520                DMA1_Channel6_IRQHandler
                0x0000000020001524                DMA1_Channel7_IRQHandler
                0x0000000020001528                ADC1_2_IRQHandler
                0x000000002000152c                USB_HP_CAN1_TX_IRQHandle
                0x0000000020001530                USB_LP_CAN1_RX0_IRQHandler
                0x0000000020001534                CAN1_RX1_IRQHandler
                0x0000000020001538                CAN1_SCE_IRQHandler
                0x000000002000153c                EXTI9_5_IRQHandler
                0x0000000020001540                TIM1_BRK_IRQHandler
                0x0000000020001544                TIM1_UP_IRQHandler
                0x0000000020001548                TIM1_TRG_COM_IRQHandler
                0x000000002000154c                TIM1_CC_IRQHandler
                0x0000000020001550                TIM2_IRQHandler
                0x0000000020001554                TIM3_IRQHandler
                0x0000000020001558                TIM4_IRQHandler
                0x000000002000155c                I2C1_EV_IRQHandler
                0x0000000020001560                I2C1_ER_IRQHandler
                0x0000000020001564                I2C2_EV_IRQHandler
                0x0000000020001568                I2C2_ER_IRQHandler
                0x000000002000156c                SPI1_IRQHandler
                0x0000000020001570                SPI2_IRQHandler
                0x0000000020001574                USART1_IRQHandler
                0x0000000020001578                USART2_IRQHandler
                0x000000002000157c                USART3_IRQHandler
                0x0000000020001580                EXTI15_10_IRQHandler
                0x0000000020001584                RTC_Alarm_IRQHandler
                0x0000000020001588                USBWakeUp_IRQHandler
                0x000000002000158c                init

.glue_7         0x00000000200015c8        0x0
 .glue_7        0x00000000200015c8        0x0 linker stubs

.glue_7t        0x00000000200015c8        0x0
 .glue_7t       0x00000000200015c8        0x0 linker stubs

.vfp11_veneer   0x00000000200015c8        0x0
 .vfp11_veneer  0x00000000200015c8        0x0 linker stubs

.v4_bx          0x00000000200015c8        0x0
 .v4_bx         0x00000000200015c8        0x0 linker stubs

.iplt           0x00000000200015c8        0x0
 .iplt          0x00000000200015c8        0x0 regbits.o

.text.startup   0x00000000200015c8       0x34
 .text.startup  0x00000000200015c8       0x34 main.o
                0x00000000200015c8                main

.rodata         0x00000000200015fc       0x18
 .rodata        0x00000000200015fc       0x18 regbits.o

.rel.dyn        0x0000000020001614        0x0
 .rel.iplt      0x0000000020001614        0x0 regbits.o

.data           0x0000000020001614        0x0
                0x0000000020001614                . = ALIGN (0x4)
 *(.data)
 .data          0x0000000020001614        0x0 regbits.o
 .data          0x0000000020001614        0x0 main.o
 .data          0x0000000020001614        0x0 stm32f103_ram_init.o
                0x0000000020001614                BSS_START = .

.igot.plt       0x0000000020001614        0x0
 .igot.plt      0x0000000020001614        0x0 regbits.o

.bss            0x0000000020001614      0x3d8
                0x0000000020001614                . = ALIGN (0x4)
 *(.bss)
 .bss           0x0000000020001614       0x30 regbits.o
 .bss           0x0000000020001644        0x0 main.o
 .bss           0x0000000020001644        0x0 stm32f103_ram_init.o
 COMMON         0x0000000020001644      0x3a8 main.o
                0x0000000020001644                finish
                0x0000000020001648                results
                0x00000000200019e8                start
                0x00000000200019ec                BSS_END = .
                0x00000000200019ec                end = .
                0x0000000020005000                TOP_OF_STACK = (ORIGIN (RAM) + LENGTH (RAM))
OUTPUT(regbits.elf elf32-littlearm)

.debug_info     0x0000000000000000    0x131f5
 .debug_info    0x0000000000000000    0x1273b regbits.o
 .debug_info    0x000000000001273b      0x2f2 main.o
 .debug_info    0x0000000000012a2d      0x7c8 stm32f103_ram_init.o

.debug_abbrev   0x0000000000000000      0xa7e
 .debug_abbrev  0x0000000000000000      0x6ff regbits.o
 .debug_abbrev  0x00000000000006ff      0x1df main.o
 .debug_abbrev  0x00000000000008de      0x1a0 stm32f103_ram_init.o

.debug_loc      0x0000000000000000     0x269b
 .debug_loc     0x0000000000000000     0x2524 regbits.o
 .debug_loc     0x0000000000002524      0x13b main.o
 .debug_loc     0x000000000000265f       0x3c stm32f103_ram_init.o

.debug_aranges  0x0000000000000000       0x68
 .debug_aranges
                0x0000000000000000       0x20 regbits.o
 .debug_aranges
                0x0000000000000020       0x28 main.o
 .debug_aranges
                0x0000000000000048       0x20 stm32f103_ram_init.o

.debug_ranges   0x0000000000000000      0x2a0
 .debug_ranges  0x0000000000000000      0x288 regbits.o
 .debug_ranges  0x0000000000000288       0x18 main.o

.debug_macro    0x0000000000000000    0x114cb
 .debug_macro   0x0000000000000000       0x8e regbits.o
 .debug_macro   0x000000000000008e      0xb2c regbits.o
 .debug_macro   0x0000000000000bba       0x1c regbits.o
 .debug_macro   0x0000000000000bd6       0x22 regbits.o
 .debug_macro   0x0000000000000bf8       0x56 regbits.o
 .debug_macro   0x0000000000000c4e       0x51 regbits.o
 .debug_macro   0x0000000000000c9f       0xef regbits.o
 .debug_macro   0x0000000000000d8e       0x6a regbits.o
 .debug_macro   0x0000000000000df8      0x1df regbits.o
 .debug_macro   0x0000000000000fd7       0x1f regbits.o
 .debug_macro   0x0000000000000ff6       0x58 regbits.o
 .debug_macro   0x000000000000104e      0x17b regbits.o
 .debug_macro   0x00000000000011c9       0xa9 main.o
 .debug_macro   0x0000000000001272      0xa7e main.o
 .debug_macro   0x0000000000001cf0      0x174 main.o
 .debug_macro   0x0000000000001e64       0x8e main.o
 .debug_macro   0x0000000000001ef2       0x3a main.o
 .debug_macro   0x0000000000001f2c       0x34 main.o
 .debug_macro   0x0000000000001f60      0xb8e main.o
 .debug_macro   0x0000000000002aee       0xb1 stm32f103_ram_init.o
 .debug_macro   0x0000000000002b9f       0x22 stm32f103_ram_init.o
 .debug_macro   0x0000000000002bc1     0xe90a stm32f103_ram_init.o

.debug_line     0x0000000000000000     0x3211
 .debug_line    0x0000000000000000     0x261a regbits.o
 .debug_line    0x000000000000261a      0x38a main.o
 .debug_line    0x00000000000029a4      0x86d stm32f103_ram_init.o

.debug_str      0x0000000000000000    0x694ce
 .debug_str     0x0000000000000000    0x17347 regbits.o
                                      0x176ab (size before relaxing)
 .debug_str     0x0000000000017347     0x456d main.o
                                       0x82cf (size before relaxing)
 .debug_str     0x000000000001b8b4    0x4dc1a stm32f103_ram_init.o
                                      0x55c64 (size before relaxing)

.comment        0x0000000000000000       0x75
 .comment       0x0000000000000000       0x75 regbits.o
                                         0x76 (size before relaxing)
 .comment       0x0000000000000075       0x76 main.o
 .comment       0x0000000000000075       0x76 stm32f103_ram_init.o

.ARM.attributes
                0x0000000000000000       0x1b
 .ARM.attributes
                0x0000000000000000       0x1b regbits.o
 .ARM.attributes
                0x000000000000001b       0x1b main.o
 .ARM.attributes
                0x0000000000000036       0x1b stm32f103_ram_init.o

.debug_frame    0x0000000000000000      0xf20
 .debug_frame   0x0000000000000000      0xb08 regbits.o
 .debug_frame   0x0000000000000b08       0x58 main.o
 .debug_frame   0x0000000000000b60      0x3c0 stm32f103_ram_init.o
Memory region         Used Size  Region Size  %age Used
           FLASH:          0 GB        64 KB      0.00%
             RAM:        6636 B        20 KB     32.40%
