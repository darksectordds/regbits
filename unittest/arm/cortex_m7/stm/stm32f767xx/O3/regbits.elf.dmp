
regbits.elf:     file format elf32-littlearm


Disassembly of section .text:

20020000 <INTERRUPT_VECTORS>:
20020000:	00 c0 07 20 b1 17 02 20 c9 15 02 20 cd 15 02 20     ... ... ... ... 
20020010:	d1 15 02 20 d5 15 02 20 d9 15 02 20 dd 15 02 20     ... ... ... ... 
20020020:	e1 15 02 20 e5 15 02 20 e9 15 02 20 ed 15 02 20     ... ... ... ... 
20020030:	f1 15 02 20 f5 15 02 20 f9 15 02 20 fd 15 02 20     ... ... ... ... 
20020040:	01 16 02 20 05 16 02 20 09 16 02 20 0d 16 02 20     ... ... ... ... 
20020050:	11 16 02 20 15 16 02 20 19 16 02 20 1d 16 02 20     ... ... ... ... 
20020060:	21 16 02 20 25 16 02 20 29 16 02 20 2d 16 02 20     !.. %.. ).. -.. 
20020070:	31 16 02 20 35 16 02 20 39 16 02 20 3d 16 02 20     1.. 5.. 9.. =.. 
20020080:	41 16 02 20 45 16 02 20 49 16 02 20 4d 16 02 20     A.. E.. I.. M.. 
20020090:	51 16 02 20 55 16 02 20 59 16 02 20 5d 16 02 20     Q.. U.. Y.. ].. 
200200a0:	61 16 02 20 65 16 02 20 69 16 02 20 6d 16 02 20     a.. e.. i.. m.. 
200200b0:	71 16 02 20 75 16 02 20 79 16 02 20 7d 16 02 20     q.. u.. y.. }.. 
200200c0:	81 16 02 20 85 16 02 20 89 16 02 20 8d 16 02 20     ... ... ... ... 
200200d0:	91 16 02 20 95 16 02 20 99 16 02 20 9d 16 02 20     ... ... ... ... 
200200e0:	a1 16 02 20 a5 16 02 20 a9 16 02 20 ad 16 02 20     ... ... ... ... 
200200f0:	b1 16 02 20 b5 16 02 20 b9 16 02 20 bd 16 02 20     ... ... ... ... 
20020100:	c1 16 02 20 c5 16 02 20 c9 16 02 20 cd 16 02 20     ... ... ... ... 
20020110:	d1 16 02 20 d5 16 02 20 d9 16 02 20 dd 16 02 20     ... ... ... ... 
20020120:	e1 16 02 20 e5 16 02 20 e9 16 02 20 ed 16 02 20     ... ... ... ... 
20020130:	f1 16 02 20 f5 16 02 20 f9 16 02 20 fd 16 02 20     ... ... ... ... 
20020140:	01 17 02 20 05 17 02 20 09 17 02 20 0d 17 02 20     ... ... ... ... 
20020150:	11 17 02 20 15 17 02 20 19 17 02 20 1d 17 02 20     ... ... ... ... 
20020160:	21 17 02 20 25 17 02 20 29 17 02 20 2d 17 02 20     !.. %.. ).. -.. 
20020170:	31 17 02 20 35 17 02 20 39 17 02 20 3d 17 02 20     1.. 5.. 9.. =.. 
20020180:	41 17 02 20 45 17 02 20 49 17 02 20 4d 17 02 20     A.. E.. I.. M.. 
20020190:	51 17 02 20 55 17 02 20 59 17 02 20 5d 17 02 20     Q.. U.. Y.. ].. 
200201a0:	61 17 02 20 65 17 02 20 69 17 02 20 6d 17 02 20     a.. e.. i.. m.. 
200201b0:	71 17 02 20 75 17 02 20 79 17 02 20 7d 17 02 20     q.. u.. y.. }.. 
200201c0:	81 17 02 20 85 17 02 20 89 17 02 20 8d 17 02 20     ... ... ... ... 
200201d0:	91 17 02 20 95 17 02 20 99 17 02 20 9d 17 02 20     ... ... ... ... 
200201e0:	a1 17 02 20 a5 17 02 20 a9 17 02 20 ad 17 02 20     ... ... ... ... 

200201f0 <zero_reg()>:
200201f0:	4b01      	ldr	r3, [pc, #4]	; (200201f8 <zero_reg()+0x8>)
200201f2:	2200      	movs	r2, #0
200201f4:	605a      	str	r2, [r3, #4]
200201f6:	4770      	bx	lr
200201f8:	200226c0 	.word	0x200226c0

200201fc <zero_array()>:
200201fc:	4b01      	ldr	r3, [pc, #4]	; (20020204 <zero_array()+0x8>)
200201fe:	2200      	movs	r2, #0
20020200:	62da      	str	r2, [r3, #44]	; 0x2c
20020202:	4770      	bx	lr
20020204:	20022500 	.word	0x20022500

20020208 <set_singl_bits_operator()>:
20020208:	4a02      	ldr	r2, [pc, #8]	; (20020214 <set_singl_bits_operator()+0xc>)
2002020a:	6853      	ldr	r3, [r2, #4]
2002020c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020210:	6053      	str	r3, [r2, #4]
20020212:	4770      	bx	lr
20020214:	200226c0 	.word	0x200226c0

20020218 <set_singl_bits_method()>:
20020218:	4a02      	ldr	r2, [pc, #8]	; (20020224 <set_singl_bits_method()+0xc>)
2002021a:	6853      	ldr	r3, [r2, #4]
2002021c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020220:	6053      	str	r3, [r2, #4]
20020222:	4770      	bx	lr
20020224:	200226c0 	.word	0x200226c0

20020228 <clr_singl_bits_operator()>:
20020228:	4a02      	ldr	r2, [pc, #8]	; (20020234 <clr_singl_bits_operator()+0xc>)
2002022a:	6853      	ldr	r3, [r2, #4]
2002022c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
20020230:	6053      	str	r3, [r2, #4]
20020232:	4770      	bx	lr
20020234:	200226c0 	.word	0x200226c0

20020238 <clr_singl_bits_method()>:
20020238:	4a02      	ldr	r2, [pc, #8]	; (20020244 <clr_singl_bits_method()+0xc>)
2002023a:	6853      	ldr	r3, [r2, #4]
2002023c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
20020240:	6053      	str	r3, [r2, #4]
20020242:	4770      	bx	lr
20020244:	200226c0 	.word	0x200226c0

20020248 <set_singl_mskd_operator()>:
20020248:	4a02      	ldr	r2, [pc, #8]	; (20020254 <set_singl_mskd_operator()+0xc>)
2002024a:	6853      	ldr	r3, [r2, #4]
2002024c:	f043 0302 	orr.w	r3, r3, #2
20020250:	6053      	str	r3, [r2, #4]
20020252:	4770      	bx	lr
20020254:	200226c0 	.word	0x200226c0

20020258 <set_singl_mskd_method()>:
20020258:	4a02      	ldr	r2, [pc, #8]	; (20020264 <set_singl_mskd_method()+0xc>)
2002025a:	6853      	ldr	r3, [r2, #4]
2002025c:	f043 0302 	orr.w	r3, r3, #2
20020260:	6053      	str	r3, [r2, #4]
20020262:	4770      	bx	lr
20020264:	200226c0 	.word	0x200226c0

20020268 <clr_singl_mskd_operator()>:
20020268:	4a02      	ldr	r2, [pc, #8]	; (20020274 <clr_singl_mskd_operator()+0xc>)
2002026a:	6853      	ldr	r3, [r2, #4]
2002026c:	f023 0302 	bic.w	r3, r3, #2
20020270:	6053      	str	r3, [r2, #4]
20020272:	4770      	bx	lr
20020274:	200226c0 	.word	0x200226c0

20020278 <clr_singl_mskd_method()>:
20020278:	4a02      	ldr	r2, [pc, #8]	; (20020284 <clr_singl_mskd_method()+0xc>)
2002027a:	6853      	ldr	r3, [r2, #4]
2002027c:	f023 0302 	bic.w	r3, r3, #2
20020280:	6053      	str	r3, [r2, #4]
20020282:	4770      	bx	lr
20020284:	200226c0 	.word	0x200226c0

20020288 <equ_singl_bits_operator()>:
20020288:	4b01      	ldr	r3, [pc, #4]	; (20020290 <equ_singl_bits_operator()+0x8>)
2002028a:	2240      	movs	r2, #64	; 0x40
2002028c:	605a      	str	r2, [r3, #4]
2002028e:	4770      	bx	lr
20020290:	200226c0 	.word	0x200226c0

20020294 <equ_singl_bits_method()>:
20020294:	4b01      	ldr	r3, [pc, #4]	; (2002029c <equ_singl_bits_method()+0x8>)
20020296:	2240      	movs	r2, #64	; 0x40
20020298:	605a      	str	r2, [r3, #4]
2002029a:	4770      	bx	lr
2002029c:	200226c0 	.word	0x200226c0

200202a0 <equ_singl_mskd_operator()>:
200202a0:	4b01      	ldr	r3, [pc, #4]	; (200202a8 <equ_singl_mskd_operator()+0x8>)
200202a2:	2202      	movs	r2, #2
200202a4:	605a      	str	r2, [r3, #4]
200202a6:	4770      	bx	lr
200202a8:	200226c0 	.word	0x200226c0

200202ac <equ_singl_mskd_method()>:
200202ac:	4b01      	ldr	r3, [pc, #4]	; (200202b4 <equ_singl_mskd_method()+0x8>)
200202ae:	2202      	movs	r2, #2
200202b0:	605a      	str	r2, [r3, #4]
200202b2:	4770      	bx	lr
200202b4:	200226c0 	.word	0x200226c0

200202b8 <flp_singl_bits_operator()>:
200202b8:	4a02      	ldr	r2, [pc, #8]	; (200202c4 <flp_singl_bits_operator()+0xc>)
200202ba:	6853      	ldr	r3, [r2, #4]
200202bc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
200202c0:	6053      	str	r3, [r2, #4]
200202c2:	4770      	bx	lr
200202c4:	200226c0 	.word	0x200226c0

200202c8 <flp_singl_bits_method()>:
200202c8:	4a02      	ldr	r2, [pc, #8]	; (200202d4 <flp_singl_bits_method()+0xc>)
200202ca:	6853      	ldr	r3, [r2, #4]
200202cc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
200202d0:	6053      	str	r3, [r2, #4]
200202d2:	4770      	bx	lr
200202d4:	200226c0 	.word	0x200226c0

200202d8 <flp_singl_mskd_operator()>:
200202d8:	4a02      	ldr	r2, [pc, #8]	; (200202e4 <flp_singl_mskd_operator()+0xc>)
200202da:	6853      	ldr	r3, [r2, #4]
200202dc:	f083 0302 	eor.w	r3, r3, #2
200202e0:	6053      	str	r3, [r2, #4]
200202e2:	4770      	bx	lr
200202e4:	200226c0 	.word	0x200226c0

200202e8 <flp_singl_mskd_method()>:
200202e8:	4a02      	ldr	r2, [pc, #8]	; (200202f4 <flp_singl_mskd_method()+0xc>)
200202ea:	6853      	ldr	r3, [r2, #4]
200202ec:	f083 0302 	eor.w	r3, r3, #2
200202f0:	6053      	str	r3, [r2, #4]
200202f2:	4770      	bx	lr
200202f4:	200226c0 	.word	0x200226c0

200202f8 <ins_singl_mskd_operator()>:
200202f8:	4a03      	ldr	r2, [pc, #12]	; (20020308 <ins_singl_mskd_operator()+0x10>)
200202fa:	6853      	ldr	r3, [r2, #4]
200202fc:	f023 0306 	bic.w	r3, r3, #6
20020300:	f043 0304 	orr.w	r3, r3, #4
20020304:	6053      	str	r3, [r2, #4]
20020306:	4770      	bx	lr
20020308:	200226c0 	.word	0x200226c0

2002030c <ins_singl_mskd_method()>:
2002030c:	4a03      	ldr	r2, [pc, #12]	; (2002031c <ins_singl_mskd_method()+0x10>)
2002030e:	6853      	ldr	r3, [r2, #4]
20020310:	f023 0306 	bic.w	r3, r3, #6
20020314:	f043 0304 	orr.w	r3, r3, #4
20020318:	6053      	str	r3, [r2, #4]
2002031a:	4770      	bx	lr
2002031c:	200226c0 	.word	0x200226c0

20020320 <set_multi_bits_operator()>:
20020320:	4a02      	ldr	r2, [pc, #8]	; (2002032c <set_multi_bits_operator()+0xc>)
20020322:	6853      	ldr	r3, [r2, #4]
20020324:	f043 0321 	orr.w	r3, r3, #33	; 0x21
20020328:	6053      	str	r3, [r2, #4]
2002032a:	4770      	bx	lr
2002032c:	200226c0 	.word	0x200226c0

20020330 <set_multi_bits_method()>:
20020330:	4a02      	ldr	r2, [pc, #8]	; (2002033c <set_multi_bits_method()+0xc>)
20020332:	6853      	ldr	r3, [r2, #4]
20020334:	f043 0321 	orr.w	r3, r3, #33	; 0x21
20020338:	6053      	str	r3, [r2, #4]
2002033a:	4770      	bx	lr
2002033c:	200226c0 	.word	0x200226c0

20020340 <ins_multi_mskd_operator()>:
20020340:	4a03      	ldr	r2, [pc, #12]	; (20020350 <ins_multi_mskd_operator()+0x10>)
20020342:	4b04      	ldr	r3, [pc, #16]	; (20020354 <ins_multi_mskd_operator()+0x14>)
20020344:	6851      	ldr	r1, [r2, #4]
20020346:	400b      	ands	r3, r1
20020348:	f443 73c1 	orr.w	r3, r3, #386	; 0x182
2002034c:	6053      	str	r3, [r2, #4]
2002034e:	4770      	bx	lr
20020350:	200226c0 	.word	0x200226c0
20020354:	fffff079 	.word	0xfffff079

20020358 <ins_multi_mskd_method()>:
20020358:	4a03      	ldr	r2, [pc, #12]	; (20020368 <ins_multi_mskd_method()+0x10>)
2002035a:	4b04      	ldr	r3, [pc, #16]	; (2002036c <ins_multi_mskd_method()+0x14>)
2002035c:	6851      	ldr	r1, [r2, #4]
2002035e:	400b      	ands	r3, r1
20020360:	f443 73c1 	orr.w	r3, r3, #386	; 0x182
20020364:	6053      	str	r3, [r2, #4]
20020366:	4770      	bx	lr
20020368:	200226c0 	.word	0x200226c0
2002036c:	fffff079 	.word	0xfffff079

20020370 <equ_multi_bits_operator()>:
20020370:	4b01      	ldr	r3, [pc, #4]	; (20020378 <equ_multi_bits_operator()+0x8>)
20020372:	2260      	movs	r2, #96	; 0x60
20020374:	605a      	str	r2, [r3, #4]
20020376:	4770      	bx	lr
20020378:	200226c0 	.word	0x200226c0

2002037c <equ_multi_bits_method()>:
2002037c:	4b01      	ldr	r3, [pc, #4]	; (20020384 <equ_multi_bits_method()+0x8>)
2002037e:	2260      	movs	r2, #96	; 0x60
20020380:	605a      	str	r2, [r3, #4]
20020382:	4770      	bx	lr
20020384:	200226c0 	.word	0x200226c0

20020388 <equ_multi_mskd_operator()>:
20020388:	4b02      	ldr	r3, [pc, #8]	; (20020394 <equ_multi_mskd_operator()+0xc>)
2002038a:	f44f 7242 	mov.w	r2, #776	; 0x308
2002038e:	605a      	str	r2, [r3, #4]
20020390:	4770      	bx	lr
20020392:	bf00      	nop
20020394:	200226c0 	.word	0x200226c0

20020398 <equ_multi_mskd_method()>:
20020398:	4b02      	ldr	r3, [pc, #8]	; (200203a4 <equ_multi_mskd_method()+0xc>)
2002039a:	f44f 7242 	mov.w	r2, #776	; 0x308
2002039e:	605a      	str	r2, [r3, #4]
200203a0:	4770      	bx	lr
200203a2:	bf00      	nop
200203a4:	200226c0 	.word	0x200226c0

200203a8 <equ_bits_mskd_operator()>:
200203a8:	4b01      	ldr	r3, [pc, #4]	; (200203b0 <equ_bits_mskd_operator()+0x8>)
200203aa:	2222      	movs	r2, #34	; 0x22
200203ac:	605a      	str	r2, [r3, #4]
200203ae:	4770      	bx	lr
200203b0:	200226c0 	.word	0x200226c0

200203b4 <equ_bits_mskd_method()>:
200203b4:	4b01      	ldr	r3, [pc, #4]	; (200203bc <equ_bits_mskd_method()+0x8>)
200203b6:	2222      	movs	r2, #34	; 0x22
200203b8:	605a      	str	r2, [r3, #4]
200203ba:	4770      	bx	lr
200203bc:	200226c0 	.word	0x200226c0

200203c0 <equ_mskd_bits_operator()>:
200203c0:	4b01      	ldr	r3, [pc, #4]	; (200203c8 <equ_mskd_bits_operator()+0x8>)
200203c2:	2244      	movs	r2, #68	; 0x44
200203c4:	605a      	str	r2, [r3, #4]
200203c6:	4770      	bx	lr
200203c8:	200226c0 	.word	0x200226c0

200203cc <equ_mskd_bits_method()>:
200203cc:	4b01      	ldr	r3, [pc, #4]	; (200203d4 <equ_mskd_bits_method()+0x8>)
200203ce:	2244      	movs	r2, #68	; 0x44
200203d0:	605a      	str	r2, [r3, #4]
200203d2:	4770      	bx	lr
200203d4:	200226c0 	.word	0x200226c0

200203d8 <equ_bits_var()>:
200203d8:	4b02      	ldr	r3, [pc, #8]	; (200203e4 <equ_bits_var()+0xc>)
200203da:	2140      	movs	r1, #64	; 0x40
200203dc:	2201      	movs	r2, #1
200203de:	6059      	str	r1, [r3, #4]
200203e0:	605a      	str	r2, [r3, #4]
200203e2:	4770      	bx	lr
200203e4:	200226c0 	.word	0x200226c0

200203e8 <equ_mskd_var()>:
200203e8:	4b03      	ldr	r3, [pc, #12]	; (200203f8 <equ_mskd_var()+0x10>)
200203ea:	2102      	movs	r1, #2
200203ec:	f44f 72c0 	mov.w	r2, #384	; 0x180
200203f0:	6059      	str	r1, [r3, #4]
200203f2:	605a      	str	r2, [r3, #4]
200203f4:	4770      	bx	lr
200203f6:	bf00      	nop
200203f8:	200226c0 	.word	0x200226c0

200203fc <cmp_equ_zero()>:
200203fc:	4b07      	ldr	r3, [pc, #28]	; (2002041c <cmp_equ_zero()+0x20>)
200203fe:	2200      	movs	r2, #0
20020400:	605a      	str	r2, [r3, #4]
20020402:	685b      	ldr	r3, [r3, #4]
20020404:	b923      	cbnz	r3, 20020410 <cmp_equ_zero()+0x14>
20020406:	4b06      	ldr	r3, [pc, #24]	; (20020420 <cmp_equ_zero()+0x24>)
20020408:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
2002040c:	605a      	str	r2, [r3, #4]
2002040e:	4770      	bx	lr
20020410:	4b03      	ldr	r3, [pc, #12]	; (20020420 <cmp_equ_zero()+0x24>)
20020412:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020416:	605a      	str	r2, [r3, #4]
20020418:	4770      	bx	lr
2002041a:	bf00      	nop
2002041c:	200226c0 	.word	0x200226c0
20020420:	20022620 	.word	0x20022620

20020424 <cmp_neq_zero()>:
20020424:	4b05      	ldr	r3, [pc, #20]	; (2002043c <cmp_neq_zero()+0x18>)
20020426:	2200      	movs	r2, #0
20020428:	605a      	str	r2, [r3, #4]
2002042a:	685a      	ldr	r2, [r3, #4]
2002042c:	b112      	cbz	r2, 20020434 <cmp_neq_zero()+0x10>
2002042e:	2204      	movs	r2, #4
20020430:	605a      	str	r2, [r3, #4]
20020432:	4770      	bx	lr
20020434:	2220      	movs	r2, #32
20020436:	605a      	str	r2, [r3, #4]
20020438:	4770      	bx	lr
2002043a:	bf00      	nop
2002043c:	200226c0 	.word	0x200226c0

20020440 <cmp_equ_bits()>:
20020440:	2240      	movs	r2, #64	; 0x40
20020442:	4b06      	ldr	r3, [pc, #24]	; (2002045c <cmp_equ_bits()+0x1c>)
20020444:	605a      	str	r2, [r3, #4]
20020446:	685b      	ldr	r3, [r3, #4]
20020448:	f013 0f40 	tst.w	r3, #64	; 0x40
2002044c:	4b04      	ldr	r3, [pc, #16]	; (20020460 <cmp_equ_bits()+0x20>)
2002044e:	bf14      	ite	ne
20020450:	f04f 52b0 	movne.w	r2, #369098752	; 0x16000000
20020454:	f04f 52d0 	moveq.w	r2, #436207616	; 0x1a000000
20020458:	605a      	str	r2, [r3, #4]
2002045a:	4770      	bx	lr
2002045c:	200226c0 	.word	0x200226c0
20020460:	20022620 	.word	0x20022620

20020464 <cmp_neq_bits()>:
20020464:	4b04      	ldr	r3, [pc, #16]	; (20020478 <cmp_neq_bits()+0x14>)
20020466:	2240      	movs	r2, #64	; 0x40
20020468:	605a      	str	r2, [r3, #4]
2002046a:	685a      	ldr	r2, [r3, #4]
2002046c:	0652      	lsls	r2, r2, #25
2002046e:	bf54      	ite	pl
20020470:	2202      	movpl	r2, #2
20020472:	2220      	movmi	r2, #32
20020474:	605a      	str	r2, [r3, #4]
20020476:	4770      	bx	lr
20020478:	200226c0 	.word	0x200226c0

2002047c <cmp_equ_multi_bits()>:
2002047c:	2260      	movs	r2, #96	; 0x60
2002047e:	4b06      	ldr	r3, [pc, #24]	; (20020498 <cmp_equ_multi_bits()+0x1c>)
20020480:	605a      	str	r2, [r3, #4]
20020482:	685b      	ldr	r3, [r3, #4]
20020484:	4013      	ands	r3, r2
20020486:	4293      	cmp	r3, r2
20020488:	4b04      	ldr	r3, [pc, #16]	; (2002049c <cmp_equ_multi_bits()+0x20>)
2002048a:	bf0c      	ite	eq
2002048c:	f04f 5208 	moveq.w	r2, #570425344	; 0x22000000
20020490:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
20020494:	605a      	str	r2, [r3, #4]
20020496:	4770      	bx	lr
20020498:	200226c0 	.word	0x200226c0
2002049c:	20022620 	.word	0x20022620

200204a0 <cmp_neq_multi_bits()>:
200204a0:	2260      	movs	r2, #96	; 0x60
200204a2:	4b06      	ldr	r3, [pc, #24]	; (200204bc <cmp_neq_multi_bits()+0x1c>)
200204a4:	605a      	str	r2, [r3, #4]
200204a6:	685b      	ldr	r3, [r3, #4]
200204a8:	4013      	ands	r3, r2
200204aa:	4293      	cmp	r3, r2
200204ac:	4b04      	ldr	r3, [pc, #16]	; (200204c0 <cmp_neq_multi_bits()+0x20>)
200204ae:	bf14      	ite	ne
200204b0:	f04f 5268 	movne.w	r2, #973078528	; 0x3a000000
200204b4:	f04f 5278 	moveq.w	r2, #1040187392	; 0x3e000000
200204b8:	605a      	str	r2, [r3, #4]
200204ba:	4770      	bx	lr
200204bc:	200226c0 	.word	0x200226c0
200204c0:	20022620 	.word	0x20022620

200204c4 <cmp_equ_mskd()>:
200204c4:	4b09      	ldr	r3, [pc, #36]	; (200204ec <cmp_equ_mskd()+0x28>)
200204c6:	f44f 32e8 	mov.w	r2, #118784	; 0x1d000
200204ca:	605a      	str	r2, [r3, #4]
200204cc:	685b      	ldr	r3, [r3, #4]
200204ce:	4a08      	ldr	r2, [pc, #32]	; (200204f0 <cmp_equ_mskd()+0x2c>)
200204d0:	f403 33f8 	and.w	r3, r3, #126976	; 0x1f000
200204d4:	f5b3 3f88 	cmp.w	r3, #69632	; 0x11000
200204d8:	6853      	ldr	r3, [r2, #4]
200204da:	f023 5378 	bic.w	r3, r3, #1040187392	; 0x3e000000
200204de:	bf0c      	ite	eq
200204e0:	f043 6360 	orreq.w	r3, r3, #234881024	; 0xe000000
200204e4:	f043 5308 	orrne.w	r3, r3, #570425344	; 0x22000000
200204e8:	6053      	str	r3, [r2, #4]
200204ea:	4770      	bx	lr
200204ec:	200226c0 	.word	0x200226c0
200204f0:	20022620 	.word	0x20022620

200204f4 <cmp_neq_mskd()>:
200204f4:	4b0a      	ldr	r3, [pc, #40]	; (20020520 <cmp_neq_mskd()+0x2c>)
200204f6:	f44f 32e8 	mov.w	r2, #118784	; 0x1d000
200204fa:	605a      	str	r2, [r3, #4]
200204fc:	685a      	ldr	r2, [r3, #4]
200204fe:	f402 32f8 	and.w	r2, r2, #126976	; 0x1f000
20020502:	f5b2 3f88 	cmp.w	r2, #69632	; 0x11000
20020506:	685a      	ldr	r2, [r3, #4]
20020508:	d005      	beq.n	20020516 <cmp_neq_mskd()+0x22>
2002050a:	f022 0206 	bic.w	r2, r2, #6
2002050e:	f042 0204 	orr.w	r2, r2, #4
20020512:	605a      	str	r2, [r3, #4]
20020514:	4770      	bx	lr
20020516:	f042 0240 	orr.w	r2, r2, #64	; 0x40
2002051a:	605a      	str	r2, [r3, #4]
2002051c:	4770      	bx	lr
2002051e:	bf00      	nop
20020520:	200226c0 	.word	0x200226c0

20020524 <cmp_equ_reg()>:
20020524:	2222      	movs	r2, #34	; 0x22
20020526:	4b06      	ldr	r3, [pc, #24]	; (20020540 <cmp_equ_reg()+0x1c>)
20020528:	605a      	str	r2, [r3, #4]
2002052a:	685b      	ldr	r3, [r3, #4]
2002052c:	4293      	cmp	r3, r2
2002052e:	4b05      	ldr	r3, [pc, #20]	; (20020544 <cmp_equ_reg()+0x20>)
20020530:	bf0c      	ite	eq
20020532:	f04f 5228 	moveq.w	r2, #704643072	; 0x2a000000
20020536:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
2002053a:	605a      	str	r2, [r3, #4]
2002053c:	4770      	bx	lr
2002053e:	bf00      	nop
20020540:	200226c0 	.word	0x200226c0
20020544:	20022620 	.word	0x20022620

20020548 <cmp_neq_reg()>:
20020548:	4b04      	ldr	r3, [pc, #16]	; (2002055c <cmp_neq_reg()+0x14>)
2002054a:	2222      	movs	r2, #34	; 0x22
2002054c:	605a      	str	r2, [r3, #4]
2002054e:	685a      	ldr	r2, [r3, #4]
20020550:	2a22      	cmp	r2, #34	; 0x22
20020552:	bf14      	ite	ne
20020554:	2202      	movne	r2, #2
20020556:	2220      	moveq	r2, #32
20020558:	605a      	str	r2, [r3, #4]
2002055a:	4770      	bx	lr
2002055c:	200226c0 	.word	0x200226c0

20020560 <constexpr_bits_array()>:
20020560:	4b03      	ldr	r3, [pc, #12]	; (20020570 <constexpr_bits_array()+0x10>)
20020562:	2106      	movs	r1, #6
20020564:	f44f 5200 	mov.w	r2, #8192	; 0x2000
20020568:	62d9      	str	r1, [r3, #44]	; 0x2c
2002056a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
2002056e:	4770      	bx	lr
20020570:	20022500 	.word	0x20022500

20020574 <runtime_bits_array()>:
20020574:	b081      	sub	sp, #4
20020576:	2203      	movs	r2, #3
20020578:	4b04      	ldr	r3, [pc, #16]	; (2002058c <runtime_bits_array()+0x18>)
2002057a:	2121      	movs	r1, #33	; 0x21
2002057c:	9200      	str	r2, [sp, #0]
2002057e:	9a00      	ldr	r2, [sp, #0]
20020580:	0092      	lsls	r2, r2, #2
20020582:	4413      	add	r3, r2
20020584:	6219      	str	r1, [r3, #32]
20020586:	b001      	add	sp, #4
20020588:	4770      	bx	lr
2002058a:	bf00      	nop
2002058c:	20022500 	.word	0x20022500

20020590 <prescaler_low()>:
20020590:	4b04      	ldr	r3, [pc, #16]	; (200205a4 <prescaler_low()+0x14>)
20020592:	2177      	movs	r1, #119	; 0x77
20020594:	4a04      	ldr	r2, [pc, #16]	; (200205a8 <prescaler_low()+0x18>)
20020596:	6059      	str	r1, [r3, #4]
20020598:	685b      	ldr	r3, [r3, #4]
2002059a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
2002059e:	62d3      	str	r3, [r2, #44]	; 0x2c
200205a0:	4770      	bx	lr
200205a2:	bf00      	nop
200205a4:	20022620 	.word	0x20022620
200205a8:	20022500 	.word	0x20022500

200205ac <prescaler_high()>:
200205ac:	4b04      	ldr	r3, [pc, #16]	; (200205c0 <prescaler_high()+0x14>)
200205ae:	f04f 5168 	mov.w	r1, #973078528	; 0x3a000000
200205b2:	4a04      	ldr	r2, [pc, #16]	; (200205c4 <prescaler_high()+0x18>)
200205b4:	6059      	str	r1, [r3, #4]
200205b6:	685b      	ldr	r3, [r3, #4]
200205b8:	f3c3 6344 	ubfx	r3, r3, #25, #5
200205bc:	62d3      	str	r3, [r2, #44]	; 0x2c
200205be:	4770      	bx	lr
200205c0:	20022620 	.word	0x20022620
200205c4:	20022500 	.word	0x20022500

200205c8 <reg_mskd_lss()>:
200205c8:	f04f 5258 	mov.w	r2, #905969664	; 0x36000000
200205cc:	4b06      	ldr	r3, [pc, #24]	; (200205e8 <reg_mskd_lss()+0x20>)
200205ce:	605a      	str	r2, [r3, #4]
200205d0:	685b      	ldr	r3, [r3, #4]
200205d2:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200205d6:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
200205da:	4b04      	ldr	r3, [pc, #16]	; (200205ec <reg_mskd_lss()+0x24>)
200205dc:	bf34      	ite	cc
200205de:	2202      	movcc	r2, #2
200205e0:	2204      	movcs	r2, #4
200205e2:	605a      	str	r2, [r3, #4]
200205e4:	4770      	bx	lr
200205e6:	bf00      	nop
200205e8:	20022620 	.word	0x20022620
200205ec:	200226c0 	.word	0x200226c0

200205f0 <reg_mskd_leq()>:
200205f0:	4a0b      	ldr	r2, [pc, #44]	; (20020620 <reg_mskd_leq()+0x30>)
200205f2:	f04f 5338 	mov.w	r3, #771751936	; 0x2e000000
200205f6:	6053      	str	r3, [r2, #4]
200205f8:	6853      	ldr	r3, [r2, #4]
200205fa:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200205fe:	f1b3 5f38 	cmp.w	r3, #771751936	; 0x2e000000
20020602:	d809      	bhi.n	20020618 <reg_mskd_leq()+0x28>
20020604:	6853      	ldr	r3, [r2, #4]
20020606:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002060a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
2002060e:	d803      	bhi.n	20020618 <reg_mskd_leq()+0x28>
20020610:	4b04      	ldr	r3, [pc, #16]	; (20020624 <reg_mskd_leq()+0x34>)
20020612:	2202      	movs	r2, #2
20020614:	605a      	str	r2, [r3, #4]
20020616:	4770      	bx	lr
20020618:	4b02      	ldr	r3, [pc, #8]	; (20020624 <reg_mskd_leq()+0x34>)
2002061a:	2204      	movs	r2, #4
2002061c:	605a      	str	r2, [r3, #4]
2002061e:	4770      	bx	lr
20020620:	20022620 	.word	0x20022620
20020624:	200226c0 	.word	0x200226c0

20020628 <reg_mskd_gtr()>:
20020628:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
2002062c:	4b06      	ldr	r3, [pc, #24]	; (20020648 <reg_mskd_gtr()+0x20>)
2002062e:	605a      	str	r2, [r3, #4]
20020630:	685b      	ldr	r3, [r3, #4]
20020632:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
20020636:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
2002063a:	4b04      	ldr	r3, [pc, #16]	; (2002064c <reg_mskd_gtr()+0x24>)
2002063c:	bf8c      	ite	hi
2002063e:	2202      	movhi	r2, #2
20020640:	2204      	movls	r2, #4
20020642:	605a      	str	r2, [r3, #4]
20020644:	4770      	bx	lr
20020646:	bf00      	nop
20020648:	20022620 	.word	0x20022620
2002064c:	200226c0 	.word	0x200226c0

20020650 <reg_mskd_geq()>:
20020650:	4a0b      	ldr	r2, [pc, #44]	; (20020680 <reg_mskd_geq()+0x30>)
20020652:	f04f 5308 	mov.w	r3, #570425344	; 0x22000000
20020656:	6053      	str	r3, [r2, #4]
20020658:	6853      	ldr	r3, [r2, #4]
2002065a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002065e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
20020662:	d309      	bcc.n	20020678 <reg_mskd_geq()+0x28>
20020664:	6853      	ldr	r3, [r2, #4]
20020666:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002066a:	f1b3 5f08 	cmp.w	r3, #570425344	; 0x22000000
2002066e:	d303      	bcc.n	20020678 <reg_mskd_geq()+0x28>
20020670:	4b04      	ldr	r3, [pc, #16]	; (20020684 <reg_mskd_geq()+0x34>)
20020672:	2202      	movs	r2, #2
20020674:	605a      	str	r2, [r3, #4]
20020676:	4770      	bx	lr
20020678:	4b02      	ldr	r3, [pc, #8]	; (20020684 <reg_mskd_geq()+0x34>)
2002067a:	2204      	movs	r2, #4
2002067c:	605a      	str	r2, [r3, #4]
2002067e:	4770      	bx	lr
20020680:	20022620 	.word	0x20022620
20020684:	200226c0 	.word	0x200226c0

20020688 <pos_cmp_eq()>:
20020688:	4b01      	ldr	r3, [pc, #4]	; (20020690 <pos_cmp_eq()+0x8>)
2002068a:	2202      	movs	r2, #2
2002068c:	605a      	str	r2, [r3, #4]
2002068e:	4770      	bx	lr
20020690:	200226c0 	.word	0x200226c0

20020694 <pos_cmp_ne()>:
20020694:	4b01      	ldr	r3, [pc, #4]	; (2002069c <pos_cmp_ne()+0x8>)
20020696:	2202      	movs	r2, #2
20020698:	605a      	str	r2, [r3, #4]
2002069a:	4770      	bx	lr
2002069c:	200226c0 	.word	0x200226c0

200206a0 <bits_extract_eq()>:
200206a0:	4b04      	ldr	r3, [pc, #16]	; (200206b4 <bits_extract_eq()+0x14>)
200206a2:	2240      	movs	r2, #64	; 0x40
200206a4:	605a      	str	r2, [r3, #4]
200206a6:	685a      	ldr	r2, [r3, #4]
200206a8:	2a40      	cmp	r2, #64	; 0x40
200206aa:	bf0c      	ite	eq
200206ac:	2202      	moveq	r2, #2
200206ae:	2204      	movne	r2, #4
200206b0:	605a      	str	r2, [r3, #4]
200206b2:	4770      	bx	lr
200206b4:	200226c0 	.word	0x200226c0

200206b8 <mskd_extract_eq()>:
200206b8:	4b04      	ldr	r3, [pc, #16]	; (200206cc <mskd_extract_eq()+0x14>)
200206ba:	2202      	movs	r2, #2
200206bc:	605a      	str	r2, [r3, #4]
200206be:	685a      	ldr	r2, [r3, #4]
200206c0:	2a02      	cmp	r2, #2
200206c2:	bf0c      	ite	eq
200206c4:	2220      	moveq	r2, #32
200206c6:	2240      	movne	r2, #64	; 0x40
200206c8:	605a      	str	r2, [r3, #4]
200206ca:	4770      	bx	lr
200206cc:	200226c0 	.word	0x200226c0

200206d0 <mskd_extract_ne()>:
200206d0:	4b04      	ldr	r3, [pc, #16]	; (200206e4 <mskd_extract_ne()+0x14>)
200206d2:	2204      	movs	r2, #4
200206d4:	605a      	str	r2, [r3, #4]
200206d6:	685a      	ldr	r2, [r3, #4]
200206d8:	2a04      	cmp	r2, #4
200206da:	bf0c      	ite	eq
200206dc:	2240      	moveq	r2, #64	; 0x40
200206de:	2220      	movne	r2, #32
200206e0:	605a      	str	r2, [r3, #4]
200206e2:	4770      	bx	lr
200206e4:	200226c0 	.word	0x200226c0

200206e8 <mskd_extract_lss()>:
200206e8:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
200206ec:	4b05      	ldr	r3, [pc, #20]	; (20020704 <mskd_extract_lss()+0x1c>)
200206ee:	605a      	str	r2, [r3, #4]
200206f0:	685b      	ldr	r3, [r3, #4]
200206f2:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
200206f6:	4b04      	ldr	r3, [pc, #16]	; (20020708 <mskd_extract_lss()+0x20>)
200206f8:	bf34      	ite	cc
200206fa:	2220      	movcc	r2, #32
200206fc:	2240      	movcs	r2, #64	; 0x40
200206fe:	605a      	str	r2, [r3, #4]
20020700:	4770      	bx	lr
20020702:	bf00      	nop
20020704:	20022620 	.word	0x20022620
20020708:	200226c0 	.word	0x200226c0

2002070c <mskd_extract_leq()>:
2002070c:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020710:	4b04      	ldr	r3, [pc, #16]	; (20020724 <mskd_extract_leq()+0x18>)
20020712:	605a      	str	r2, [r3, #4]
20020714:	685b      	ldr	r3, [r3, #4]
20020716:	4293      	cmp	r3, r2
20020718:	4b03      	ldr	r3, [pc, #12]	; (20020728 <mskd_extract_leq()+0x1c>)
2002071a:	bf94      	ite	ls
2002071c:	2220      	movls	r2, #32
2002071e:	2240      	movhi	r2, #64	; 0x40
20020720:	605a      	str	r2, [r3, #4]
20020722:	4770      	bx	lr
20020724:	20022620 	.word	0x20022620
20020728:	200226c0 	.word	0x200226c0

2002072c <mskd_extract_gtr()>:
2002072c:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020730:	4b05      	ldr	r3, [pc, #20]	; (20020748 <mskd_extract_gtr()+0x1c>)
20020732:	605a      	str	r2, [r3, #4]
20020734:	685b      	ldr	r3, [r3, #4]
20020736:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
2002073a:	4b04      	ldr	r3, [pc, #16]	; (2002074c <mskd_extract_gtr()+0x20>)
2002073c:	bf8c      	ite	hi
2002073e:	2220      	movhi	r2, #32
20020740:	2240      	movls	r2, #64	; 0x40
20020742:	605a      	str	r2, [r3, #4]
20020744:	4770      	bx	lr
20020746:	bf00      	nop
20020748:	20022620 	.word	0x20022620
2002074c:	200226c0 	.word	0x200226c0

20020750 <set_bits_global()>:
20020750:	4a02      	ldr	r2, [pc, #8]	; (2002075c <set_bits_global()+0xc>)
20020752:	6853      	ldr	r3, [r2, #4]
20020754:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020758:	6053      	str	r3, [r2, #4]
2002075a:	4770      	bx	lr
2002075c:	200226c0 	.word	0x200226c0

20020760 <ins_mskd_global()>:
20020760:	4a03      	ldr	r2, [pc, #12]	; (20020770 <ins_mskd_global()+0x10>)
20020762:	6853      	ldr	r3, [r2, #4]
20020764:	f023 0306 	bic.w	r3, r3, #6
20020768:	f043 0302 	orr.w	r3, r3, #2
2002076c:	6053      	str	r3, [r2, #4]
2002076e:	4770      	bx	lr
20020770:	200226c0 	.word	0x200226c0

20020774 <assign_array_global()>:
20020774:	4b01      	ldr	r3, [pc, #4]	; (2002077c <assign_array_global()+0x8>)
20020776:	22bd      	movs	r2, #189	; 0xbd
20020778:	601a      	str	r2, [r3, #0]
2002077a:	4770      	bx	lr
2002077c:	2002252c 	.word	0x2002252c

20020780 <shifted_global()>:
20020780:	4b04      	ldr	r3, [pc, #16]	; (20020794 <shifted_global()+0x14>)
20020782:	f04f 5138 	mov.w	r1, #771751936	; 0x2e000000
20020786:	4a04      	ldr	r2, [pc, #16]	; (20020798 <shifted_global()+0x18>)
20020788:	6059      	str	r1, [r3, #4]
2002078a:	685b      	ldr	r3, [r3, #4]
2002078c:	f3c3 6344 	ubfx	r3, r3, #25, #5
20020790:	62d3      	str	r3, [r2, #44]	; 0x2c
20020792:	4770      	bx	lr
20020794:	20022620 	.word	0x20022620
20020798:	20022500 	.word	0x20022500

2002079c <assign_register_global()>:
2002079c:	4b01      	ldr	r3, [pc, #4]	; (200207a4 <assign_register_global()+0x8>)
2002079e:	2204      	movs	r2, #4
200207a0:	605a      	str	r2, [r3, #4]
200207a2:	4770      	bx	lr
200207a4:	200226c0 	.word	0x200226c0

200207a8 <copy_bits_equ()>:
200207a8:	4b04      	ldr	r3, [pc, #16]	; (200207bc <copy_bits_equ()+0x14>)
200207aa:	2240      	movs	r2, #64	; 0x40
200207ac:	605a      	str	r2, [r3, #4]
200207ae:	685a      	ldr	r2, [r3, #4]
200207b0:	0652      	lsls	r2, r2, #25
200207b2:	bf4c      	ite	mi
200207b4:	2202      	movmi	r2, #2
200207b6:	2204      	movpl	r2, #4
200207b8:	605a      	str	r2, [r3, #4]
200207ba:	4770      	bx	lr
200207bc:	200226c0 	.word	0x200226c0

200207c0 <copy_bits_neq()>:
200207c0:	4b04      	ldr	r3, [pc, #16]	; (200207d4 <copy_bits_neq()+0x14>)
200207c2:	2240      	movs	r2, #64	; 0x40
200207c4:	605a      	str	r2, [r3, #4]
200207c6:	685a      	ldr	r2, [r3, #4]
200207c8:	0652      	lsls	r2, r2, #25
200207ca:	bf54      	ite	pl
200207cc:	2202      	movpl	r2, #2
200207ce:	2204      	movmi	r2, #4
200207d0:	605a      	str	r2, [r3, #4]
200207d2:	4770      	bx	lr
200207d4:	200226c0 	.word	0x200226c0

200207d8 <copy_mskd_equ()>:
200207d8:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
200207dc:	4b05      	ldr	r3, [pc, #20]	; (200207f4 <copy_mskd_equ()+0x1c>)
200207de:	605a      	str	r2, [r3, #4]
200207e0:	685b      	ldr	r3, [r3, #4]
200207e2:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200207e6:	4293      	cmp	r3, r2
200207e8:	4b03      	ldr	r3, [pc, #12]	; (200207f8 <copy_mskd_equ()+0x20>)
200207ea:	bf0c      	ite	eq
200207ec:	2202      	moveq	r2, #2
200207ee:	2204      	movne	r2, #4
200207f0:	605a      	str	r2, [r3, #4]
200207f2:	4770      	bx	lr
200207f4:	20022620 	.word	0x20022620
200207f8:	200226c0 	.word	0x200226c0

200207fc <copy_mskd_neq()>:
200207fc:	f04f 52d0 	mov.w	r2, #436207616	; 0x1a000000
20020800:	4b05      	ldr	r3, [pc, #20]	; (20020818 <copy_mskd_neq()+0x1c>)
20020802:	605a      	str	r2, [r3, #4]
20020804:	685b      	ldr	r3, [r3, #4]
20020806:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002080a:	4293      	cmp	r3, r2
2002080c:	4b03      	ldr	r3, [pc, #12]	; (2002081c <copy_mskd_neq()+0x20>)
2002080e:	bf14      	ite	ne
20020810:	2202      	movne	r2, #2
20020812:	2204      	moveq	r2, #4
20020814:	605a      	str	r2, [r3, #4]
20020816:	4770      	bx	lr
20020818:	20022620 	.word	0x20022620
2002081c:	200226c0 	.word	0x200226c0

20020820 <copy_mskd_lss()>:
20020820:	f04f 5258 	mov.w	r2, #905969664	; 0x36000000
20020824:	4b06      	ldr	r3, [pc, #24]	; (20020840 <copy_mskd_lss()+0x20>)
20020826:	605a      	str	r2, [r3, #4]
20020828:	685b      	ldr	r3, [r3, #4]
2002082a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002082e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
20020832:	4b04      	ldr	r3, [pc, #16]	; (20020844 <copy_mskd_lss()+0x24>)
20020834:	bf34      	ite	cc
20020836:	2202      	movcc	r2, #2
20020838:	2204      	movcs	r2, #4
2002083a:	605a      	str	r2, [r3, #4]
2002083c:	4770      	bx	lr
2002083e:	bf00      	nop
20020840:	20022620 	.word	0x20022620
20020844:	200226c0 	.word	0x200226c0

20020848 <copy_mskd_leq()>:
20020848:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
2002084c:	4b05      	ldr	r3, [pc, #20]	; (20020864 <copy_mskd_leq()+0x1c>)
2002084e:	605a      	str	r2, [r3, #4]
20020850:	685b      	ldr	r3, [r3, #4]
20020852:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
20020856:	4293      	cmp	r3, r2
20020858:	4b03      	ldr	r3, [pc, #12]	; (20020868 <copy_mskd_leq()+0x20>)
2002085a:	bf94      	ite	ls
2002085c:	2202      	movls	r2, #2
2002085e:	2204      	movhi	r2, #4
20020860:	605a      	str	r2, [r3, #4]
20020862:	4770      	bx	lr
20020864:	20022620 	.word	0x20022620
20020868:	200226c0 	.word	0x200226c0

2002086c <copy_mskd_gtr()>:
2002086c:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020870:	4b06      	ldr	r3, [pc, #24]	; (2002088c <copy_mskd_gtr()+0x20>)
20020872:	605a      	str	r2, [r3, #4]
20020874:	685b      	ldr	r3, [r3, #4]
20020876:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002087a:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
2002087e:	4b04      	ldr	r3, [pc, #16]	; (20020890 <copy_mskd_gtr()+0x24>)
20020880:	bf8c      	ite	hi
20020882:	2202      	movhi	r2, #2
20020884:	2204      	movls	r2, #4
20020886:	605a      	str	r2, [r3, #4]
20020888:	4770      	bx	lr
2002088a:	bf00      	nop
2002088c:	20022620 	.word	0x20022620
20020890:	200226c0 	.word	0x200226c0

20020894 <copy_mskd_geq()>:
20020894:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020898:	4b05      	ldr	r3, [pc, #20]	; (200208b0 <copy_mskd_geq()+0x1c>)
2002089a:	605a      	str	r2, [r3, #4]
2002089c:	685b      	ldr	r3, [r3, #4]
2002089e:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200208a2:	4293      	cmp	r3, r2
200208a4:	4b03      	ldr	r3, [pc, #12]	; (200208b4 <copy_mskd_geq()+0x20>)
200208a6:	bf2c      	ite	cs
200208a8:	2202      	movcs	r2, #2
200208aa:	2204      	movcc	r2, #4
200208ac:	605a      	str	r2, [r3, #4]
200208ae:	4770      	bx	lr
200208b0:	20022620 	.word	0x20022620
200208b4:	200226c0 	.word	0x200226c0

200208b8 <copy_shifted()>:
200208b8:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
200208bc:	4b05      	ldr	r3, [pc, #20]	; (200208d4 <copy_shifted()+0x1c>)
200208be:	605a      	str	r2, [r3, #4]
200208c0:	685b      	ldr	r3, [r3, #4]
200208c2:	f3c3 6344 	ubfx	r3, r3, #25, #5
200208c6:	2b0b      	cmp	r3, #11
200208c8:	4b03      	ldr	r3, [pc, #12]	; (200208d8 <copy_shifted()+0x20>)
200208ca:	bf0c      	ite	eq
200208cc:	2202      	moveq	r2, #2
200208ce:	2204      	movne	r2, #4
200208d0:	605a      	str	r2, [r3, #4]
200208d2:	4770      	bx	lr
200208d4:	20022620 	.word	0x20022620
200208d8:	200226c0 	.word	0x200226c0

200208dc <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.40]>:
200208dc:	4b01      	ldr	r3, [pc, #4]	; (200208e4 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.40]+0x8>)
200208de:	2266      	movs	r2, #102	; 0x66
200208e0:	62da      	str	r2, [r3, #44]	; 0x2c
200208e2:	4770      	bx	lr
200208e4:	20022500 	.word	0x20022500

200208e8 <call_pos_ref()>:
200208e8:	b500      	push	{lr}
200208ea:	b081      	sub	sp, #4
200208ec:	2105      	movs	r1, #5
200208ee:	4668      	mov	r0, sp
200208f0:	9100      	str	r1, [sp, #0]
200208f2:	f7ff fff3 	bl	200208dc <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.40]>
200208f6:	4668      	mov	r0, sp
200208f8:	9100      	str	r1, [sp, #0]
200208fa:	f7ff ffef 	bl	200208dc <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.40]>
200208fe:	b001      	add	sp, #4
20020900:	f85d fb04 	ldr.w	pc, [sp], #4

20020904 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.41]>:
20020904:	4b01      	ldr	r3, [pc, #4]	; (2002090c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.41]+0x8>)
20020906:	2277      	movs	r2, #119	; 0x77
20020908:	62da      	str	r2, [r3, #44]	; 0x2c
2002090a:	4770      	bx	lr
2002090c:	20022500 	.word	0x20022500

20020910 <call_pos_ref_global()>:
20020910:	b500      	push	{lr}
20020912:	b081      	sub	sp, #4
20020914:	2306      	movs	r3, #6
20020916:	4668      	mov	r0, sp
20020918:	9300      	str	r3, [sp, #0]
2002091a:	f7ff fff3 	bl	20020904 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&) [clone .constprop.41]>
2002091e:	b001      	add	sp, #4
20020920:	f85d fb04 	ldr.w	pc, [sp], #4

20020924 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.42]>:
20020924:	4b01      	ldr	r3, [pc, #4]	; (2002092c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.42]+0x8>)
20020926:	2233      	movs	r2, #51	; 0x33
20020928:	62da      	str	r2, [r3, #44]	; 0x2c
2002092a:	4770      	bx	lr
2002092c:	20022500 	.word	0x20022500

20020930 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.43]>:
20020930:	4b01      	ldr	r3, [pc, #4]	; (20020938 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.43]+0x8>)
20020932:	2244      	movs	r2, #68	; 0x44
20020934:	62da      	str	r2, [r3, #44]	; 0x2c
20020936:	4770      	bx	lr
20020938:	20022500 	.word	0x20022500

2002093c <call_pos_val()>:
2002093c:	b500      	push	{lr}
2002093e:	2005      	movs	r0, #5
20020940:	f7ff fff0 	bl	20020924 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.42]>
20020944:	2006      	movs	r0, #6
20020946:	f85d eb04 	ldr.w	lr, [sp], #4
2002094a:	e7f1      	b.n	20020930 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.43]>

2002094c <call_pos_val_global()>:
2002094c:	2006      	movs	r0, #6
2002094e:	e7ef      	b.n	20020930 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>) [clone .constprop.43]>

20020950 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>) [clone .constprop.44]>:
20020950:	4a03      	ldr	r2, [pc, #12]	; (20020960 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>) [clone .constprop.44]+0x10>)
20020952:	6853      	ldr	r3, [r2, #4]
20020954:	f023 0306 	bic.w	r3, r3, #6
20020958:	f043 0302 	orr.w	r3, r3, #2
2002095c:	6053      	str	r3, [r2, #4]
2002095e:	4770      	bx	lr
20020960:	200226c0 	.word	0x200226c0

20020964 <call_mskd_val_const()>:
20020964:	2006      	movs	r0, #6
20020966:	2102      	movs	r1, #2
20020968:	e7f2      	b.n	20020950 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>) [clone .constprop.44]>
2002096a:	bf00      	nop

2002096c <call_mskd_val_var()>:
2002096c:	2006      	movs	r0, #6
2002096e:	2102      	movs	r1, #2
20020970:	e7ee      	b.n	20020950 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>) [clone .constprop.44]>
20020972:	bf00      	nop

20020974 <call_mskd_val_global()>:
20020974:	2006      	movs	r0, #6
20020976:	2102      	movs	r1, #2
20020978:	e7ea      	b.n	20020950 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>) [clone .constprop.44]>
2002097a:	bf00      	nop

2002097c <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>) [clone .constprop.45]>:
2002097c:	4a02      	ldr	r2, [pc, #8]	; (20020988 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>) [clone .constprop.45]+0xc>)
2002097e:	6853      	ldr	r3, [r2, #4]
20020980:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020984:	6053      	str	r3, [r2, #4]
20020986:	4770      	bx	lr
20020988:	200226c0 	.word	0x200226c0

2002098c <call_bits_val_const()>:
2002098c:	2040      	movs	r0, #64	; 0x40
2002098e:	e7f5      	b.n	2002097c <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>) [clone .constprop.45]>

20020990 <call_bits_val_var()>:
20020990:	2040      	movs	r0, #64	; 0x40
20020992:	e7f3      	b.n	2002097c <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>) [clone .constprop.45]>

20020994 <call_bits_val_global()>:
20020994:	2040      	movs	r0, #64	; 0x40
20020996:	e7f1      	b.n	2002097c <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>) [clone .constprop.45]>

20020998 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020998:	4a02      	ldr	r2, [pc, #8]	; (200209a4 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0xc>)
2002099a:	6853      	ldr	r3, [r2, #4]
2002099c:	4318      	orrs	r0, r3
2002099e:	6050      	str	r0, [r2, #4]
200209a0:	4770      	bx	lr
200209a2:	bf00      	nop
200209a4:	200226c0 	.word	0x200226c0

200209a8 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
200209a8:	4a02      	ldr	r2, [pc, #8]	; (200209b4 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0xc>)
200209aa:	6801      	ldr	r1, [r0, #0]
200209ac:	6853      	ldr	r3, [r2, #4]
200209ae:	430b      	orrs	r3, r1
200209b0:	6053      	str	r3, [r2, #4]
200209b2:	4770      	bx	lr
200209b4:	200226c0 	.word	0x200226c0

200209b8 <call_bits_ref_var()>:
200209b8:	b500      	push	{lr}
200209ba:	b081      	sub	sp, #4
200209bc:	2301      	movs	r3, #1
200209be:	4668      	mov	r0, sp
200209c0:	9300      	str	r3, [sp, #0]
200209c2:	f7ff fff1 	bl	200209a8 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
200209c6:	b001      	add	sp, #4
200209c8:	f85d fb04 	ldr.w	pc, [sp], #4

200209cc <call_bits_ref_const()>:
200209cc:	b500      	push	{lr}
200209ce:	b081      	sub	sp, #4
200209d0:	2301      	movs	r3, #1
200209d2:	4668      	mov	r0, sp
200209d4:	9300      	str	r3, [sp, #0]
200209d6:	f7ff ffe7 	bl	200209a8 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
200209da:	b001      	add	sp, #4
200209dc:	f85d fb04 	ldr.w	pc, [sp], #4

200209e0 <call_bits_ref_global()>:
200209e0:	b500      	push	{lr}
200209e2:	b081      	sub	sp, #4
200209e4:	2340      	movs	r3, #64	; 0x40
200209e6:	4668      	mov	r0, sp
200209e8:	9300      	str	r3, [sp, #0]
200209ea:	f7ff ffdd 	bl	200209a8 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
200209ee:	b001      	add	sp, #4
200209f0:	f85d fb04 	ldr.w	pc, [sp], #4

200209f4 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
200209f4:	4a03      	ldr	r2, [pc, #12]	; (20020a04 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
200209f6:	6853      	ldr	r3, [r2, #4]
200209f8:	ea23 0000 	bic.w	r0, r3, r0
200209fc:	4308      	orrs	r0, r1
200209fe:	6050      	str	r0, [r2, #4]
20020a00:	4770      	bx	lr
20020a02:	bf00      	nop
20020a04:	200226c0 	.word	0x200226c0

20020a08 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
20020a08:	4a05      	ldr	r2, [pc, #20]	; (20020a20 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x18>)
20020a0a:	6841      	ldr	r1, [r0, #4]
20020a0c:	6853      	ldr	r3, [r2, #4]
20020a0e:	b410      	push	{r4}
20020a10:	6804      	ldr	r4, [r0, #0]
20020a12:	ea23 0304 	bic.w	r3, r3, r4
20020a16:	bc10      	pop	{r4}
20020a18:	430b      	orrs	r3, r1
20020a1a:	6053      	str	r3, [r2, #4]
20020a1c:	4770      	bx	lr
20020a1e:	bf00      	nop
20020a20:	200226c0 	.word	0x200226c0

20020a24 <call_mskd_ref_var()>:
20020a24:	b500      	push	{lr}
20020a26:	4b05      	ldr	r3, [pc, #20]	; (20020a3c <call_mskd_ref_var()+0x18>)
20020a28:	b082      	sub	sp, #8
20020a2a:	cb0c      	ldmia	r3, {r2, r3}
20020a2c:	4668      	mov	r0, sp
20020a2e:	e88d 000c 	stmia.w	sp, {r2, r3}
20020a32:	f7ff ffe9 	bl	20020a08 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a36:	b002      	add	sp, #8
20020a38:	f85d fb04 	ldr.w	pc, [sp], #4
20020a3c:	200217f4 	.word	0x200217f4

20020a40 <call_mskd_ref_const()>:
20020a40:	b500      	push	{lr}
20020a42:	b082      	sub	sp, #8
20020a44:	2206      	movs	r2, #6
20020a46:	2304      	movs	r3, #4
20020a48:	4668      	mov	r0, sp
20020a4a:	e88d 000c 	stmia.w	sp, {r2, r3}
20020a4e:	f7ff ffdb 	bl	20020a08 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a52:	b002      	add	sp, #8
20020a54:	f85d fb04 	ldr.w	pc, [sp], #4

20020a58 <call_mskd_ref_global()>:
20020a58:	b500      	push	{lr}
20020a5a:	b082      	sub	sp, #8
20020a5c:	2206      	movs	r2, #6
20020a5e:	2302      	movs	r3, #2
20020a60:	4668      	mov	r0, sp
20020a62:	e88d 000c 	stmia.w	sp, {r2, r3}
20020a66:	f7ff ffcf 	bl	20020a08 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a6a:	b002      	add	sp, #8
20020a6c:	f85d fb04 	ldr.w	pc, [sp], #4

20020a70 <periph_bits(mcu::Serial volatile*)>:
20020a70:	6843      	ldr	r3, [r0, #4]
20020a72:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020a76:	6043      	str	r3, [r0, #4]
20020a78:	4770      	bx	lr
20020a7a:	bf00      	nop

20020a7c <call_periph_bits()>:
20020a7c:	4801      	ldr	r0, [pc, #4]	; (20020a84 <call_periph_bits()+0x8>)
20020a7e:	f7ff bff7 	b.w	20020a70 <periph_bits(mcu::Serial volatile*)>
20020a82:	bf00      	nop
20020a84:	200226c0 	.word	0x200226c0

20020a88 <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020a88:	6843      	ldr	r3, [r0, #4]
20020a8a:	4319      	orrs	r1, r3
20020a8c:	6041      	str	r1, [r0, #4]
20020a8e:	4770      	bx	lr

20020a90 <call_periph_bits_val()>:
20020a90:	2140      	movs	r1, #64	; 0x40
20020a92:	4801      	ldr	r0, [pc, #4]	; (20020a98 <call_periph_bits_val()+0x8>)
20020a94:	f7ff bff8 	b.w	20020a88 <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020a98:	200226c0 	.word	0x200226c0

20020a9c <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020a9c:	6803      	ldr	r3, [r0, #0]
20020a9e:	4319      	orrs	r1, r3
20020aa0:	6001      	str	r1, [r0, #0]
20020aa2:	4770      	bx	lr

20020aa4 <call_reg_bits_val()>:
20020aa4:	2140      	movs	r1, #64	; 0x40
20020aa6:	4801      	ldr	r0, [pc, #4]	; (20020aac <call_reg_bits_val()+0x8>)
20020aa8:	f7ff bff8 	b.w	20020a9c <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020aac:	200226c4 	.word	0x200226c4

20020ab0 <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020ab0:	680a      	ldr	r2, [r1, #0]
20020ab2:	6843      	ldr	r3, [r0, #4]
20020ab4:	4313      	orrs	r3, r2
20020ab6:	6043      	str	r3, [r0, #4]
20020ab8:	4770      	bx	lr
20020aba:	bf00      	nop

20020abc <call_periph_bits_ref()>:
20020abc:	b500      	push	{lr}
20020abe:	b081      	sub	sp, #4
20020ac0:	2340      	movs	r3, #64	; 0x40
20020ac2:	4804      	ldr	r0, [pc, #16]	; (20020ad4 <call_periph_bits_ref()+0x18>)
20020ac4:	4669      	mov	r1, sp
20020ac6:	9300      	str	r3, [sp, #0]
20020ac8:	f7ff fff2 	bl	20020ab0 <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020acc:	b001      	add	sp, #4
20020ace:	f85d fb04 	ldr.w	pc, [sp], #4
20020ad2:	bf00      	nop
20020ad4:	200226c0 	.word	0x200226c0

20020ad8 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020ad8:	680a      	ldr	r2, [r1, #0]
20020ada:	6803      	ldr	r3, [r0, #0]
20020adc:	4313      	orrs	r3, r2
20020ade:	6003      	str	r3, [r0, #0]
20020ae0:	4770      	bx	lr
20020ae2:	bf00      	nop

20020ae4 <call_reg_bits_ref()>:
20020ae4:	b500      	push	{lr}
20020ae6:	b081      	sub	sp, #4
20020ae8:	2340      	movs	r3, #64	; 0x40
20020aea:	4804      	ldr	r0, [pc, #16]	; (20020afc <call_reg_bits_ref()+0x18>)
20020aec:	4669      	mov	r1, sp
20020aee:	9300      	str	r3, [sp, #0]
20020af0:	f7ff fff2 	bl	20020ad8 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020af4:	b001      	add	sp, #4
20020af6:	f85d fb04 	ldr.w	pc, [sp], #4
20020afa:	bf00      	nop
20020afc:	200226c4 	.word	0x200226c4

20020b00 <periph_mskd(mcu::Serial volatile*)>:
20020b00:	6843      	ldr	r3, [r0, #4]
20020b02:	f023 0306 	bic.w	r3, r3, #6
20020b06:	f043 0302 	orr.w	r3, r3, #2
20020b0a:	6043      	str	r3, [r0, #4]
20020b0c:	4770      	bx	lr
20020b0e:	bf00      	nop

20020b10 <call_periph_mskd()>:
20020b10:	4801      	ldr	r0, [pc, #4]	; (20020b18 <call_periph_mskd()+0x8>)
20020b12:	f7ff bff5 	b.w	20020b00 <periph_mskd(mcu::Serial volatile*)>
20020b16:	bf00      	nop
20020b18:	200226c0 	.word	0x200226c0

20020b1c <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b1c:	6843      	ldr	r3, [r0, #4]
20020b1e:	ea23 0101 	bic.w	r1, r3, r1
20020b22:	4311      	orrs	r1, r2
20020b24:	6041      	str	r1, [r0, #4]
20020b26:	4770      	bx	lr

20020b28 <call_periph_mskd_val()>:
20020b28:	2106      	movs	r1, #6
20020b2a:	2202      	movs	r2, #2
20020b2c:	4801      	ldr	r0, [pc, #4]	; (20020b34 <call_periph_mskd_val()+0xc>)
20020b2e:	f7ff bff5 	b.w	20020b1c <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b32:	bf00      	nop
20020b34:	200226c0 	.word	0x200226c0

20020b38 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b38:	6803      	ldr	r3, [r0, #0]
20020b3a:	ea23 0101 	bic.w	r1, r3, r1
20020b3e:	4311      	orrs	r1, r2
20020b40:	6001      	str	r1, [r0, #0]
20020b42:	4770      	bx	lr

20020b44 <call_reg_mskd_val()>:
20020b44:	2106      	movs	r1, #6
20020b46:	2202      	movs	r2, #2
20020b48:	4801      	ldr	r0, [pc, #4]	; (20020b50 <call_reg_mskd_val()+0xc>)
20020b4a:	f7ff bff5 	b.w	20020b38 <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b4e:	bf00      	nop
20020b50:	200226c4 	.word	0x200226c4

20020b54 <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b54:	6843      	ldr	r3, [r0, #4]
20020b56:	ea23 0101 	bic.w	r1, r3, r1
20020b5a:	4311      	orrs	r1, r2
20020b5c:	6041      	str	r1, [r0, #4]
20020b5e:	4770      	bx	lr

20020b60 <call_periph_mskd_ref()>:
20020b60:	2106      	movs	r1, #6
20020b62:	2202      	movs	r2, #2
20020b64:	4801      	ldr	r0, [pc, #4]	; (20020b6c <call_periph_mskd_ref()+0xc>)
20020b66:	f7ff bff5 	b.w	20020b54 <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b6a:	bf00      	nop
20020b6c:	200226c0 	.word	0x200226c0

20020b70 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b70:	6803      	ldr	r3, [r0, #0]
20020b72:	ea23 0101 	bic.w	r1, r3, r1
20020b76:	4311      	orrs	r1, r2
20020b78:	6001      	str	r1, [r0, #0]
20020b7a:	4770      	bx	lr

20020b7c <call_reg_mskd_ref()>:
20020b7c:	2106      	movs	r1, #6
20020b7e:	2202      	movs	r2, #2
20020b80:	4801      	ldr	r0, [pc, #4]	; (20020b88 <call_reg_mskd_ref()+0xc>)
20020b82:	f7ff bff5 	b.w	20020b70 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b86:	bf00      	nop
20020b88:	200226c4 	.word	0x200226c4

20020b8c <return_bits()>:
20020b8c:	2020      	movs	r0, #32
20020b8e:	4770      	bx	lr

20020b90 <call_return_bits()>:
20020b90:	b500      	push	{lr}
20020b92:	f7ff fffb 	bl	20020b8c <return_bits()>
20020b96:	2820      	cmp	r0, #32
20020b98:	4b04      	ldr	r3, [pc, #16]	; (20020bac <call_return_bits()+0x1c>)
20020b9a:	bf0c      	ite	eq
20020b9c:	f04f 5228 	moveq.w	r2, #704643072	; 0x2a000000
20020ba0:	f04f 62c0 	movne.w	r2, #100663296	; 0x6000000
20020ba4:	605a      	str	r2, [r3, #4]
20020ba6:	f85d fb04 	ldr.w	pc, [sp], #4
20020baa:	bf00      	nop
20020bac:	20022620 	.word	0x20022620

20020bb0 <return_mskd()>:
20020bb0:	2118      	movs	r1, #24
20020bb2:	2208      	movs	r2, #8
20020bb4:	e880 0006 	stmia.w	r0, {r1, r2}
20020bb8:	4770      	bx	lr
20020bba:	bf00      	nop

20020bbc <call_return_mskd()>:
20020bbc:	b500      	push	{lr}
20020bbe:	b082      	sub	sp, #8
20020bc0:	4668      	mov	r0, sp
20020bc2:	f7ff fff5 	bl	20020bb0 <return_mskd()>
20020bc6:	9b00      	ldr	r3, [sp, #0]
20020bc8:	9a01      	ldr	r2, [sp, #4]
20020bca:	2b18      	cmp	r3, #24
20020bcc:	4b07      	ldr	r3, [pc, #28]	; (20020bec <call_return_mskd()+0x30>)
20020bce:	d005      	beq.n	20020bdc <call_return_mskd()+0x20>
20020bd0:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020bd4:	605a      	str	r2, [r3, #4]
20020bd6:	b002      	add	sp, #8
20020bd8:	f85d fb04 	ldr.w	pc, [sp], #4
20020bdc:	2a08      	cmp	r2, #8
20020bde:	d1f7      	bne.n	20020bd0 <call_return_mskd()+0x14>
20020be0:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020be4:	605a      	str	r2, [r3, #4]
20020be6:	b002      	add	sp, #8
20020be8:	f85d fb04 	ldr.w	pc, [sp], #4
20020bec:	20022620 	.word	0x20022620

20020bf0 <return_reg()>:
20020bf0:	4b02      	ldr	r3, [pc, #8]	; (20020bfc <return_reg()+0xc>)
20020bf2:	2240      	movs	r2, #64	; 0x40
20020bf4:	4802      	ldr	r0, [pc, #8]	; (20020c00 <return_reg()+0x10>)
20020bf6:	605a      	str	r2, [r3, #4]
20020bf8:	4770      	bx	lr
20020bfa:	bf00      	nop
20020bfc:	200226c0 	.word	0x200226c0
20020c00:	200226c4 	.word	0x200226c4

20020c04 <call_return_reg()>:
20020c04:	b500      	push	{lr}
20020c06:	f7ff fff3 	bl	20020bf0 <return_reg()>
20020c0a:	6803      	ldr	r3, [r0, #0]
20020c0c:	2b40      	cmp	r3, #64	; 0x40
20020c0e:	4b04      	ldr	r3, [pc, #16]	; (20020c20 <call_return_reg()+0x1c>)
20020c10:	bf0c      	ite	eq
20020c12:	f04f 52f0 	moveq.w	r2, #503316480	; 0x1e000000
20020c16:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
20020c1a:	605a      	str	r2, [r3, #4]
20020c1c:	f85d fb04 	ldr.w	pc, [sp], #4
20020c20:	20022620 	.word	0x20022620

20020c24 <return_periph()>:
20020c24:	4b02      	ldr	r3, [pc, #8]	; (20020c30 <return_periph()+0xc>)
20020c26:	2240      	movs	r2, #64	; 0x40
20020c28:	4618      	mov	r0, r3
20020c2a:	605a      	str	r2, [r3, #4]
20020c2c:	4770      	bx	lr
20020c2e:	bf00      	nop
20020c30:	200226c0 	.word	0x200226c0

20020c34 <call_return_periph()>:
20020c34:	b500      	push	{lr}
20020c36:	f7ff fff5 	bl	20020c24 <return_periph()>
20020c3a:	6843      	ldr	r3, [r0, #4]
20020c3c:	2b40      	cmp	r3, #64	; 0x40
20020c3e:	4b04      	ldr	r3, [pc, #16]	; (20020c50 <call_return_periph()+0x1c>)
20020c40:	bf0c      	ite	eq
20020c42:	f04f 5218 	moveq.w	r2, #637534208	; 0x26000000
20020c46:	f04f 5228 	movne.w	r2, #704643072	; 0x2a000000
20020c4a:	605a      	str	r2, [r3, #4]
20020c4c:	f85d fb04 	ldr.w	pc, [sp], #4
20020c50:	20022620 	.word	0x20022620

20020c54 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
20020c54:	2805      	cmp	r0, #5
20020c56:	4b05      	ldr	r3, [pc, #20]	; (20020c6c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x18>)
20020c58:	d005      	beq.n	20020c66 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x12>
20020c5a:	2806      	cmp	r0, #6
20020c5c:	bf0c      	ite	eq
20020c5e:	2244      	moveq	r2, #68	; 0x44
20020c60:	2255      	movne	r2, #85	; 0x55
20020c62:	62da      	str	r2, [r3, #44]	; 0x2c
20020c64:	4770      	bx	lr
20020c66:	2233      	movs	r2, #51	; 0x33
20020c68:	62da      	str	r2, [r3, #44]	; 0x2c
20020c6a:	4770      	bx	lr
20020c6c:	20022500 	.word	0x20022500

20020c70 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
20020c70:	6803      	ldr	r3, [r0, #0]
20020c72:	2b05      	cmp	r3, #5
20020c74:	d006      	beq.n	20020c84 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x14>
20020c76:	2b06      	cmp	r3, #6
20020c78:	4b04      	ldr	r3, [pc, #16]	; (20020c8c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1c>)
20020c7a:	bf0c      	ite	eq
20020c7c:	2277      	moveq	r2, #119	; 0x77
20020c7e:	2288      	movne	r2, #136	; 0x88
20020c80:	62da      	str	r2, [r3, #44]	; 0x2c
20020c82:	4770      	bx	lr
20020c84:	4b01      	ldr	r3, [pc, #4]	; (20020c8c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1c>)
20020c86:	2266      	movs	r2, #102	; 0x66
20020c88:	62da      	str	r2, [r3, #44]	; 0x2c
20020c8a:	4770      	bx	lr
20020c8c:	20022500 	.word	0x20022500

20020c90 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020c90:	4a03      	ldr	r2, [pc, #12]	; (20020ca0 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
20020c92:	6853      	ldr	r3, [r2, #4]
20020c94:	ea23 0000 	bic.w	r0, r3, r0
20020c98:	4308      	orrs	r0, r1
20020c9a:	6050      	str	r0, [r2, #4]
20020c9c:	4770      	bx	lr
20020c9e:	bf00      	nop
20020ca0:	200226c0 	.word	0x200226c0

20020ca4 <call_range_val(unsigned int)>:
20020ca4:	0301      	lsls	r1, r0, #12
20020ca6:	f44f 30f8 	mov.w	r0, #126976	; 0x1f000
20020caa:	f7ff bff1 	b.w	20020c90 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020cae:	bf00      	nop

20020cb0 <call_range_val_port()>:
20020cb0:	201f      	movs	r0, #31
20020cb2:	f7ff bff7 	b.w	20020ca4 <call_range_val(unsigned int)>
20020cb6:	bf00      	nop

20020cb8 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020cb8:	4a03      	ldr	r2, [pc, #12]	; (20020cc8 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
20020cba:	6853      	ldr	r3, [r2, #4]
20020cbc:	ea23 0000 	bic.w	r0, r3, r0
20020cc0:	4308      	orrs	r0, r1
20020cc2:	6050      	str	r0, [r2, #4]
20020cc4:	4770      	bx	lr
20020cc6:	bf00      	nop
20020cc8:	200226c0 	.word	0x200226c0

20020ccc <call_range_ref(unsigned int)>:
20020ccc:	0301      	lsls	r1, r0, #12
20020cce:	f44f 30f8 	mov.w	r0, #126976	; 0x1f000
20020cd2:	f7ff bff1 	b.w	20020cb8 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020cd6:	bf00      	nop

20020cd8 <call_range_ref_port()>:
20020cd8:	200c      	movs	r0, #12
20020cda:	f7ff bff7 	b.w	20020ccc <call_range_ref(unsigned int)>
20020cde:	bf00      	nop

20020ce0 <check_array_range_pass(unsigned int)>:
20020ce0:	2816      	cmp	r0, #22
20020ce2:	4b03      	ldr	r3, [pc, #12]	; (20020cf0 <check_array_range_pass(unsigned int)+0x10>)
20020ce4:	bf94      	ite	ls
20020ce6:	227f      	movls	r2, #127	; 0x7f
20020ce8:	2283      	movhi	r2, #131	; 0x83
20020cea:	62da      	str	r2, [r3, #44]	; 0x2c
20020cec:	4770      	bx	lr
20020cee:	bf00      	nop
20020cf0:	20022500 	.word	0x20022500

20020cf4 <check_array_range_fail(unsigned int)>:
20020cf4:	2816      	cmp	r0, #22
20020cf6:	4b03      	ldr	r3, [pc, #12]	; (20020d04 <check_array_range_fail(unsigned int)+0x10>)
20020cf8:	bf94      	ite	ls
20020cfa:	2295      	movls	r2, #149	; 0x95
20020cfc:	2297      	movhi	r2, #151	; 0x97
20020cfe:	62da      	str	r2, [r3, #44]	; 0x2c
20020d00:	4770      	bx	lr
20020d02:	bf00      	nop
20020d04:	20022500 	.word	0x20022500

20020d08 <check_bits_range_pass(unsigned int)>:
20020d08:	280f      	cmp	r0, #15
20020d0a:	4b03      	ldr	r3, [pc, #12]	; (20020d18 <check_bits_range_pass(unsigned int)+0x10>)
20020d0c:	bf94      	ite	ls
20020d0e:	229d      	movls	r2, #157	; 0x9d
20020d10:	22a3      	movhi	r2, #163	; 0xa3
20020d12:	62da      	str	r2, [r3, #44]	; 0x2c
20020d14:	4770      	bx	lr
20020d16:	bf00      	nop
20020d18:	20022500 	.word	0x20022500

20020d1c <check_bits_range_fail(unsigned int)>:
20020d1c:	280f      	cmp	r0, #15
20020d1e:	4b03      	ldr	r3, [pc, #12]	; (20020d2c <check_bits_range_fail(unsigned int)+0x10>)
20020d20:	bf94      	ite	ls
20020d22:	22a7      	movls	r2, #167	; 0xa7
20020d24:	22ad      	movhi	r2, #173	; 0xad
20020d26:	62da      	str	r2, [r3, #44]	; 0x2c
20020d28:	4770      	bx	lr
20020d2a:	bf00      	nop
20020d2c:	20022500 	.word	0x20022500

20020d30 <check_mskd_range_pass(unsigned int)>:
20020d30:	281f      	cmp	r0, #31
20020d32:	4b03      	ldr	r3, [pc, #12]	; (20020d40 <check_mskd_range_pass(unsigned int)+0x10>)
20020d34:	bf94      	ite	ls
20020d36:	22b3      	movls	r2, #179	; 0xb3
20020d38:	22b5      	movhi	r2, #181	; 0xb5
20020d3a:	62da      	str	r2, [r3, #44]	; 0x2c
20020d3c:	4770      	bx	lr
20020d3e:	bf00      	nop
20020d40:	20022500 	.word	0x20022500

20020d44 <check_mskd_range_fail(unsigned int)>:
20020d44:	281f      	cmp	r0, #31
20020d46:	4b03      	ldr	r3, [pc, #12]	; (20020d54 <check_mskd_range_fail(unsigned int)+0x10>)
20020d48:	bf94      	ite	ls
20020d4a:	22bf      	movls	r2, #191	; 0xbf
20020d4c:	22c1      	movhi	r2, #193	; 0xc1
20020d4e:	62da      	str	r2, [r3, #44]	; 0x2c
20020d50:	4770      	bx	lr
20020d52:	bf00      	nop
20020d54:	20022500 	.word	0x20022500

20020d58 <bits_extract_ne()>:
20020d58:	4b04      	ldr	r3, [pc, #16]	; (20020d6c <bits_extract_ne()+0x14>)
20020d5a:	2220      	movs	r2, #32
20020d5c:	605a      	str	r2, [r3, #4]
20020d5e:	685a      	ldr	r2, [r3, #4]
20020d60:	2a20      	cmp	r2, #32
20020d62:	bf14      	ite	ne
20020d64:	2202      	movne	r2, #2
20020d66:	2204      	moveq	r2, #4
20020d68:	605a      	str	r2, [r3, #4]
20020d6a:	4770      	bx	lr
20020d6c:	200226c0 	.word	0x200226c0

20020d70 <mskd_extract_geq()>:
20020d70:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
20020d74:	4b04      	ldr	r3, [pc, #16]	; (20020d88 <mskd_extract_geq()+0x18>)
20020d76:	605a      	str	r2, [r3, #4]
20020d78:	685b      	ldr	r3, [r3, #4]
20020d7a:	4293      	cmp	r3, r2
20020d7c:	4b03      	ldr	r3, [pc, #12]	; (20020d8c <mskd_extract_geq()+0x1c>)
20020d7e:	bf2c      	ite	cs
20020d80:	2220      	movcs	r2, #32
20020d82:	2240      	movcc	r2, #64	; 0x40
20020d84:	605a      	str	r2, [r3, #4]
20020d86:	4770      	bx	lr
20020d88:	20022620 	.word	0x20022620
20020d8c:	200226c0 	.word	0x200226c0

20020d90 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>:
20020d90:	b410      	push	{r4}
20020d92:	4b05      	ldr	r3, [pc, #20]	; (20020da8 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x18>)
20020d94:	f04f 5438 	mov.w	r4, #771751936	; 0x2e000000
20020d98:	4a04      	ldr	r2, [pc, #16]	; (20020dac <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x1c>)
20020d9a:	605c      	str	r4, [r3, #4]
20020d9c:	685b      	ldr	r3, [r3, #4]
20020d9e:	bc10      	pop	{r4}
20020da0:	4018      	ands	r0, r3
20020da2:	40c8      	lsrs	r0, r1
20020da4:	62d0      	str	r0, [r2, #44]	; 0x2c
20020da6:	4770      	bx	lr
20020da8:	20022620 	.word	0x20022620
20020dac:	20022500 	.word	0x20022500

20020db0 <call_shifted_const_val()>:
20020db0:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020db4:	2119      	movs	r1, #25
20020db6:	f7ff bfeb 	b.w	20020d90 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020dba:	bf00      	nop

20020dbc <call_shifted_var_val()>:
20020dbc:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020dc0:	2119      	movs	r1, #25
20020dc2:	f7ff bfe5 	b.w	20020d90 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020dc6:	bf00      	nop

20020dc8 <call_shifted_global_val()>:
20020dc8:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020dcc:	2119      	movs	r1, #25
20020dce:	f7ff bfdf 	b.w	20020d90 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020dd2:	bf00      	nop

20020dd4 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>:
20020dd4:	4b06      	ldr	r3, [pc, #24]	; (20020df0 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1c>)
20020dd6:	f04f 5138 	mov.w	r1, #771751936	; 0x2e000000
20020dda:	4a06      	ldr	r2, [pc, #24]	; (20020df4 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x20>)
20020ddc:	b410      	push	{r4}
20020dde:	6059      	str	r1, [r3, #4]
20020de0:	6804      	ldr	r4, [r0, #0]
20020de2:	685b      	ldr	r3, [r3, #4]
20020de4:	6841      	ldr	r1, [r0, #4]
20020de6:	4023      	ands	r3, r4
20020de8:	bc10      	pop	{r4}
20020dea:	40cb      	lsrs	r3, r1
20020dec:	62d3      	str	r3, [r2, #44]	; 0x2c
20020dee:	4770      	bx	lr
20020df0:	20022620 	.word	0x20022620
20020df4:	20022500 	.word	0x20022500

20020df8 <call_shifted_const_ref()>:
20020df8:	b500      	push	{lr}
20020dfa:	4b06      	ldr	r3, [pc, #24]	; (20020e14 <call_shifted_const_ref()+0x1c>)
20020dfc:	b082      	sub	sp, #8
20020dfe:	f103 0308 	add.w	r3, r3, #8
20020e02:	cb0c      	ldmia	r3, {r2, r3}
20020e04:	4668      	mov	r0, sp
20020e06:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e0a:	f7ff ffe3 	bl	20020dd4 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e0e:	b002      	add	sp, #8
20020e10:	f85d fb04 	ldr.w	pc, [sp], #4
20020e14:	200217f4 	.word	0x200217f4

20020e18 <call_shifted_var_ref()>:
20020e18:	b500      	push	{lr}
20020e1a:	4b06      	ldr	r3, [pc, #24]	; (20020e34 <call_shifted_var_ref()+0x1c>)
20020e1c:	b082      	sub	sp, #8
20020e1e:	f103 0310 	add.w	r3, r3, #16
20020e22:	cb0c      	ldmia	r3, {r2, r3}
20020e24:	4668      	mov	r0, sp
20020e26:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e2a:	f7ff ffd3 	bl	20020dd4 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e2e:	b002      	add	sp, #8
20020e30:	f85d fb04 	ldr.w	pc, [sp], #4
20020e34:	200217f4 	.word	0x200217f4

20020e38 <call_shifted_global_ref()>:
20020e38:	b500      	push	{lr}
20020e3a:	4b06      	ldr	r3, [pc, #24]	; (20020e54 <call_shifted_global_ref()+0x1c>)
20020e3c:	b082      	sub	sp, #8
20020e3e:	f103 0308 	add.w	r3, r3, #8
20020e42:	cb0c      	ldmia	r3, {r2, r3}
20020e44:	4668      	mov	r0, sp
20020e46:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e4a:	f7ff ffc3 	bl	20020dd4 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e4e:	b002      	add	sp, #8
20020e50:	f85d fb04 	ldr.w	pc, [sp], #4
20020e54:	200217f4 	.word	0x200217f4

20020e58 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>:
20020e58:	0642      	lsls	r2, r0, #25
20020e5a:	4b03      	ldr	r3, [pc, #12]	; (20020e68 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0x10>)
20020e5c:	bf4c      	ite	mi
20020e5e:	2202      	movmi	r2, #2
20020e60:	2204      	movpl	r2, #4
20020e62:	605a      	str	r2, [r3, #4]
20020e64:	4770      	bx	lr
20020e66:	bf00      	nop
20020e68:	200226c0 	.word	0x200226c0

20020e6c <call_copy_bits_val()>:
20020e6c:	4b02      	ldr	r3, [pc, #8]	; (20020e78 <call_copy_bits_val()+0xc>)
20020e6e:	2240      	movs	r2, #64	; 0x40
20020e70:	605a      	str	r2, [r3, #4]
20020e72:	6858      	ldr	r0, [r3, #4]
20020e74:	f7ff bff0 	b.w	20020e58 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>
20020e78:	200226c0 	.word	0x200226c0

20020e7c <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>:
20020e7c:	6803      	ldr	r3, [r0, #0]
20020e7e:	f013 0f40 	tst.w	r3, #64	; 0x40
20020e82:	4b03      	ldr	r3, [pc, #12]	; (20020e90 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0x14>)
20020e84:	bf14      	ite	ne
20020e86:	2202      	movne	r2, #2
20020e88:	2204      	moveq	r2, #4
20020e8a:	605a      	str	r2, [r3, #4]
20020e8c:	4770      	bx	lr
20020e8e:	bf00      	nop
20020e90:	200226c0 	.word	0x200226c0

20020e94 <call_copy_bits_ref()>:
20020e94:	b500      	push	{lr}
20020e96:	2240      	movs	r2, #64	; 0x40
20020e98:	b081      	sub	sp, #4
20020e9a:	4b05      	ldr	r3, [pc, #20]	; (20020eb0 <call_copy_bits_ref()+0x1c>)
20020e9c:	4668      	mov	r0, sp
20020e9e:	605a      	str	r2, [r3, #4]
20020ea0:	685b      	ldr	r3, [r3, #4]
20020ea2:	9300      	str	r3, [sp, #0]
20020ea4:	f7ff ffea 	bl	20020e7c <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>
20020ea8:	b001      	add	sp, #4
20020eaa:	f85d fb04 	ldr.w	pc, [sp], #4
20020eae:	bf00      	nop
20020eb0:	200226c0 	.word	0x200226c0

20020eb4 <run>:
20020eb4:	b510      	push	{r4, lr}
20020eb6:	4cb3      	ldr	r4, [pc, #716]	; (20021184 <run+0x2d0>)
20020eb8:	7823      	ldrb	r3, [r4, #0]
20020eba:	2b00      	cmp	r3, #0
20020ebc:	f000 82e2 	beq.w	20021484 <run+0x5d0>
20020ec0:	68a1      	ldr	r1, [r4, #8]
20020ec2:	7b23      	ldrb	r3, [r4, #12]
20020ec4:	b91b      	cbnz	r3, 20020ece <run+0x1a>
20020ec6:	4ab0      	ldr	r2, [pc, #704]	; (20021188 <run+0x2d4>)
20020ec8:	2301      	movs	r3, #1
20020eca:	6162      	str	r2, [r4, #20]
20020ecc:	7323      	strb	r3, [r4, #12]
20020ece:	7e23      	ldrb	r3, [r4, #24]
20020ed0:	b91b      	cbnz	r3, 20020eda <run+0x26>
20020ed2:	4aae      	ldr	r2, [pc, #696]	; (2002118c <run+0x2d8>)
20020ed4:	2301      	movs	r3, #1
20020ed6:	6222      	str	r2, [r4, #32]
20020ed8:	7623      	strb	r3, [r4, #24]
20020eda:	2200      	movs	r2, #0
20020edc:	48ac      	ldr	r0, [pc, #688]	; (20021190 <run+0x2dc>)
20020ede:	f000 fb3f 	bl	20021560 <do_test>
20020ee2:	68a1      	ldr	r1, [r4, #8]
20020ee4:	2201      	movs	r2, #1
20020ee6:	48ab      	ldr	r0, [pc, #684]	; (20021194 <run+0x2e0>)
20020ee8:	f000 fb3a 	bl	20021560 <do_test>
20020eec:	68a1      	ldr	r1, [r4, #8]
20020eee:	2202      	movs	r2, #2
20020ef0:	48a9      	ldr	r0, [pc, #676]	; (20021198 <run+0x2e4>)
20020ef2:	f000 fb35 	bl	20021560 <do_test>
20020ef6:	68a1      	ldr	r1, [r4, #8]
20020ef8:	2203      	movs	r2, #3
20020efa:	48a8      	ldr	r0, [pc, #672]	; (2002119c <run+0x2e8>)
20020efc:	f000 fb30 	bl	20021560 <do_test>
20020f00:	68a1      	ldr	r1, [r4, #8]
20020f02:	2204      	movs	r2, #4
20020f04:	48a6      	ldr	r0, [pc, #664]	; (200211a0 <run+0x2ec>)
20020f06:	f000 fb2b 	bl	20021560 <do_test>
20020f0a:	68a1      	ldr	r1, [r4, #8]
20020f0c:	2205      	movs	r2, #5
20020f0e:	48a5      	ldr	r0, [pc, #660]	; (200211a4 <run+0x2f0>)
20020f10:	f000 fb26 	bl	20021560 <do_test>
20020f14:	68a1      	ldr	r1, [r4, #8]
20020f16:	2206      	movs	r2, #6
20020f18:	48a3      	ldr	r0, [pc, #652]	; (200211a8 <run+0x2f4>)
20020f1a:	f000 fb21 	bl	20021560 <do_test>
20020f1e:	68a1      	ldr	r1, [r4, #8]
20020f20:	2207      	movs	r2, #7
20020f22:	48a2      	ldr	r0, [pc, #648]	; (200211ac <run+0x2f8>)
20020f24:	f000 fb1c 	bl	20021560 <do_test>
20020f28:	68a1      	ldr	r1, [r4, #8]
20020f2a:	2208      	movs	r2, #8
20020f2c:	48a0      	ldr	r0, [pc, #640]	; (200211b0 <run+0x2fc>)
20020f2e:	f000 fb17 	bl	20021560 <do_test>
20020f32:	68a1      	ldr	r1, [r4, #8]
20020f34:	2209      	movs	r2, #9
20020f36:	489f      	ldr	r0, [pc, #636]	; (200211b4 <run+0x300>)
20020f38:	f000 fb12 	bl	20021560 <do_test>
20020f3c:	68a1      	ldr	r1, [r4, #8]
20020f3e:	220a      	movs	r2, #10
20020f40:	489d      	ldr	r0, [pc, #628]	; (200211b8 <run+0x304>)
20020f42:	f000 fb0d 	bl	20021560 <do_test>
20020f46:	68a1      	ldr	r1, [r4, #8]
20020f48:	220b      	movs	r2, #11
20020f4a:	489c      	ldr	r0, [pc, #624]	; (200211bc <run+0x308>)
20020f4c:	f000 fb08 	bl	20021560 <do_test>
20020f50:	68a1      	ldr	r1, [r4, #8]
20020f52:	220c      	movs	r2, #12
20020f54:	489a      	ldr	r0, [pc, #616]	; (200211c0 <run+0x30c>)
20020f56:	f000 fb03 	bl	20021560 <do_test>
20020f5a:	68a1      	ldr	r1, [r4, #8]
20020f5c:	220d      	movs	r2, #13
20020f5e:	4899      	ldr	r0, [pc, #612]	; (200211c4 <run+0x310>)
20020f60:	f000 fafe 	bl	20021560 <do_test>
20020f64:	68a1      	ldr	r1, [r4, #8]
20020f66:	220e      	movs	r2, #14
20020f68:	4897      	ldr	r0, [pc, #604]	; (200211c8 <run+0x314>)
20020f6a:	f000 faf9 	bl	20021560 <do_test>
20020f6e:	68a1      	ldr	r1, [r4, #8]
20020f70:	220f      	movs	r2, #15
20020f72:	4896      	ldr	r0, [pc, #600]	; (200211cc <run+0x318>)
20020f74:	f000 faf4 	bl	20021560 <do_test>
20020f78:	68a1      	ldr	r1, [r4, #8]
20020f7a:	2210      	movs	r2, #16
20020f7c:	4894      	ldr	r0, [pc, #592]	; (200211d0 <run+0x31c>)
20020f7e:	f000 faef 	bl	20021560 <do_test>
20020f82:	68a1      	ldr	r1, [r4, #8]
20020f84:	2211      	movs	r2, #17
20020f86:	4893      	ldr	r0, [pc, #588]	; (200211d4 <run+0x320>)
20020f88:	f000 faea 	bl	20021560 <do_test>
20020f8c:	68a1      	ldr	r1, [r4, #8]
20020f8e:	2212      	movs	r2, #18
20020f90:	4891      	ldr	r0, [pc, #580]	; (200211d8 <run+0x324>)
20020f92:	f000 fae5 	bl	20021560 <do_test>
20020f96:	68a1      	ldr	r1, [r4, #8]
20020f98:	2213      	movs	r2, #19
20020f9a:	4890      	ldr	r0, [pc, #576]	; (200211dc <run+0x328>)
20020f9c:	f000 fae0 	bl	20021560 <do_test>
20020fa0:	68a1      	ldr	r1, [r4, #8]
20020fa2:	2214      	movs	r2, #20
20020fa4:	488e      	ldr	r0, [pc, #568]	; (200211e0 <run+0x32c>)
20020fa6:	f000 fadb 	bl	20021560 <do_test>
20020faa:	68a1      	ldr	r1, [r4, #8]
20020fac:	2215      	movs	r2, #21
20020fae:	488d      	ldr	r0, [pc, #564]	; (200211e4 <run+0x330>)
20020fb0:	f000 fad6 	bl	20021560 <do_test>
20020fb4:	68a1      	ldr	r1, [r4, #8]
20020fb6:	2216      	movs	r2, #22
20020fb8:	488b      	ldr	r0, [pc, #556]	; (200211e8 <run+0x334>)
20020fba:	f000 fad1 	bl	20021560 <do_test>
20020fbe:	68a1      	ldr	r1, [r4, #8]
20020fc0:	2217      	movs	r2, #23
20020fc2:	488a      	ldr	r0, [pc, #552]	; (200211ec <run+0x338>)
20020fc4:	f000 facc 	bl	20021560 <do_test>
20020fc8:	68a1      	ldr	r1, [r4, #8]
20020fca:	2218      	movs	r2, #24
20020fcc:	4888      	ldr	r0, [pc, #544]	; (200211f0 <run+0x33c>)
20020fce:	f000 fac7 	bl	20021560 <do_test>
20020fd2:	68a1      	ldr	r1, [r4, #8]
20020fd4:	2219      	movs	r2, #25
20020fd6:	4887      	ldr	r0, [pc, #540]	; (200211f4 <run+0x340>)
20020fd8:	f000 fac2 	bl	20021560 <do_test>
20020fdc:	68a1      	ldr	r1, [r4, #8]
20020fde:	221a      	movs	r2, #26
20020fe0:	4885      	ldr	r0, [pc, #532]	; (200211f8 <run+0x344>)
20020fe2:	f000 fabd 	bl	20021560 <do_test>
20020fe6:	68a1      	ldr	r1, [r4, #8]
20020fe8:	221b      	movs	r2, #27
20020fea:	4884      	ldr	r0, [pc, #528]	; (200211fc <run+0x348>)
20020fec:	f000 fab8 	bl	20021560 <do_test>
20020ff0:	68a1      	ldr	r1, [r4, #8]
20020ff2:	221c      	movs	r2, #28
20020ff4:	4882      	ldr	r0, [pc, #520]	; (20021200 <run+0x34c>)
20020ff6:	f000 fab3 	bl	20021560 <do_test>
20020ffa:	68a1      	ldr	r1, [r4, #8]
20020ffc:	221d      	movs	r2, #29
20020ffe:	4881      	ldr	r0, [pc, #516]	; (20021204 <run+0x350>)
20021000:	f000 faae 	bl	20021560 <do_test>
20021004:	68a1      	ldr	r1, [r4, #8]
20021006:	221e      	movs	r2, #30
20021008:	487f      	ldr	r0, [pc, #508]	; (20021208 <run+0x354>)
2002100a:	f000 faa9 	bl	20021560 <do_test>
2002100e:	68a1      	ldr	r1, [r4, #8]
20021010:	221f      	movs	r2, #31
20021012:	487e      	ldr	r0, [pc, #504]	; (2002120c <run+0x358>)
20021014:	f000 faa4 	bl	20021560 <do_test>
20021018:	68a1      	ldr	r1, [r4, #8]
2002101a:	2220      	movs	r2, #32
2002101c:	487c      	ldr	r0, [pc, #496]	; (20021210 <run+0x35c>)
2002101e:	f000 fa9f 	bl	20021560 <do_test>
20021022:	68a1      	ldr	r1, [r4, #8]
20021024:	2221      	movs	r2, #33	; 0x21
20021026:	487b      	ldr	r0, [pc, #492]	; (20021214 <run+0x360>)
20021028:	f000 fa9a 	bl	20021560 <do_test>
2002102c:	68a1      	ldr	r1, [r4, #8]
2002102e:	2222      	movs	r2, #34	; 0x22
20021030:	4879      	ldr	r0, [pc, #484]	; (20021218 <run+0x364>)
20021032:	f000 fa95 	bl	20021560 <do_test>
20021036:	68a1      	ldr	r1, [r4, #8]
20021038:	2223      	movs	r2, #35	; 0x23
2002103a:	4878      	ldr	r0, [pc, #480]	; (2002121c <run+0x368>)
2002103c:	f000 fa90 	bl	20021560 <do_test>
20021040:	68a1      	ldr	r1, [r4, #8]
20021042:	2224      	movs	r2, #36	; 0x24
20021044:	4876      	ldr	r0, [pc, #472]	; (20021220 <run+0x36c>)
20021046:	f000 fa8b 	bl	20021560 <do_test>
2002104a:	6961      	ldr	r1, [r4, #20]
2002104c:	2225      	movs	r2, #37	; 0x25
2002104e:	4875      	ldr	r0, [pc, #468]	; (20021224 <run+0x370>)
20021050:	f000 fa86 	bl	20021560 <do_test>
20021054:	6961      	ldr	r1, [r4, #20]
20021056:	2226      	movs	r2, #38	; 0x26
20021058:	4873      	ldr	r0, [pc, #460]	; (20021228 <run+0x374>)
2002105a:	f000 fa81 	bl	20021560 <do_test>
2002105e:	6961      	ldr	r1, [r4, #20]
20021060:	2227      	movs	r2, #39	; 0x27
20021062:	4872      	ldr	r0, [pc, #456]	; (2002122c <run+0x378>)
20021064:	f000 fa7c 	bl	20021560 <do_test>
20021068:	68a1      	ldr	r1, [r4, #8]
2002106a:	2228      	movs	r2, #40	; 0x28
2002106c:	4870      	ldr	r0, [pc, #448]	; (20021230 <run+0x37c>)
2002106e:	f000 fa77 	bl	20021560 <do_test>
20021072:	68a1      	ldr	r1, [r4, #8]
20021074:	2229      	movs	r2, #41	; 0x29
20021076:	486f      	ldr	r0, [pc, #444]	; (20021234 <run+0x380>)
20021078:	f000 fa72 	bl	20021560 <do_test>
2002107c:	68a1      	ldr	r1, [r4, #8]
2002107e:	222a      	movs	r2, #42	; 0x2a
20021080:	486d      	ldr	r0, [pc, #436]	; (20021238 <run+0x384>)
20021082:	f000 fa6d 	bl	20021560 <do_test>
20021086:	68a1      	ldr	r1, [r4, #8]
20021088:	222b      	movs	r2, #43	; 0x2b
2002108a:	486c      	ldr	r0, [pc, #432]	; (2002123c <run+0x388>)
2002108c:	f000 fa68 	bl	20021560 <do_test>
20021090:	68a1      	ldr	r1, [r4, #8]
20021092:	222c      	movs	r2, #44	; 0x2c
20021094:	486a      	ldr	r0, [pc, #424]	; (20021240 <run+0x38c>)
20021096:	f000 fa63 	bl	20021560 <do_test>
2002109a:	6a21      	ldr	r1, [r4, #32]
2002109c:	222d      	movs	r2, #45	; 0x2d
2002109e:	4869      	ldr	r0, [pc, #420]	; (20021244 <run+0x390>)
200210a0:	f000 fa5e 	bl	20021560 <do_test>
200210a4:	68a1      	ldr	r1, [r4, #8]
200210a6:	222e      	movs	r2, #46	; 0x2e
200210a8:	4867      	ldr	r0, [pc, #412]	; (20021248 <run+0x394>)
200210aa:	f000 fa59 	bl	20021560 <do_test>
200210ae:	68a1      	ldr	r1, [r4, #8]
200210b0:	222f      	movs	r2, #47	; 0x2f
200210b2:	4866      	ldr	r0, [pc, #408]	; (2002124c <run+0x398>)
200210b4:	f000 fa54 	bl	20021560 <do_test>
200210b8:	68a1      	ldr	r1, [r4, #8]
200210ba:	2230      	movs	r2, #48	; 0x30
200210bc:	4864      	ldr	r0, [pc, #400]	; (20021250 <run+0x39c>)
200210be:	f000 fa4f 	bl	20021560 <do_test>
200210c2:	68a1      	ldr	r1, [r4, #8]
200210c4:	2231      	movs	r2, #49	; 0x31
200210c6:	4863      	ldr	r0, [pc, #396]	; (20021254 <run+0x3a0>)
200210c8:	f000 fa4a 	bl	20021560 <do_test>
200210cc:	68a1      	ldr	r1, [r4, #8]
200210ce:	2232      	movs	r2, #50	; 0x32
200210d0:	4861      	ldr	r0, [pc, #388]	; (20021258 <run+0x3a4>)
200210d2:	f000 fa45 	bl	20021560 <do_test>
200210d6:	68a1      	ldr	r1, [r4, #8]
200210d8:	2233      	movs	r2, #51	; 0x33
200210da:	4860      	ldr	r0, [pc, #384]	; (2002125c <run+0x3a8>)
200210dc:	f000 fa40 	bl	20021560 <do_test>
200210e0:	68a1      	ldr	r1, [r4, #8]
200210e2:	2234      	movs	r2, #52	; 0x34
200210e4:	485e      	ldr	r0, [pc, #376]	; (20021260 <run+0x3ac>)
200210e6:	f000 fa3b 	bl	20021560 <do_test>
200210ea:	68a1      	ldr	r1, [r4, #8]
200210ec:	2235      	movs	r2, #53	; 0x35
200210ee:	485d      	ldr	r0, [pc, #372]	; (20021264 <run+0x3b0>)
200210f0:	f000 fa36 	bl	20021560 <do_test>
200210f4:	68a1      	ldr	r1, [r4, #8]
200210f6:	2236      	movs	r2, #54	; 0x36
200210f8:	485b      	ldr	r0, [pc, #364]	; (20021268 <run+0x3b4>)
200210fa:	f000 fa31 	bl	20021560 <do_test>
200210fe:	68a1      	ldr	r1, [r4, #8]
20021100:	2237      	movs	r2, #55	; 0x37
20021102:	485a      	ldr	r0, [pc, #360]	; (2002126c <run+0x3b8>)
20021104:	f000 fa2c 	bl	20021560 <do_test>
20021108:	68a1      	ldr	r1, [r4, #8]
2002110a:	2238      	movs	r2, #56	; 0x38
2002110c:	4858      	ldr	r0, [pc, #352]	; (20021270 <run+0x3bc>)
2002110e:	f000 fa27 	bl	20021560 <do_test>
20021112:	68a1      	ldr	r1, [r4, #8]
20021114:	2239      	movs	r2, #57	; 0x39
20021116:	4857      	ldr	r0, [pc, #348]	; (20021274 <run+0x3c0>)
20021118:	f000 fa22 	bl	20021560 <do_test>
2002111c:	68a1      	ldr	r1, [r4, #8]
2002111e:	223a      	movs	r2, #58	; 0x3a
20021120:	4855      	ldr	r0, [pc, #340]	; (20021278 <run+0x3c4>)
20021122:	f000 fa1d 	bl	20021560 <do_test>
20021126:	68a1      	ldr	r1, [r4, #8]
20021128:	223b      	movs	r2, #59	; 0x3b
2002112a:	4854      	ldr	r0, [pc, #336]	; (2002127c <run+0x3c8>)
2002112c:	f000 fa18 	bl	20021560 <do_test>
20021130:	68a1      	ldr	r1, [r4, #8]
20021132:	223c      	movs	r2, #60	; 0x3c
20021134:	4852      	ldr	r0, [pc, #328]	; (20021280 <run+0x3cc>)
20021136:	f000 fa13 	bl	20021560 <do_test>
2002113a:	68a1      	ldr	r1, [r4, #8]
2002113c:	223d      	movs	r2, #61	; 0x3d
2002113e:	4851      	ldr	r0, [pc, #324]	; (20021284 <run+0x3d0>)
20021140:	f000 fa0e 	bl	20021560 <do_test>
20021144:	68a1      	ldr	r1, [r4, #8]
20021146:	223e      	movs	r2, #62	; 0x3e
20021148:	484f      	ldr	r0, [pc, #316]	; (20021288 <run+0x3d4>)
2002114a:	f000 fa09 	bl	20021560 <do_test>
2002114e:	68a1      	ldr	r1, [r4, #8]
20021150:	223f      	movs	r2, #63	; 0x3f
20021152:	484e      	ldr	r0, [pc, #312]	; (2002128c <run+0x3d8>)
20021154:	f000 fa04 	bl	20021560 <do_test>
20021158:	6961      	ldr	r1, [r4, #20]
2002115a:	2240      	movs	r2, #64	; 0x40
2002115c:	484c      	ldr	r0, [pc, #304]	; (20021290 <run+0x3dc>)
2002115e:	f000 f9ff 	bl	20021560 <do_test>
20021162:	6961      	ldr	r1, [r4, #20]
20021164:	2241      	movs	r2, #65	; 0x41
20021166:	484b      	ldr	r0, [pc, #300]	; (20021294 <run+0x3e0>)
20021168:	f000 f9fa 	bl	20021560 <do_test>
2002116c:	6961      	ldr	r1, [r4, #20]
2002116e:	2242      	movs	r2, #66	; 0x42
20021170:	4849      	ldr	r0, [pc, #292]	; (20021298 <run+0x3e4>)
20021172:	f000 f9f5 	bl	20021560 <do_test>
20021176:	68a1      	ldr	r1, [r4, #8]
20021178:	2243      	movs	r2, #67	; 0x43
2002117a:	4848      	ldr	r0, [pc, #288]	; (2002129c <run+0x3e8>)
2002117c:	f000 f9f0 	bl	20021560 <do_test>
20021180:	e08e      	b.n	200212a0 <run+0x3ec>
20021182:	bf00      	nop
20021184:	2002180c 	.word	0x2002180c
20021188:	20022624 	.word	0x20022624
2002118c:	2002252c 	.word	0x2002252c
20021190:	200201f1 	.word	0x200201f1
20021194:	200201fd 	.word	0x200201fd
20021198:	20020209 	.word	0x20020209
2002119c:	20020219 	.word	0x20020219
200211a0:	20020229 	.word	0x20020229
200211a4:	20020239 	.word	0x20020239
200211a8:	20020249 	.word	0x20020249
200211ac:	20020259 	.word	0x20020259
200211b0:	20020269 	.word	0x20020269
200211b4:	20020279 	.word	0x20020279
200211b8:	20020289 	.word	0x20020289
200211bc:	20020295 	.word	0x20020295
200211c0:	200202a1 	.word	0x200202a1
200211c4:	200202ad 	.word	0x200202ad
200211c8:	200202b9 	.word	0x200202b9
200211cc:	200202c9 	.word	0x200202c9
200211d0:	200202d9 	.word	0x200202d9
200211d4:	200202e9 	.word	0x200202e9
200211d8:	200202f9 	.word	0x200202f9
200211dc:	2002030d 	.word	0x2002030d
200211e0:	20020321 	.word	0x20020321
200211e4:	20020331 	.word	0x20020331
200211e8:	20020341 	.word	0x20020341
200211ec:	20020359 	.word	0x20020359
200211f0:	20020371 	.word	0x20020371
200211f4:	2002037d 	.word	0x2002037d
200211f8:	20020389 	.word	0x20020389
200211fc:	20020399 	.word	0x20020399
20021200:	200203a9 	.word	0x200203a9
20021204:	200203b5 	.word	0x200203b5
20021208:	200203c1 	.word	0x200203c1
2002120c:	200203cd 	.word	0x200203cd
20021210:	200203d9 	.word	0x200203d9
20021214:	200203e9 	.word	0x200203e9
20021218:	200203fd 	.word	0x200203fd
2002121c:	20020425 	.word	0x20020425
20021220:	20020441 	.word	0x20020441
20021224:	20020465 	.word	0x20020465
20021228:	2002047d 	.word	0x2002047d
2002122c:	200204a1 	.word	0x200204a1
20021230:	200204c5 	.word	0x200204c5
20021234:	200204f5 	.word	0x200204f5
20021238:	20020525 	.word	0x20020525
2002123c:	20020549 	.word	0x20020549
20021240:	20020561 	.word	0x20020561
20021244:	20020575 	.word	0x20020575
20021248:	2002098d 	.word	0x2002098d
2002124c:	20020991 	.word	0x20020991
20021250:	200209cd 	.word	0x200209cd
20021254:	200209b9 	.word	0x200209b9
20021258:	20020965 	.word	0x20020965
2002125c:	2002096d 	.word	0x2002096d
20021260:	20020a41 	.word	0x20020a41
20021264:	20020a25 	.word	0x20020a25
20021268:	20020a7d 	.word	0x20020a7d
2002126c:	20020a91 	.word	0x20020a91
20021270:	20020aa5 	.word	0x20020aa5
20021274:	20020abd 	.word	0x20020abd
20021278:	20020ae5 	.word	0x20020ae5
2002127c:	20020b11 	.word	0x20020b11
20021280:	20020b29 	.word	0x20020b29
20021284:	20020b45 	.word	0x20020b45
20021288:	20020b61 	.word	0x20020b61
2002128c:	20020b7d 	.word	0x20020b7d
20021290:	20020b91 	.word	0x20020b91
20021294:	20020bbd 	.word	0x20020bbd
20021298:	20020c05 	.word	0x20020c05
2002129c:	20020c35 	.word	0x20020c35
200212a0:	6a21      	ldr	r1, [r4, #32]
200212a2:	2244      	movs	r2, #68	; 0x44
200212a4:	487a      	ldr	r0, [pc, #488]	; (20021490 <run+0x5dc>)
200212a6:	f000 f95b 	bl	20021560 <do_test>
200212aa:	6a21      	ldr	r1, [r4, #32]
200212ac:	2245      	movs	r2, #69	; 0x45
200212ae:	4879      	ldr	r0, [pc, #484]	; (20021494 <run+0x5e0>)
200212b0:	f000 f956 	bl	20021560 <do_test>
200212b4:	68a1      	ldr	r1, [r4, #8]
200212b6:	2246      	movs	r2, #70	; 0x46
200212b8:	4877      	ldr	r0, [pc, #476]	; (20021498 <run+0x5e4>)
200212ba:	f000 f951 	bl	20021560 <do_test>
200212be:	68a1      	ldr	r1, [r4, #8]
200212c0:	2247      	movs	r2, #71	; 0x47
200212c2:	4876      	ldr	r0, [pc, #472]	; (2002149c <run+0x5e8>)
200212c4:	f000 f94c 	bl	20021560 <do_test>
200212c8:	6a21      	ldr	r1, [r4, #32]
200212ca:	2248      	movs	r2, #72	; 0x48
200212cc:	4874      	ldr	r0, [pc, #464]	; (200214a0 <run+0x5ec>)
200212ce:	f000 f947 	bl	20021560 <do_test>
200212d2:	6a21      	ldr	r1, [r4, #32]
200212d4:	2249      	movs	r2, #73	; 0x49
200212d6:	4873      	ldr	r0, [pc, #460]	; (200214a4 <run+0x5f0>)
200212d8:	f000 f942 	bl	20021560 <do_test>
200212dc:	68a1      	ldr	r1, [r4, #8]
200212de:	224a      	movs	r2, #74	; 0x4a
200212e0:	4871      	ldr	r0, [pc, #452]	; (200214a8 <run+0x5f4>)
200212e2:	f000 f93d 	bl	20021560 <do_test>
200212e6:	68a1      	ldr	r1, [r4, #8]
200212e8:	224b      	movs	r2, #75	; 0x4b
200212ea:	4870      	ldr	r0, [pc, #448]	; (200214ac <run+0x5f8>)
200212ec:	f000 f938 	bl	20021560 <do_test>
200212f0:	68a1      	ldr	r1, [r4, #8]
200212f2:	224c      	movs	r2, #76	; 0x4c
200212f4:	486e      	ldr	r0, [pc, #440]	; (200214b0 <run+0x5fc>)
200212f6:	f000 f933 	bl	20021560 <do_test>
200212fa:	68a1      	ldr	r1, [r4, #8]
200212fc:	224d      	movs	r2, #77	; 0x4d
200212fe:	486d      	ldr	r0, [pc, #436]	; (200214b4 <run+0x600>)
20021300:	f000 f92e 	bl	20021560 <do_test>
20021304:	68a1      	ldr	r1, [r4, #8]
20021306:	224e      	movs	r2, #78	; 0x4e
20021308:	486b      	ldr	r0, [pc, #428]	; (200214b8 <run+0x604>)
2002130a:	f000 f929 	bl	20021560 <do_test>
2002130e:	68a1      	ldr	r1, [r4, #8]
20021310:	224f      	movs	r2, #79	; 0x4f
20021312:	486a      	ldr	r0, [pc, #424]	; (200214bc <run+0x608>)
20021314:	f000 f924 	bl	20021560 <do_test>
20021318:	68a1      	ldr	r1, [r4, #8]
2002131a:	2250      	movs	r2, #80	; 0x50
2002131c:	4868      	ldr	r0, [pc, #416]	; (200214c0 <run+0x60c>)
2002131e:	f000 f91f 	bl	20021560 <do_test>
20021322:	68a1      	ldr	r1, [r4, #8]
20021324:	2251      	movs	r2, #81	; 0x51
20021326:	4866      	ldr	r0, [pc, #408]	; (200214c0 <run+0x60c>)
20021328:	f000 f91a 	bl	20021560 <do_test>
2002132c:	68a1      	ldr	r1, [r4, #8]
2002132e:	2252      	movs	r2, #82	; 0x52
20021330:	4864      	ldr	r0, [pc, #400]	; (200214c4 <run+0x610>)
20021332:	f000 f915 	bl	20021560 <do_test>
20021336:	68a1      	ldr	r1, [r4, #8]
20021338:	2253      	movs	r2, #83	; 0x53
2002133a:	4863      	ldr	r0, [pc, #396]	; (200214c8 <run+0x614>)
2002133c:	f000 f910 	bl	20021560 <do_test>
20021340:	68a1      	ldr	r1, [r4, #8]
20021342:	2254      	movs	r2, #84	; 0x54
20021344:	4861      	ldr	r0, [pc, #388]	; (200214cc <run+0x618>)
20021346:	f000 f90b 	bl	20021560 <do_test>
2002134a:	68a1      	ldr	r1, [r4, #8]
2002134c:	2255      	movs	r2, #85	; 0x55
2002134e:	4860      	ldr	r0, [pc, #384]	; (200214d0 <run+0x61c>)
20021350:	f000 f906 	bl	20021560 <do_test>
20021354:	68a1      	ldr	r1, [r4, #8]
20021356:	2256      	movs	r2, #86	; 0x56
20021358:	485e      	ldr	r0, [pc, #376]	; (200214d4 <run+0x620>)
2002135a:	f000 f901 	bl	20021560 <do_test>
2002135e:	68a1      	ldr	r1, [r4, #8]
20021360:	2257      	movs	r2, #87	; 0x57
20021362:	485b      	ldr	r0, [pc, #364]	; (200214d0 <run+0x61c>)
20021364:	f000 f8fc 	bl	20021560 <do_test>
20021368:	68a1      	ldr	r1, [r4, #8]
2002136a:	2258      	movs	r2, #88	; 0x58
2002136c:	485a      	ldr	r0, [pc, #360]	; (200214d8 <run+0x624>)
2002136e:	f000 f8f7 	bl	20021560 <do_test>
20021372:	68a1      	ldr	r1, [r4, #8]
20021374:	2259      	movs	r2, #89	; 0x59
20021376:	4859      	ldr	r0, [pc, #356]	; (200214dc <run+0x628>)
20021378:	f000 f8f2 	bl	20021560 <do_test>
2002137c:	6a21      	ldr	r1, [r4, #32]
2002137e:	225a      	movs	r2, #90	; 0x5a
20021380:	4857      	ldr	r0, [pc, #348]	; (200214e0 <run+0x62c>)
20021382:	f000 f8ed 	bl	20021560 <do_test>
20021386:	6a21      	ldr	r1, [r4, #32]
20021388:	225b      	movs	r2, #91	; 0x5b
2002138a:	4856      	ldr	r0, [pc, #344]	; (200214e4 <run+0x630>)
2002138c:	f000 f8e8 	bl	20021560 <do_test>
20021390:	68a1      	ldr	r1, [r4, #8]
20021392:	225c      	movs	r2, #92	; 0x5c
20021394:	4854      	ldr	r0, [pc, #336]	; (200214e8 <run+0x634>)
20021396:	f000 f8e3 	bl	20021560 <do_test>
2002139a:	6a21      	ldr	r1, [r4, #32]
2002139c:	225d      	movs	r2, #93	; 0x5d
2002139e:	4853      	ldr	r0, [pc, #332]	; (200214ec <run+0x638>)
200213a0:	f000 f8de 	bl	20021560 <do_test>
200213a4:	6a21      	ldr	r1, [r4, #32]
200213a6:	225e      	movs	r2, #94	; 0x5e
200213a8:	4851      	ldr	r0, [pc, #324]	; (200214f0 <run+0x63c>)
200213aa:	f000 f8d9 	bl	20021560 <do_test>
200213ae:	68a1      	ldr	r1, [r4, #8]
200213b0:	225f      	movs	r2, #95	; 0x5f
200213b2:	4850      	ldr	r0, [pc, #320]	; (200214f4 <run+0x640>)
200213b4:	f000 f8d4 	bl	20021560 <do_test>
200213b8:	68a1      	ldr	r1, [r4, #8]
200213ba:	2260      	movs	r2, #96	; 0x60
200213bc:	484e      	ldr	r0, [pc, #312]	; (200214f8 <run+0x644>)
200213be:	f000 f8cf 	bl	20021560 <do_test>
200213c2:	68a1      	ldr	r1, [r4, #8]
200213c4:	2261      	movs	r2, #97	; 0x61
200213c6:	484d      	ldr	r0, [pc, #308]	; (200214fc <run+0x648>)
200213c8:	f000 f8ca 	bl	20021560 <do_test>
200213cc:	68a1      	ldr	r1, [r4, #8]
200213ce:	2262      	movs	r2, #98	; 0x62
200213d0:	484b      	ldr	r0, [pc, #300]	; (20021500 <run+0x64c>)
200213d2:	f000 f8c5 	bl	20021560 <do_test>
200213d6:	6a21      	ldr	r1, [r4, #32]
200213d8:	2263      	movs	r2, #99	; 0x63
200213da:	484a      	ldr	r0, [pc, #296]	; (20021504 <run+0x650>)
200213dc:	f000 f8c0 	bl	20021560 <do_test>
200213e0:	6a21      	ldr	r1, [r4, #32]
200213e2:	2264      	movs	r2, #100	; 0x64
200213e4:	4848      	ldr	r0, [pc, #288]	; (20021508 <run+0x654>)
200213e6:	f000 f8bb 	bl	20021560 <do_test>
200213ea:	6a21      	ldr	r1, [r4, #32]
200213ec:	2265      	movs	r2, #101	; 0x65
200213ee:	4847      	ldr	r0, [pc, #284]	; (2002150c <run+0x658>)
200213f0:	f000 f8b6 	bl	20021560 <do_test>
200213f4:	6a21      	ldr	r1, [r4, #32]
200213f6:	2266      	movs	r2, #102	; 0x66
200213f8:	4845      	ldr	r0, [pc, #276]	; (20021510 <run+0x65c>)
200213fa:	f000 f8b1 	bl	20021560 <do_test>
200213fe:	6a21      	ldr	r1, [r4, #32]
20021400:	2267      	movs	r2, #103	; 0x67
20021402:	4844      	ldr	r0, [pc, #272]	; (20021514 <run+0x660>)
20021404:	f000 f8ac 	bl	20021560 <do_test>
20021408:	6a21      	ldr	r1, [r4, #32]
2002140a:	2268      	movs	r2, #104	; 0x68
2002140c:	4842      	ldr	r0, [pc, #264]	; (20021518 <run+0x664>)
2002140e:	f000 f8a7 	bl	20021560 <do_test>
20021412:	68a1      	ldr	r1, [r4, #8]
20021414:	2269      	movs	r2, #105	; 0x69
20021416:	4841      	ldr	r0, [pc, #260]	; (2002151c <run+0x668>)
20021418:	f000 f8a2 	bl	20021560 <do_test>
2002141c:	68a1      	ldr	r1, [r4, #8]
2002141e:	226a      	movs	r2, #106	; 0x6a
20021420:	483f      	ldr	r0, [pc, #252]	; (20021520 <run+0x66c>)
20021422:	f000 f89d 	bl	20021560 <do_test>
20021426:	68a1      	ldr	r1, [r4, #8]
20021428:	226b      	movs	r2, #107	; 0x6b
2002142a:	483e      	ldr	r0, [pc, #248]	; (20021524 <run+0x670>)
2002142c:	f000 f898 	bl	20021560 <do_test>
20021430:	68a1      	ldr	r1, [r4, #8]
20021432:	226c      	movs	r2, #108	; 0x6c
20021434:	483c      	ldr	r0, [pc, #240]	; (20021528 <run+0x674>)
20021436:	f000 f893 	bl	20021560 <do_test>
2002143a:	68a1      	ldr	r1, [r4, #8]
2002143c:	226d      	movs	r2, #109	; 0x6d
2002143e:	483b      	ldr	r0, [pc, #236]	; (2002152c <run+0x678>)
20021440:	f000 f88e 	bl	20021560 <do_test>
20021444:	68a1      	ldr	r1, [r4, #8]
20021446:	226e      	movs	r2, #110	; 0x6e
20021448:	4839      	ldr	r0, [pc, #228]	; (20021530 <run+0x67c>)
2002144a:	f000 f889 	bl	20021560 <do_test>
2002144e:	68a1      	ldr	r1, [r4, #8]
20021450:	226f      	movs	r2, #111	; 0x6f
20021452:	4838      	ldr	r0, [pc, #224]	; (20021534 <run+0x680>)
20021454:	f000 f884 	bl	20021560 <do_test>
20021458:	68a1      	ldr	r1, [r4, #8]
2002145a:	2270      	movs	r2, #112	; 0x70
2002145c:	4836      	ldr	r0, [pc, #216]	; (20021538 <run+0x684>)
2002145e:	f000 f87f 	bl	20021560 <do_test>
20021462:	68a1      	ldr	r1, [r4, #8]
20021464:	2271      	movs	r2, #113	; 0x71
20021466:	4835      	ldr	r0, [pc, #212]	; (2002153c <run+0x688>)
20021468:	f000 f87a 	bl	20021560 <do_test>
2002146c:	68a1      	ldr	r1, [r4, #8]
2002146e:	2272      	movs	r2, #114	; 0x72
20021470:	4833      	ldr	r0, [pc, #204]	; (20021540 <run+0x68c>)
20021472:	f000 f875 	bl	20021560 <do_test>
20021476:	68a1      	ldr	r1, [r4, #8]
20021478:	2273      	movs	r2, #115	; 0x73
2002147a:	4832      	ldr	r0, [pc, #200]	; (20021544 <run+0x690>)
2002147c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
20021480:	f000 b86e 	b.w	20021560 <do_test>
20021484:	4930      	ldr	r1, [pc, #192]	; (20021548 <run+0x694>)
20021486:	2301      	movs	r3, #1
20021488:	60a1      	str	r1, [r4, #8]
2002148a:	7023      	strb	r3, [r4, #0]
2002148c:	e519      	b.n	20020ec2 <run+0xe>
2002148e:	bf00      	nop
20021490:	2002093d 	.word	0x2002093d
20021494:	200208e9 	.word	0x200208e9
20021498:	20020cb1 	.word	0x20020cb1
2002149c:	20020cd9 	.word	0x20020cd9
200214a0:	20020591 	.word	0x20020591
200214a4:	200205ad 	.word	0x200205ad
200214a8:	200205c9 	.word	0x200205c9
200214ac:	200205f1 	.word	0x200205f1
200214b0:	20020629 	.word	0x20020629
200214b4:	20020651 	.word	0x20020651
200214b8:	20020689 	.word	0x20020689
200214bc:	20020695 	.word	0x20020695
200214c0:	200206a1 	.word	0x200206a1
200214c4:	200206b9 	.word	0x200206b9
200214c8:	200206d1 	.word	0x200206d1
200214cc:	200206e9 	.word	0x200206e9
200214d0:	2002070d 	.word	0x2002070d
200214d4:	2002072d 	.word	0x2002072d
200214d8:	20020751 	.word	0x20020751
200214dc:	20020761 	.word	0x20020761
200214e0:	20020775 	.word	0x20020775
200214e4:	20020781 	.word	0x20020781
200214e8:	2002079d 	.word	0x2002079d
200214ec:	2002094d 	.word	0x2002094d
200214f0:	20020911 	.word	0x20020911
200214f4:	20020995 	.word	0x20020995
200214f8:	200209e1 	.word	0x200209e1
200214fc:	20020975 	.word	0x20020975
20021500:	20020a59 	.word	0x20020a59
20021504:	20020db1 	.word	0x20020db1
20021508:	20020dbd 	.word	0x20020dbd
2002150c:	20020dc9 	.word	0x20020dc9
20021510:	20020df9 	.word	0x20020df9
20021514:	20020e19 	.word	0x20020e19
20021518:	20020e39 	.word	0x20020e39
2002151c:	200207a9 	.word	0x200207a9
20021520:	200207c1 	.word	0x200207c1
20021524:	200207d9 	.word	0x200207d9
20021528:	200207fd 	.word	0x200207fd
2002152c:	20020821 	.word	0x20020821
20021530:	20020849 	.word	0x20020849
20021534:	2002086d 	.word	0x2002086d
20021538:	20020895 	.word	0x20020895
2002153c:	200208b9 	.word	0x200208b9
20021540:	20020e6d 	.word	0x20020e6d
20021544:	20020e95 	.word	0x20020e95
20021548:	200226c4 	.word	0x200226c4

2002154c <memset>:
2002154c:	4402      	add	r2, r0
2002154e:	4290      	cmp	r0, r2
20021550:	d205      	bcs.n	2002155e <memset+0x12>
20021552:	b2c9      	uxtb	r1, r1
20021554:	4603      	mov	r3, r0
20021556:	f803 1b01 	strb.w	r1, [r3], #1
2002155a:	429a      	cmp	r2, r3
2002155c:	d1fb      	bne.n	20021556 <memset+0xa>
2002155e:	4770      	bx	lr

20021560 <do_test>:
20021560:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
20021564:	2300      	movs	r3, #0
20021566:	4c15      	ldr	r4, [pc, #84]	; (200215bc <do_test+0x5c>)
20021568:	2705      	movs	r7, #5
2002156a:	f06f 457f 	mvn.w	r5, #4278190080	; 0xff000000
2002156e:	6023      	str	r3, [r4, #0]
20021570:	4681      	mov	r9, r0
20021572:	60a3      	str	r3, [r4, #8]
20021574:	460e      	mov	r6, r1
20021576:	6027      	str	r7, [r4, #0]
20021578:	6065      	str	r5, [r4, #4]
2002157a:	68a3      	ldr	r3, [r4, #8]
2002157c:	b91b      	cbnz	r3, 20021586 <do_test+0x26>
2002157e:	bf00      	nop
20021580:	68a3      	ldr	r3, [r4, #8]
20021582:	2b00      	cmp	r3, #0
20021584:	d0fb      	beq.n	2002157e <do_test+0x1e>
20021586:	2300      	movs	r3, #0
20021588:	4f0c      	ldr	r7, [pc, #48]	; (200215bc <do_test+0x5c>)
2002158a:	0054      	lsls	r4, r2, #1
2002158c:	f8df 8034 	ldr.w	r8, [pc, #52]	; 200215c4 <do_test+0x64>
20021590:	68bd      	ldr	r5, [r7, #8]
20021592:	6033      	str	r3, [r6, #0]
20021594:	47c8      	blx	r9
20021596:	6832      	ldr	r2, [r6, #0]
20021598:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2002159c:	f848 2024 	str.w	r2, [r8, r4, lsl #2]
200215a0:	3401      	adds	r4, #1
200215a2:	6033      	str	r3, [r6, #0]
200215a4:	47c8      	blx	r9
200215a6:	4b06      	ldr	r3, [pc, #24]	; (200215c0 <do_test+0x60>)
200215a8:	6831      	ldr	r1, [r6, #0]
200215aa:	681a      	ldr	r2, [r3, #0]
200215ac:	f848 1024 	str.w	r1, [r8, r4, lsl #2]
200215b0:	4415      	add	r5, r2
200215b2:	68ba      	ldr	r2, [r7, #8]
200215b4:	1aad      	subs	r5, r5, r2
200215b6:	601d      	str	r5, [r3, #0]
200215b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
200215bc:	e000e010 	.word	0xe000e010
200215c0:	20021830 	.word	0x20021830
200215c4:	20021834 	.word	0x20021834

200215c8 <NMI_IRQ_Handler>:
200215c8:	e7fe      	b.n	200215c8 <NMI_IRQ_Handler>
200215ca:	bf00      	nop

200215cc <HardFault_IRQ_Handler>:
200215cc:	e7fe      	b.n	200215cc <HardFault_IRQ_Handler>
200215ce:	bf00      	nop

200215d0 <MemManage_IRQ_Handler>:
200215d0:	e7fe      	b.n	200215d0 <MemManage_IRQ_Handler>
200215d2:	bf00      	nop

200215d4 <BusFault_IRQ_Handler>:
200215d4:	e7fe      	b.n	200215d4 <BusFault_IRQ_Handler>
200215d6:	bf00      	nop

200215d8 <UsageFault_IRQ_Handler>:
200215d8:	e7fe      	b.n	200215d8 <UsageFault_IRQ_Handler>
200215da:	bf00      	nop

200215dc <Reserved1_IRQ_Handler>:
200215dc:	e7fe      	b.n	200215dc <Reserved1_IRQ_Handler>
200215de:	bf00      	nop

200215e0 <Reserved2_IRQ_Handler>:
200215e0:	e7fe      	b.n	200215e0 <Reserved2_IRQ_Handler>
200215e2:	bf00      	nop

200215e4 <Reserved3_IRQ_Handler>:
200215e4:	e7fe      	b.n	200215e4 <Reserved3_IRQ_Handler>
200215e6:	bf00      	nop

200215e8 <Reserved4_IRQ_Handler>:
200215e8:	e7fe      	b.n	200215e8 <Reserved4_IRQ_Handler>
200215ea:	bf00      	nop

200215ec <SVCall_IRQ_Handler>:
200215ec:	e7fe      	b.n	200215ec <SVCall_IRQ_Handler>
200215ee:	bf00      	nop

200215f0 <Debug_IRQ_Handler>:
200215f0:	e7fe      	b.n	200215f0 <Debug_IRQ_Handler>
200215f2:	bf00      	nop

200215f4 <Reserved5_IRQ_Handler>:
200215f4:	e7fe      	b.n	200215f4 <Reserved5_IRQ_Handler>
200215f6:	bf00      	nop

200215f8 <PendSV_IRQ_Handler>:
200215f8:	e7fe      	b.n	200215f8 <PendSV_IRQ_Handler>
200215fa:	bf00      	nop

200215fc <SysTick_IRQ_Handler>:
200215fc:	e7fe      	b.n	200215fc <SysTick_IRQ_Handler>
200215fe:	bf00      	nop

20021600 <WWDG_IRQ_Handler>:
20021600:	e7fe      	b.n	20021600 <WWDG_IRQ_Handler>
20021602:	bf00      	nop

20021604 <PVD_IRQ_Handler>:
20021604:	e7fe      	b.n	20021604 <PVD_IRQ_Handler>
20021606:	bf00      	nop

20021608 <TAMP_STAMP_IRQ_Handler>:
20021608:	e7fe      	b.n	20021608 <TAMP_STAMP_IRQ_Handler>
2002160a:	bf00      	nop

2002160c <RTC_WKUP_IRQ_Handler>:
2002160c:	e7fe      	b.n	2002160c <RTC_WKUP_IRQ_Handler>
2002160e:	bf00      	nop

20021610 <FLASH_IRQ_Handler>:
20021610:	e7fe      	b.n	20021610 <FLASH_IRQ_Handler>
20021612:	bf00      	nop

20021614 <RCC_IRQ_Handler>:
20021614:	e7fe      	b.n	20021614 <RCC_IRQ_Handler>
20021616:	bf00      	nop

20021618 <EXTI0_IRQ_Handler>:
20021618:	e7fe      	b.n	20021618 <EXTI0_IRQ_Handler>
2002161a:	bf00      	nop

2002161c <EXTI1_IRQ_Handler>:
2002161c:	e7fe      	b.n	2002161c <EXTI1_IRQ_Handler>
2002161e:	bf00      	nop

20021620 <EXTI2_IRQ_Handler>:
20021620:	e7fe      	b.n	20021620 <EXTI2_IRQ_Handler>
20021622:	bf00      	nop

20021624 <EXTI3_IRQ_Handler>:
20021624:	e7fe      	b.n	20021624 <EXTI3_IRQ_Handler>
20021626:	bf00      	nop

20021628 <EXTI4_IRQ_Handler>:
20021628:	e7fe      	b.n	20021628 <EXTI4_IRQ_Handler>
2002162a:	bf00      	nop

2002162c <DMA1_Stream0_IRQ_Handler>:
2002162c:	e7fe      	b.n	2002162c <DMA1_Stream0_IRQ_Handler>
2002162e:	bf00      	nop

20021630 <DMA1_Stream1_IRQ_Handler>:
20021630:	e7fe      	b.n	20021630 <DMA1_Stream1_IRQ_Handler>
20021632:	bf00      	nop

20021634 <DMA1_Stream2_IRQ_Handler>:
20021634:	e7fe      	b.n	20021634 <DMA1_Stream2_IRQ_Handler>
20021636:	bf00      	nop

20021638 <DMA1_Stream3_IRQ_Handler>:
20021638:	e7fe      	b.n	20021638 <DMA1_Stream3_IRQ_Handler>
2002163a:	bf00      	nop

2002163c <DMA1_Stream4_IRQ_Handler>:
2002163c:	e7fe      	b.n	2002163c <DMA1_Stream4_IRQ_Handler>
2002163e:	bf00      	nop

20021640 <DMA1_Stream5_IRQ_Handler>:
20021640:	e7fe      	b.n	20021640 <DMA1_Stream5_IRQ_Handler>
20021642:	bf00      	nop

20021644 <DMA1_Stream6_IRQ_Handler>:
20021644:	e7fe      	b.n	20021644 <DMA1_Stream6_IRQ_Handler>
20021646:	bf00      	nop

20021648 <ADC_IRQ_Handler>:
20021648:	e7fe      	b.n	20021648 <ADC_IRQ_Handler>
2002164a:	bf00      	nop

2002164c <CAN1_TX_IRQ_Handler>:
2002164c:	e7fe      	b.n	2002164c <CAN1_TX_IRQ_Handler>
2002164e:	bf00      	nop

20021650 <CAN1_RX0_IRQ_Handler>:
20021650:	e7fe      	b.n	20021650 <CAN1_RX0_IRQ_Handler>
20021652:	bf00      	nop

20021654 <CAN1_RX1_IRQ_Handler>:
20021654:	e7fe      	b.n	20021654 <CAN1_RX1_IRQ_Handler>
20021656:	bf00      	nop

20021658 <CAN1_SCE_IRQ_Handler>:
20021658:	e7fe      	b.n	20021658 <CAN1_SCE_IRQ_Handler>
2002165a:	bf00      	nop

2002165c <EXTI9_5_IRQ_Handler>:
2002165c:	e7fe      	b.n	2002165c <EXTI9_5_IRQ_Handler>
2002165e:	bf00      	nop

20021660 <TIM1_BRK_TIM9_IRQ_Handler>:
20021660:	e7fe      	b.n	20021660 <TIM1_BRK_TIM9_IRQ_Handler>
20021662:	bf00      	nop

20021664 <TIM1_UP_TIM10_IRQ_Handler>:
20021664:	e7fe      	b.n	20021664 <TIM1_UP_TIM10_IRQ_Handler>
20021666:	bf00      	nop

20021668 <TIM1_TRG_COM_TIM11_IRQ_Handler>:
20021668:	e7fe      	b.n	20021668 <TIM1_TRG_COM_TIM11_IRQ_Handler>
2002166a:	bf00      	nop

2002166c <TIM1_CC_IRQ_Handler>:
2002166c:	e7fe      	b.n	2002166c <TIM1_CC_IRQ_Handler>
2002166e:	bf00      	nop

20021670 <TIM2_IRQ_Handler>:
20021670:	e7fe      	b.n	20021670 <TIM2_IRQ_Handler>
20021672:	bf00      	nop

20021674 <TIM3_IRQ_Handler>:
20021674:	e7fe      	b.n	20021674 <TIM3_IRQ_Handler>
20021676:	bf00      	nop

20021678 <TIM4_IRQ_Handler>:
20021678:	e7fe      	b.n	20021678 <TIM4_IRQ_Handler>
2002167a:	bf00      	nop

2002167c <I2C1_EV_IRQ_Handler>:
2002167c:	e7fe      	b.n	2002167c <I2C1_EV_IRQ_Handler>
2002167e:	bf00      	nop

20021680 <I2C1_ER_IRQ_Handler>:
20021680:	e7fe      	b.n	20021680 <I2C1_ER_IRQ_Handler>
20021682:	bf00      	nop

20021684 <I2C2_EV_IRQ_Handler>:
20021684:	e7fe      	b.n	20021684 <I2C2_EV_IRQ_Handler>
20021686:	bf00      	nop

20021688 <I2C2_ER_IRQ_Handler>:
20021688:	e7fe      	b.n	20021688 <I2C2_ER_IRQ_Handler>
2002168a:	bf00      	nop

2002168c <SPI1_IRQ_Handler>:
2002168c:	e7fe      	b.n	2002168c <SPI1_IRQ_Handler>
2002168e:	bf00      	nop

20021690 <SPI2_IRQ_Handler>:
20021690:	e7fe      	b.n	20021690 <SPI2_IRQ_Handler>
20021692:	bf00      	nop

20021694 <USART1_IRQ_Handler>:
20021694:	e7fe      	b.n	20021694 <USART1_IRQ_Handler>
20021696:	bf00      	nop

20021698 <USART2_IRQ_Handler>:
20021698:	e7fe      	b.n	20021698 <USART2_IRQ_Handler>
2002169a:	bf00      	nop

2002169c <USART3_IRQ_Handler>:
2002169c:	e7fe      	b.n	2002169c <USART3_IRQ_Handler>
2002169e:	bf00      	nop

200216a0 <EXTI15_10_IRQ_Handler>:
200216a0:	e7fe      	b.n	200216a0 <EXTI15_10_IRQ_Handler>
200216a2:	bf00      	nop

200216a4 <RTC_Alarm_IRQ_Handler>:
200216a4:	e7fe      	b.n	200216a4 <RTC_Alarm_IRQ_Handler>
200216a6:	bf00      	nop

200216a8 <OTG_FS_WKUP_IRQ_Handler>:
200216a8:	e7fe      	b.n	200216a8 <OTG_FS_WKUP_IRQ_Handler>
200216aa:	bf00      	nop

200216ac <TIM8_BRK_TIM12_IRQ_Handler>:
200216ac:	e7fe      	b.n	200216ac <TIM8_BRK_TIM12_IRQ_Handler>
200216ae:	bf00      	nop

200216b0 <TIM8_UP_TIM13_IRQ_Handler>:
200216b0:	e7fe      	b.n	200216b0 <TIM8_UP_TIM13_IRQ_Handler>
200216b2:	bf00      	nop

200216b4 <TIM8_TRG_COM_TIM14_IRQ_Handler>:
200216b4:	e7fe      	b.n	200216b4 <TIM8_TRG_COM_TIM14_IRQ_Handler>
200216b6:	bf00      	nop

200216b8 <TIM8_CC_IRQ_Handler>:
200216b8:	e7fe      	b.n	200216b8 <TIM8_CC_IRQ_Handler>
200216ba:	bf00      	nop

200216bc <DMA1_Stream7_IRQ_Handler>:
200216bc:	e7fe      	b.n	200216bc <DMA1_Stream7_IRQ_Handler>
200216be:	bf00      	nop

200216c0 <FMC_IRQ_Handler>:
200216c0:	e7fe      	b.n	200216c0 <FMC_IRQ_Handler>
200216c2:	bf00      	nop

200216c4 <SDMMC1_IRQ_Handler>:
200216c4:	e7fe      	b.n	200216c4 <SDMMC1_IRQ_Handler>
200216c6:	bf00      	nop

200216c8 <TIM5_IRQ_Handler>:
200216c8:	e7fe      	b.n	200216c8 <TIM5_IRQ_Handler>
200216ca:	bf00      	nop

200216cc <SPI3_IRQ_Handler>:
200216cc:	e7fe      	b.n	200216cc <SPI3_IRQ_Handler>
200216ce:	bf00      	nop

200216d0 <UART4_IRQ_Handler>:
200216d0:	e7fe      	b.n	200216d0 <UART4_IRQ_Handler>
200216d2:	bf00      	nop

200216d4 <UART5_IRQ_Handler>:
200216d4:	e7fe      	b.n	200216d4 <UART5_IRQ_Handler>
200216d6:	bf00      	nop

200216d8 <TIM6_DAC_IRQ_Handler>:
200216d8:	e7fe      	b.n	200216d8 <TIM6_DAC_IRQ_Handler>
200216da:	bf00      	nop

200216dc <TIM7_IRQ_Handler>:
200216dc:	e7fe      	b.n	200216dc <TIM7_IRQ_Handler>
200216de:	bf00      	nop

200216e0 <DMA2_Stream0_IRQ_Handler>:
200216e0:	e7fe      	b.n	200216e0 <DMA2_Stream0_IRQ_Handler>
200216e2:	bf00      	nop

200216e4 <DMA2_Stream1_IRQ_Handler>:
200216e4:	e7fe      	b.n	200216e4 <DMA2_Stream1_IRQ_Handler>
200216e6:	bf00      	nop

200216e8 <DMA2_Stream2_IRQ_Handler>:
200216e8:	e7fe      	b.n	200216e8 <DMA2_Stream2_IRQ_Handler>
200216ea:	bf00      	nop

200216ec <DMA2_Stream3_IRQ_Handler>:
200216ec:	e7fe      	b.n	200216ec <DMA2_Stream3_IRQ_Handler>
200216ee:	bf00      	nop

200216f0 <DMA2_Stream4_IRQ_Handler>:
200216f0:	e7fe      	b.n	200216f0 <DMA2_Stream4_IRQ_Handler>
200216f2:	bf00      	nop

200216f4 <ETH_IRQ_Handler>:
200216f4:	e7fe      	b.n	200216f4 <ETH_IRQ_Handler>
200216f6:	bf00      	nop

200216f8 <ETH_WKUP_IRQ_Handler>:
200216f8:	e7fe      	b.n	200216f8 <ETH_WKUP_IRQ_Handler>
200216fa:	bf00      	nop

200216fc <CAN2_TX_IRQ_Handler>:
200216fc:	e7fe      	b.n	200216fc <CAN2_TX_IRQ_Handler>
200216fe:	bf00      	nop

20021700 <CAN2_RX0_IRQ_Handler>:
20021700:	e7fe      	b.n	20021700 <CAN2_RX0_IRQ_Handler>
20021702:	bf00      	nop

20021704 <CAN2_RX1_IRQ_Handler>:
20021704:	e7fe      	b.n	20021704 <CAN2_RX1_IRQ_Handler>
20021706:	bf00      	nop

20021708 <CAN2_SCE_IRQ_Handler>:
20021708:	e7fe      	b.n	20021708 <CAN2_SCE_IRQ_Handler>
2002170a:	bf00      	nop

2002170c <OTG_FS_IRQ_Handler>:
2002170c:	e7fe      	b.n	2002170c <OTG_FS_IRQ_Handler>
2002170e:	bf00      	nop

20021710 <DMA2_Stream5_IRQ_Handler>:
20021710:	e7fe      	b.n	20021710 <DMA2_Stream5_IRQ_Handler>
20021712:	bf00      	nop

20021714 <DMA2_Stream6_IRQ_Handler>:
20021714:	e7fe      	b.n	20021714 <DMA2_Stream6_IRQ_Handler>
20021716:	bf00      	nop

20021718 <DMA2_Stream7_IRQ_Handler>:
20021718:	e7fe      	b.n	20021718 <DMA2_Stream7_IRQ_Handler>
2002171a:	bf00      	nop

2002171c <USART6_IRQ_Handler>:
2002171c:	e7fe      	b.n	2002171c <USART6_IRQ_Handler>
2002171e:	bf00      	nop

20021720 <I2C3_EV_IRQ_Handler>:
20021720:	e7fe      	b.n	20021720 <I2C3_EV_IRQ_Handler>
20021722:	bf00      	nop

20021724 <I2C3_ER_IRQ_Handler>:
20021724:	e7fe      	b.n	20021724 <I2C3_ER_IRQ_Handler>
20021726:	bf00      	nop

20021728 <OTG_HS_EP1_OUT_IRQ_Handler>:
20021728:	e7fe      	b.n	20021728 <OTG_HS_EP1_OUT_IRQ_Handler>
2002172a:	bf00      	nop

2002172c <OTG_HS_EP1_IN_IRQ_Handler>:
2002172c:	e7fe      	b.n	2002172c <OTG_HS_EP1_IN_IRQ_Handler>
2002172e:	bf00      	nop

20021730 <OTG_HS_WKUP_IRQ_Handler>:
20021730:	e7fe      	b.n	20021730 <OTG_HS_WKUP_IRQ_Handler>
20021732:	bf00      	nop

20021734 <OTG_HS_IRQ_Handler>:
20021734:	e7fe      	b.n	20021734 <OTG_HS_IRQ_Handler>
20021736:	bf00      	nop

20021738 <DCMI_IRQ_Handler>:
20021738:	e7fe      	b.n	20021738 <DCMI_IRQ_Handler>
2002173a:	bf00      	nop

2002173c <RNG_IRQ_Handler>:
2002173c:	e7fe      	b.n	2002173c <RNG_IRQ_Handler>
2002173e:	bf00      	nop

20021740 <FPU_IRQ_Handler>:
20021740:	e7fe      	b.n	20021740 <FPU_IRQ_Handler>
20021742:	bf00      	nop

20021744 <UART7_IRQ_Handler>:
20021744:	e7fe      	b.n	20021744 <UART7_IRQ_Handler>
20021746:	bf00      	nop

20021748 <UART8_IRQ_Handler>:
20021748:	e7fe      	b.n	20021748 <UART8_IRQ_Handler>
2002174a:	bf00      	nop

2002174c <SPI4_IRQ_Handler>:
2002174c:	e7fe      	b.n	2002174c <SPI4_IRQ_Handler>
2002174e:	bf00      	nop

20021750 <SPI5_IRQ_Handler>:
20021750:	e7fe      	b.n	20021750 <SPI5_IRQ_Handler>
20021752:	bf00      	nop

20021754 <SPI6_IRQ_Handler>:
20021754:	e7fe      	b.n	20021754 <SPI6_IRQ_Handler>
20021756:	bf00      	nop

20021758 <SAI1_IRQ_Handler>:
20021758:	e7fe      	b.n	20021758 <SAI1_IRQ_Handler>
2002175a:	bf00      	nop

2002175c <LTDC_IRQ_Handler>:
2002175c:	e7fe      	b.n	2002175c <LTDC_IRQ_Handler>
2002175e:	bf00      	nop

20021760 <LTDC_ER_IRQ_Handler>:
20021760:	e7fe      	b.n	20021760 <LTDC_ER_IRQ_Handler>
20021762:	bf00      	nop

20021764 <DMA2D_IRQ_Handler>:
20021764:	e7fe      	b.n	20021764 <DMA2D_IRQ_Handler>
20021766:	bf00      	nop

20021768 <SAI2_IRQ_Handler>:
20021768:	e7fe      	b.n	20021768 <SAI2_IRQ_Handler>
2002176a:	bf00      	nop

2002176c <QUADSPI_IRQ_Handler>:
2002176c:	e7fe      	b.n	2002176c <QUADSPI_IRQ_Handler>
2002176e:	bf00      	nop

20021770 <LPTIM1_IRQ_Handler>:
20021770:	e7fe      	b.n	20021770 <LPTIM1_IRQ_Handler>
20021772:	bf00      	nop

20021774 <CEC_IRQ_Handler>:
20021774:	e7fe      	b.n	20021774 <CEC_IRQ_Handler>
20021776:	bf00      	nop

20021778 <I2C4_EV_IRQ_Handler>:
20021778:	e7fe      	b.n	20021778 <I2C4_EV_IRQ_Handler>
2002177a:	bf00      	nop

2002177c <I2C4_ER_IRQ_Handler>:
2002177c:	e7fe      	b.n	2002177c <I2C4_ER_IRQ_Handler>
2002177e:	bf00      	nop

20021780 <SPDIF_RX_IRQ_Handler>:
20021780:	e7fe      	b.n	20021780 <SPDIF_RX_IRQ_Handler>
20021782:	bf00      	nop

20021784 <DFSDM1_FLT0_IRQ_Handler>:
20021784:	e7fe      	b.n	20021784 <DFSDM1_FLT0_IRQ_Handler>
20021786:	bf00      	nop

20021788 <DFSDM1_FLT1_IRQ_Handler>:
20021788:	e7fe      	b.n	20021788 <DFSDM1_FLT1_IRQ_Handler>
2002178a:	bf00      	nop

2002178c <DFSDM1_FLT2_IRQ_Handler>:
2002178c:	e7fe      	b.n	2002178c <DFSDM1_FLT2_IRQ_Handler>
2002178e:	bf00      	nop

20021790 <DFSDM1_FLT3_IRQ_Handler>:
20021790:	e7fe      	b.n	20021790 <DFSDM1_FLT3_IRQ_Handler>
20021792:	bf00      	nop

20021794 <SDMMC2_IRQ_Handler>:
20021794:	e7fe      	b.n	20021794 <SDMMC2_IRQ_Handler>
20021796:	bf00      	nop

20021798 <CAN3_TX_IRQ_Handler>:
20021798:	e7fe      	b.n	20021798 <CAN3_TX_IRQ_Handler>
2002179a:	bf00      	nop

2002179c <CAN3_RX0_IRQ_Handler>:
2002179c:	e7fe      	b.n	2002179c <CAN3_RX0_IRQ_Handler>
2002179e:	bf00      	nop

200217a0 <CAN3_RX1_IRQ_Handler>:
200217a0:	e7fe      	b.n	200217a0 <CAN3_RX1_IRQ_Handler>
200217a2:	bf00      	nop

200217a4 <CAN3_SCE_IRQ_Handler>:
200217a4:	e7fe      	b.n	200217a4 <CAN3_SCE_IRQ_Handler>
200217a6:	bf00      	nop

200217a8 <JPEG_IRQ_Handler>:
200217a8:	e7fe      	b.n	200217a8 <JPEG_IRQ_Handler>
200217aa:	bf00      	nop

200217ac <MDIOS_IRQ_Handler>:
200217ac:	e7fe      	b.n	200217ac <MDIOS_IRQ_Handler>
200217ae:	bf00      	nop

200217b0 <init>:
200217b0:	4a09      	ldr	r2, [pc, #36]	; (200217d8 <init+0x28>)
200217b2:	480a      	ldr	r0, [pc, #40]	; (200217dc <init+0x2c>)
200217b4:	1a12      	subs	r2, r2, r0
200217b6:	d00a      	beq.n	200217ce <init+0x1e>
200217b8:	2100      	movs	r1, #0
200217ba:	b500      	push	{lr}
200217bc:	f7ff fec6 	bl	2002154c <memset>
200217c0:	4a07      	ldr	r2, [pc, #28]	; (200217e0 <init+0x30>)
200217c2:	4b08      	ldr	r3, [pc, #32]	; (200217e4 <init+0x34>)
200217c4:	f85d eb04 	ldr.w	lr, [sp], #4
200217c8:	609a      	str	r2, [r3, #8]
200217ca:	f000 b80d 	b.w	200217e8 <main>
200217ce:	4a04      	ldr	r2, [pc, #16]	; (200217e0 <init+0x30>)
200217d0:	4b04      	ldr	r3, [pc, #16]	; (200217e4 <init+0x34>)
200217d2:	609a      	str	r2, [r3, #8]
200217d4:	f000 b808 	b.w	200217e8 <main>
200217d8:	20021bd4 	.word	0x20021bd4
200217dc:	2002180c 	.word	0x2002180c
200217e0:	20020000 	.word	0x20020000
200217e4:	e000ed00 	.word	0xe000ed00

Disassembly of section .rodata:

200217f4 <.rodata>:
200217f4:	00000006 	.word	0x00000006
200217f8:	00000002 	.word	0x00000002
200217fc:	3e000000 	.word	0x3e000000
20021800:	00000019 	.word	0x00000019
20021804:	3e000000 	.word	0x3e000000
20021808:	00000019 	.word	0x00000019

Disassembly of section .bss:

2002180c <guard variable for run::serial2_config>:
	...

20021814 <run::serial2_config>:
20021814:	00000000                                ....

20021818 <guard variable for run::timer1_prescale>:
	...

20021820 <run::timer1_prescale>:
20021820:	00000000                                ....

20021824 <guard variable for run::gpio1_words_3>:
	...

2002182c <run::gpio1_words_3>:
2002182c:	00000000                                ....

20021830 <elapsed_time>:
20021830:	00000000                                ....

20021834 <results>:
	...
