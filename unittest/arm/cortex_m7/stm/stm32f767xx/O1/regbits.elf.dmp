
regbits.elf:     file format elf32-littlearm


Disassembly of section .text:

20020000 <INTERRUPT_VECTORS>:
20020000:	00 c0 07 20 19 17 02 20 25 16 02 20 27 16 02 20     ... ... %.. '.. 
20020010:	29 16 02 20 2b 16 02 20 2d 16 02 20 2f 16 02 20     ).. +.. -.. /.. 
20020020:	31 16 02 20 33 16 02 20 35 16 02 20 37 16 02 20     1.. 3.. 5.. 7.. 
20020030:	39 16 02 20 3b 16 02 20 3d 16 02 20 3f 16 02 20     9.. ;.. =.. ?.. 
20020040:	41 16 02 20 43 16 02 20 45 16 02 20 47 16 02 20     A.. C.. E.. G.. 
20020050:	49 16 02 20 4b 16 02 20 4d 16 02 20 4f 16 02 20     I.. K.. M.. O.. 
20020060:	51 16 02 20 53 16 02 20 55 16 02 20 57 16 02 20     Q.. S.. U.. W.. 
20020070:	59 16 02 20 5b 16 02 20 5d 16 02 20 5f 16 02 20     Y.. [.. ].. _.. 
20020080:	61 16 02 20 63 16 02 20 65 16 02 20 67 16 02 20     a.. c.. e.. g.. 
20020090:	69 16 02 20 6b 16 02 20 6d 16 02 20 6f 16 02 20     i.. k.. m.. o.. 
200200a0:	71 16 02 20 73 16 02 20 75 16 02 20 77 16 02 20     q.. s.. u.. w.. 
200200b0:	79 16 02 20 7b 16 02 20 7d 16 02 20 7f 16 02 20     y.. {.. }.. ... 
200200c0:	81 16 02 20 83 16 02 20 85 16 02 20 87 16 02 20     ... ... ... ... 
200200d0:	89 16 02 20 8b 16 02 20 8d 16 02 20 8f 16 02 20     ... ... ... ... 
200200e0:	91 16 02 20 93 16 02 20 95 16 02 20 97 16 02 20     ... ... ... ... 
200200f0:	99 16 02 20 9b 16 02 20 9d 16 02 20 9f 16 02 20     ... ... ... ... 
20020100:	a1 16 02 20 a3 16 02 20 a5 16 02 20 a7 16 02 20     ... ... ... ... 
20020110:	a9 16 02 20 ab 16 02 20 ad 16 02 20 af 16 02 20     ... ... ... ... 
20020120:	b1 16 02 20 b3 16 02 20 b5 16 02 20 b7 16 02 20     ... ... ... ... 
20020130:	b9 16 02 20 bb 16 02 20 bd 16 02 20 bf 16 02 20     ... ... ... ... 
20020140:	c1 16 02 20 c3 16 02 20 c5 16 02 20 c7 16 02 20     ... ... ... ... 
20020150:	c9 16 02 20 cb 16 02 20 cd 16 02 20 cf 16 02 20     ... ... ... ... 
20020160:	d1 16 02 20 d3 16 02 20 d5 16 02 20 d7 16 02 20     ... ... ... ... 
20020170:	d9 16 02 20 db 16 02 20 dd 16 02 20 df 16 02 20     ... ... ... ... 
20020180:	e1 16 02 20 e3 16 02 20 e5 16 02 20 e7 16 02 20     ... ... ... ... 
20020190:	e9 16 02 20 eb 16 02 20 ed 16 02 20 ef 16 02 20     ... ... ... ... 
200201a0:	f1 16 02 20 f3 16 02 20 f5 16 02 20 f7 16 02 20     ... ... ... ... 
200201b0:	f9 16 02 20 fb 16 02 20 fd 16 02 20 ff 16 02 20     ... ... ... ... 
200201c0:	01 17 02 20 03 17 02 20 05 17 02 20 07 17 02 20     ... ... ... ... 
200201d0:	09 17 02 20 0b 17 02 20 0d 17 02 20 0f 17 02 20     ... ... ... ... 
200201e0:	11 17 02 20 13 17 02 20 15 17 02 20 17 17 02 20     ... ... ... ... 

200201f0 <zero_reg()>:
200201f0:	4b01      	ldr	r3, [pc, #4]	; (200201f8 <zero_reg()+0x8>)
200201f2:	2200      	movs	r2, #0
200201f4:	605a      	str	r2, [r3, #4]
200201f6:	4770      	bx	lr
200201f8:	200226c0 	.word	0x200226c0

200201fc <zero_array()>:
200201fc:	4b01      	ldr	r3, [pc, #4]	; (20020204 <zero_array()+0x8>)
200201fe:	2200      	movs	r2, #0
20020200:	62da      	str	r2, [r3, #44]	; 0x2c
20020202:	4770      	bx	lr
20020204:	20022500 	.word	0x20022500

20020208 <set_singl_bits_operator()>:
20020208:	4a02      	ldr	r2, [pc, #8]	; (20020214 <set_singl_bits_operator()+0xc>)
2002020a:	6853      	ldr	r3, [r2, #4]
2002020c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020210:	6053      	str	r3, [r2, #4]
20020212:	4770      	bx	lr
20020214:	200226c0 	.word	0x200226c0

20020218 <set_singl_bits_method()>:
20020218:	4a02      	ldr	r2, [pc, #8]	; (20020224 <set_singl_bits_method()+0xc>)
2002021a:	6853      	ldr	r3, [r2, #4]
2002021c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020220:	6053      	str	r3, [r2, #4]
20020222:	4770      	bx	lr
20020224:	200226c0 	.word	0x200226c0

20020228 <clr_singl_bits_operator()>:
20020228:	4a02      	ldr	r2, [pc, #8]	; (20020234 <clr_singl_bits_operator()+0xc>)
2002022a:	6853      	ldr	r3, [r2, #4]
2002022c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
20020230:	6053      	str	r3, [r2, #4]
20020232:	4770      	bx	lr
20020234:	200226c0 	.word	0x200226c0

20020238 <clr_singl_bits_method()>:
20020238:	4a02      	ldr	r2, [pc, #8]	; (20020244 <clr_singl_bits_method()+0xc>)
2002023a:	6853      	ldr	r3, [r2, #4]
2002023c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
20020240:	6053      	str	r3, [r2, #4]
20020242:	4770      	bx	lr
20020244:	200226c0 	.word	0x200226c0

20020248 <set_singl_mskd_operator()>:
20020248:	4a02      	ldr	r2, [pc, #8]	; (20020254 <set_singl_mskd_operator()+0xc>)
2002024a:	6853      	ldr	r3, [r2, #4]
2002024c:	f043 0302 	orr.w	r3, r3, #2
20020250:	6053      	str	r3, [r2, #4]
20020252:	4770      	bx	lr
20020254:	200226c0 	.word	0x200226c0

20020258 <set_singl_mskd_method()>:
20020258:	4a02      	ldr	r2, [pc, #8]	; (20020264 <set_singl_mskd_method()+0xc>)
2002025a:	6853      	ldr	r3, [r2, #4]
2002025c:	f043 0302 	orr.w	r3, r3, #2
20020260:	6053      	str	r3, [r2, #4]
20020262:	4770      	bx	lr
20020264:	200226c0 	.word	0x200226c0

20020268 <clr_singl_mskd_operator()>:
20020268:	4a02      	ldr	r2, [pc, #8]	; (20020274 <clr_singl_mskd_operator()+0xc>)
2002026a:	6853      	ldr	r3, [r2, #4]
2002026c:	f023 0302 	bic.w	r3, r3, #2
20020270:	6053      	str	r3, [r2, #4]
20020272:	4770      	bx	lr
20020274:	200226c0 	.word	0x200226c0

20020278 <clr_singl_mskd_method()>:
20020278:	4a02      	ldr	r2, [pc, #8]	; (20020284 <clr_singl_mskd_method()+0xc>)
2002027a:	6853      	ldr	r3, [r2, #4]
2002027c:	f023 0302 	bic.w	r3, r3, #2
20020280:	6053      	str	r3, [r2, #4]
20020282:	4770      	bx	lr
20020284:	200226c0 	.word	0x200226c0

20020288 <equ_singl_bits_operator()>:
20020288:	4b01      	ldr	r3, [pc, #4]	; (20020290 <equ_singl_bits_operator()+0x8>)
2002028a:	2240      	movs	r2, #64	; 0x40
2002028c:	605a      	str	r2, [r3, #4]
2002028e:	4770      	bx	lr
20020290:	200226c0 	.word	0x200226c0

20020294 <equ_singl_bits_method()>:
20020294:	4b01      	ldr	r3, [pc, #4]	; (2002029c <equ_singl_bits_method()+0x8>)
20020296:	2240      	movs	r2, #64	; 0x40
20020298:	605a      	str	r2, [r3, #4]
2002029a:	4770      	bx	lr
2002029c:	200226c0 	.word	0x200226c0

200202a0 <equ_singl_mskd_operator()>:
200202a0:	4b01      	ldr	r3, [pc, #4]	; (200202a8 <equ_singl_mskd_operator()+0x8>)
200202a2:	2202      	movs	r2, #2
200202a4:	605a      	str	r2, [r3, #4]
200202a6:	4770      	bx	lr
200202a8:	200226c0 	.word	0x200226c0

200202ac <equ_singl_mskd_method()>:
200202ac:	4b01      	ldr	r3, [pc, #4]	; (200202b4 <equ_singl_mskd_method()+0x8>)
200202ae:	2202      	movs	r2, #2
200202b0:	605a      	str	r2, [r3, #4]
200202b2:	4770      	bx	lr
200202b4:	200226c0 	.word	0x200226c0

200202b8 <flp_singl_bits_operator()>:
200202b8:	4a02      	ldr	r2, [pc, #8]	; (200202c4 <flp_singl_bits_operator()+0xc>)
200202ba:	6853      	ldr	r3, [r2, #4]
200202bc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
200202c0:	6053      	str	r3, [r2, #4]
200202c2:	4770      	bx	lr
200202c4:	200226c0 	.word	0x200226c0

200202c8 <flp_singl_bits_method()>:
200202c8:	4a02      	ldr	r2, [pc, #8]	; (200202d4 <flp_singl_bits_method()+0xc>)
200202ca:	6853      	ldr	r3, [r2, #4]
200202cc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
200202d0:	6053      	str	r3, [r2, #4]
200202d2:	4770      	bx	lr
200202d4:	200226c0 	.word	0x200226c0

200202d8 <flp_singl_mskd_operator()>:
200202d8:	4a02      	ldr	r2, [pc, #8]	; (200202e4 <flp_singl_mskd_operator()+0xc>)
200202da:	6853      	ldr	r3, [r2, #4]
200202dc:	f083 0302 	eor.w	r3, r3, #2
200202e0:	6053      	str	r3, [r2, #4]
200202e2:	4770      	bx	lr
200202e4:	200226c0 	.word	0x200226c0

200202e8 <flp_singl_mskd_method()>:
200202e8:	4a02      	ldr	r2, [pc, #8]	; (200202f4 <flp_singl_mskd_method()+0xc>)
200202ea:	6853      	ldr	r3, [r2, #4]
200202ec:	f083 0302 	eor.w	r3, r3, #2
200202f0:	6053      	str	r3, [r2, #4]
200202f2:	4770      	bx	lr
200202f4:	200226c0 	.word	0x200226c0

200202f8 <ins_singl_mskd_operator()>:
200202f8:	4a03      	ldr	r2, [pc, #12]	; (20020308 <ins_singl_mskd_operator()+0x10>)
200202fa:	6853      	ldr	r3, [r2, #4]
200202fc:	f023 0306 	bic.w	r3, r3, #6
20020300:	f043 0304 	orr.w	r3, r3, #4
20020304:	6053      	str	r3, [r2, #4]
20020306:	4770      	bx	lr
20020308:	200226c0 	.word	0x200226c0

2002030c <ins_singl_mskd_method()>:
2002030c:	4a03      	ldr	r2, [pc, #12]	; (2002031c <ins_singl_mskd_method()+0x10>)
2002030e:	6853      	ldr	r3, [r2, #4]
20020310:	f023 0306 	bic.w	r3, r3, #6
20020314:	f043 0304 	orr.w	r3, r3, #4
20020318:	6053      	str	r3, [r2, #4]
2002031a:	4770      	bx	lr
2002031c:	200226c0 	.word	0x200226c0

20020320 <set_multi_bits_operator()>:
20020320:	4a02      	ldr	r2, [pc, #8]	; (2002032c <set_multi_bits_operator()+0xc>)
20020322:	6853      	ldr	r3, [r2, #4]
20020324:	f043 0321 	orr.w	r3, r3, #33	; 0x21
20020328:	6053      	str	r3, [r2, #4]
2002032a:	4770      	bx	lr
2002032c:	200226c0 	.word	0x200226c0

20020330 <set_multi_bits_method()>:
20020330:	4a02      	ldr	r2, [pc, #8]	; (2002033c <set_multi_bits_method()+0xc>)
20020332:	6853      	ldr	r3, [r2, #4]
20020334:	f043 0321 	orr.w	r3, r3, #33	; 0x21
20020338:	6053      	str	r3, [r2, #4]
2002033a:	4770      	bx	lr
2002033c:	200226c0 	.word	0x200226c0

20020340 <ins_multi_mskd_operator()>:
20020340:	4a03      	ldr	r2, [pc, #12]	; (20020350 <ins_multi_mskd_operator()+0x10>)
20020342:	6851      	ldr	r1, [r2, #4]
20020344:	4b03      	ldr	r3, [pc, #12]	; (20020354 <ins_multi_mskd_operator()+0x14>)
20020346:	400b      	ands	r3, r1
20020348:	f443 73c1 	orr.w	r3, r3, #386	; 0x182
2002034c:	6053      	str	r3, [r2, #4]
2002034e:	4770      	bx	lr
20020350:	200226c0 	.word	0x200226c0
20020354:	fffff079 	.word	0xfffff079

20020358 <ins_multi_mskd_method()>:
20020358:	4a03      	ldr	r2, [pc, #12]	; (20020368 <ins_multi_mskd_method()+0x10>)
2002035a:	6851      	ldr	r1, [r2, #4]
2002035c:	4b03      	ldr	r3, [pc, #12]	; (2002036c <ins_multi_mskd_method()+0x14>)
2002035e:	400b      	ands	r3, r1
20020360:	f443 73c1 	orr.w	r3, r3, #386	; 0x182
20020364:	6053      	str	r3, [r2, #4]
20020366:	4770      	bx	lr
20020368:	200226c0 	.word	0x200226c0
2002036c:	fffff079 	.word	0xfffff079

20020370 <equ_multi_bits_operator()>:
20020370:	4b01      	ldr	r3, [pc, #4]	; (20020378 <equ_multi_bits_operator()+0x8>)
20020372:	2260      	movs	r2, #96	; 0x60
20020374:	605a      	str	r2, [r3, #4]
20020376:	4770      	bx	lr
20020378:	200226c0 	.word	0x200226c0

2002037c <equ_multi_bits_method()>:
2002037c:	4b01      	ldr	r3, [pc, #4]	; (20020384 <equ_multi_bits_method()+0x8>)
2002037e:	2260      	movs	r2, #96	; 0x60
20020380:	605a      	str	r2, [r3, #4]
20020382:	4770      	bx	lr
20020384:	200226c0 	.word	0x200226c0

20020388 <equ_multi_mskd_operator()>:
20020388:	4b02      	ldr	r3, [pc, #8]	; (20020394 <equ_multi_mskd_operator()+0xc>)
2002038a:	f44f 7242 	mov.w	r2, #776	; 0x308
2002038e:	605a      	str	r2, [r3, #4]
20020390:	4770      	bx	lr
20020392:	bf00      	nop
20020394:	200226c0 	.word	0x200226c0

20020398 <equ_multi_mskd_method()>:
20020398:	4b02      	ldr	r3, [pc, #8]	; (200203a4 <equ_multi_mskd_method()+0xc>)
2002039a:	f44f 7242 	mov.w	r2, #776	; 0x308
2002039e:	605a      	str	r2, [r3, #4]
200203a0:	4770      	bx	lr
200203a2:	bf00      	nop
200203a4:	200226c0 	.word	0x200226c0

200203a8 <equ_bits_mskd_operator()>:
200203a8:	4b01      	ldr	r3, [pc, #4]	; (200203b0 <equ_bits_mskd_operator()+0x8>)
200203aa:	2222      	movs	r2, #34	; 0x22
200203ac:	605a      	str	r2, [r3, #4]
200203ae:	4770      	bx	lr
200203b0:	200226c0 	.word	0x200226c0

200203b4 <equ_bits_mskd_method()>:
200203b4:	4b01      	ldr	r3, [pc, #4]	; (200203bc <equ_bits_mskd_method()+0x8>)
200203b6:	2222      	movs	r2, #34	; 0x22
200203b8:	605a      	str	r2, [r3, #4]
200203ba:	4770      	bx	lr
200203bc:	200226c0 	.word	0x200226c0

200203c0 <equ_mskd_bits_operator()>:
200203c0:	4b01      	ldr	r3, [pc, #4]	; (200203c8 <equ_mskd_bits_operator()+0x8>)
200203c2:	2244      	movs	r2, #68	; 0x44
200203c4:	605a      	str	r2, [r3, #4]
200203c6:	4770      	bx	lr
200203c8:	200226c0 	.word	0x200226c0

200203cc <equ_mskd_bits_method()>:
200203cc:	4b01      	ldr	r3, [pc, #4]	; (200203d4 <equ_mskd_bits_method()+0x8>)
200203ce:	2244      	movs	r2, #68	; 0x44
200203d0:	605a      	str	r2, [r3, #4]
200203d2:	4770      	bx	lr
200203d4:	200226c0 	.word	0x200226c0

200203d8 <equ_bits_var()>:
200203d8:	4b02      	ldr	r3, [pc, #8]	; (200203e4 <equ_bits_var()+0xc>)
200203da:	2240      	movs	r2, #64	; 0x40
200203dc:	605a      	str	r2, [r3, #4]
200203de:	2201      	movs	r2, #1
200203e0:	605a      	str	r2, [r3, #4]
200203e2:	4770      	bx	lr
200203e4:	200226c0 	.word	0x200226c0

200203e8 <equ_mskd_var()>:
200203e8:	4b03      	ldr	r3, [pc, #12]	; (200203f8 <equ_mskd_var()+0x10>)
200203ea:	2202      	movs	r2, #2
200203ec:	605a      	str	r2, [r3, #4]
200203ee:	f44f 72c0 	mov.w	r2, #384	; 0x180
200203f2:	605a      	str	r2, [r3, #4]
200203f4:	4770      	bx	lr
200203f6:	bf00      	nop
200203f8:	200226c0 	.word	0x200226c0

200203fc <cmp_equ_zero()>:
200203fc:	4b07      	ldr	r3, [pc, #28]	; (2002041c <cmp_equ_zero()+0x20>)
200203fe:	2200      	movs	r2, #0
20020400:	605a      	str	r2, [r3, #4]
20020402:	685b      	ldr	r3, [r3, #4]
20020404:	b923      	cbnz	r3, 20020410 <cmp_equ_zero()+0x14>
20020406:	4b06      	ldr	r3, [pc, #24]	; (20020420 <cmp_equ_zero()+0x24>)
20020408:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
2002040c:	605a      	str	r2, [r3, #4]
2002040e:	4770      	bx	lr
20020410:	4b03      	ldr	r3, [pc, #12]	; (20020420 <cmp_equ_zero()+0x24>)
20020412:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020416:	605a      	str	r2, [r3, #4]
20020418:	4770      	bx	lr
2002041a:	bf00      	nop
2002041c:	200226c0 	.word	0x200226c0
20020420:	20022620 	.word	0x20022620

20020424 <cmp_neq_zero()>:
20020424:	4b06      	ldr	r3, [pc, #24]	; (20020440 <cmp_neq_zero()+0x1c>)
20020426:	2200      	movs	r2, #0
20020428:	605a      	str	r2, [r3, #4]
2002042a:	685b      	ldr	r3, [r3, #4]
2002042c:	b11b      	cbz	r3, 20020436 <cmp_neq_zero()+0x12>
2002042e:	4b04      	ldr	r3, [pc, #16]	; (20020440 <cmp_neq_zero()+0x1c>)
20020430:	2204      	movs	r2, #4
20020432:	605a      	str	r2, [r3, #4]
20020434:	4770      	bx	lr
20020436:	4b02      	ldr	r3, [pc, #8]	; (20020440 <cmp_neq_zero()+0x1c>)
20020438:	2220      	movs	r2, #32
2002043a:	605a      	str	r2, [r3, #4]
2002043c:	4770      	bx	lr
2002043e:	bf00      	nop
20020440:	200226c0 	.word	0x200226c0

20020444 <cmp_equ_bits()>:
20020444:	4b06      	ldr	r3, [pc, #24]	; (20020460 <cmp_equ_bits()+0x1c>)
20020446:	2240      	movs	r2, #64	; 0x40
20020448:	605a      	str	r2, [r3, #4]
2002044a:	685b      	ldr	r3, [r3, #4]
2002044c:	f013 0f40 	tst.w	r3, #64	; 0x40
20020450:	4b04      	ldr	r3, [pc, #16]	; (20020464 <cmp_equ_bits()+0x20>)
20020452:	bf14      	ite	ne
20020454:	f04f 52b0 	movne.w	r2, #369098752	; 0x16000000
20020458:	f04f 52d0 	moveq.w	r2, #436207616	; 0x1a000000
2002045c:	605a      	str	r2, [r3, #4]
2002045e:	4770      	bx	lr
20020460:	200226c0 	.word	0x200226c0
20020464:	20022620 	.word	0x20022620

20020468 <cmp_neq_bits()>:
20020468:	4b05      	ldr	r3, [pc, #20]	; (20020480 <cmp_neq_bits()+0x18>)
2002046a:	2240      	movs	r2, #64	; 0x40
2002046c:	605a      	str	r2, [r3, #4]
2002046e:	685b      	ldr	r3, [r3, #4]
20020470:	f013 0f40 	tst.w	r3, #64	; 0x40
20020474:	4b02      	ldr	r3, [pc, #8]	; (20020480 <cmp_neq_bits()+0x18>)
20020476:	bf0c      	ite	eq
20020478:	2202      	moveq	r2, #2
2002047a:	2220      	movne	r2, #32
2002047c:	605a      	str	r2, [r3, #4]
2002047e:	4770      	bx	lr
20020480:	200226c0 	.word	0x200226c0

20020484 <cmp_equ_multi_bits()>:
20020484:	4b06      	ldr	r3, [pc, #24]	; (200204a0 <cmp_equ_multi_bits()+0x1c>)
20020486:	2260      	movs	r2, #96	; 0x60
20020488:	605a      	str	r2, [r3, #4]
2002048a:	685b      	ldr	r3, [r3, #4]
2002048c:	4013      	ands	r3, r2
2002048e:	4293      	cmp	r3, r2
20020490:	4b04      	ldr	r3, [pc, #16]	; (200204a4 <cmp_equ_multi_bits()+0x20>)
20020492:	bf0c      	ite	eq
20020494:	f04f 5208 	moveq.w	r2, #570425344	; 0x22000000
20020498:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
2002049c:	605a      	str	r2, [r3, #4]
2002049e:	4770      	bx	lr
200204a0:	200226c0 	.word	0x200226c0
200204a4:	20022620 	.word	0x20022620

200204a8 <cmp_neq_multi_bits()>:
200204a8:	4b06      	ldr	r3, [pc, #24]	; (200204c4 <cmp_neq_multi_bits()+0x1c>)
200204aa:	2260      	movs	r2, #96	; 0x60
200204ac:	605a      	str	r2, [r3, #4]
200204ae:	685b      	ldr	r3, [r3, #4]
200204b0:	4013      	ands	r3, r2
200204b2:	4293      	cmp	r3, r2
200204b4:	4b04      	ldr	r3, [pc, #16]	; (200204c8 <cmp_neq_multi_bits()+0x20>)
200204b6:	bf14      	ite	ne
200204b8:	f04f 5268 	movne.w	r2, #973078528	; 0x3a000000
200204bc:	f04f 5278 	moveq.w	r2, #1040187392	; 0x3e000000
200204c0:	605a      	str	r2, [r3, #4]
200204c2:	4770      	bx	lr
200204c4:	200226c0 	.word	0x200226c0
200204c8:	20022620 	.word	0x20022620

200204cc <cmp_equ_mskd()>:
200204cc:	4b09      	ldr	r3, [pc, #36]	; (200204f4 <cmp_equ_mskd()+0x28>)
200204ce:	f44f 32e8 	mov.w	r2, #118784	; 0x1d000
200204d2:	605a      	str	r2, [r3, #4]
200204d4:	685b      	ldr	r3, [r3, #4]
200204d6:	f403 33f8 	and.w	r3, r3, #126976	; 0x1f000
200204da:	f5b3 3f88 	cmp.w	r3, #69632	; 0x11000
200204de:	4a06      	ldr	r2, [pc, #24]	; (200204f8 <cmp_equ_mskd()+0x2c>)
200204e0:	6853      	ldr	r3, [r2, #4]
200204e2:	f023 5378 	bic.w	r3, r3, #1040187392	; 0x3e000000
200204e6:	bf0c      	ite	eq
200204e8:	f043 6360 	orreq.w	r3, r3, #234881024	; 0xe000000
200204ec:	f043 5308 	orrne.w	r3, r3, #570425344	; 0x22000000
200204f0:	6053      	str	r3, [r2, #4]
200204f2:	4770      	bx	lr
200204f4:	200226c0 	.word	0x200226c0
200204f8:	20022620 	.word	0x20022620

200204fc <cmp_neq_mskd()>:
200204fc:	4b0b      	ldr	r3, [pc, #44]	; (2002052c <cmp_neq_mskd()+0x30>)
200204fe:	f44f 32e8 	mov.w	r2, #118784	; 0x1d000
20020502:	605a      	str	r2, [r3, #4]
20020504:	685b      	ldr	r3, [r3, #4]
20020506:	f403 33f8 	and.w	r3, r3, #126976	; 0x1f000
2002050a:	f5b3 3f88 	cmp.w	r3, #69632	; 0x11000
2002050e:	d007      	beq.n	20020520 <cmp_neq_mskd()+0x24>
20020510:	4a06      	ldr	r2, [pc, #24]	; (2002052c <cmp_neq_mskd()+0x30>)
20020512:	6853      	ldr	r3, [r2, #4]
20020514:	f023 0306 	bic.w	r3, r3, #6
20020518:	f043 0304 	orr.w	r3, r3, #4
2002051c:	6053      	str	r3, [r2, #4]
2002051e:	4770      	bx	lr
20020520:	4a02      	ldr	r2, [pc, #8]	; (2002052c <cmp_neq_mskd()+0x30>)
20020522:	6853      	ldr	r3, [r2, #4]
20020524:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020528:	6053      	str	r3, [r2, #4]
2002052a:	4770      	bx	lr
2002052c:	200226c0 	.word	0x200226c0

20020530 <cmp_equ_reg()>:
20020530:	4b06      	ldr	r3, [pc, #24]	; (2002054c <cmp_equ_reg()+0x1c>)
20020532:	2222      	movs	r2, #34	; 0x22
20020534:	605a      	str	r2, [r3, #4]
20020536:	685b      	ldr	r3, [r3, #4]
20020538:	4293      	cmp	r3, r2
2002053a:	4b05      	ldr	r3, [pc, #20]	; (20020550 <cmp_equ_reg()+0x20>)
2002053c:	bf0c      	ite	eq
2002053e:	f04f 5228 	moveq.w	r2, #704643072	; 0x2a000000
20020542:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
20020546:	605a      	str	r2, [r3, #4]
20020548:	4770      	bx	lr
2002054a:	bf00      	nop
2002054c:	200226c0 	.word	0x200226c0
20020550:	20022620 	.word	0x20022620

20020554 <cmp_neq_reg()>:
20020554:	4b05      	ldr	r3, [pc, #20]	; (2002056c <cmp_neq_reg()+0x18>)
20020556:	2222      	movs	r2, #34	; 0x22
20020558:	605a      	str	r2, [r3, #4]
2002055a:	685b      	ldr	r3, [r3, #4]
2002055c:	4293      	cmp	r3, r2
2002055e:	4b03      	ldr	r3, [pc, #12]	; (2002056c <cmp_neq_reg()+0x18>)
20020560:	bf14      	ite	ne
20020562:	2202      	movne	r2, #2
20020564:	2220      	moveq	r2, #32
20020566:	605a      	str	r2, [r3, #4]
20020568:	4770      	bx	lr
2002056a:	bf00      	nop
2002056c:	200226c0 	.word	0x200226c0

20020570 <constexpr_bits_array()>:
20020570:	4b03      	ldr	r3, [pc, #12]	; (20020580 <constexpr_bits_array()+0x10>)
20020572:	2206      	movs	r2, #6
20020574:	62da      	str	r2, [r3, #44]	; 0x2c
20020576:	f44f 5200 	mov.w	r2, #8192	; 0x2000
2002057a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
2002057e:	4770      	bx	lr
20020580:	20022500 	.word	0x20022500

20020584 <runtime_bits_array()>:
20020584:	b081      	sub	sp, #4
20020586:	2303      	movs	r3, #3
20020588:	9300      	str	r3, [sp, #0]
2002058a:	9a00      	ldr	r2, [sp, #0]
2002058c:	0092      	lsls	r2, r2, #2
2002058e:	4b03      	ldr	r3, [pc, #12]	; (2002059c <runtime_bits_array()+0x18>)
20020590:	4413      	add	r3, r2
20020592:	2221      	movs	r2, #33	; 0x21
20020594:	621a      	str	r2, [r3, #32]
20020596:	b001      	add	sp, #4
20020598:	4770      	bx	lr
2002059a:	bf00      	nop
2002059c:	20022500 	.word	0x20022500

200205a0 <prescaler_low()>:
200205a0:	4b04      	ldr	r3, [pc, #16]	; (200205b4 <prescaler_low()+0x14>)
200205a2:	2277      	movs	r2, #119	; 0x77
200205a4:	605a      	str	r2, [r3, #4]
200205a6:	685b      	ldr	r3, [r3, #4]
200205a8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
200205ac:	4a02      	ldr	r2, [pc, #8]	; (200205b8 <prescaler_low()+0x18>)
200205ae:	62d3      	str	r3, [r2, #44]	; 0x2c
200205b0:	4770      	bx	lr
200205b2:	bf00      	nop
200205b4:	20022620 	.word	0x20022620
200205b8:	20022500 	.word	0x20022500

200205bc <prescaler_high()>:
200205bc:	4b04      	ldr	r3, [pc, #16]	; (200205d0 <prescaler_high()+0x14>)
200205be:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
200205c2:	605a      	str	r2, [r3, #4]
200205c4:	685b      	ldr	r3, [r3, #4]
200205c6:	f3c3 6344 	ubfx	r3, r3, #25, #5
200205ca:	4a02      	ldr	r2, [pc, #8]	; (200205d4 <prescaler_high()+0x18>)
200205cc:	62d3      	str	r3, [r2, #44]	; 0x2c
200205ce:	4770      	bx	lr
200205d0:	20022620 	.word	0x20022620
200205d4:	20022500 	.word	0x20022500

200205d8 <reg_mskd_lss()>:
200205d8:	4b07      	ldr	r3, [pc, #28]	; (200205f8 <reg_mskd_lss()+0x20>)
200205da:	f04f 5258 	mov.w	r2, #905969664	; 0x36000000
200205de:	605a      	str	r2, [r3, #4]
200205e0:	685b      	ldr	r3, [r3, #4]
200205e2:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200205e6:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
200205ea:	4b04      	ldr	r3, [pc, #16]	; (200205fc <reg_mskd_lss()+0x24>)
200205ec:	bf34      	ite	cc
200205ee:	2202      	movcc	r2, #2
200205f0:	2204      	movcs	r2, #4
200205f2:	605a      	str	r2, [r3, #4]
200205f4:	4770      	bx	lr
200205f6:	bf00      	nop
200205f8:	20022620 	.word	0x20022620
200205fc:	200226c0 	.word	0x200226c0

20020600 <reg_mskd_leq()>:
20020600:	4b0b      	ldr	r3, [pc, #44]	; (20020630 <reg_mskd_leq()+0x30>)
20020602:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020606:	605a      	str	r2, [r3, #4]
20020608:	685b      	ldr	r3, [r3, #4]
2002060a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002060e:	4293      	cmp	r3, r2
20020610:	d80a      	bhi.n	20020628 <reg_mskd_leq()+0x28>
20020612:	4b07      	ldr	r3, [pc, #28]	; (20020630 <reg_mskd_leq()+0x30>)
20020614:	685b      	ldr	r3, [r3, #4]
20020616:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002061a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
2002061e:	d803      	bhi.n	20020628 <reg_mskd_leq()+0x28>
20020620:	4b04      	ldr	r3, [pc, #16]	; (20020634 <reg_mskd_leq()+0x34>)
20020622:	2202      	movs	r2, #2
20020624:	605a      	str	r2, [r3, #4]
20020626:	4770      	bx	lr
20020628:	4b02      	ldr	r3, [pc, #8]	; (20020634 <reg_mskd_leq()+0x34>)
2002062a:	2204      	movs	r2, #4
2002062c:	605a      	str	r2, [r3, #4]
2002062e:	4770      	bx	lr
20020630:	20022620 	.word	0x20022620
20020634:	200226c0 	.word	0x200226c0

20020638 <reg_mskd_gtr()>:
20020638:	4b07      	ldr	r3, [pc, #28]	; (20020658 <reg_mskd_gtr()+0x20>)
2002063a:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
2002063e:	605a      	str	r2, [r3, #4]
20020640:	685b      	ldr	r3, [r3, #4]
20020642:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
20020646:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
2002064a:	4b04      	ldr	r3, [pc, #16]	; (2002065c <reg_mskd_gtr()+0x24>)
2002064c:	bf8c      	ite	hi
2002064e:	2202      	movhi	r2, #2
20020650:	2204      	movls	r2, #4
20020652:	605a      	str	r2, [r3, #4]
20020654:	4770      	bx	lr
20020656:	bf00      	nop
20020658:	20022620 	.word	0x20022620
2002065c:	200226c0 	.word	0x200226c0

20020660 <reg_mskd_geq()>:
20020660:	4b0b      	ldr	r3, [pc, #44]	; (20020690 <reg_mskd_geq()+0x30>)
20020662:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020666:	605a      	str	r2, [r3, #4]
20020668:	685b      	ldr	r3, [r3, #4]
2002066a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002066e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
20020672:	d309      	bcc.n	20020688 <reg_mskd_geq()+0x28>
20020674:	4b06      	ldr	r3, [pc, #24]	; (20020690 <reg_mskd_geq()+0x30>)
20020676:	685b      	ldr	r3, [r3, #4]
20020678:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002067c:	4293      	cmp	r3, r2
2002067e:	d303      	bcc.n	20020688 <reg_mskd_geq()+0x28>
20020680:	4b04      	ldr	r3, [pc, #16]	; (20020694 <reg_mskd_geq()+0x34>)
20020682:	2202      	movs	r2, #2
20020684:	605a      	str	r2, [r3, #4]
20020686:	4770      	bx	lr
20020688:	4b02      	ldr	r3, [pc, #8]	; (20020694 <reg_mskd_geq()+0x34>)
2002068a:	2204      	movs	r2, #4
2002068c:	605a      	str	r2, [r3, #4]
2002068e:	4770      	bx	lr
20020690:	20022620 	.word	0x20022620
20020694:	200226c0 	.word	0x200226c0

20020698 <pos_cmp_eq()>:
20020698:	4b01      	ldr	r3, [pc, #4]	; (200206a0 <pos_cmp_eq()+0x8>)
2002069a:	2202      	movs	r2, #2
2002069c:	605a      	str	r2, [r3, #4]
2002069e:	4770      	bx	lr
200206a0:	200226c0 	.word	0x200226c0

200206a4 <pos_cmp_ne()>:
200206a4:	4b01      	ldr	r3, [pc, #4]	; (200206ac <pos_cmp_ne()+0x8>)
200206a6:	2202      	movs	r2, #2
200206a8:	605a      	str	r2, [r3, #4]
200206aa:	4770      	bx	lr
200206ac:	200226c0 	.word	0x200226c0

200206b0 <bits_extract_eq()>:
200206b0:	4b05      	ldr	r3, [pc, #20]	; (200206c8 <bits_extract_eq()+0x18>)
200206b2:	2240      	movs	r2, #64	; 0x40
200206b4:	605a      	str	r2, [r3, #4]
200206b6:	685b      	ldr	r3, [r3, #4]
200206b8:	4293      	cmp	r3, r2
200206ba:	4b03      	ldr	r3, [pc, #12]	; (200206c8 <bits_extract_eq()+0x18>)
200206bc:	bf0c      	ite	eq
200206be:	2202      	moveq	r2, #2
200206c0:	2204      	movne	r2, #4
200206c2:	605a      	str	r2, [r3, #4]
200206c4:	4770      	bx	lr
200206c6:	bf00      	nop
200206c8:	200226c0 	.word	0x200226c0

200206cc <mskd_extract_eq()>:
200206cc:	4b05      	ldr	r3, [pc, #20]	; (200206e4 <mskd_extract_eq()+0x18>)
200206ce:	2202      	movs	r2, #2
200206d0:	605a      	str	r2, [r3, #4]
200206d2:	685b      	ldr	r3, [r3, #4]
200206d4:	4293      	cmp	r3, r2
200206d6:	4b03      	ldr	r3, [pc, #12]	; (200206e4 <mskd_extract_eq()+0x18>)
200206d8:	bf0c      	ite	eq
200206da:	2220      	moveq	r2, #32
200206dc:	2240      	movne	r2, #64	; 0x40
200206de:	605a      	str	r2, [r3, #4]
200206e0:	4770      	bx	lr
200206e2:	bf00      	nop
200206e4:	200226c0 	.word	0x200226c0

200206e8 <mskd_extract_ne()>:
200206e8:	4b05      	ldr	r3, [pc, #20]	; (20020700 <mskd_extract_ne()+0x18>)
200206ea:	2204      	movs	r2, #4
200206ec:	605a      	str	r2, [r3, #4]
200206ee:	685b      	ldr	r3, [r3, #4]
200206f0:	4293      	cmp	r3, r2
200206f2:	4b03      	ldr	r3, [pc, #12]	; (20020700 <mskd_extract_ne()+0x18>)
200206f4:	bf0c      	ite	eq
200206f6:	2240      	moveq	r2, #64	; 0x40
200206f8:	2220      	movne	r2, #32
200206fa:	605a      	str	r2, [r3, #4]
200206fc:	4770      	bx	lr
200206fe:	bf00      	nop
20020700:	200226c0 	.word	0x200226c0

20020704 <mskd_extract_lss()>:
20020704:	4b06      	ldr	r3, [pc, #24]	; (20020720 <mskd_extract_lss()+0x1c>)
20020706:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
2002070a:	605a      	str	r2, [r3, #4]
2002070c:	685b      	ldr	r3, [r3, #4]
2002070e:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
20020712:	4b04      	ldr	r3, [pc, #16]	; (20020724 <mskd_extract_lss()+0x20>)
20020714:	bf34      	ite	cc
20020716:	2220      	movcc	r2, #32
20020718:	2240      	movcs	r2, #64	; 0x40
2002071a:	605a      	str	r2, [r3, #4]
2002071c:	4770      	bx	lr
2002071e:	bf00      	nop
20020720:	20022620 	.word	0x20022620
20020724:	200226c0 	.word	0x200226c0

20020728 <mskd_extract_leq()>:
20020728:	4b05      	ldr	r3, [pc, #20]	; (20020740 <mskd_extract_leq()+0x18>)
2002072a:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
2002072e:	605a      	str	r2, [r3, #4]
20020730:	685b      	ldr	r3, [r3, #4]
20020732:	4293      	cmp	r3, r2
20020734:	4b03      	ldr	r3, [pc, #12]	; (20020744 <mskd_extract_leq()+0x1c>)
20020736:	bf94      	ite	ls
20020738:	2220      	movls	r2, #32
2002073a:	2240      	movhi	r2, #64	; 0x40
2002073c:	605a      	str	r2, [r3, #4]
2002073e:	4770      	bx	lr
20020740:	20022620 	.word	0x20022620
20020744:	200226c0 	.word	0x200226c0

20020748 <mskd_extract_gtr()>:
20020748:	4b06      	ldr	r3, [pc, #24]	; (20020764 <mskd_extract_gtr()+0x1c>)
2002074a:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
2002074e:	605a      	str	r2, [r3, #4]
20020750:	685b      	ldr	r3, [r3, #4]
20020752:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
20020756:	4b04      	ldr	r3, [pc, #16]	; (20020768 <mskd_extract_gtr()+0x20>)
20020758:	bf8c      	ite	hi
2002075a:	2220      	movhi	r2, #32
2002075c:	2240      	movls	r2, #64	; 0x40
2002075e:	605a      	str	r2, [r3, #4]
20020760:	4770      	bx	lr
20020762:	bf00      	nop
20020764:	20022620 	.word	0x20022620
20020768:	200226c0 	.word	0x200226c0

2002076c <set_bits_global()>:
2002076c:	4a02      	ldr	r2, [pc, #8]	; (20020778 <set_bits_global()+0xc>)
2002076e:	6853      	ldr	r3, [r2, #4]
20020770:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020774:	6053      	str	r3, [r2, #4]
20020776:	4770      	bx	lr
20020778:	200226c0 	.word	0x200226c0

2002077c <ins_mskd_global()>:
2002077c:	4a03      	ldr	r2, [pc, #12]	; (2002078c <ins_mskd_global()+0x10>)
2002077e:	6853      	ldr	r3, [r2, #4]
20020780:	f023 0306 	bic.w	r3, r3, #6
20020784:	f043 0302 	orr.w	r3, r3, #2
20020788:	6053      	str	r3, [r2, #4]
2002078a:	4770      	bx	lr
2002078c:	200226c0 	.word	0x200226c0

20020790 <assign_array_global()>:
20020790:	4b01      	ldr	r3, [pc, #4]	; (20020798 <assign_array_global()+0x8>)
20020792:	22bd      	movs	r2, #189	; 0xbd
20020794:	601a      	str	r2, [r3, #0]
20020796:	4770      	bx	lr
20020798:	2002252c 	.word	0x2002252c

2002079c <shifted_global()>:
2002079c:	4b04      	ldr	r3, [pc, #16]	; (200207b0 <shifted_global()+0x14>)
2002079e:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
200207a2:	605a      	str	r2, [r3, #4]
200207a4:	685b      	ldr	r3, [r3, #4]
200207a6:	f3c3 6344 	ubfx	r3, r3, #25, #5
200207aa:	4a02      	ldr	r2, [pc, #8]	; (200207b4 <shifted_global()+0x18>)
200207ac:	62d3      	str	r3, [r2, #44]	; 0x2c
200207ae:	4770      	bx	lr
200207b0:	20022620 	.word	0x20022620
200207b4:	20022500 	.word	0x20022500

200207b8 <assign_register_global()>:
200207b8:	4b01      	ldr	r3, [pc, #4]	; (200207c0 <assign_register_global()+0x8>)
200207ba:	2204      	movs	r2, #4
200207bc:	605a      	str	r2, [r3, #4]
200207be:	4770      	bx	lr
200207c0:	200226c0 	.word	0x200226c0

200207c4 <copy_bits_equ()>:
200207c4:	4b05      	ldr	r3, [pc, #20]	; (200207dc <copy_bits_equ()+0x18>)
200207c6:	2240      	movs	r2, #64	; 0x40
200207c8:	605a      	str	r2, [r3, #4]
200207ca:	685b      	ldr	r3, [r3, #4]
200207cc:	f013 0f40 	tst.w	r3, #64	; 0x40
200207d0:	4b02      	ldr	r3, [pc, #8]	; (200207dc <copy_bits_equ()+0x18>)
200207d2:	bf14      	ite	ne
200207d4:	2202      	movne	r2, #2
200207d6:	2204      	moveq	r2, #4
200207d8:	605a      	str	r2, [r3, #4]
200207da:	4770      	bx	lr
200207dc:	200226c0 	.word	0x200226c0

200207e0 <copy_bits_neq()>:
200207e0:	4b05      	ldr	r3, [pc, #20]	; (200207f8 <copy_bits_neq()+0x18>)
200207e2:	2240      	movs	r2, #64	; 0x40
200207e4:	605a      	str	r2, [r3, #4]
200207e6:	685b      	ldr	r3, [r3, #4]
200207e8:	f013 0f40 	tst.w	r3, #64	; 0x40
200207ec:	4b02      	ldr	r3, [pc, #8]	; (200207f8 <copy_bits_neq()+0x18>)
200207ee:	bf0c      	ite	eq
200207f0:	2202      	moveq	r2, #2
200207f2:	2204      	movne	r2, #4
200207f4:	605a      	str	r2, [r3, #4]
200207f6:	4770      	bx	lr
200207f8:	200226c0 	.word	0x200226c0

200207fc <copy_mskd_equ()>:
200207fc:	4b06      	ldr	r3, [pc, #24]	; (20020818 <copy_mskd_equ()+0x1c>)
200207fe:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
20020802:	605a      	str	r2, [r3, #4]
20020804:	685b      	ldr	r3, [r3, #4]
20020806:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002080a:	4293      	cmp	r3, r2
2002080c:	4b03      	ldr	r3, [pc, #12]	; (2002081c <copy_mskd_equ()+0x20>)
2002080e:	bf0c      	ite	eq
20020810:	2202      	moveq	r2, #2
20020812:	2204      	movne	r2, #4
20020814:	605a      	str	r2, [r3, #4]
20020816:	4770      	bx	lr
20020818:	20022620 	.word	0x20022620
2002081c:	200226c0 	.word	0x200226c0

20020820 <copy_mskd_neq()>:
20020820:	4b06      	ldr	r3, [pc, #24]	; (2002083c <copy_mskd_neq()+0x1c>)
20020822:	f04f 52d0 	mov.w	r2, #436207616	; 0x1a000000
20020826:	605a      	str	r2, [r3, #4]
20020828:	685b      	ldr	r3, [r3, #4]
2002082a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002082e:	4293      	cmp	r3, r2
20020830:	4b03      	ldr	r3, [pc, #12]	; (20020840 <copy_mskd_neq()+0x20>)
20020832:	bf14      	ite	ne
20020834:	2202      	movne	r2, #2
20020836:	2204      	moveq	r2, #4
20020838:	605a      	str	r2, [r3, #4]
2002083a:	4770      	bx	lr
2002083c:	20022620 	.word	0x20022620
20020840:	200226c0 	.word	0x200226c0

20020844 <copy_mskd_lss()>:
20020844:	4b07      	ldr	r3, [pc, #28]	; (20020864 <copy_mskd_lss()+0x20>)
20020846:	f04f 5258 	mov.w	r2, #905969664	; 0x36000000
2002084a:	605a      	str	r2, [r3, #4]
2002084c:	685b      	ldr	r3, [r3, #4]
2002084e:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
20020852:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
20020856:	4b04      	ldr	r3, [pc, #16]	; (20020868 <copy_mskd_lss()+0x24>)
20020858:	bf34      	ite	cc
2002085a:	2202      	movcc	r2, #2
2002085c:	2204      	movcs	r2, #4
2002085e:	605a      	str	r2, [r3, #4]
20020860:	4770      	bx	lr
20020862:	bf00      	nop
20020864:	20022620 	.word	0x20022620
20020868:	200226c0 	.word	0x200226c0

2002086c <copy_mskd_leq()>:
2002086c:	4b06      	ldr	r3, [pc, #24]	; (20020888 <copy_mskd_leq()+0x1c>)
2002086e:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020872:	605a      	str	r2, [r3, #4]
20020874:	685b      	ldr	r3, [r3, #4]
20020876:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002087a:	4293      	cmp	r3, r2
2002087c:	4b03      	ldr	r3, [pc, #12]	; (2002088c <copy_mskd_leq()+0x20>)
2002087e:	bf94      	ite	ls
20020880:	2202      	movls	r2, #2
20020882:	2204      	movhi	r2, #4
20020884:	605a      	str	r2, [r3, #4]
20020886:	4770      	bx	lr
20020888:	20022620 	.word	0x20022620
2002088c:	200226c0 	.word	0x200226c0

20020890 <copy_mskd_gtr()>:
20020890:	4b07      	ldr	r3, [pc, #28]	; (200208b0 <copy_mskd_gtr()+0x20>)
20020892:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020896:	605a      	str	r2, [r3, #4]
20020898:	685b      	ldr	r3, [r3, #4]
2002089a:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
2002089e:	f1b3 5f10 	cmp.w	r3, #603979776	; 0x24000000
200208a2:	4b04      	ldr	r3, [pc, #16]	; (200208b4 <copy_mskd_gtr()+0x24>)
200208a4:	bf8c      	ite	hi
200208a6:	2202      	movhi	r2, #2
200208a8:	2204      	movls	r2, #4
200208aa:	605a      	str	r2, [r3, #4]
200208ac:	4770      	bx	lr
200208ae:	bf00      	nop
200208b0:	20022620 	.word	0x20022620
200208b4:	200226c0 	.word	0x200226c0

200208b8 <copy_mskd_geq()>:
200208b8:	4b06      	ldr	r3, [pc, #24]	; (200208d4 <copy_mskd_geq()+0x1c>)
200208ba:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
200208be:	605a      	str	r2, [r3, #4]
200208c0:	685b      	ldr	r3, [r3, #4]
200208c2:	f003 5378 	and.w	r3, r3, #1040187392	; 0x3e000000
200208c6:	4293      	cmp	r3, r2
200208c8:	4b03      	ldr	r3, [pc, #12]	; (200208d8 <copy_mskd_geq()+0x20>)
200208ca:	bf2c      	ite	cs
200208cc:	2202      	movcs	r2, #2
200208ce:	2204      	movcc	r2, #4
200208d0:	605a      	str	r2, [r3, #4]
200208d2:	4770      	bx	lr
200208d4:	20022620 	.word	0x20022620
200208d8:	200226c0 	.word	0x200226c0

200208dc <copy_shifted()>:
200208dc:	4b06      	ldr	r3, [pc, #24]	; (200208f8 <copy_shifted()+0x1c>)
200208de:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
200208e2:	605a      	str	r2, [r3, #4]
200208e4:	685b      	ldr	r3, [r3, #4]
200208e6:	f3c3 6344 	ubfx	r3, r3, #25, #5
200208ea:	2b0b      	cmp	r3, #11
200208ec:	4b03      	ldr	r3, [pc, #12]	; (200208fc <copy_shifted()+0x20>)
200208ee:	bf0c      	ite	eq
200208f0:	2202      	moveq	r2, #2
200208f2:	2204      	movne	r2, #4
200208f4:	605a      	str	r2, [r3, #4]
200208f6:	4770      	bx	lr
200208f8:	20022620 	.word	0x20022620
200208fc:	200226c0 	.word	0x200226c0

20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020900:	4a02      	ldr	r2, [pc, #8]	; (2002090c <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0xc>)
20020902:	6853      	ldr	r3, [r2, #4]
20020904:	4318      	orrs	r0, r3
20020906:	6050      	str	r0, [r2, #4]
20020908:	4770      	bx	lr
2002090a:	bf00      	nop
2002090c:	200226c0 	.word	0x200226c0

20020910 <call_bits_val_var()>:
20020910:	b500      	push	{lr}
20020912:	2040      	movs	r0, #64	; 0x40
20020914:	f7ff fff4 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020918:	f85d fb04 	ldr.w	pc, [sp], #4

2002091c <call_bits_val_const()>:
2002091c:	b500      	push	{lr}
2002091e:	2040      	movs	r0, #64	; 0x40
20020920:	f7ff ffee 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020924:	f85d fb04 	ldr.w	pc, [sp], #4

20020928 <call_bits_val_global()>:
20020928:	b500      	push	{lr}
2002092a:	2040      	movs	r0, #64	; 0x40
2002092c:	f7ff ffe8 	bl	20020900 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020930:	f85d fb04 	ldr.w	pc, [sp], #4

20020934 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020934:	4a02      	ldr	r2, [pc, #8]	; (20020940 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0xc>)
20020936:	6853      	ldr	r3, [r2, #4]
20020938:	6801      	ldr	r1, [r0, #0]
2002093a:	430b      	orrs	r3, r1
2002093c:	6053      	str	r3, [r2, #4]
2002093e:	4770      	bx	lr
20020940:	200226c0 	.word	0x200226c0

20020944 <call_bits_ref_var()>:
20020944:	b500      	push	{lr}
20020946:	b081      	sub	sp, #4
20020948:	2301      	movs	r3, #1
2002094a:	9300      	str	r3, [sp, #0]
2002094c:	4668      	mov	r0, sp
2002094e:	f7ff fff1 	bl	20020934 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020952:	b001      	add	sp, #4
20020954:	f85d fb04 	ldr.w	pc, [sp], #4

20020958 <call_bits_ref_const()>:
20020958:	b500      	push	{lr}
2002095a:	b081      	sub	sp, #4
2002095c:	2301      	movs	r3, #1
2002095e:	9300      	str	r3, [sp, #0]
20020960:	4668      	mov	r0, sp
20020962:	f7ff ffe7 	bl	20020934 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020966:	b001      	add	sp, #4
20020968:	f85d fb04 	ldr.w	pc, [sp], #4

2002096c <call_bits_ref_global()>:
2002096c:	b500      	push	{lr}
2002096e:	b081      	sub	sp, #4
20020970:	2340      	movs	r3, #64	; 0x40
20020972:	9300      	str	r3, [sp, #0]
20020974:	4668      	mov	r0, sp
20020976:	f7ff ffdd 	bl	20020934 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
2002097a:	b001      	add	sp, #4
2002097c:	f85d fb04 	ldr.w	pc, [sp], #4

20020980 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020980:	4a03      	ldr	r2, [pc, #12]	; (20020990 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
20020982:	6853      	ldr	r3, [r2, #4]
20020984:	ea23 0000 	bic.w	r0, r3, r0
20020988:	4308      	orrs	r0, r1
2002098a:	6050      	str	r0, [r2, #4]
2002098c:	4770      	bx	lr
2002098e:	bf00      	nop
20020990:	200226c0 	.word	0x200226c0

20020994 <call_mskd_val_var()>:
20020994:	b500      	push	{lr}
20020996:	2006      	movs	r0, #6
20020998:	2102      	movs	r1, #2
2002099a:	f7ff fff1 	bl	20020980 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
2002099e:	f85d fb04 	ldr.w	pc, [sp], #4

200209a2 <call_mskd_val_const()>:
200209a2:	b500      	push	{lr}
200209a4:	2006      	movs	r0, #6
200209a6:	2102      	movs	r1, #2
200209a8:	f7ff ffea 	bl	20020980 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
200209ac:	f85d fb04 	ldr.w	pc, [sp], #4

200209b0 <call_mskd_val_global()>:
200209b0:	b500      	push	{lr}
200209b2:	2006      	movs	r0, #6
200209b4:	2102      	movs	r1, #2
200209b6:	f7ff ffe3 	bl	20020980 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
200209ba:	f85d fb04 	ldr.w	pc, [sp], #4

200209be <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
200209be:	4a04      	ldr	r2, [pc, #16]	; (200209d0 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x12>)
200209c0:	6853      	ldr	r3, [r2, #4]
200209c2:	6801      	ldr	r1, [r0, #0]
200209c4:	ea23 0301 	bic.w	r3, r3, r1
200209c8:	6841      	ldr	r1, [r0, #4]
200209ca:	430b      	orrs	r3, r1
200209cc:	6053      	str	r3, [r2, #4]
200209ce:	4770      	bx	lr
200209d0:	200226c0 	.word	0x200226c0

200209d4 <call_mskd_ref_var()>:
200209d4:	b500      	push	{lr}
200209d6:	b082      	sub	sp, #8
200209d8:	4b04      	ldr	r3, [pc, #16]	; (200209ec <call_mskd_ref_var()+0x18>)
200209da:	cb0c      	ldmia	r3, {r2, r3}
200209dc:	e88d 000c 	stmia.w	sp, {r2, r3}
200209e0:	4668      	mov	r0, sp
200209e2:	f7ff ffec 	bl	200209be <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
200209e6:	b002      	add	sp, #8
200209e8:	f85d fb04 	ldr.w	pc, [sp], #4
200209ec:	2002174c 	.word	0x2002174c

200209f0 <call_mskd_ref_const()>:
200209f0:	b500      	push	{lr}
200209f2:	b082      	sub	sp, #8
200209f4:	2306      	movs	r3, #6
200209f6:	9300      	str	r3, [sp, #0]
200209f8:	2304      	movs	r3, #4
200209fa:	9301      	str	r3, [sp, #4]
200209fc:	4668      	mov	r0, sp
200209fe:	f7ff ffde 	bl	200209be <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a02:	b002      	add	sp, #8
20020a04:	f85d fb04 	ldr.w	pc, [sp], #4

20020a08 <call_mskd_ref_global()>:
20020a08:	b500      	push	{lr}
20020a0a:	b082      	sub	sp, #8
20020a0c:	2306      	movs	r3, #6
20020a0e:	9300      	str	r3, [sp, #0]
20020a10:	2302      	movs	r3, #2
20020a12:	9301      	str	r3, [sp, #4]
20020a14:	4668      	mov	r0, sp
20020a16:	f7ff ffd2 	bl	200209be <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
20020a1a:	b002      	add	sp, #8
20020a1c:	f85d fb04 	ldr.w	pc, [sp], #4

20020a20 <periph_bits(mcu::Serial volatile*)>:
20020a20:	6843      	ldr	r3, [r0, #4]
20020a22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
20020a26:	6043      	str	r3, [r0, #4]
20020a28:	4770      	bx	lr

20020a2a <call_periph_bits()>:
20020a2a:	b500      	push	{lr}
20020a2c:	4802      	ldr	r0, [pc, #8]	; (20020a38 <call_periph_bits()+0xe>)
20020a2e:	f7ff fff7 	bl	20020a20 <periph_bits(mcu::Serial volatile*)>
20020a32:	f85d fb04 	ldr.w	pc, [sp], #4
20020a36:	bf00      	nop
20020a38:	200226c0 	.word	0x200226c0

20020a3c <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020a3c:	6843      	ldr	r3, [r0, #4]
20020a3e:	4319      	orrs	r1, r3
20020a40:	6041      	str	r1, [r0, #4]
20020a42:	4770      	bx	lr

20020a44 <call_periph_bits_val()>:
20020a44:	b500      	push	{lr}
20020a46:	2140      	movs	r1, #64	; 0x40
20020a48:	4802      	ldr	r0, [pc, #8]	; (20020a54 <call_periph_bits_val()+0x10>)
20020a4a:	f7ff fff7 	bl	20020a3c <periph_bits_val(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020a4e:	f85d fb04 	ldr.w	pc, [sp], #4
20020a52:	bf00      	nop
20020a54:	200226c0 	.word	0x200226c0

20020a58 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
20020a58:	6803      	ldr	r3, [r0, #0]
20020a5a:	4319      	orrs	r1, r3
20020a5c:	6001      	str	r1, [r0, #0]
20020a5e:	4770      	bx	lr

20020a60 <call_reg_bits_val()>:
20020a60:	b500      	push	{lr}
20020a62:	2140      	movs	r1, #64	; 0x40
20020a64:	4802      	ldr	r0, [pc, #8]	; (20020a70 <call_reg_bits_val()+0x10>)
20020a66:	f7ff fff7 	bl	20020a58 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
20020a6a:	f85d fb04 	ldr.w	pc, [sp], #4
20020a6e:	bf00      	nop
20020a70:	200226c4 	.word	0x200226c4

20020a74 <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020a74:	6843      	ldr	r3, [r0, #4]
20020a76:	680a      	ldr	r2, [r1, #0]
20020a78:	4313      	orrs	r3, r2
20020a7a:	6043      	str	r3, [r0, #4]
20020a7c:	4770      	bx	lr

20020a7e <call_periph_bits_ref()>:
20020a7e:	b500      	push	{lr}
20020a80:	b081      	sub	sp, #4
20020a82:	2340      	movs	r3, #64	; 0x40
20020a84:	9300      	str	r3, [sp, #0]
20020a86:	4669      	mov	r1, sp
20020a88:	4802      	ldr	r0, [pc, #8]	; (20020a94 <call_periph_bits_ref()+0x16>)
20020a8a:	f7ff fff3 	bl	20020a74 <periph_bits_ref(mcu::Serial volatile*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020a8e:	b001      	add	sp, #4
20020a90:	f85d fb04 	ldr.w	pc, [sp], #4
20020a94:	200226c0 	.word	0x200226c0

20020a98 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
20020a98:	6803      	ldr	r3, [r0, #0]
20020a9a:	680a      	ldr	r2, [r1, #0]
20020a9c:	4313      	orrs	r3, r2
20020a9e:	6003      	str	r3, [r0, #0]
20020aa0:	4770      	bx	lr

20020aa2 <call_reg_bits_ref()>:
20020aa2:	b500      	push	{lr}
20020aa4:	b081      	sub	sp, #4
20020aa6:	2340      	movs	r3, #64	; 0x40
20020aa8:	9300      	str	r3, [sp, #0]
20020aaa:	4669      	mov	r1, sp
20020aac:	4802      	ldr	r0, [pc, #8]	; (20020ab8 <call_reg_bits_ref()+0x16>)
20020aae:	f7ff fff3 	bl	20020a98 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
20020ab2:	b001      	add	sp, #4
20020ab4:	f85d fb04 	ldr.w	pc, [sp], #4
20020ab8:	200226c4 	.word	0x200226c4

20020abc <periph_mskd(mcu::Serial volatile*)>:
20020abc:	6843      	ldr	r3, [r0, #4]
20020abe:	f023 0306 	bic.w	r3, r3, #6
20020ac2:	f043 0302 	orr.w	r3, r3, #2
20020ac6:	6043      	str	r3, [r0, #4]
20020ac8:	4770      	bx	lr

20020aca <call_periph_mskd()>:
20020aca:	b500      	push	{lr}
20020acc:	4802      	ldr	r0, [pc, #8]	; (20020ad8 <call_periph_mskd()+0xe>)
20020ace:	f7ff fff5 	bl	20020abc <periph_mskd(mcu::Serial volatile*)>
20020ad2:	f85d fb04 	ldr.w	pc, [sp], #4
20020ad6:	bf00      	nop
20020ad8:	200226c0 	.word	0x200226c0

20020adc <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020adc:	6843      	ldr	r3, [r0, #4]
20020ade:	ea23 0101 	bic.w	r1, r3, r1
20020ae2:	4311      	orrs	r1, r2
20020ae4:	6041      	str	r1, [r0, #4]
20020ae6:	4770      	bx	lr

20020ae8 <call_periph_mskd_val()>:
20020ae8:	b500      	push	{lr}
20020aea:	2106      	movs	r1, #6
20020aec:	2202      	movs	r2, #2
20020aee:	4802      	ldr	r0, [pc, #8]	; (20020af8 <call_periph_mskd_val()+0x10>)
20020af0:	f7ff fff4 	bl	20020adc <periph_mskd_val(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020af4:	f85d fb04 	ldr.w	pc, [sp], #4
20020af8:	200226c0 	.word	0x200226c0

20020afc <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020afc:	6803      	ldr	r3, [r0, #0]
20020afe:	ea23 0101 	bic.w	r1, r3, r1
20020b02:	4311      	orrs	r1, r2
20020b04:	6001      	str	r1, [r0, #0]
20020b06:	4770      	bx	lr

20020b08 <call_reg_mskd_val()>:
20020b08:	b500      	push	{lr}
20020b0a:	2106      	movs	r1, #6
20020b0c:	2202      	movs	r2, #2
20020b0e:	4802      	ldr	r0, [pc, #8]	; (20020b18 <call_reg_mskd_val()+0x10>)
20020b10:	f7ff fff4 	bl	20020afc <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b14:	f85d fb04 	ldr.w	pc, [sp], #4
20020b18:	200226c4 	.word	0x200226c4

20020b1c <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b1c:	6843      	ldr	r3, [r0, #4]
20020b1e:	ea23 0101 	bic.w	r1, r3, r1
20020b22:	4311      	orrs	r1, r2
20020b24:	6041      	str	r1, [r0, #4]
20020b26:	4770      	bx	lr

20020b28 <call_periph_mskd_ref()>:
20020b28:	b500      	push	{lr}
20020b2a:	2106      	movs	r1, #6
20020b2c:	2202      	movs	r2, #2
20020b2e:	4802      	ldr	r0, [pc, #8]	; (20020b38 <call_periph_mskd_ref()+0x10>)
20020b30:	f7ff fff4 	bl	20020b1c <periph_mskd_ref(mcu::Serial volatile*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b34:	f85d fb04 	ldr.w	pc, [sp], #4
20020b38:	200226c0 	.word	0x200226c0

20020b3c <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020b3c:	6803      	ldr	r3, [r0, #0]
20020b3e:	ea23 0101 	bic.w	r1, r3, r1
20020b42:	4311      	orrs	r1, r2
20020b44:	6001      	str	r1, [r0, #0]
20020b46:	4770      	bx	lr

20020b48 <call_reg_mskd_ref()>:
20020b48:	b500      	push	{lr}
20020b4a:	2106      	movs	r1, #6
20020b4c:	2202      	movs	r2, #2
20020b4e:	4802      	ldr	r0, [pc, #8]	; (20020b58 <call_reg_mskd_ref()+0x10>)
20020b50:	f7ff fff4 	bl	20020b3c <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config> volatile&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020b54:	f85d fb04 	ldr.w	pc, [sp], #4
20020b58:	200226c4 	.word	0x200226c4

20020b5c <return_bits()>:
20020b5c:	2020      	movs	r0, #32
20020b5e:	4770      	bx	lr

20020b60 <call_return_bits()>:
20020b60:	b500      	push	{lr}
20020b62:	f7ff fffb 	bl	20020b5c <return_bits()>
20020b66:	2820      	cmp	r0, #32
20020b68:	4b04      	ldr	r3, [pc, #16]	; (20020b7c <call_return_bits()+0x1c>)
20020b6a:	bf0c      	ite	eq
20020b6c:	f04f 5228 	moveq.w	r2, #704643072	; 0x2a000000
20020b70:	f04f 62c0 	movne.w	r2, #100663296	; 0x6000000
20020b74:	605a      	str	r2, [r3, #4]
20020b76:	f85d fb04 	ldr.w	pc, [sp], #4
20020b7a:	bf00      	nop
20020b7c:	20022620 	.word	0x20022620

20020b80 <return_mskd()>:
20020b80:	2218      	movs	r2, #24
20020b82:	6002      	str	r2, [r0, #0]
20020b84:	2208      	movs	r2, #8
20020b86:	6042      	str	r2, [r0, #4]
20020b88:	4770      	bx	lr

20020b8a <call_return_mskd()>:
20020b8a:	b500      	push	{lr}
20020b8c:	b082      	sub	sp, #8
20020b8e:	4668      	mov	r0, sp
20020b90:	f7ff fff6 	bl	20020b80 <return_mskd()>
20020b94:	9a01      	ldr	r2, [sp, #4]
20020b96:	9b00      	ldr	r3, [sp, #0]
20020b98:	2b18      	cmp	r3, #24
20020b9a:	d006      	beq.n	20020baa <call_return_mskd()+0x20>
20020b9c:	4b06      	ldr	r3, [pc, #24]	; (20020bb8 <call_return_mskd()+0x2e>)
20020b9e:	f04f 5218 	mov.w	r2, #637534208	; 0x26000000
20020ba2:	605a      	str	r2, [r3, #4]
20020ba4:	b002      	add	sp, #8
20020ba6:	f85d fb04 	ldr.w	pc, [sp], #4
20020baa:	2a08      	cmp	r2, #8
20020bac:	d1f6      	bne.n	20020b9c <call_return_mskd()+0x12>
20020bae:	4b02      	ldr	r3, [pc, #8]	; (20020bb8 <call_return_mskd()+0x2e>)
20020bb0:	f04f 5208 	mov.w	r2, #570425344	; 0x22000000
20020bb4:	605a      	str	r2, [r3, #4]
20020bb6:	e7f5      	b.n	20020ba4 <call_return_mskd()+0x1a>
20020bb8:	20022620 	.word	0x20022620

20020bbc <return_reg()>:
20020bbc:	4b02      	ldr	r3, [pc, #8]	; (20020bc8 <return_reg()+0xc>)
20020bbe:	2240      	movs	r2, #64	; 0x40
20020bc0:	605a      	str	r2, [r3, #4]
20020bc2:	4802      	ldr	r0, [pc, #8]	; (20020bcc <return_reg()+0x10>)
20020bc4:	4770      	bx	lr
20020bc6:	bf00      	nop
20020bc8:	200226c0 	.word	0x200226c0
20020bcc:	200226c4 	.word	0x200226c4

20020bd0 <call_return_reg()>:
20020bd0:	b500      	push	{lr}
20020bd2:	f7ff fff3 	bl	20020bbc <return_reg()>
20020bd6:	6803      	ldr	r3, [r0, #0]
20020bd8:	2b40      	cmp	r3, #64	; 0x40
20020bda:	4b04      	ldr	r3, [pc, #16]	; (20020bec <call_return_reg()+0x1c>)
20020bdc:	bf0c      	ite	eq
20020bde:	f04f 52f0 	moveq.w	r2, #503316480	; 0x1e000000
20020be2:	f04f 5238 	movne.w	r2, #771751936	; 0x2e000000
20020be6:	605a      	str	r2, [r3, #4]
20020be8:	f85d fb04 	ldr.w	pc, [sp], #4
20020bec:	20022620 	.word	0x20022620

20020bf0 <return_periph()>:
20020bf0:	4801      	ldr	r0, [pc, #4]	; (20020bf8 <return_periph()+0x8>)
20020bf2:	2340      	movs	r3, #64	; 0x40
20020bf4:	6043      	str	r3, [r0, #4]
20020bf6:	4770      	bx	lr
20020bf8:	200226c0 	.word	0x200226c0

20020bfc <call_return_periph()>:
20020bfc:	b500      	push	{lr}
20020bfe:	f7ff fff7 	bl	20020bf0 <return_periph()>
20020c02:	6843      	ldr	r3, [r0, #4]
20020c04:	2b40      	cmp	r3, #64	; 0x40
20020c06:	4b04      	ldr	r3, [pc, #16]	; (20020c18 <call_return_periph()+0x1c>)
20020c08:	bf0c      	ite	eq
20020c0a:	f04f 5218 	moveq.w	r2, #637534208	; 0x26000000
20020c0e:	f04f 5228 	movne.w	r2, #704643072	; 0x2a000000
20020c12:	605a      	str	r2, [r3, #4]
20020c14:	f85d fb04 	ldr.w	pc, [sp], #4
20020c18:	20022620 	.word	0x20022620

20020c1c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
20020c1c:	2805      	cmp	r0, #5
20020c1e:	d006      	beq.n	20020c2e <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x12>
20020c20:	2806      	cmp	r0, #6
20020c22:	4b05      	ldr	r3, [pc, #20]	; (20020c38 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x1c>)
20020c24:	bf0c      	ite	eq
20020c26:	2244      	moveq	r2, #68	; 0x44
20020c28:	2255      	movne	r2, #85	; 0x55
20020c2a:	62da      	str	r2, [r3, #44]	; 0x2c
20020c2c:	4770      	bx	lr
20020c2e:	4b02      	ldr	r3, [pc, #8]	; (20020c38 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x1c>)
20020c30:	2233      	movs	r2, #51	; 0x33
20020c32:	62da      	str	r2, [r3, #44]	; 0x2c
20020c34:	4770      	bx	lr
20020c36:	bf00      	nop
20020c38:	20022500 	.word	0x20022500

20020c3c <call_pos_val()>:
20020c3c:	b500      	push	{lr}
20020c3e:	2005      	movs	r0, #5
20020c40:	f7ff ffec 	bl	20020c1c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
20020c44:	2006      	movs	r0, #6
20020c46:	f7ff ffe9 	bl	20020c1c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
20020c4a:	f85d fb04 	ldr.w	pc, [sp], #4

20020c4e <call_pos_val_global()>:
20020c4e:	b500      	push	{lr}
20020c50:	2006      	movs	r0, #6
20020c52:	f7ff ffe3 	bl	20020c1c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
20020c56:	f85d fb04 	ldr.w	pc, [sp], #4

20020c5a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
20020c5a:	6803      	ldr	r3, [r0, #0]
20020c5c:	2b05      	cmp	r3, #5
20020c5e:	d006      	beq.n	20020c6e <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x14>
20020c60:	2b06      	cmp	r3, #6
20020c62:	4b05      	ldr	r3, [pc, #20]	; (20020c78 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1e>)
20020c64:	bf0c      	ite	eq
20020c66:	2277      	moveq	r2, #119	; 0x77
20020c68:	2288      	movne	r2, #136	; 0x88
20020c6a:	62da      	str	r2, [r3, #44]	; 0x2c
20020c6c:	4770      	bx	lr
20020c6e:	4b02      	ldr	r3, [pc, #8]	; (20020c78 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1e>)
20020c70:	2266      	movs	r2, #102	; 0x66
20020c72:	62da      	str	r2, [r3, #44]	; 0x2c
20020c74:	4770      	bx	lr
20020c76:	bf00      	nop
20020c78:	20022500 	.word	0x20022500

20020c7c <call_pos_ref()>:
20020c7c:	b510      	push	{r4, lr}
20020c7e:	b082      	sub	sp, #8
20020c80:	2405      	movs	r4, #5
20020c82:	9401      	str	r4, [sp, #4]
20020c84:	a801      	add	r0, sp, #4
20020c86:	f7ff ffe8 	bl	20020c5a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
20020c8a:	9400      	str	r4, [sp, #0]
20020c8c:	4668      	mov	r0, sp
20020c8e:	f7ff ffe4 	bl	20020c5a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
20020c92:	b002      	add	sp, #8
20020c94:	bd10      	pop	{r4, pc}

20020c96 <call_pos_ref_global()>:
20020c96:	b500      	push	{lr}
20020c98:	b081      	sub	sp, #4
20020c9a:	2306      	movs	r3, #6
20020c9c:	9300      	str	r3, [sp, #0]
20020c9e:	4668      	mov	r0, sp
20020ca0:	f7ff ffdb 	bl	20020c5a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
20020ca4:	b001      	add	sp, #4
20020ca6:	f85d fb04 	ldr.w	pc, [sp], #4

20020caa <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020caa:	4a03      	ldr	r2, [pc, #12]	; (20020cb8 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
20020cac:	6853      	ldr	r3, [r2, #4]
20020cae:	ea23 0000 	bic.w	r0, r3, r0
20020cb2:	4308      	orrs	r0, r1
20020cb4:	6050      	str	r0, [r2, #4]
20020cb6:	4770      	bx	lr
20020cb8:	200226c0 	.word	0x200226c0

20020cbc <call_range_val(unsigned int)>:
20020cbc:	b500      	push	{lr}
20020cbe:	0301      	lsls	r1, r0, #12
20020cc0:	f44f 30f8 	mov.w	r0, #126976	; 0x1f000
20020cc4:	f7ff fff1 	bl	20020caa <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020cc8:	f85d fb04 	ldr.w	pc, [sp], #4

20020ccc <call_range_val_port()>:
20020ccc:	b500      	push	{lr}
20020cce:	201f      	movs	r0, #31
20020cd0:	f7ff fff4 	bl	20020cbc <call_range_val(unsigned int)>
20020cd4:	f85d fb04 	ldr.w	pc, [sp], #4

20020cd8 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
20020cd8:	4a03      	ldr	r2, [pc, #12]	; (20020ce8 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0x10>)
20020cda:	6853      	ldr	r3, [r2, #4]
20020cdc:	ea23 0000 	bic.w	r0, r3, r0
20020ce0:	4308      	orrs	r0, r1
20020ce2:	6050      	str	r0, [r2, #4]
20020ce4:	4770      	bx	lr
20020ce6:	bf00      	nop
20020ce8:	200226c0 	.word	0x200226c0

20020cec <call_range_ref(unsigned int)>:
20020cec:	b500      	push	{lr}
20020cee:	0301      	lsls	r1, r0, #12
20020cf0:	f44f 30f8 	mov.w	r0, #126976	; 0x1f000
20020cf4:	f7ff fff0 	bl	20020cd8 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
20020cf8:	f85d fb04 	ldr.w	pc, [sp], #4

20020cfc <call_range_ref_port()>:
20020cfc:	b500      	push	{lr}
20020cfe:	200c      	movs	r0, #12
20020d00:	f7ff fff4 	bl	20020cec <call_range_ref(unsigned int)>
20020d04:	f85d fb04 	ldr.w	pc, [sp], #4

20020d08 <check_array_range_pass(unsigned int)>:
20020d08:	2816      	cmp	r0, #22
20020d0a:	4b03      	ldr	r3, [pc, #12]	; (20020d18 <check_array_range_pass(unsigned int)+0x10>)
20020d0c:	bf94      	ite	ls
20020d0e:	227f      	movls	r2, #127	; 0x7f
20020d10:	2283      	movhi	r2, #131	; 0x83
20020d12:	62da      	str	r2, [r3, #44]	; 0x2c
20020d14:	4770      	bx	lr
20020d16:	bf00      	nop
20020d18:	20022500 	.word	0x20022500

20020d1c <check_array_range_fail(unsigned int)>:
20020d1c:	2816      	cmp	r0, #22
20020d1e:	4b03      	ldr	r3, [pc, #12]	; (20020d2c <check_array_range_fail(unsigned int)+0x10>)
20020d20:	bf94      	ite	ls
20020d22:	2295      	movls	r2, #149	; 0x95
20020d24:	2297      	movhi	r2, #151	; 0x97
20020d26:	62da      	str	r2, [r3, #44]	; 0x2c
20020d28:	4770      	bx	lr
20020d2a:	bf00      	nop
20020d2c:	20022500 	.word	0x20022500

20020d30 <check_bits_range_pass(unsigned int)>:
20020d30:	280f      	cmp	r0, #15
20020d32:	4b03      	ldr	r3, [pc, #12]	; (20020d40 <check_bits_range_pass(unsigned int)+0x10>)
20020d34:	bf94      	ite	ls
20020d36:	229d      	movls	r2, #157	; 0x9d
20020d38:	22a3      	movhi	r2, #163	; 0xa3
20020d3a:	62da      	str	r2, [r3, #44]	; 0x2c
20020d3c:	4770      	bx	lr
20020d3e:	bf00      	nop
20020d40:	20022500 	.word	0x20022500

20020d44 <check_bits_range_fail(unsigned int)>:
20020d44:	280f      	cmp	r0, #15
20020d46:	4b03      	ldr	r3, [pc, #12]	; (20020d54 <check_bits_range_fail(unsigned int)+0x10>)
20020d48:	bf94      	ite	ls
20020d4a:	22a7      	movls	r2, #167	; 0xa7
20020d4c:	22ad      	movhi	r2, #173	; 0xad
20020d4e:	62da      	str	r2, [r3, #44]	; 0x2c
20020d50:	4770      	bx	lr
20020d52:	bf00      	nop
20020d54:	20022500 	.word	0x20022500

20020d58 <check_mskd_range_pass(unsigned int)>:
20020d58:	281f      	cmp	r0, #31
20020d5a:	4b03      	ldr	r3, [pc, #12]	; (20020d68 <check_mskd_range_pass(unsigned int)+0x10>)
20020d5c:	bf94      	ite	ls
20020d5e:	22b3      	movls	r2, #179	; 0xb3
20020d60:	22b5      	movhi	r2, #181	; 0xb5
20020d62:	62da      	str	r2, [r3, #44]	; 0x2c
20020d64:	4770      	bx	lr
20020d66:	bf00      	nop
20020d68:	20022500 	.word	0x20022500

20020d6c <check_mskd_range_fail(unsigned int)>:
20020d6c:	281f      	cmp	r0, #31
20020d6e:	4b03      	ldr	r3, [pc, #12]	; (20020d7c <check_mskd_range_fail(unsigned int)+0x10>)
20020d70:	bf94      	ite	ls
20020d72:	22bf      	movls	r2, #191	; 0xbf
20020d74:	22c1      	movhi	r2, #193	; 0xc1
20020d76:	62da      	str	r2, [r3, #44]	; 0x2c
20020d78:	4770      	bx	lr
20020d7a:	bf00      	nop
20020d7c:	20022500 	.word	0x20022500

20020d80 <bits_extract_ne()>:
20020d80:	4b05      	ldr	r3, [pc, #20]	; (20020d98 <bits_extract_ne()+0x18>)
20020d82:	2220      	movs	r2, #32
20020d84:	605a      	str	r2, [r3, #4]
20020d86:	685b      	ldr	r3, [r3, #4]
20020d88:	4293      	cmp	r3, r2
20020d8a:	4b03      	ldr	r3, [pc, #12]	; (20020d98 <bits_extract_ne()+0x18>)
20020d8c:	bf14      	ite	ne
20020d8e:	2202      	movne	r2, #2
20020d90:	2204      	moveq	r2, #4
20020d92:	605a      	str	r2, [r3, #4]
20020d94:	4770      	bx	lr
20020d96:	bf00      	nop
20020d98:	200226c0 	.word	0x200226c0

20020d9c <mskd_extract_geq()>:
20020d9c:	4b05      	ldr	r3, [pc, #20]	; (20020db4 <mskd_extract_geq()+0x18>)
20020d9e:	f04f 52b0 	mov.w	r2, #369098752	; 0x16000000
20020da2:	605a      	str	r2, [r3, #4]
20020da4:	685b      	ldr	r3, [r3, #4]
20020da6:	4293      	cmp	r3, r2
20020da8:	4b03      	ldr	r3, [pc, #12]	; (20020db8 <mskd_extract_geq()+0x1c>)
20020daa:	bf2c      	ite	cs
20020dac:	2220      	movcs	r2, #32
20020dae:	2240      	movcc	r2, #64	; 0x40
20020db0:	605a      	str	r2, [r3, #4]
20020db2:	4770      	bx	lr
20020db4:	20022620 	.word	0x20022620
20020db8:	200226c0 	.word	0x200226c0

20020dbc <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>:
20020dbc:	4b04      	ldr	r3, [pc, #16]	; (20020dd0 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x14>)
20020dbe:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020dc2:	605a      	str	r2, [r3, #4]
20020dc4:	685b      	ldr	r3, [r3, #4]
20020dc6:	4018      	ands	r0, r3
20020dc8:	40c8      	lsrs	r0, r1
20020dca:	4b02      	ldr	r3, [pc, #8]	; (20020dd4 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x18>)
20020dcc:	62d8      	str	r0, [r3, #44]	; 0x2c
20020dce:	4770      	bx	lr
20020dd0:	20022620 	.word	0x20022620
20020dd4:	20022500 	.word	0x20022500

20020dd8 <call_shifted_const_val()>:
20020dd8:	b500      	push	{lr}
20020dda:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020dde:	2119      	movs	r1, #25
20020de0:	f7ff ffec 	bl	20020dbc <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020de4:	f85d fb04 	ldr.w	pc, [sp], #4

20020de8 <call_shifted_var_val()>:
20020de8:	b500      	push	{lr}
20020dea:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020dee:	2119      	movs	r1, #25
20020df0:	f7ff ffe4 	bl	20020dbc <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020df4:	f85d fb04 	ldr.w	pc, [sp], #4

20020df8 <call_shifted_global_val()>:
20020df8:	b500      	push	{lr}
20020dfa:	f04f 5078 	mov.w	r0, #1040187392	; 0x3e000000
20020dfe:	2119      	movs	r1, #25
20020e00:	f7ff ffdc 	bl	20020dbc <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
20020e04:	f85d fb04 	ldr.w	pc, [sp], #4

20020e08 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>:
20020e08:	4b05      	ldr	r3, [pc, #20]	; (20020e20 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x18>)
20020e0a:	f04f 5238 	mov.w	r2, #771751936	; 0x2e000000
20020e0e:	605a      	str	r2, [r3, #4]
20020e10:	685b      	ldr	r3, [r3, #4]
20020e12:	6802      	ldr	r2, [r0, #0]
20020e14:	4013      	ands	r3, r2
20020e16:	6842      	ldr	r2, [r0, #4]
20020e18:	40d3      	lsrs	r3, r2
20020e1a:	4a02      	ldr	r2, [pc, #8]	; (20020e24 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1c>)
20020e1c:	62d3      	str	r3, [r2, #44]	; 0x2c
20020e1e:	4770      	bx	lr
20020e20:	20022620 	.word	0x20022620
20020e24:	20022500 	.word	0x20022500

20020e28 <call_shifted_const_ref()>:
20020e28:	b500      	push	{lr}
20020e2a:	b082      	sub	sp, #8
20020e2c:	4b05      	ldr	r3, [pc, #20]	; (20020e44 <call_shifted_const_ref()+0x1c>)
20020e2e:	f103 0308 	add.w	r3, r3, #8
20020e32:	cb0c      	ldmia	r3, {r2, r3}
20020e34:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e38:	4668      	mov	r0, sp
20020e3a:	f7ff ffe5 	bl	20020e08 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e3e:	b002      	add	sp, #8
20020e40:	f85d fb04 	ldr.w	pc, [sp], #4
20020e44:	2002174c 	.word	0x2002174c

20020e48 <call_shifted_var_ref()>:
20020e48:	b500      	push	{lr}
20020e4a:	b082      	sub	sp, #8
20020e4c:	4b05      	ldr	r3, [pc, #20]	; (20020e64 <call_shifted_var_ref()+0x1c>)
20020e4e:	f103 0310 	add.w	r3, r3, #16
20020e52:	cb0c      	ldmia	r3, {r2, r3}
20020e54:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e58:	4668      	mov	r0, sp
20020e5a:	f7ff ffd5 	bl	20020e08 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e5e:	b002      	add	sp, #8
20020e60:	f85d fb04 	ldr.w	pc, [sp], #4
20020e64:	2002174c 	.word	0x2002174c

20020e68 <call_shifted_global_ref()>:
20020e68:	b500      	push	{lr}
20020e6a:	b082      	sub	sp, #8
20020e6c:	4b05      	ldr	r3, [pc, #20]	; (20020e84 <call_shifted_global_ref()+0x1c>)
20020e6e:	f103 0308 	add.w	r3, r3, #8
20020e72:	cb0c      	ldmia	r3, {r2, r3}
20020e74:	e88d 000c 	stmia.w	sp, {r2, r3}
20020e78:	4668      	mov	r0, sp
20020e7a:	f7ff ffc5 	bl	20020e08 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
20020e7e:	b002      	add	sp, #8
20020e80:	f85d fb04 	ldr.w	pc, [sp], #4
20020e84:	2002174c 	.word	0x2002174c

20020e88 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>:
20020e88:	f010 0f40 	tst.w	r0, #64	; 0x40
20020e8c:	4b02      	ldr	r3, [pc, #8]	; (20020e98 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)+0x10>)
20020e8e:	bf14      	ite	ne
20020e90:	2202      	movne	r2, #2
20020e92:	2204      	moveq	r2, #4
20020e94:	605a      	str	r2, [r3, #4]
20020e96:	4770      	bx	lr
20020e98:	200226c0 	.word	0x200226c0

20020e9c <call_copy_bits_val()>:
20020e9c:	b500      	push	{lr}
20020e9e:	4b04      	ldr	r3, [pc, #16]	; (20020eb0 <call_copy_bits_val()+0x14>)
20020ea0:	2240      	movs	r2, #64	; 0x40
20020ea2:	605a      	str	r2, [r3, #4]
20020ea4:	6858      	ldr	r0, [r3, #4]
20020ea6:	f7ff ffef 	bl	20020e88 <copy_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>)>
20020eaa:	f85d fb04 	ldr.w	pc, [sp], #4
20020eae:	bf00      	nop
20020eb0:	200226c0 	.word	0x200226c0

20020eb4 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>:
20020eb4:	6803      	ldr	r3, [r0, #0]
20020eb6:	f013 0f40 	tst.w	r3, #64	; 0x40
20020eba:	4b03      	ldr	r3, [pc, #12]	; (20020ec8 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)+0x14>)
20020ebc:	bf14      	ite	ne
20020ebe:	2202      	movne	r2, #2
20020ec0:	2204      	moveq	r2, #4
20020ec2:	605a      	str	r2, [r3, #4]
20020ec4:	4770      	bx	lr
20020ec6:	bf00      	nop
20020ec8:	200226c0 	.word	0x200226c0

20020ecc <call_copy_bits_ref()>:
20020ecc:	b500      	push	{lr}
20020ece:	b081      	sub	sp, #4
20020ed0:	4b05      	ldr	r3, [pc, #20]	; (20020ee8 <call_copy_bits_ref()+0x1c>)
20020ed2:	2240      	movs	r2, #64	; 0x40
20020ed4:	605a      	str	r2, [r3, #4]
20020ed6:	685b      	ldr	r3, [r3, #4]
20020ed8:	9300      	str	r3, [sp, #0]
20020eda:	4668      	mov	r0, sp
20020edc:	f7ff ffea 	bl	20020eb4 <copy_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config> const&)>
20020ee0:	b001      	add	sp, #4
20020ee2:	f85d fb04 	ldr.w	pc, [sp], #4
20020ee6:	bf00      	nop
20020ee8:	200226c0 	.word	0x200226c0

20020eec <run>:
20020eec:	b530      	push	{r4, r5, lr}
20020eee:	4bb0      	ldr	r3, [pc, #704]	; (200211b0 <run+0x2c4>)
20020ef0:	781b      	ldrb	r3, [r3, #0]
20020ef2:	b923      	cbnz	r3, 20020efe <run+0x12>
20020ef4:	4bae      	ldr	r3, [pc, #696]	; (200211b0 <run+0x2c4>)
20020ef6:	4aaf      	ldr	r2, [pc, #700]	; (200211b4 <run+0x2c8>)
20020ef8:	609a      	str	r2, [r3, #8]
20020efa:	2201      	movs	r2, #1
20020efc:	701a      	strb	r2, [r3, #0]
20020efe:	4bac      	ldr	r3, [pc, #688]	; (200211b0 <run+0x2c4>)
20020f00:	7b1b      	ldrb	r3, [r3, #12]
20020f02:	b923      	cbnz	r3, 20020f0e <run+0x22>
20020f04:	4baa      	ldr	r3, [pc, #680]	; (200211b0 <run+0x2c4>)
20020f06:	4aac      	ldr	r2, [pc, #688]	; (200211b8 <run+0x2cc>)
20020f08:	615a      	str	r2, [r3, #20]
20020f0a:	2201      	movs	r2, #1
20020f0c:	731a      	strb	r2, [r3, #12]
20020f0e:	4ba8      	ldr	r3, [pc, #672]	; (200211b0 <run+0x2c4>)
20020f10:	7e1b      	ldrb	r3, [r3, #24]
20020f12:	b923      	cbnz	r3, 20020f1e <run+0x32>
20020f14:	4ba6      	ldr	r3, [pc, #664]	; (200211b0 <run+0x2c4>)
20020f16:	4aa9      	ldr	r2, [pc, #676]	; (200211bc <run+0x2d0>)
20020f18:	621a      	str	r2, [r3, #32]
20020f1a:	2201      	movs	r2, #1
20020f1c:	761a      	strb	r2, [r3, #24]
20020f1e:	4ca4      	ldr	r4, [pc, #656]	; (200211b0 <run+0x2c4>)
20020f20:	2200      	movs	r2, #0
20020f22:	68a1      	ldr	r1, [r4, #8]
20020f24:	48a6      	ldr	r0, [pc, #664]	; (200211c0 <run+0x2d4>)
20020f26:	f000 fb3e 	bl	200215a6 <do_test>
20020f2a:	2201      	movs	r2, #1
20020f2c:	68a1      	ldr	r1, [r4, #8]
20020f2e:	48a5      	ldr	r0, [pc, #660]	; (200211c4 <run+0x2d8>)
20020f30:	f000 fb39 	bl	200215a6 <do_test>
20020f34:	2202      	movs	r2, #2
20020f36:	68a1      	ldr	r1, [r4, #8]
20020f38:	48a3      	ldr	r0, [pc, #652]	; (200211c8 <run+0x2dc>)
20020f3a:	f000 fb34 	bl	200215a6 <do_test>
20020f3e:	2203      	movs	r2, #3
20020f40:	68a1      	ldr	r1, [r4, #8]
20020f42:	48a2      	ldr	r0, [pc, #648]	; (200211cc <run+0x2e0>)
20020f44:	f000 fb2f 	bl	200215a6 <do_test>
20020f48:	2204      	movs	r2, #4
20020f4a:	68a1      	ldr	r1, [r4, #8]
20020f4c:	48a0      	ldr	r0, [pc, #640]	; (200211d0 <run+0x2e4>)
20020f4e:	f000 fb2a 	bl	200215a6 <do_test>
20020f52:	2205      	movs	r2, #5
20020f54:	68a1      	ldr	r1, [r4, #8]
20020f56:	489f      	ldr	r0, [pc, #636]	; (200211d4 <run+0x2e8>)
20020f58:	f000 fb25 	bl	200215a6 <do_test>
20020f5c:	2206      	movs	r2, #6
20020f5e:	68a1      	ldr	r1, [r4, #8]
20020f60:	489d      	ldr	r0, [pc, #628]	; (200211d8 <run+0x2ec>)
20020f62:	f000 fb20 	bl	200215a6 <do_test>
20020f66:	2207      	movs	r2, #7
20020f68:	68a1      	ldr	r1, [r4, #8]
20020f6a:	489c      	ldr	r0, [pc, #624]	; (200211dc <run+0x2f0>)
20020f6c:	f000 fb1b 	bl	200215a6 <do_test>
20020f70:	2208      	movs	r2, #8
20020f72:	68a1      	ldr	r1, [r4, #8]
20020f74:	489a      	ldr	r0, [pc, #616]	; (200211e0 <run+0x2f4>)
20020f76:	f000 fb16 	bl	200215a6 <do_test>
20020f7a:	2209      	movs	r2, #9
20020f7c:	68a1      	ldr	r1, [r4, #8]
20020f7e:	4899      	ldr	r0, [pc, #612]	; (200211e4 <run+0x2f8>)
20020f80:	f000 fb11 	bl	200215a6 <do_test>
20020f84:	220a      	movs	r2, #10
20020f86:	68a1      	ldr	r1, [r4, #8]
20020f88:	4897      	ldr	r0, [pc, #604]	; (200211e8 <run+0x2fc>)
20020f8a:	f000 fb0c 	bl	200215a6 <do_test>
20020f8e:	220b      	movs	r2, #11
20020f90:	68a1      	ldr	r1, [r4, #8]
20020f92:	4896      	ldr	r0, [pc, #600]	; (200211ec <run+0x300>)
20020f94:	f000 fb07 	bl	200215a6 <do_test>
20020f98:	220c      	movs	r2, #12
20020f9a:	68a1      	ldr	r1, [r4, #8]
20020f9c:	4894      	ldr	r0, [pc, #592]	; (200211f0 <run+0x304>)
20020f9e:	f000 fb02 	bl	200215a6 <do_test>
20020fa2:	220d      	movs	r2, #13
20020fa4:	68a1      	ldr	r1, [r4, #8]
20020fa6:	4893      	ldr	r0, [pc, #588]	; (200211f4 <run+0x308>)
20020fa8:	f000 fafd 	bl	200215a6 <do_test>
20020fac:	220e      	movs	r2, #14
20020fae:	68a1      	ldr	r1, [r4, #8]
20020fb0:	4891      	ldr	r0, [pc, #580]	; (200211f8 <run+0x30c>)
20020fb2:	f000 faf8 	bl	200215a6 <do_test>
20020fb6:	220f      	movs	r2, #15
20020fb8:	68a1      	ldr	r1, [r4, #8]
20020fba:	4890      	ldr	r0, [pc, #576]	; (200211fc <run+0x310>)
20020fbc:	f000 faf3 	bl	200215a6 <do_test>
20020fc0:	2210      	movs	r2, #16
20020fc2:	68a1      	ldr	r1, [r4, #8]
20020fc4:	488e      	ldr	r0, [pc, #568]	; (20021200 <run+0x314>)
20020fc6:	f000 faee 	bl	200215a6 <do_test>
20020fca:	2211      	movs	r2, #17
20020fcc:	68a1      	ldr	r1, [r4, #8]
20020fce:	488d      	ldr	r0, [pc, #564]	; (20021204 <run+0x318>)
20020fd0:	f000 fae9 	bl	200215a6 <do_test>
20020fd4:	2212      	movs	r2, #18
20020fd6:	68a1      	ldr	r1, [r4, #8]
20020fd8:	488b      	ldr	r0, [pc, #556]	; (20021208 <run+0x31c>)
20020fda:	f000 fae4 	bl	200215a6 <do_test>
20020fde:	2213      	movs	r2, #19
20020fe0:	68a1      	ldr	r1, [r4, #8]
20020fe2:	488a      	ldr	r0, [pc, #552]	; (2002120c <run+0x320>)
20020fe4:	f000 fadf 	bl	200215a6 <do_test>
20020fe8:	2214      	movs	r2, #20
20020fea:	68a1      	ldr	r1, [r4, #8]
20020fec:	4888      	ldr	r0, [pc, #544]	; (20021210 <run+0x324>)
20020fee:	f000 fada 	bl	200215a6 <do_test>
20020ff2:	2215      	movs	r2, #21
20020ff4:	68a1      	ldr	r1, [r4, #8]
20020ff6:	4887      	ldr	r0, [pc, #540]	; (20021214 <run+0x328>)
20020ff8:	f000 fad5 	bl	200215a6 <do_test>
20020ffc:	2216      	movs	r2, #22
20020ffe:	68a1      	ldr	r1, [r4, #8]
20021000:	4885      	ldr	r0, [pc, #532]	; (20021218 <run+0x32c>)
20021002:	f000 fad0 	bl	200215a6 <do_test>
20021006:	2217      	movs	r2, #23
20021008:	68a1      	ldr	r1, [r4, #8]
2002100a:	4884      	ldr	r0, [pc, #528]	; (2002121c <run+0x330>)
2002100c:	f000 facb 	bl	200215a6 <do_test>
20021010:	2218      	movs	r2, #24
20021012:	68a1      	ldr	r1, [r4, #8]
20021014:	4882      	ldr	r0, [pc, #520]	; (20021220 <run+0x334>)
20021016:	f000 fac6 	bl	200215a6 <do_test>
2002101a:	2219      	movs	r2, #25
2002101c:	68a1      	ldr	r1, [r4, #8]
2002101e:	4881      	ldr	r0, [pc, #516]	; (20021224 <run+0x338>)
20021020:	f000 fac1 	bl	200215a6 <do_test>
20021024:	221a      	movs	r2, #26
20021026:	68a1      	ldr	r1, [r4, #8]
20021028:	487f      	ldr	r0, [pc, #508]	; (20021228 <run+0x33c>)
2002102a:	f000 fabc 	bl	200215a6 <do_test>
2002102e:	221b      	movs	r2, #27
20021030:	68a1      	ldr	r1, [r4, #8]
20021032:	487e      	ldr	r0, [pc, #504]	; (2002122c <run+0x340>)
20021034:	f000 fab7 	bl	200215a6 <do_test>
20021038:	221c      	movs	r2, #28
2002103a:	68a1      	ldr	r1, [r4, #8]
2002103c:	487c      	ldr	r0, [pc, #496]	; (20021230 <run+0x344>)
2002103e:	f000 fab2 	bl	200215a6 <do_test>
20021042:	221d      	movs	r2, #29
20021044:	68a1      	ldr	r1, [r4, #8]
20021046:	487b      	ldr	r0, [pc, #492]	; (20021234 <run+0x348>)
20021048:	f000 faad 	bl	200215a6 <do_test>
2002104c:	221e      	movs	r2, #30
2002104e:	68a1      	ldr	r1, [r4, #8]
20021050:	4879      	ldr	r0, [pc, #484]	; (20021238 <run+0x34c>)
20021052:	f000 faa8 	bl	200215a6 <do_test>
20021056:	221f      	movs	r2, #31
20021058:	68a1      	ldr	r1, [r4, #8]
2002105a:	4878      	ldr	r0, [pc, #480]	; (2002123c <run+0x350>)
2002105c:	f000 faa3 	bl	200215a6 <do_test>
20021060:	2220      	movs	r2, #32
20021062:	68a1      	ldr	r1, [r4, #8]
20021064:	4876      	ldr	r0, [pc, #472]	; (20021240 <run+0x354>)
20021066:	f000 fa9e 	bl	200215a6 <do_test>
2002106a:	2221      	movs	r2, #33	; 0x21
2002106c:	68a1      	ldr	r1, [r4, #8]
2002106e:	4875      	ldr	r0, [pc, #468]	; (20021244 <run+0x358>)
20021070:	f000 fa99 	bl	200215a6 <do_test>
20021074:	2222      	movs	r2, #34	; 0x22
20021076:	68a1      	ldr	r1, [r4, #8]
20021078:	4873      	ldr	r0, [pc, #460]	; (20021248 <run+0x35c>)
2002107a:	f000 fa94 	bl	200215a6 <do_test>
2002107e:	2223      	movs	r2, #35	; 0x23
20021080:	68a1      	ldr	r1, [r4, #8]
20021082:	4872      	ldr	r0, [pc, #456]	; (2002124c <run+0x360>)
20021084:	f000 fa8f 	bl	200215a6 <do_test>
20021088:	2224      	movs	r2, #36	; 0x24
2002108a:	68a1      	ldr	r1, [r4, #8]
2002108c:	4870      	ldr	r0, [pc, #448]	; (20021250 <run+0x364>)
2002108e:	f000 fa8a 	bl	200215a6 <do_test>
20021092:	2225      	movs	r2, #37	; 0x25
20021094:	6961      	ldr	r1, [r4, #20]
20021096:	486f      	ldr	r0, [pc, #444]	; (20021254 <run+0x368>)
20021098:	f000 fa85 	bl	200215a6 <do_test>
2002109c:	2226      	movs	r2, #38	; 0x26
2002109e:	6961      	ldr	r1, [r4, #20]
200210a0:	486d      	ldr	r0, [pc, #436]	; (20021258 <run+0x36c>)
200210a2:	f000 fa80 	bl	200215a6 <do_test>
200210a6:	2227      	movs	r2, #39	; 0x27
200210a8:	6961      	ldr	r1, [r4, #20]
200210aa:	486c      	ldr	r0, [pc, #432]	; (2002125c <run+0x370>)
200210ac:	f000 fa7b 	bl	200215a6 <do_test>
200210b0:	2228      	movs	r2, #40	; 0x28
200210b2:	68a1      	ldr	r1, [r4, #8]
200210b4:	486a      	ldr	r0, [pc, #424]	; (20021260 <run+0x374>)
200210b6:	f000 fa76 	bl	200215a6 <do_test>
200210ba:	2229      	movs	r2, #41	; 0x29
200210bc:	68a1      	ldr	r1, [r4, #8]
200210be:	4869      	ldr	r0, [pc, #420]	; (20021264 <run+0x378>)
200210c0:	f000 fa71 	bl	200215a6 <do_test>
200210c4:	222a      	movs	r2, #42	; 0x2a
200210c6:	68a1      	ldr	r1, [r4, #8]
200210c8:	4867      	ldr	r0, [pc, #412]	; (20021268 <run+0x37c>)
200210ca:	f000 fa6c 	bl	200215a6 <do_test>
200210ce:	222b      	movs	r2, #43	; 0x2b
200210d0:	68a1      	ldr	r1, [r4, #8]
200210d2:	4866      	ldr	r0, [pc, #408]	; (2002126c <run+0x380>)
200210d4:	f000 fa67 	bl	200215a6 <do_test>
200210d8:	222c      	movs	r2, #44	; 0x2c
200210da:	68a1      	ldr	r1, [r4, #8]
200210dc:	4864      	ldr	r0, [pc, #400]	; (20021270 <run+0x384>)
200210de:	f000 fa62 	bl	200215a6 <do_test>
200210e2:	222d      	movs	r2, #45	; 0x2d
200210e4:	6a21      	ldr	r1, [r4, #32]
200210e6:	4863      	ldr	r0, [pc, #396]	; (20021274 <run+0x388>)
200210e8:	f000 fa5d 	bl	200215a6 <do_test>
200210ec:	222e      	movs	r2, #46	; 0x2e
200210ee:	68a1      	ldr	r1, [r4, #8]
200210f0:	4861      	ldr	r0, [pc, #388]	; (20021278 <run+0x38c>)
200210f2:	f000 fa58 	bl	200215a6 <do_test>
200210f6:	222f      	movs	r2, #47	; 0x2f
200210f8:	68a1      	ldr	r1, [r4, #8]
200210fa:	4860      	ldr	r0, [pc, #384]	; (2002127c <run+0x390>)
200210fc:	f000 fa53 	bl	200215a6 <do_test>
20021100:	2230      	movs	r2, #48	; 0x30
20021102:	68a1      	ldr	r1, [r4, #8]
20021104:	485e      	ldr	r0, [pc, #376]	; (20021280 <run+0x394>)
20021106:	f000 fa4e 	bl	200215a6 <do_test>
2002110a:	2231      	movs	r2, #49	; 0x31
2002110c:	68a1      	ldr	r1, [r4, #8]
2002110e:	485d      	ldr	r0, [pc, #372]	; (20021284 <run+0x398>)
20021110:	f000 fa49 	bl	200215a6 <do_test>
20021114:	2232      	movs	r2, #50	; 0x32
20021116:	68a1      	ldr	r1, [r4, #8]
20021118:	485b      	ldr	r0, [pc, #364]	; (20021288 <run+0x39c>)
2002111a:	f000 fa44 	bl	200215a6 <do_test>
2002111e:	2233      	movs	r2, #51	; 0x33
20021120:	68a1      	ldr	r1, [r4, #8]
20021122:	485a      	ldr	r0, [pc, #360]	; (2002128c <run+0x3a0>)
20021124:	f000 fa3f 	bl	200215a6 <do_test>
20021128:	2234      	movs	r2, #52	; 0x34
2002112a:	68a1      	ldr	r1, [r4, #8]
2002112c:	4858      	ldr	r0, [pc, #352]	; (20021290 <run+0x3a4>)
2002112e:	f000 fa3a 	bl	200215a6 <do_test>
20021132:	2235      	movs	r2, #53	; 0x35
20021134:	68a1      	ldr	r1, [r4, #8]
20021136:	4857      	ldr	r0, [pc, #348]	; (20021294 <run+0x3a8>)
20021138:	f000 fa35 	bl	200215a6 <do_test>
2002113c:	2236      	movs	r2, #54	; 0x36
2002113e:	68a1      	ldr	r1, [r4, #8]
20021140:	4855      	ldr	r0, [pc, #340]	; (20021298 <run+0x3ac>)
20021142:	f000 fa30 	bl	200215a6 <do_test>
20021146:	2237      	movs	r2, #55	; 0x37
20021148:	68a1      	ldr	r1, [r4, #8]
2002114a:	4854      	ldr	r0, [pc, #336]	; (2002129c <run+0x3b0>)
2002114c:	f000 fa2b 	bl	200215a6 <do_test>
20021150:	2238      	movs	r2, #56	; 0x38
20021152:	68a1      	ldr	r1, [r4, #8]
20021154:	4852      	ldr	r0, [pc, #328]	; (200212a0 <run+0x3b4>)
20021156:	f000 fa26 	bl	200215a6 <do_test>
2002115a:	2239      	movs	r2, #57	; 0x39
2002115c:	68a1      	ldr	r1, [r4, #8]
2002115e:	4851      	ldr	r0, [pc, #324]	; (200212a4 <run+0x3b8>)
20021160:	f000 fa21 	bl	200215a6 <do_test>
20021164:	223a      	movs	r2, #58	; 0x3a
20021166:	68a1      	ldr	r1, [r4, #8]
20021168:	484f      	ldr	r0, [pc, #316]	; (200212a8 <run+0x3bc>)
2002116a:	f000 fa1c 	bl	200215a6 <do_test>
2002116e:	223b      	movs	r2, #59	; 0x3b
20021170:	68a1      	ldr	r1, [r4, #8]
20021172:	484e      	ldr	r0, [pc, #312]	; (200212ac <run+0x3c0>)
20021174:	f000 fa17 	bl	200215a6 <do_test>
20021178:	223c      	movs	r2, #60	; 0x3c
2002117a:	68a1      	ldr	r1, [r4, #8]
2002117c:	484c      	ldr	r0, [pc, #304]	; (200212b0 <run+0x3c4>)
2002117e:	f000 fa12 	bl	200215a6 <do_test>
20021182:	223d      	movs	r2, #61	; 0x3d
20021184:	68a1      	ldr	r1, [r4, #8]
20021186:	484b      	ldr	r0, [pc, #300]	; (200212b4 <run+0x3c8>)
20021188:	f000 fa0d 	bl	200215a6 <do_test>
2002118c:	223e      	movs	r2, #62	; 0x3e
2002118e:	68a1      	ldr	r1, [r4, #8]
20021190:	4849      	ldr	r0, [pc, #292]	; (200212b8 <run+0x3cc>)
20021192:	f000 fa08 	bl	200215a6 <do_test>
20021196:	223f      	movs	r2, #63	; 0x3f
20021198:	68a1      	ldr	r1, [r4, #8]
2002119a:	4848      	ldr	r0, [pc, #288]	; (200212bc <run+0x3d0>)
2002119c:	f000 fa03 	bl	200215a6 <do_test>
200211a0:	2240      	movs	r2, #64	; 0x40
200211a2:	6961      	ldr	r1, [r4, #20]
200211a4:	4846      	ldr	r0, [pc, #280]	; (200212c0 <run+0x3d4>)
200211a6:	f000 f9fe 	bl	200215a6 <do_test>
200211aa:	2241      	movs	r2, #65	; 0x41
200211ac:	6961      	ldr	r1, [r4, #20]
200211ae:	e089      	b.n	200212c4 <run+0x3d8>
200211b0:	20021764 	.word	0x20021764
200211b4:	200226c4 	.word	0x200226c4
200211b8:	20022624 	.word	0x20022624
200211bc:	2002252c 	.word	0x2002252c
200211c0:	200201f1 	.word	0x200201f1
200211c4:	200201fd 	.word	0x200201fd
200211c8:	20020209 	.word	0x20020209
200211cc:	20020219 	.word	0x20020219
200211d0:	20020229 	.word	0x20020229
200211d4:	20020239 	.word	0x20020239
200211d8:	20020249 	.word	0x20020249
200211dc:	20020259 	.word	0x20020259
200211e0:	20020269 	.word	0x20020269
200211e4:	20020279 	.word	0x20020279
200211e8:	20020289 	.word	0x20020289
200211ec:	20020295 	.word	0x20020295
200211f0:	200202a1 	.word	0x200202a1
200211f4:	200202ad 	.word	0x200202ad
200211f8:	200202b9 	.word	0x200202b9
200211fc:	200202c9 	.word	0x200202c9
20021200:	200202d9 	.word	0x200202d9
20021204:	200202e9 	.word	0x200202e9
20021208:	200202f9 	.word	0x200202f9
2002120c:	2002030d 	.word	0x2002030d
20021210:	20020321 	.word	0x20020321
20021214:	20020331 	.word	0x20020331
20021218:	20020341 	.word	0x20020341
2002121c:	20020359 	.word	0x20020359
20021220:	20020371 	.word	0x20020371
20021224:	2002037d 	.word	0x2002037d
20021228:	20020389 	.word	0x20020389
2002122c:	20020399 	.word	0x20020399
20021230:	200203a9 	.word	0x200203a9
20021234:	200203b5 	.word	0x200203b5
20021238:	200203c1 	.word	0x200203c1
2002123c:	200203cd 	.word	0x200203cd
20021240:	200203d9 	.word	0x200203d9
20021244:	200203e9 	.word	0x200203e9
20021248:	200203fd 	.word	0x200203fd
2002124c:	20020425 	.word	0x20020425
20021250:	20020445 	.word	0x20020445
20021254:	20020469 	.word	0x20020469
20021258:	20020485 	.word	0x20020485
2002125c:	200204a9 	.word	0x200204a9
20021260:	200204cd 	.word	0x200204cd
20021264:	200204fd 	.word	0x200204fd
20021268:	20020531 	.word	0x20020531
2002126c:	20020555 	.word	0x20020555
20021270:	20020571 	.word	0x20020571
20021274:	20020585 	.word	0x20020585
20021278:	2002091d 	.word	0x2002091d
2002127c:	20020911 	.word	0x20020911
20021280:	20020959 	.word	0x20020959
20021284:	20020945 	.word	0x20020945
20021288:	200209a3 	.word	0x200209a3
2002128c:	20020995 	.word	0x20020995
20021290:	200209f1 	.word	0x200209f1
20021294:	200209d5 	.word	0x200209d5
20021298:	20020a2b 	.word	0x20020a2b
2002129c:	20020a45 	.word	0x20020a45
200212a0:	20020a61 	.word	0x20020a61
200212a4:	20020a7f 	.word	0x20020a7f
200212a8:	20020aa3 	.word	0x20020aa3
200212ac:	20020acb 	.word	0x20020acb
200212b0:	20020ae9 	.word	0x20020ae9
200212b4:	20020b09 	.word	0x20020b09
200212b8:	20020b29 	.word	0x20020b29
200212bc:	20020b49 	.word	0x20020b49
200212c0:	20020b61 	.word	0x20020b61
200212c4:	487f      	ldr	r0, [pc, #508]	; (200214c4 <run+0x5d8>)
200212c6:	f000 f96e 	bl	200215a6 <do_test>
200212ca:	2242      	movs	r2, #66	; 0x42
200212cc:	6961      	ldr	r1, [r4, #20]
200212ce:	487e      	ldr	r0, [pc, #504]	; (200214c8 <run+0x5dc>)
200212d0:	f000 f969 	bl	200215a6 <do_test>
200212d4:	2243      	movs	r2, #67	; 0x43
200212d6:	68a1      	ldr	r1, [r4, #8]
200212d8:	487c      	ldr	r0, [pc, #496]	; (200214cc <run+0x5e0>)
200212da:	f000 f964 	bl	200215a6 <do_test>
200212de:	2244      	movs	r2, #68	; 0x44
200212e0:	6a21      	ldr	r1, [r4, #32]
200212e2:	487b      	ldr	r0, [pc, #492]	; (200214d0 <run+0x5e4>)
200212e4:	f000 f95f 	bl	200215a6 <do_test>
200212e8:	2245      	movs	r2, #69	; 0x45
200212ea:	6a21      	ldr	r1, [r4, #32]
200212ec:	4879      	ldr	r0, [pc, #484]	; (200214d4 <run+0x5e8>)
200212ee:	f000 f95a 	bl	200215a6 <do_test>
200212f2:	2246      	movs	r2, #70	; 0x46
200212f4:	68a1      	ldr	r1, [r4, #8]
200212f6:	4878      	ldr	r0, [pc, #480]	; (200214d8 <run+0x5ec>)
200212f8:	f000 f955 	bl	200215a6 <do_test>
200212fc:	2247      	movs	r2, #71	; 0x47
200212fe:	68a1      	ldr	r1, [r4, #8]
20021300:	4876      	ldr	r0, [pc, #472]	; (200214dc <run+0x5f0>)
20021302:	f000 f950 	bl	200215a6 <do_test>
20021306:	2248      	movs	r2, #72	; 0x48
20021308:	6a21      	ldr	r1, [r4, #32]
2002130a:	4875      	ldr	r0, [pc, #468]	; (200214e0 <run+0x5f4>)
2002130c:	f000 f94b 	bl	200215a6 <do_test>
20021310:	2249      	movs	r2, #73	; 0x49
20021312:	6a21      	ldr	r1, [r4, #32]
20021314:	4873      	ldr	r0, [pc, #460]	; (200214e4 <run+0x5f8>)
20021316:	f000 f946 	bl	200215a6 <do_test>
2002131a:	224a      	movs	r2, #74	; 0x4a
2002131c:	68a1      	ldr	r1, [r4, #8]
2002131e:	4872      	ldr	r0, [pc, #456]	; (200214e8 <run+0x5fc>)
20021320:	f000 f941 	bl	200215a6 <do_test>
20021324:	224b      	movs	r2, #75	; 0x4b
20021326:	68a1      	ldr	r1, [r4, #8]
20021328:	4870      	ldr	r0, [pc, #448]	; (200214ec <run+0x600>)
2002132a:	f000 f93c 	bl	200215a6 <do_test>
2002132e:	224c      	movs	r2, #76	; 0x4c
20021330:	68a1      	ldr	r1, [r4, #8]
20021332:	486f      	ldr	r0, [pc, #444]	; (200214f0 <run+0x604>)
20021334:	f000 f937 	bl	200215a6 <do_test>
20021338:	224d      	movs	r2, #77	; 0x4d
2002133a:	68a1      	ldr	r1, [r4, #8]
2002133c:	486d      	ldr	r0, [pc, #436]	; (200214f4 <run+0x608>)
2002133e:	f000 f932 	bl	200215a6 <do_test>
20021342:	224e      	movs	r2, #78	; 0x4e
20021344:	68a1      	ldr	r1, [r4, #8]
20021346:	486c      	ldr	r0, [pc, #432]	; (200214f8 <run+0x60c>)
20021348:	f000 f92d 	bl	200215a6 <do_test>
2002134c:	224f      	movs	r2, #79	; 0x4f
2002134e:	68a1      	ldr	r1, [r4, #8]
20021350:	486a      	ldr	r0, [pc, #424]	; (200214fc <run+0x610>)
20021352:	f000 f928 	bl	200215a6 <do_test>
20021356:	4d6a      	ldr	r5, [pc, #424]	; (20021500 <run+0x614>)
20021358:	2250      	movs	r2, #80	; 0x50
2002135a:	68a1      	ldr	r1, [r4, #8]
2002135c:	4628      	mov	r0, r5
2002135e:	f000 f922 	bl	200215a6 <do_test>
20021362:	2251      	movs	r2, #81	; 0x51
20021364:	68a1      	ldr	r1, [r4, #8]
20021366:	4628      	mov	r0, r5
20021368:	f000 f91d 	bl	200215a6 <do_test>
2002136c:	2252      	movs	r2, #82	; 0x52
2002136e:	68a1      	ldr	r1, [r4, #8]
20021370:	4864      	ldr	r0, [pc, #400]	; (20021504 <run+0x618>)
20021372:	f000 f918 	bl	200215a6 <do_test>
20021376:	2253      	movs	r2, #83	; 0x53
20021378:	68a1      	ldr	r1, [r4, #8]
2002137a:	4863      	ldr	r0, [pc, #396]	; (20021508 <run+0x61c>)
2002137c:	f000 f913 	bl	200215a6 <do_test>
20021380:	2254      	movs	r2, #84	; 0x54
20021382:	68a1      	ldr	r1, [r4, #8]
20021384:	4861      	ldr	r0, [pc, #388]	; (2002150c <run+0x620>)
20021386:	f000 f90e 	bl	200215a6 <do_test>
2002138a:	4d61      	ldr	r5, [pc, #388]	; (20021510 <run+0x624>)
2002138c:	2255      	movs	r2, #85	; 0x55
2002138e:	68a1      	ldr	r1, [r4, #8]
20021390:	4628      	mov	r0, r5
20021392:	f000 f908 	bl	200215a6 <do_test>
20021396:	2256      	movs	r2, #86	; 0x56
20021398:	68a1      	ldr	r1, [r4, #8]
2002139a:	485e      	ldr	r0, [pc, #376]	; (20021514 <run+0x628>)
2002139c:	f000 f903 	bl	200215a6 <do_test>
200213a0:	2257      	movs	r2, #87	; 0x57
200213a2:	68a1      	ldr	r1, [r4, #8]
200213a4:	4628      	mov	r0, r5
200213a6:	f000 f8fe 	bl	200215a6 <do_test>
200213aa:	2258      	movs	r2, #88	; 0x58
200213ac:	68a1      	ldr	r1, [r4, #8]
200213ae:	485a      	ldr	r0, [pc, #360]	; (20021518 <run+0x62c>)
200213b0:	f000 f8f9 	bl	200215a6 <do_test>
200213b4:	2259      	movs	r2, #89	; 0x59
200213b6:	68a1      	ldr	r1, [r4, #8]
200213b8:	4858      	ldr	r0, [pc, #352]	; (2002151c <run+0x630>)
200213ba:	f000 f8f4 	bl	200215a6 <do_test>
200213be:	225a      	movs	r2, #90	; 0x5a
200213c0:	6a21      	ldr	r1, [r4, #32]
200213c2:	4857      	ldr	r0, [pc, #348]	; (20021520 <run+0x634>)
200213c4:	f000 f8ef 	bl	200215a6 <do_test>
200213c8:	225b      	movs	r2, #91	; 0x5b
200213ca:	6a21      	ldr	r1, [r4, #32]
200213cc:	4855      	ldr	r0, [pc, #340]	; (20021524 <run+0x638>)
200213ce:	f000 f8ea 	bl	200215a6 <do_test>
200213d2:	225c      	movs	r2, #92	; 0x5c
200213d4:	68a1      	ldr	r1, [r4, #8]
200213d6:	4854      	ldr	r0, [pc, #336]	; (20021528 <run+0x63c>)
200213d8:	f000 f8e5 	bl	200215a6 <do_test>
200213dc:	225d      	movs	r2, #93	; 0x5d
200213de:	6a21      	ldr	r1, [r4, #32]
200213e0:	4852      	ldr	r0, [pc, #328]	; (2002152c <run+0x640>)
200213e2:	f000 f8e0 	bl	200215a6 <do_test>
200213e6:	225e      	movs	r2, #94	; 0x5e
200213e8:	6a21      	ldr	r1, [r4, #32]
200213ea:	4851      	ldr	r0, [pc, #324]	; (20021530 <run+0x644>)
200213ec:	f000 f8db 	bl	200215a6 <do_test>
200213f0:	225f      	movs	r2, #95	; 0x5f
200213f2:	68a1      	ldr	r1, [r4, #8]
200213f4:	484f      	ldr	r0, [pc, #316]	; (20021534 <run+0x648>)
200213f6:	f000 f8d6 	bl	200215a6 <do_test>
200213fa:	2260      	movs	r2, #96	; 0x60
200213fc:	68a1      	ldr	r1, [r4, #8]
200213fe:	484e      	ldr	r0, [pc, #312]	; (20021538 <run+0x64c>)
20021400:	f000 f8d1 	bl	200215a6 <do_test>
20021404:	2261      	movs	r2, #97	; 0x61
20021406:	68a1      	ldr	r1, [r4, #8]
20021408:	484c      	ldr	r0, [pc, #304]	; (2002153c <run+0x650>)
2002140a:	f000 f8cc 	bl	200215a6 <do_test>
2002140e:	2262      	movs	r2, #98	; 0x62
20021410:	68a1      	ldr	r1, [r4, #8]
20021412:	484b      	ldr	r0, [pc, #300]	; (20021540 <run+0x654>)
20021414:	f000 f8c7 	bl	200215a6 <do_test>
20021418:	2263      	movs	r2, #99	; 0x63
2002141a:	6a21      	ldr	r1, [r4, #32]
2002141c:	4849      	ldr	r0, [pc, #292]	; (20021544 <run+0x658>)
2002141e:	f000 f8c2 	bl	200215a6 <do_test>
20021422:	2264      	movs	r2, #100	; 0x64
20021424:	6a21      	ldr	r1, [r4, #32]
20021426:	4848      	ldr	r0, [pc, #288]	; (20021548 <run+0x65c>)
20021428:	f000 f8bd 	bl	200215a6 <do_test>
2002142c:	2265      	movs	r2, #101	; 0x65
2002142e:	6a21      	ldr	r1, [r4, #32]
20021430:	4846      	ldr	r0, [pc, #280]	; (2002154c <run+0x660>)
20021432:	f000 f8b8 	bl	200215a6 <do_test>
20021436:	2266      	movs	r2, #102	; 0x66
20021438:	6a21      	ldr	r1, [r4, #32]
2002143a:	4845      	ldr	r0, [pc, #276]	; (20021550 <run+0x664>)
2002143c:	f000 f8b3 	bl	200215a6 <do_test>
20021440:	2267      	movs	r2, #103	; 0x67
20021442:	6a21      	ldr	r1, [r4, #32]
20021444:	4843      	ldr	r0, [pc, #268]	; (20021554 <run+0x668>)
20021446:	f000 f8ae 	bl	200215a6 <do_test>
2002144a:	2268      	movs	r2, #104	; 0x68
2002144c:	6a21      	ldr	r1, [r4, #32]
2002144e:	4842      	ldr	r0, [pc, #264]	; (20021558 <run+0x66c>)
20021450:	f000 f8a9 	bl	200215a6 <do_test>
20021454:	2269      	movs	r2, #105	; 0x69
20021456:	68a1      	ldr	r1, [r4, #8]
20021458:	4840      	ldr	r0, [pc, #256]	; (2002155c <run+0x670>)
2002145a:	f000 f8a4 	bl	200215a6 <do_test>
2002145e:	226a      	movs	r2, #106	; 0x6a
20021460:	68a1      	ldr	r1, [r4, #8]
20021462:	483f      	ldr	r0, [pc, #252]	; (20021560 <run+0x674>)
20021464:	f000 f89f 	bl	200215a6 <do_test>
20021468:	226b      	movs	r2, #107	; 0x6b
2002146a:	68a1      	ldr	r1, [r4, #8]
2002146c:	483d      	ldr	r0, [pc, #244]	; (20021564 <run+0x678>)
2002146e:	f000 f89a 	bl	200215a6 <do_test>
20021472:	226c      	movs	r2, #108	; 0x6c
20021474:	68a1      	ldr	r1, [r4, #8]
20021476:	483c      	ldr	r0, [pc, #240]	; (20021568 <run+0x67c>)
20021478:	f000 f895 	bl	200215a6 <do_test>
2002147c:	226d      	movs	r2, #109	; 0x6d
2002147e:	68a1      	ldr	r1, [r4, #8]
20021480:	483a      	ldr	r0, [pc, #232]	; (2002156c <run+0x680>)
20021482:	f000 f890 	bl	200215a6 <do_test>
20021486:	226e      	movs	r2, #110	; 0x6e
20021488:	68a1      	ldr	r1, [r4, #8]
2002148a:	4839      	ldr	r0, [pc, #228]	; (20021570 <run+0x684>)
2002148c:	f000 f88b 	bl	200215a6 <do_test>
20021490:	226f      	movs	r2, #111	; 0x6f
20021492:	68a1      	ldr	r1, [r4, #8]
20021494:	4837      	ldr	r0, [pc, #220]	; (20021574 <run+0x688>)
20021496:	f000 f886 	bl	200215a6 <do_test>
2002149a:	2270      	movs	r2, #112	; 0x70
2002149c:	68a1      	ldr	r1, [r4, #8]
2002149e:	4836      	ldr	r0, [pc, #216]	; (20021578 <run+0x68c>)
200214a0:	f000 f881 	bl	200215a6 <do_test>
200214a4:	2271      	movs	r2, #113	; 0x71
200214a6:	68a1      	ldr	r1, [r4, #8]
200214a8:	4834      	ldr	r0, [pc, #208]	; (2002157c <run+0x690>)
200214aa:	f000 f87c 	bl	200215a6 <do_test>
200214ae:	2272      	movs	r2, #114	; 0x72
200214b0:	68a1      	ldr	r1, [r4, #8]
200214b2:	4833      	ldr	r0, [pc, #204]	; (20021580 <run+0x694>)
200214b4:	f000 f877 	bl	200215a6 <do_test>
200214b8:	2273      	movs	r2, #115	; 0x73
200214ba:	68a1      	ldr	r1, [r4, #8]
200214bc:	4831      	ldr	r0, [pc, #196]	; (20021584 <run+0x698>)
200214be:	f000 f872 	bl	200215a6 <do_test>
200214c2:	bd30      	pop	{r4, r5, pc}
200214c4:	20020b8b 	.word	0x20020b8b
200214c8:	20020bd1 	.word	0x20020bd1
200214cc:	20020bfd 	.word	0x20020bfd
200214d0:	20020c3d 	.word	0x20020c3d
200214d4:	20020c7d 	.word	0x20020c7d
200214d8:	20020ccd 	.word	0x20020ccd
200214dc:	20020cfd 	.word	0x20020cfd
200214e0:	200205a1 	.word	0x200205a1
200214e4:	200205bd 	.word	0x200205bd
200214e8:	200205d9 	.word	0x200205d9
200214ec:	20020601 	.word	0x20020601
200214f0:	20020639 	.word	0x20020639
200214f4:	20020661 	.word	0x20020661
200214f8:	20020699 	.word	0x20020699
200214fc:	200206a5 	.word	0x200206a5
20021500:	200206b1 	.word	0x200206b1
20021504:	200206cd 	.word	0x200206cd
20021508:	200206e9 	.word	0x200206e9
2002150c:	20020705 	.word	0x20020705
20021510:	20020729 	.word	0x20020729
20021514:	20020749 	.word	0x20020749
20021518:	2002076d 	.word	0x2002076d
2002151c:	2002077d 	.word	0x2002077d
20021520:	20020791 	.word	0x20020791
20021524:	2002079d 	.word	0x2002079d
20021528:	200207b9 	.word	0x200207b9
2002152c:	20020c4f 	.word	0x20020c4f
20021530:	20020c97 	.word	0x20020c97
20021534:	20020929 	.word	0x20020929
20021538:	2002096d 	.word	0x2002096d
2002153c:	200209b1 	.word	0x200209b1
20021540:	20020a09 	.word	0x20020a09
20021544:	20020dd9 	.word	0x20020dd9
20021548:	20020de9 	.word	0x20020de9
2002154c:	20020df9 	.word	0x20020df9
20021550:	20020e29 	.word	0x20020e29
20021554:	20020e49 	.word	0x20020e49
20021558:	20020e69 	.word	0x20020e69
2002155c:	200207c5 	.word	0x200207c5
20021560:	200207e1 	.word	0x200207e1
20021564:	200207fd 	.word	0x200207fd
20021568:	20020821 	.word	0x20020821
2002156c:	20020845 	.word	0x20020845
20021570:	2002086d 	.word	0x2002086d
20021574:	20020891 	.word	0x20020891
20021578:	200208b9 	.word	0x200208b9
2002157c:	200208dd 	.word	0x200208dd
20021580:	20020e9d 	.word	0x20020e9d
20021584:	20020ecd 	.word	0x20020ecd

20021588 <memset>:
20021588:	4402      	add	r2, r0
2002158a:	4290      	cmp	r0, r2
2002158c:	d20a      	bcs.n	200215a4 <memset+0x1c>
2002158e:	b410      	push	{r4}
20021590:	4604      	mov	r4, r0
20021592:	b2c9      	uxtb	r1, r1
20021594:	4623      	mov	r3, r4
20021596:	f803 1b01 	strb.w	r1, [r3], #1
2002159a:	461c      	mov	r4, r3
2002159c:	429a      	cmp	r2, r3
2002159e:	d1f9      	bne.n	20021594 <memset+0xc>
200215a0:	bc10      	pop	{r4}
200215a2:	4770      	bx	lr
200215a4:	4770      	bx	lr

200215a6 <do_test>:
200215a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
200215aa:	4607      	mov	r7, r0
200215ac:	460e      	mov	r6, r1
200215ae:	4614      	mov	r4, r2
200215b0:	4b16      	ldr	r3, [pc, #88]	; (2002160c <do_test+0x66>)
200215b2:	2200      	movs	r2, #0
200215b4:	601a      	str	r2, [r3, #0]
200215b6:	609a      	str	r2, [r3, #8]
200215b8:	2205      	movs	r2, #5
200215ba:	601a      	str	r2, [r3, #0]
200215bc:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
200215c0:	605a      	str	r2, [r3, #4]
200215c2:	689b      	ldr	r3, [r3, #8]
200215c4:	b923      	cbnz	r3, 200215d0 <do_test+0x2a>
200215c6:	4a11      	ldr	r2, [pc, #68]	; (2002160c <do_test+0x66>)
200215c8:	bf00      	nop
200215ca:	6893      	ldr	r3, [r2, #8]
200215cc:	2b00      	cmp	r3, #0
200215ce:	d0fb      	beq.n	200215c8 <do_test+0x22>
200215d0:	f8df 8038 	ldr.w	r8, [pc, #56]	; 2002160c <do_test+0x66>
200215d4:	f8d8 5008 	ldr.w	r5, [r8, #8]
200215d8:	2300      	movs	r3, #0
200215da:	6033      	str	r3, [r6, #0]
200215dc:	47b8      	blx	r7
200215de:	0064      	lsls	r4, r4, #1
200215e0:	6833      	ldr	r3, [r6, #0]
200215e2:	f8df 9030 	ldr.w	r9, [pc, #48]	; 20021614 <do_test+0x6e>
200215e6:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
200215ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
200215ee:	6033      	str	r3, [r6, #0]
200215f0:	47b8      	blx	r7
200215f2:	6833      	ldr	r3, [r6, #0]
200215f4:	3401      	adds	r4, #1
200215f6:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
200215fa:	f8d8 1008 	ldr.w	r1, [r8, #8]
200215fe:	4a04      	ldr	r2, [pc, #16]	; (20021610 <do_test+0x6a>)
20021600:	6813      	ldr	r3, [r2, #0]
20021602:	442b      	add	r3, r5
20021604:	1a5b      	subs	r3, r3, r1
20021606:	6013      	str	r3, [r2, #0]
20021608:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2002160c:	e000e010 	.word	0xe000e010
20021610:	20021788 	.word	0x20021788
20021614:	2002178c 	.word	0x2002178c

20021618 <main>:
20021618:	b500      	push	{lr}
2002161a:	f7ff fc67 	bl	20020eec <run>
2002161e:	bf00      	nop
20021620:	e7fd      	b.n	2002161e <main+0x6>
20021622:	bf00      	nop

20021624 <NMI_IRQ_Handler>:
20021624:	e7fe      	b.n	20021624 <NMI_IRQ_Handler>

20021626 <HardFault_IRQ_Handler>:
20021626:	e7fe      	b.n	20021626 <HardFault_IRQ_Handler>

20021628 <MemManage_IRQ_Handler>:
20021628:	e7fe      	b.n	20021628 <MemManage_IRQ_Handler>

2002162a <BusFault_IRQ_Handler>:
2002162a:	e7fe      	b.n	2002162a <BusFault_IRQ_Handler>

2002162c <UsageFault_IRQ_Handler>:
2002162c:	e7fe      	b.n	2002162c <UsageFault_IRQ_Handler>

2002162e <Reserved1_IRQ_Handler>:
2002162e:	e7fe      	b.n	2002162e <Reserved1_IRQ_Handler>

20021630 <Reserved2_IRQ_Handler>:
20021630:	e7fe      	b.n	20021630 <Reserved2_IRQ_Handler>

20021632 <Reserved3_IRQ_Handler>:
20021632:	e7fe      	b.n	20021632 <Reserved3_IRQ_Handler>

20021634 <Reserved4_IRQ_Handler>:
20021634:	e7fe      	b.n	20021634 <Reserved4_IRQ_Handler>

20021636 <SVCall_IRQ_Handler>:
20021636:	e7fe      	b.n	20021636 <SVCall_IRQ_Handler>

20021638 <Debug_IRQ_Handler>:
20021638:	e7fe      	b.n	20021638 <Debug_IRQ_Handler>

2002163a <Reserved5_IRQ_Handler>:
2002163a:	e7fe      	b.n	2002163a <Reserved5_IRQ_Handler>

2002163c <PendSV_IRQ_Handler>:
2002163c:	e7fe      	b.n	2002163c <PendSV_IRQ_Handler>

2002163e <SysTick_IRQ_Handler>:
2002163e:	e7fe      	b.n	2002163e <SysTick_IRQ_Handler>

20021640 <WWDG_IRQ_Handler>:
20021640:	e7fe      	b.n	20021640 <WWDG_IRQ_Handler>

20021642 <PVD_IRQ_Handler>:
20021642:	e7fe      	b.n	20021642 <PVD_IRQ_Handler>

20021644 <TAMP_STAMP_IRQ_Handler>:
20021644:	e7fe      	b.n	20021644 <TAMP_STAMP_IRQ_Handler>

20021646 <RTC_WKUP_IRQ_Handler>:
20021646:	e7fe      	b.n	20021646 <RTC_WKUP_IRQ_Handler>

20021648 <FLASH_IRQ_Handler>:
20021648:	e7fe      	b.n	20021648 <FLASH_IRQ_Handler>

2002164a <RCC_IRQ_Handler>:
2002164a:	e7fe      	b.n	2002164a <RCC_IRQ_Handler>

2002164c <EXTI0_IRQ_Handler>:
2002164c:	e7fe      	b.n	2002164c <EXTI0_IRQ_Handler>

2002164e <EXTI1_IRQ_Handler>:
2002164e:	e7fe      	b.n	2002164e <EXTI1_IRQ_Handler>

20021650 <EXTI2_IRQ_Handler>:
20021650:	e7fe      	b.n	20021650 <EXTI2_IRQ_Handler>

20021652 <EXTI3_IRQ_Handler>:
20021652:	e7fe      	b.n	20021652 <EXTI3_IRQ_Handler>

20021654 <EXTI4_IRQ_Handler>:
20021654:	e7fe      	b.n	20021654 <EXTI4_IRQ_Handler>

20021656 <DMA1_Stream0_IRQ_Handler>:
20021656:	e7fe      	b.n	20021656 <DMA1_Stream0_IRQ_Handler>

20021658 <DMA1_Stream1_IRQ_Handler>:
20021658:	e7fe      	b.n	20021658 <DMA1_Stream1_IRQ_Handler>

2002165a <DMA1_Stream2_IRQ_Handler>:
2002165a:	e7fe      	b.n	2002165a <DMA1_Stream2_IRQ_Handler>

2002165c <DMA1_Stream3_IRQ_Handler>:
2002165c:	e7fe      	b.n	2002165c <DMA1_Stream3_IRQ_Handler>

2002165e <DMA1_Stream4_IRQ_Handler>:
2002165e:	e7fe      	b.n	2002165e <DMA1_Stream4_IRQ_Handler>

20021660 <DMA1_Stream5_IRQ_Handler>:
20021660:	e7fe      	b.n	20021660 <DMA1_Stream5_IRQ_Handler>

20021662 <DMA1_Stream6_IRQ_Handler>:
20021662:	e7fe      	b.n	20021662 <DMA1_Stream6_IRQ_Handler>

20021664 <ADC_IRQ_Handler>:
20021664:	e7fe      	b.n	20021664 <ADC_IRQ_Handler>

20021666 <CAN1_TX_IRQ_Handler>:
20021666:	e7fe      	b.n	20021666 <CAN1_TX_IRQ_Handler>

20021668 <CAN1_RX0_IRQ_Handler>:
20021668:	e7fe      	b.n	20021668 <CAN1_RX0_IRQ_Handler>

2002166a <CAN1_RX1_IRQ_Handler>:
2002166a:	e7fe      	b.n	2002166a <CAN1_RX1_IRQ_Handler>

2002166c <CAN1_SCE_IRQ_Handler>:
2002166c:	e7fe      	b.n	2002166c <CAN1_SCE_IRQ_Handler>

2002166e <EXTI9_5_IRQ_Handler>:
2002166e:	e7fe      	b.n	2002166e <EXTI9_5_IRQ_Handler>

20021670 <TIM1_BRK_TIM9_IRQ_Handler>:
20021670:	e7fe      	b.n	20021670 <TIM1_BRK_TIM9_IRQ_Handler>

20021672 <TIM1_UP_TIM10_IRQ_Handler>:
20021672:	e7fe      	b.n	20021672 <TIM1_UP_TIM10_IRQ_Handler>

20021674 <TIM1_TRG_COM_TIM11_IRQ_Handler>:
20021674:	e7fe      	b.n	20021674 <TIM1_TRG_COM_TIM11_IRQ_Handler>

20021676 <TIM1_CC_IRQ_Handler>:
20021676:	e7fe      	b.n	20021676 <TIM1_CC_IRQ_Handler>

20021678 <TIM2_IRQ_Handler>:
20021678:	e7fe      	b.n	20021678 <TIM2_IRQ_Handler>

2002167a <TIM3_IRQ_Handler>:
2002167a:	e7fe      	b.n	2002167a <TIM3_IRQ_Handler>

2002167c <TIM4_IRQ_Handler>:
2002167c:	e7fe      	b.n	2002167c <TIM4_IRQ_Handler>

2002167e <I2C1_EV_IRQ_Handler>:
2002167e:	e7fe      	b.n	2002167e <I2C1_EV_IRQ_Handler>

20021680 <I2C1_ER_IRQ_Handler>:
20021680:	e7fe      	b.n	20021680 <I2C1_ER_IRQ_Handler>

20021682 <I2C2_EV_IRQ_Handler>:
20021682:	e7fe      	b.n	20021682 <I2C2_EV_IRQ_Handler>

20021684 <I2C2_ER_IRQ_Handler>:
20021684:	e7fe      	b.n	20021684 <I2C2_ER_IRQ_Handler>

20021686 <SPI1_IRQ_Handler>:
20021686:	e7fe      	b.n	20021686 <SPI1_IRQ_Handler>

20021688 <SPI2_IRQ_Handler>:
20021688:	e7fe      	b.n	20021688 <SPI2_IRQ_Handler>

2002168a <USART1_IRQ_Handler>:
2002168a:	e7fe      	b.n	2002168a <USART1_IRQ_Handler>

2002168c <USART2_IRQ_Handler>:
2002168c:	e7fe      	b.n	2002168c <USART2_IRQ_Handler>

2002168e <USART3_IRQ_Handler>:
2002168e:	e7fe      	b.n	2002168e <USART3_IRQ_Handler>

20021690 <EXTI15_10_IRQ_Handler>:
20021690:	e7fe      	b.n	20021690 <EXTI15_10_IRQ_Handler>

20021692 <RTC_Alarm_IRQ_Handler>:
20021692:	e7fe      	b.n	20021692 <RTC_Alarm_IRQ_Handler>

20021694 <OTG_FS_WKUP_IRQ_Handler>:
20021694:	e7fe      	b.n	20021694 <OTG_FS_WKUP_IRQ_Handler>

20021696 <TIM8_BRK_TIM12_IRQ_Handler>:
20021696:	e7fe      	b.n	20021696 <TIM8_BRK_TIM12_IRQ_Handler>

20021698 <TIM8_UP_TIM13_IRQ_Handler>:
20021698:	e7fe      	b.n	20021698 <TIM8_UP_TIM13_IRQ_Handler>

2002169a <TIM8_TRG_COM_TIM14_IRQ_Handler>:
2002169a:	e7fe      	b.n	2002169a <TIM8_TRG_COM_TIM14_IRQ_Handler>

2002169c <TIM8_CC_IRQ_Handler>:
2002169c:	e7fe      	b.n	2002169c <TIM8_CC_IRQ_Handler>

2002169e <DMA1_Stream7_IRQ_Handler>:
2002169e:	e7fe      	b.n	2002169e <DMA1_Stream7_IRQ_Handler>

200216a0 <FMC_IRQ_Handler>:
200216a0:	e7fe      	b.n	200216a0 <FMC_IRQ_Handler>

200216a2 <SDMMC1_IRQ_Handler>:
200216a2:	e7fe      	b.n	200216a2 <SDMMC1_IRQ_Handler>

200216a4 <TIM5_IRQ_Handler>:
200216a4:	e7fe      	b.n	200216a4 <TIM5_IRQ_Handler>

200216a6 <SPI3_IRQ_Handler>:
200216a6:	e7fe      	b.n	200216a6 <SPI3_IRQ_Handler>

200216a8 <UART4_IRQ_Handler>:
200216a8:	e7fe      	b.n	200216a8 <UART4_IRQ_Handler>

200216aa <UART5_IRQ_Handler>:
200216aa:	e7fe      	b.n	200216aa <UART5_IRQ_Handler>

200216ac <TIM6_DAC_IRQ_Handler>:
200216ac:	e7fe      	b.n	200216ac <TIM6_DAC_IRQ_Handler>

200216ae <TIM7_IRQ_Handler>:
200216ae:	e7fe      	b.n	200216ae <TIM7_IRQ_Handler>

200216b0 <DMA2_Stream0_IRQ_Handler>:
200216b0:	e7fe      	b.n	200216b0 <DMA2_Stream0_IRQ_Handler>

200216b2 <DMA2_Stream1_IRQ_Handler>:
200216b2:	e7fe      	b.n	200216b2 <DMA2_Stream1_IRQ_Handler>

200216b4 <DMA2_Stream2_IRQ_Handler>:
200216b4:	e7fe      	b.n	200216b4 <DMA2_Stream2_IRQ_Handler>

200216b6 <DMA2_Stream3_IRQ_Handler>:
200216b6:	e7fe      	b.n	200216b6 <DMA2_Stream3_IRQ_Handler>

200216b8 <DMA2_Stream4_IRQ_Handler>:
200216b8:	e7fe      	b.n	200216b8 <DMA2_Stream4_IRQ_Handler>

200216ba <ETH_IRQ_Handler>:
200216ba:	e7fe      	b.n	200216ba <ETH_IRQ_Handler>

200216bc <ETH_WKUP_IRQ_Handler>:
200216bc:	e7fe      	b.n	200216bc <ETH_WKUP_IRQ_Handler>

200216be <CAN2_TX_IRQ_Handler>:
200216be:	e7fe      	b.n	200216be <CAN2_TX_IRQ_Handler>

200216c0 <CAN2_RX0_IRQ_Handler>:
200216c0:	e7fe      	b.n	200216c0 <CAN2_RX0_IRQ_Handler>

200216c2 <CAN2_RX1_IRQ_Handler>:
200216c2:	e7fe      	b.n	200216c2 <CAN2_RX1_IRQ_Handler>

200216c4 <CAN2_SCE_IRQ_Handler>:
200216c4:	e7fe      	b.n	200216c4 <CAN2_SCE_IRQ_Handler>

200216c6 <OTG_FS_IRQ_Handler>:
200216c6:	e7fe      	b.n	200216c6 <OTG_FS_IRQ_Handler>

200216c8 <DMA2_Stream5_IRQ_Handler>:
200216c8:	e7fe      	b.n	200216c8 <DMA2_Stream5_IRQ_Handler>

200216ca <DMA2_Stream6_IRQ_Handler>:
200216ca:	e7fe      	b.n	200216ca <DMA2_Stream6_IRQ_Handler>

200216cc <DMA2_Stream7_IRQ_Handler>:
200216cc:	e7fe      	b.n	200216cc <DMA2_Stream7_IRQ_Handler>

200216ce <USART6_IRQ_Handler>:
200216ce:	e7fe      	b.n	200216ce <USART6_IRQ_Handler>

200216d0 <I2C3_EV_IRQ_Handler>:
200216d0:	e7fe      	b.n	200216d0 <I2C3_EV_IRQ_Handler>

200216d2 <I2C3_ER_IRQ_Handler>:
200216d2:	e7fe      	b.n	200216d2 <I2C3_ER_IRQ_Handler>

200216d4 <OTG_HS_EP1_OUT_IRQ_Handler>:
200216d4:	e7fe      	b.n	200216d4 <OTG_HS_EP1_OUT_IRQ_Handler>

200216d6 <OTG_HS_EP1_IN_IRQ_Handler>:
200216d6:	e7fe      	b.n	200216d6 <OTG_HS_EP1_IN_IRQ_Handler>

200216d8 <OTG_HS_WKUP_IRQ_Handler>:
200216d8:	e7fe      	b.n	200216d8 <OTG_HS_WKUP_IRQ_Handler>

200216da <OTG_HS_IRQ_Handler>:
200216da:	e7fe      	b.n	200216da <OTG_HS_IRQ_Handler>

200216dc <DCMI_IRQ_Handler>:
200216dc:	e7fe      	b.n	200216dc <DCMI_IRQ_Handler>

200216de <RNG_IRQ_Handler>:
200216de:	e7fe      	b.n	200216de <RNG_IRQ_Handler>

200216e0 <FPU_IRQ_Handler>:
200216e0:	e7fe      	b.n	200216e0 <FPU_IRQ_Handler>

200216e2 <UART7_IRQ_Handler>:
200216e2:	e7fe      	b.n	200216e2 <UART7_IRQ_Handler>

200216e4 <UART8_IRQ_Handler>:
200216e4:	e7fe      	b.n	200216e4 <UART8_IRQ_Handler>

200216e6 <SPI4_IRQ_Handler>:
200216e6:	e7fe      	b.n	200216e6 <SPI4_IRQ_Handler>

200216e8 <SPI5_IRQ_Handler>:
200216e8:	e7fe      	b.n	200216e8 <SPI5_IRQ_Handler>

200216ea <SPI6_IRQ_Handler>:
200216ea:	e7fe      	b.n	200216ea <SPI6_IRQ_Handler>

200216ec <SAI1_IRQ_Handler>:
200216ec:	e7fe      	b.n	200216ec <SAI1_IRQ_Handler>

200216ee <LTDC_IRQ_Handler>:
200216ee:	e7fe      	b.n	200216ee <LTDC_IRQ_Handler>

200216f0 <LTDC_ER_IRQ_Handler>:
200216f0:	e7fe      	b.n	200216f0 <LTDC_ER_IRQ_Handler>

200216f2 <DMA2D_IRQ_Handler>:
200216f2:	e7fe      	b.n	200216f2 <DMA2D_IRQ_Handler>

200216f4 <SAI2_IRQ_Handler>:
200216f4:	e7fe      	b.n	200216f4 <SAI2_IRQ_Handler>

200216f6 <QUADSPI_IRQ_Handler>:
200216f6:	e7fe      	b.n	200216f6 <QUADSPI_IRQ_Handler>

200216f8 <LPTIM1_IRQ_Handler>:
200216f8:	e7fe      	b.n	200216f8 <LPTIM1_IRQ_Handler>

200216fa <CEC_IRQ_Handler>:
200216fa:	e7fe      	b.n	200216fa <CEC_IRQ_Handler>

200216fc <I2C4_EV_IRQ_Handler>:
200216fc:	e7fe      	b.n	200216fc <I2C4_EV_IRQ_Handler>

200216fe <I2C4_ER_IRQ_Handler>:
200216fe:	e7fe      	b.n	200216fe <I2C4_ER_IRQ_Handler>

20021700 <SPDIF_RX_IRQ_Handler>:
20021700:	e7fe      	b.n	20021700 <SPDIF_RX_IRQ_Handler>

20021702 <DFSDM1_FLT0_IRQ_Handler>:
20021702:	e7fe      	b.n	20021702 <DFSDM1_FLT0_IRQ_Handler>

20021704 <DFSDM1_FLT1_IRQ_Handler>:
20021704:	e7fe      	b.n	20021704 <DFSDM1_FLT1_IRQ_Handler>

20021706 <DFSDM1_FLT2_IRQ_Handler>:
20021706:	e7fe      	b.n	20021706 <DFSDM1_FLT2_IRQ_Handler>

20021708 <DFSDM1_FLT3_IRQ_Handler>:
20021708:	e7fe      	b.n	20021708 <DFSDM1_FLT3_IRQ_Handler>

2002170a <SDMMC2_IRQ_Handler>:
2002170a:	e7fe      	b.n	2002170a <SDMMC2_IRQ_Handler>

2002170c <CAN3_TX_IRQ_Handler>:
2002170c:	e7fe      	b.n	2002170c <CAN3_TX_IRQ_Handler>

2002170e <CAN3_RX0_IRQ_Handler>:
2002170e:	e7fe      	b.n	2002170e <CAN3_RX0_IRQ_Handler>

20021710 <CAN3_RX1_IRQ_Handler>:
20021710:	e7fe      	b.n	20021710 <CAN3_RX1_IRQ_Handler>

20021712 <CAN3_SCE_IRQ_Handler>:
20021712:	e7fe      	b.n	20021712 <CAN3_SCE_IRQ_Handler>

20021714 <JPEG_IRQ_Handler>:
20021714:	e7fe      	b.n	20021714 <JPEG_IRQ_Handler>

20021716 <MDIOS_IRQ_Handler>:
20021716:	e7fe      	b.n	20021716 <MDIOS_IRQ_Handler>

20021718 <init>:
20021718:	b500      	push	{lr}
2002171a:	4a08      	ldr	r2, [pc, #32]	; (2002173c <init+0x24>)
2002171c:	4b08      	ldr	r3, [pc, #32]	; (20021740 <init+0x28>)
2002171e:	429a      	cmp	r2, r3
20021720:	d004      	beq.n	2002172c <init+0x14>
20021722:	2100      	movs	r1, #0
20021724:	f803 1b01 	strb.w	r1, [r3], #1
20021728:	4293      	cmp	r3, r2
2002172a:	d1fb      	bne.n	20021724 <init+0xc>
2002172c:	4a05      	ldr	r2, [pc, #20]	; (20021744 <init+0x2c>)
2002172e:	4b06      	ldr	r3, [pc, #24]	; (20021748 <init+0x30>)
20021730:	609a      	str	r2, [r3, #8]
20021732:	f7ff ff71 	bl	20021618 <main>
20021736:	f85d fb04 	ldr.w	pc, [sp], #4
2002173a:	bf00      	nop
2002173c:	20021b2c 	.word	0x20021b2c
20021740:	20021764 	.word	0x20021764
20021744:	20020000 	.word	0x20020000
20021748:	e000ed00 	.word	0xe000ed00

Disassembly of section .rodata:

2002174c <.rodata>:
2002174c:	00000006 	.word	0x00000006
20021750:	00000002 	.word	0x00000002
20021754:	3e000000 	.word	0x3e000000
20021758:	00000019 	.word	0x00000019
2002175c:	3e000000 	.word	0x3e000000
20021760:	00000019 	.word	0x00000019

Disassembly of section .bss:

20021764 <guard variable for run::serial2_config>:
	...

2002176c <run::serial2_config>:
2002176c:	00000000                                ....

20021770 <guard variable for run::timer1_prescale>:
	...

20021778 <run::timer1_prescale>:
20021778:	00000000                                ....

2002177c <guard variable for run::gpio1_words_3>:
	...

20021784 <run::gpio1_words_3>:
20021784:	00000000                                ....

20021788 <elapsed_time>:
20021788:	00000000                                ....

2002178c <results>:
	...
