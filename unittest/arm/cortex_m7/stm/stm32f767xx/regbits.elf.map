
Allocating common symbols
Common symbol       size              file

results             0x3a0             main.o

Discarded input sections

 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 regbits.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .group         0x0000000000000000        0x8 main.o
 .debug_macro   0x0000000000000000       0x22 main.o
 .debug_macro   0x0000000000000000       0x51 main.o
 .debug_macro   0x0000000000000000       0xef main.o
 .debug_macro   0x0000000000000000       0x6a main.o
 .debug_macro   0x0000000000000000      0x1df main.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .group         0x0000000000000000        0x8 stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000      0xa60 stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0x22 stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0x8e stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0x51 stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0xef stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0x6a stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000      0x1df stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0x3b stm32f767xx_ram_init.o
 .debug_macro   0x0000000000000000       0x50 stm32f767xx_ram_init.o

Memory Configuration

Name             Origin             Length             Attributes
ITCM_RAM         0x0000000000000000 0x0000000000004000 xrw
DTCM_RAM         0x0000000020000000 0x0000000000020000 xrw
SRAM1            0x0000000020020000 0x000000000005c000 xrw
SRAM2            0x000000002007c000 0x0000000000004000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD regbits.o
LOAD main.o
LOAD stm32f767xx_ram_init.o
                0x0000000000000400                PROVIDE (MINIMUM_STACK_SIZE, 0x400)
                0x0000000000000000                . = ORIGIN (ITCM_RAM)

.fast_text
                0x0000000020000000                . = ORIGIN (DTCM_RAM)

.fast_data
                0x0000000020020000                . = ORIGIN (SRAM1)

.text           0x0000000020020000     0x184c
 *(.vectors)
 .vectors       0x0000000020020000      0x1f0 stm32f767xx_ram_init.o
                0x0000000020020000                INTERRUPT_VECTORS
 *(.text)
 .text          0x00000000200201f0     0x1490 regbits.o
                0x00000000200201f0                zero_reg()
                0x00000000200201fc                zero_array()
                0x0000000020020208                set_singl_bits_operator()
                0x0000000020020218                set_singl_bits_method()
                0x0000000020020228                clr_singl_bits_operator()
                0x0000000020020238                clr_singl_bits_method()
                0x0000000020020248                set_singl_mskd_operator()
                0x0000000020020258                set_singl_mskd_method()
                0x0000000020020268                clr_singl_mskd_operator()
                0x0000000020020278                clr_singl_mskd_method()
                0x0000000020020288                equ_singl_bits_operator()
                0x0000000020020294                equ_singl_bits_method()
                0x00000000200202a0                equ_singl_mskd_operator()
                0x00000000200202ac                equ_singl_mskd_method()
                0x00000000200202b8                flp_singl_bits_operator()
                0x00000000200202c8                flp_singl_bits_method()
                0x00000000200202d8                flp_singl_mskd_operator()
                0x00000000200202e8                flp_singl_mskd_method()
                0x00000000200202f8                ins_singl_mskd_operator()
                0x000000002002030c                ins_singl_mskd_method()
                0x0000000020020320                set_multi_bits_operator()
                0x0000000020020330                set_multi_bits_method()
                0x0000000020020340                ins_multi_mskd_operator()
                0x000000002002035c                ins_multi_mskd_method()
                0x0000000020020378                equ_multi_bits_operator()
                0x0000000020020384                equ_multi_bits_method()
                0x0000000020020390                equ_multi_mskd_operator()
                0x00000000200203a0                equ_multi_mskd_method()
                0x00000000200203b0                equ_bits_mskd_operator()
                0x00000000200203bc                equ_bits_mskd_method()
                0x00000000200203c8                equ_mskd_bits_operator()
                0x00000000200203d4                equ_mskd_bits_method()
                0x00000000200203e0                equ_bits_var()
                0x00000000200203f0                equ_mskd_var()
                0x0000000020020404                cmp_equ_zero()
                0x000000002002042c                cmp_neq_zero()
                0x000000002002044c                cmp_equ_bits()
                0x0000000020020474                cmp_neq_bits()
                0x0000000020020494                cmp_equ_multi_bits()
                0x00000000200204c0                cmp_neq_multi_bits()
                0x00000000200204ec                cmp_equ_mskd()
                0x0000000020020534                cmp_neq_mskd()
                0x000000002002056c                cmp_equ_reg()
                0x0000000020020594                cmp_neq_reg()
                0x00000000200205b4                constexpr_bits_array()
                0x00000000200205c8                runtime_bits_array()
                0x00000000200205f4                prescaler_low()
                0x0000000020020610                prescaler_high()
                0x000000002002062c                reg_mskd_lss()
                0x0000000020020660                reg_mskd_leq()
                0x000000002002069c                reg_mskd_gtr()
                0x00000000200206cc                reg_mskd_geq()
                0x0000000020020714                pos_cmp_eq()
                0x0000000020020720                pos_cmp_ne()
                0x000000002002072c                bits_extract_eq()
                0x000000002002074c                mskd_extract_eq()
                0x000000002002076c                mskd_extract_ne()
                0x000000002002078c                mskd_extract_lss()
                0x00000000200207b8                mskd_extract_leq()
                0x00000000200207e0                mskd_extract_gtr()
                0x000000002002080c                set_bits_global()
                0x000000002002081c                ins_mskd_global()
                0x0000000020020830                assign_array_global()
                0x000000002002083c                shifted_global()
                0x0000000020020858                assign_register_global()
                0x0000000020020864                copy_bits_equ()
                0x0000000020020884                copy_bits_neq()
                0x00000000200208a4                copy_mskd_equ()
                0x00000000200208d0                copy_mskd_neq()
                0x00000000200208fc                copy_mskd_lss()
                0x0000000020020930                copy_mskd_leq()
                0x000000002002095c                copy_mskd_gtr()
                0x000000002002098c                copy_mskd_geq()
                0x00000000200209c0                copy_shifted()
                0x00000000200209ec                bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x00000000200209fc                call_bits_val_var()
                0x0000000020020a06                call_bits_val_const()
                0x0000000020020a10                call_bits_val_global()
                0x0000000020020a1a                bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000020020a2c                call_bits_ref_var()
                0x0000000020020a3e                call_bits_ref_const()
                0x0000000020020a50                call_bits_ref_global()
                0x0000000020020a62                mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020a74                call_mskd_val_var()
                0x0000000020020a80                call_mskd_val_const()
                0x0000000020020a8c                call_mskd_val_global()
                0x0000000020020a98                mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)
                0x0000000020020aac                call_mskd_ref_var()
                0x0000000020020ac8                call_mskd_ref_const()
                0x0000000020020ade                call_mskd_ref_global()
                0x0000000020020af4                periph_bits(mcu::Serial*)
                0x0000000020020afe                call_periph_bits()
                0x0000000020020b0c                periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000020020b14                call_periph_bits_val()
                0x0000000020020b24                reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)
                0x0000000020020b2c                call_reg_bits_val()
                0x0000000020020b3c                periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000020020b46                call_periph_bits_ref()
                0x0000000020020b60                reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)
                0x0000000020020b6a                call_reg_bits_ref()
                0x0000000020020b84                periph_mskd(mcu::Serial*)
                0x0000000020020b92                call_periph_mskd()
                0x0000000020020ba0                periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020baa                call_periph_mskd_val()
                0x0000000020020bbc                reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020bc6                call_reg_mskd_val()
                0x0000000020020bd8                periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020be2                call_periph_mskd_ref()
                0x0000000020020bf4                reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020bfe                call_reg_mskd_ref()
                0x0000000020020c10                return_bits()
                0x0000000020020c14                call_return_bits()
                0x0000000020020c38                return_mskd()
                0x0000000020020c42                call_return_mskd()
                0x0000000020020c74                return_reg()
                0x0000000020020c88                call_return_reg()
                0x0000000020020cac                return_periph()
                0x0000000020020cb8                call_return_periph()
                0x0000000020020cdc                pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)
                0x0000000020020d00                call_pos_val()
                0x0000000020020d10                call_pos_val_global()
                0x0000000020020d1a                pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)
                0x0000000020020d40                call_pos_ref()
                0x0000000020020d5a                call_pos_ref_global()
                0x0000000020020d6c                runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020d7c                call_range_val(unsigned int)
                0x0000000020020d8c                call_range_val_port()
                0x0000000020020d96                runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)
                0x0000000020020da8                call_range_ref(unsigned int)
                0x0000000020020db8                call_range_ref_port()
                0x0000000020020dc2                check_array_range_pass(unsigned int)
                0x0000000020020ddc                check_array_range_fail(unsigned int)
                0x0000000020020df4                check_bits_range_pass(unsigned int)
                0x0000000020020e0c                check_bits_range_fail(unsigned int)
                0x0000000020020e24                check_mskd_range_pass(unsigned int)
                0x0000000020020e3c                check_mskd_range_fail(unsigned int)
                0x0000000020020e54                bits_extract_ne()
                0x0000000020020e74                mskd_extract_geq()
                0x0000000020020ea0                shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)
                0x0000000020020ebc                call_shifted_const_val()
                0x0000000020020eca                call_shifted_var_val()
                0x0000000020020ed8                call_shifted_global_val()
                0x0000000020020eec                shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)
                0x0000000020020f0c                call_shifted_const_ref()
                0x0000000020020f28                call_shifted_var_ref()
                0x0000000020020f44                call_shifted_global_ref()
                0x0000000020020f60                copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)
                0x0000000020020f78                call_copy_bits_val()
                0x0000000020020f8c                copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)
                0x0000000020020fa8                call_copy_bits_ref()
                0x0000000020020fc4                run
 .text          0x0000000020021680       0xa4 main.o
                0x0000000020021680                memset
                0x0000000020021694                do_test
                0x0000000020021718                main
 .text          0x0000000020021724      0x128 stm32f767xx_ram_init.o
                0x0000000020021724                NMI_IRQ_Handler
                0x0000000020021726                HardFault_IRQ_Handler
                0x0000000020021728                MemManage_IRQ_Handler
                0x000000002002172a                BusFault_IRQ_Handler
                0x000000002002172c                UsageFault_IRQ_Handler
                0x000000002002172e                Reserved1_IRQ_Handler
                0x0000000020021730                Reserved2_IRQ_Handler
                0x0000000020021732                Reserved3_IRQ_Handler
                0x0000000020021734                Reserved4_IRQ_Handler
                0x0000000020021736                SVCall_IRQ_Handler
                0x0000000020021738                Debug_IRQ_Handler
                0x000000002002173a                Reserved5_IRQ_Handler
                0x000000002002173c                PendSV_IRQ_Handler
                0x000000002002173e                SysTick_IRQ_Handler
                0x0000000020021740                WWDG_IRQ_Handler
                0x0000000020021742                PVD_IRQ_Handler
                0x0000000020021744                TAMP_STAMP_IRQ_Handler
                0x0000000020021746                RTC_WKUP_IRQ_Handler
                0x0000000020021748                FLASH_IRQ_Handler
                0x000000002002174a                RCC_IRQ_Handler
                0x000000002002174c                EXTI0_IRQ_Handler
                0x000000002002174e                EXTI1_IRQ_Handler
                0x0000000020021750                EXTI2_IRQ_Handler
                0x0000000020021752                EXTI3_IRQ_Handler
                0x0000000020021754                EXTI4_IRQ_Handler
                0x0000000020021756                DMA1_Stream0_IRQ_Handler
                0x0000000020021758                DMA1_Stream1_IRQ_Handler
                0x000000002002175a                DMA1_Stream2_IRQ_Handler
                0x000000002002175c                DMA1_Stream3_IRQ_Handler
                0x000000002002175e                DMA1_Stream4_IRQ_Handler
                0x0000000020021760                DMA1_Stream5_IRQ_Handler
                0x0000000020021762                DMA1_Stream6_IRQ_Handler
                0x0000000020021764                ADC_IRQ_Handler
                0x0000000020021766                CAN1_TX_IRQ_Handler
                0x0000000020021768                CAN1_RX0_IRQ_Handler
                0x000000002002176a                CAN1_RX1_IRQ_Handler
                0x000000002002176c                CAN1_SCE_IRQ_Handler
                0x000000002002176e                EXTI9_5_IRQ_Handler
                0x0000000020021770                TIM1_BRK_TIM9_IRQ_Handler
                0x0000000020021772                TIM1_UP_TIM10_IRQ_Handler
                0x0000000020021774                TIM1_TRG_COM_TIM11_IRQ_Handler
                0x0000000020021776                TIM1_CC_IRQ_Handler
                0x0000000020021778                TIM2_IRQ_Handler
                0x000000002002177a                TIM3_IRQ_Handler
                0x000000002002177c                TIM4_IRQ_Handler
                0x000000002002177e                I2C1_EV_IRQ_Handler
                0x0000000020021780                I2C1_ER_IRQ_Handler
                0x0000000020021782                I2C2_EV_IRQ_Handler
                0x0000000020021784                I2C2_ER_IRQ_Handler
                0x0000000020021786                SPI1_IRQ_Handler
                0x0000000020021788                SPI2_IRQ_Handler
                0x000000002002178a                USART1_IRQ_Handler
                0x000000002002178c                USART2_IRQ_Handler
                0x000000002002178e                USART3_IRQ_Handler
                0x0000000020021790                EXTI15_10_IRQ_Handler
                0x0000000020021792                RTC_Alarm_IRQ_Handler
                0x0000000020021794                OTG_FS_WKUP_IRQ_Handler
                0x0000000020021796                TIM8_BRK_TIM12_IRQ_Handler
                0x0000000020021798                TIM8_UP_TIM13_IRQ_Handler
                0x000000002002179a                TIM8_TRG_COM_TIM14_IRQ_Handler
                0x000000002002179c                TIM8_CC_IRQ_Handler
                0x000000002002179e                DMA1_Stream7_IRQ_Handler
                0x00000000200217a0                FMC_IRQ_Handler
                0x00000000200217a2                SDMMC1_IRQ_Handler
                0x00000000200217a4                TIM5_IRQ_Handler
                0x00000000200217a6                SPI3_IRQ_Handler
                0x00000000200217a8                UART4_IRQ_Handler
                0x00000000200217aa                UART5_IRQ_Handler
                0x00000000200217ac                TIM6_DAC_IRQ_Handler
                0x00000000200217ae                TIM7_IRQ_Handler
                0x00000000200217b0                DMA2_Stream0_IRQ_Handler
                0x00000000200217b2                DMA2_Stream1_IRQ_Handler
                0x00000000200217b4                DMA2_Stream2_IRQ_Handler
                0x00000000200217b6                DMA2_Stream3_IRQ_Handler
                0x00000000200217b8                DMA2_Stream4_IRQ_Handler
                0x00000000200217ba                ETH_IRQ_Handler
                0x00000000200217bc                ETH_WKUP_IRQ_Handler
                0x00000000200217be                CAN2_TX_IRQ_Handler
                0x00000000200217c0                CAN2_RX0_IRQ_Handler
                0x00000000200217c2                CAN2_RX1_IRQ_Handler
                0x00000000200217c4                CAN2_SCE_IRQ_Handler
                0x00000000200217c6                OTG_FS_IRQ_Handler
                0x00000000200217c8                DMA2_Stream5_IRQ_Handler
                0x00000000200217ca                DMA2_Stream6_IRQ_Handler
                0x00000000200217cc                DMA2_Stream7_IRQ_Handler
                0x00000000200217ce                USART6_IRQ_Handler
                0x00000000200217d0                I2C3_EV_IRQ_Handler
                0x00000000200217d2                I2C3_ER_IRQ_Handler
                0x00000000200217d4                OTG_HS_EP1_OUT_IRQ_Handler
                0x00000000200217d6                OTG_HS_EP1_IN_IRQ_Handler
                0x00000000200217d8                OTG_HS_WKUP_IRQ_Handler
                0x00000000200217da                OTG_HS_IRQ_Handler
                0x00000000200217dc                DCMI_IRQ_Handler
                0x00000000200217de                RNG_IRQ_Handler
                0x00000000200217e0                FPU_IRQ_Handler
                0x00000000200217e2                UART7_IRQ_Handler
                0x00000000200217e4                UART8_IRQ_Handler
                0x00000000200217e6                SPI4_IRQ_Handler
                0x00000000200217e8                SPI5_IRQ_Handler
                0x00000000200217ea                SPI6_IRQ_Handler
                0x00000000200217ec                SAI1_IRQ_Handler
                0x00000000200217ee                LTDC_IRQ_Handler
                0x00000000200217f0                LTDC_ER_IRQ_Handler
                0x00000000200217f2                DMA2D_IRQ_Handler
                0x00000000200217f4                SAI2_IRQ_Handler
                0x00000000200217f6                QUADSPI_IRQ_Handler
                0x00000000200217f8                LPTIM1_IRQ_Handler
                0x00000000200217fa                CEC_IRQ_Handler
                0x00000000200217fc                I2C4_EV_IRQ_Handler
                0x00000000200217fe                I2C4_ER_IRQ_Handler
                0x0000000020021800                SPDIF_RX_IRQ_Handler
                0x0000000020021802                DFSDM1_FLT0_IRQ_Handler
                0x0000000020021804                DFSDM1_FLT1_IRQ_Handler
                0x0000000020021806                DFSDM1_FLT2_IRQ_Handler
                0x0000000020021808                DFSDM1_FLT3_IRQ_Handler
                0x000000002002180a                SDMMC2_IRQ_Handler
                0x000000002002180c                CAN3_TX_IRQ_Handler
                0x000000002002180e                CAN3_RX0_IRQ_Handler
                0x0000000020021810                CAN3_RX1_IRQ_Handler
                0x0000000020021812                CAN3_SCE_IRQ_Handler
                0x0000000020021814                JPEG_IRQ_Handler
                0x0000000020021816                MDIOS_IRQ_Handler
                0x0000000020021818                init

.glue_7         0x000000002002184c        0x0
 .glue_7        0x000000002002184c        0x0 linker stubs

.glue_7t        0x000000002002184c        0x0
 .glue_7t       0x000000002002184c        0x0 linker stubs

.vfp11_veneer   0x000000002002184c        0x0
 .vfp11_veneer  0x000000002002184c        0x0 linker stubs

.v4_bx          0x000000002002184c        0x0
 .v4_bx         0x000000002002184c        0x0 linker stubs

.iplt           0x000000002002184c        0x0
 .iplt          0x000000002002184c        0x0 regbits.o

.rodata         0x000000002002184c       0x20
 .rodata        0x000000002002184c       0x20 regbits.o

.rel.dyn        0x000000002002186c        0x0
 .rel.iplt      0x000000002002186c        0x0 regbits.o

.data           0x000000002002186c        0x0
                0x000000002002186c                . = ALIGN (0x4)
 *(.data)
 .data          0x000000002002186c        0x0 regbits.o
 .data          0x000000002002186c        0x0 main.o
 .data          0x000000002002186c        0x0 stm32f767xx_ram_init.o
                0x000000002002186c                BSS_START = .

.igot.plt       0x000000002002186c        0x0
 .igot.plt      0x000000002002186c        0x0 regbits.o

.bss            0x000000002002186c      0x3d4
                0x000000002002186c                . = ALIGN (0x4)
 *(.bss)
 .bss           0x000000002002186c       0x30 regbits.o
 .bss           0x000000002002189c        0x4 main.o
                0x000000002002189c                elapsed_time
 .bss           0x00000000200218a0        0x0 stm32f767xx_ram_init.o
 COMMON         0x00000000200218a0      0x3a0 main.o
                0x00000000200218a0                results
                0x0000000020021c40                BSS_END = .
                0x0000000020021c40                end = .
                0x000000002007c000                TOP_OF_STACK = (ORIGIN (SRAM1) + LENGTH (SRAM1))
                0x0000000000000000                ASSERT (((end + MINIMUM_STACK_SIZE) < TOP_OF_STACK), too big to fit in RAM)
OUTPUT(regbits.elf elf32-littlearm)

.debug_info     0x0000000000000000    0x13769
 .debug_info    0x0000000000000000    0x12602 regbits.o
 .debug_info    0x0000000000012602      0x2f8 main.o
 .debug_info    0x00000000000128fa      0xe6f stm32f767xx_ram_init.o

.debug_abbrev   0x0000000000000000      0x9e3
 .debug_abbrev  0x0000000000000000      0x69e regbits.o
 .debug_abbrev  0x000000000000069e      0x1d3 main.o
 .debug_abbrev  0x0000000000000871      0x172 stm32f767xx_ram_init.o

.debug_loc      0x0000000000000000     0x2be8
 .debug_loc     0x0000000000000000     0x2a12 regbits.o
 .debug_loc     0x0000000000002a12      0x181 main.o
 .debug_loc     0x0000000000002b93       0x55 stm32f767xx_ram_init.o

.debug_aranges  0x0000000000000000       0x60
 .debug_aranges
                0x0000000000000000       0x20 regbits.o
 .debug_aranges
                0x0000000000000020       0x20 main.o
 .debug_aranges
                0x0000000000000040       0x20 stm32f767xx_ram_init.o

.debug_ranges   0x0000000000000000       0x30
 .debug_ranges  0x0000000000000000       0x30 regbits.o

.debug_macro    0x0000000000000000    0x1df03
 .debug_macro   0x0000000000000000       0x8e regbits.o
 .debug_macro   0x000000000000008e      0xb0e regbits.o
 .debug_macro   0x0000000000000b9c       0x1c regbits.o
 .debug_macro   0x0000000000000bb8       0x22 regbits.o
 .debug_macro   0x0000000000000bda       0x56 regbits.o
 .debug_macro   0x0000000000000c30       0x51 regbits.o
 .debug_macro   0x0000000000000c81       0xef regbits.o
 .debug_macro   0x0000000000000d70       0x6a regbits.o
 .debug_macro   0x0000000000000dda      0x1df regbits.o
 .debug_macro   0x0000000000000fb9       0x1f regbits.o
 .debug_macro   0x0000000000000fd8       0x58 regbits.o
 .debug_macro   0x0000000000001030      0x17b regbits.o
 .debug_macro   0x00000000000011ab       0xb4 main.o
 .debug_macro   0x000000000000125f      0xa60 main.o
 .debug_macro   0x0000000000001cbf      0x174 main.o
 .debug_macro   0x0000000000001e33       0x8e main.o
 .debug_macro   0x0000000000001ec1       0x3b main.o
 .debug_macro   0x0000000000001efc       0x50 main.o
 .debug_macro   0x0000000000001f4c      0xe74 main.o
 .debug_macro   0x0000000000002dc0       0xbc stm32f767xx_ram_init.o
 .debug_macro   0x0000000000002e7c       0x3b stm32f767xx_ram_init.o
 .debug_macro   0x0000000000002eb7     0x1114 stm32f767xx_ram_init.o
 .debug_macro   0x0000000000003fcb    0x19f38 stm32f767xx_ram_init.o

.debug_line     0x0000000000000000     0x3293
 .debug_line    0x0000000000000000     0x23c9 regbits.o
 .debug_line    0x00000000000023c9      0x398 main.o
 .debug_line    0x0000000000002761      0xb32 stm32f767xx_ram_init.o

.debug_str      0x0000000000000000    0xb0197
 .debug_str     0x0000000000000000    0x17278 regbits.o
                                      0x175dc (size before relaxing)
 .debug_str     0x0000000000017278     0x56a5 main.o
                                       0x9351 (size before relaxing)
 .debug_str     0x000000000001c91d    0x9387a stm32f767xx_ram_init.o
                                      0x9c830 (size before relaxing)

.comment        0x0000000000000000       0x75
 .comment       0x0000000000000000       0x75 regbits.o
                                         0x76 (size before relaxing)
 .comment       0x0000000000000075       0x76 main.o
 .comment       0x0000000000000075       0x76 stm32f767xx_ram_init.o

.ARM.attributes
                0x0000000000000000       0x1c
 .ARM.attributes
                0x0000000000000000       0x1c regbits.o
 .ARM.attributes
                0x000000000000001c       0x1c main.o
 .ARM.attributes
                0x0000000000000038       0x1c stm32f767xx_ram_init.o

.debug_frame    0x0000000000000000     0x130c
 .debug_frame   0x0000000000000000      0xae4 regbits.o
 .debug_frame   0x0000000000000ae4       0x60 main.o
 .debug_frame   0x0000000000000b44      0x7c8 stm32f767xx_ram_init.o
Memory region         Used Size  Region Size  %age Used
        ITCM_RAM:          0 GB        16 KB      0.00%
        DTCM_RAM:          0 GB       128 KB      0.00%
           SRAM1:        7232 B       368 KB      1.92%
           SRAM2:          0 GB        16 KB      0.00%
