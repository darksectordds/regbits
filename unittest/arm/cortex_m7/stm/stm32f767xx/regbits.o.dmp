
regbits.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <zero_reg()>:
       0:	4b01      	ldr	r3, [pc, #4]	; (8 <zero_reg()+0x8>)
       2:	2200      	movs	r2, #0
       4:	605a      	str	r2, [r3, #4]
       6:	4770      	bx	lr
       8:	200226c0 	.word	0x200226c0

0000000c <zero_array()>:
       c:	4b01      	ldr	r3, [pc, #4]	; (14 <zero_array()+0x8>)
       e:	2200      	movs	r2, #0
      10:	62da      	str	r2, [r3, #44]	; 0x2c
      12:	4770      	bx	lr
      14:	20022500 	.word	0x20022500

00000018 <set_singl_bits_operator()>:
      18:	4a02      	ldr	r2, [pc, #8]	; (24 <set_singl_bits_operator()+0xc>)
      1a:	6853      	ldr	r3, [r2, #4]
      1c:	2140      	movs	r1, #64	; 0x40
      1e:	430b      	orrs	r3, r1
      20:	6053      	str	r3, [r2, #4]
      22:	4770      	bx	lr
      24:	200226c0 	.word	0x200226c0

00000028 <set_singl_bits_method()>:
      28:	4a02      	ldr	r2, [pc, #8]	; (34 <set_singl_bits_method()+0xc>)
      2a:	6853      	ldr	r3, [r2, #4]
      2c:	2140      	movs	r1, #64	; 0x40
      2e:	430b      	orrs	r3, r1
      30:	6053      	str	r3, [r2, #4]
      32:	4770      	bx	lr
      34:	200226c0 	.word	0x200226c0

00000038 <clr_singl_bits_operator()>:
      38:	4a02      	ldr	r2, [pc, #8]	; (44 <clr_singl_bits_operator()+0xc>)
      3a:	6853      	ldr	r3, [r2, #4]
      3c:	2140      	movs	r1, #64	; 0x40
      3e:	438b      	bics	r3, r1
      40:	6053      	str	r3, [r2, #4]
      42:	4770      	bx	lr
      44:	200226c0 	.word	0x200226c0

00000048 <clr_singl_bits_method()>:
      48:	4a02      	ldr	r2, [pc, #8]	; (54 <clr_singl_bits_method()+0xc>)
      4a:	6853      	ldr	r3, [r2, #4]
      4c:	2140      	movs	r1, #64	; 0x40
      4e:	438b      	bics	r3, r1
      50:	6053      	str	r3, [r2, #4]
      52:	4770      	bx	lr
      54:	200226c0 	.word	0x200226c0

00000058 <set_singl_mskd_operator()>:
      58:	4a02      	ldr	r2, [pc, #8]	; (64 <set_singl_mskd_operator()+0xc>)
      5a:	6853      	ldr	r3, [r2, #4]
      5c:	2102      	movs	r1, #2
      5e:	430b      	orrs	r3, r1
      60:	6053      	str	r3, [r2, #4]
      62:	4770      	bx	lr
      64:	200226c0 	.word	0x200226c0

00000068 <set_singl_mskd_method()>:
      68:	4a02      	ldr	r2, [pc, #8]	; (74 <set_singl_mskd_method()+0xc>)
      6a:	6853      	ldr	r3, [r2, #4]
      6c:	2102      	movs	r1, #2
      6e:	430b      	orrs	r3, r1
      70:	6053      	str	r3, [r2, #4]
      72:	4770      	bx	lr
      74:	200226c0 	.word	0x200226c0

00000078 <clr_singl_mskd_operator()>:
      78:	4a02      	ldr	r2, [pc, #8]	; (84 <clr_singl_mskd_operator()+0xc>)
      7a:	6853      	ldr	r3, [r2, #4]
      7c:	2102      	movs	r1, #2
      7e:	438b      	bics	r3, r1
      80:	6053      	str	r3, [r2, #4]
      82:	4770      	bx	lr
      84:	200226c0 	.word	0x200226c0

00000088 <clr_singl_mskd_method()>:
      88:	4a02      	ldr	r2, [pc, #8]	; (94 <clr_singl_mskd_method()+0xc>)
      8a:	6853      	ldr	r3, [r2, #4]
      8c:	2102      	movs	r1, #2
      8e:	438b      	bics	r3, r1
      90:	6053      	str	r3, [r2, #4]
      92:	4770      	bx	lr
      94:	200226c0 	.word	0x200226c0

00000098 <equ_singl_bits_operator()>:
      98:	4b01      	ldr	r3, [pc, #4]	; (a0 <equ_singl_bits_operator()+0x8>)
      9a:	2240      	movs	r2, #64	; 0x40
      9c:	605a      	str	r2, [r3, #4]
      9e:	4770      	bx	lr
      a0:	200226c0 	.word	0x200226c0

000000a4 <equ_singl_bits_method()>:
      a4:	4b01      	ldr	r3, [pc, #4]	; (ac <equ_singl_bits_method()+0x8>)
      a6:	2240      	movs	r2, #64	; 0x40
      a8:	605a      	str	r2, [r3, #4]
      aa:	4770      	bx	lr
      ac:	200226c0 	.word	0x200226c0

000000b0 <equ_singl_mskd_operator()>:
      b0:	4b01      	ldr	r3, [pc, #4]	; (b8 <equ_singl_mskd_operator()+0x8>)
      b2:	2202      	movs	r2, #2
      b4:	605a      	str	r2, [r3, #4]
      b6:	4770      	bx	lr
      b8:	200226c0 	.word	0x200226c0

000000bc <equ_singl_mskd_method()>:
      bc:	4b01      	ldr	r3, [pc, #4]	; (c4 <equ_singl_mskd_method()+0x8>)
      be:	2202      	movs	r2, #2
      c0:	605a      	str	r2, [r3, #4]
      c2:	4770      	bx	lr
      c4:	200226c0 	.word	0x200226c0

000000c8 <flp_singl_bits_operator()>:
      c8:	4a02      	ldr	r2, [pc, #8]	; (d4 <flp_singl_bits_operator()+0xc>)
      ca:	6853      	ldr	r3, [r2, #4]
      cc:	2140      	movs	r1, #64	; 0x40
      ce:	404b      	eors	r3, r1
      d0:	6053      	str	r3, [r2, #4]
      d2:	4770      	bx	lr
      d4:	200226c0 	.word	0x200226c0

000000d8 <flp_singl_bits_method()>:
      d8:	4a02      	ldr	r2, [pc, #8]	; (e4 <flp_singl_bits_method()+0xc>)
      da:	6853      	ldr	r3, [r2, #4]
      dc:	2140      	movs	r1, #64	; 0x40
      de:	404b      	eors	r3, r1
      e0:	6053      	str	r3, [r2, #4]
      e2:	4770      	bx	lr
      e4:	200226c0 	.word	0x200226c0

000000e8 <flp_singl_mskd_operator()>:
      e8:	4a02      	ldr	r2, [pc, #8]	; (f4 <flp_singl_mskd_operator()+0xc>)
      ea:	6853      	ldr	r3, [r2, #4]
      ec:	2102      	movs	r1, #2
      ee:	404b      	eors	r3, r1
      f0:	6053      	str	r3, [r2, #4]
      f2:	4770      	bx	lr
      f4:	200226c0 	.word	0x200226c0

000000f8 <flp_singl_mskd_method()>:
      f8:	4a02      	ldr	r2, [pc, #8]	; (104 <flp_singl_mskd_method()+0xc>)
      fa:	6853      	ldr	r3, [r2, #4]
      fc:	2102      	movs	r1, #2
      fe:	404b      	eors	r3, r1
     100:	6053      	str	r3, [r2, #4]
     102:	4770      	bx	lr
     104:	200226c0 	.word	0x200226c0

00000108 <ins_singl_mskd_operator()>:
     108:	4a03      	ldr	r2, [pc, #12]	; (118 <ins_singl_mskd_operator()+0x10>)
     10a:	6853      	ldr	r3, [r2, #4]
     10c:	2106      	movs	r1, #6
     10e:	438b      	bics	r3, r1
     110:	3902      	subs	r1, #2
     112:	430b      	orrs	r3, r1
     114:	6053      	str	r3, [r2, #4]
     116:	4770      	bx	lr
     118:	200226c0 	.word	0x200226c0

0000011c <ins_singl_mskd_method()>:
     11c:	4a03      	ldr	r2, [pc, #12]	; (12c <ins_singl_mskd_method()+0x10>)
     11e:	6853      	ldr	r3, [r2, #4]
     120:	2106      	movs	r1, #6
     122:	438b      	bics	r3, r1
     124:	3902      	subs	r1, #2
     126:	430b      	orrs	r3, r1
     128:	6053      	str	r3, [r2, #4]
     12a:	4770      	bx	lr
     12c:	200226c0 	.word	0x200226c0

00000130 <set_multi_bits_operator()>:
     130:	4a02      	ldr	r2, [pc, #8]	; (13c <set_multi_bits_operator()+0xc>)
     132:	6853      	ldr	r3, [r2, #4]
     134:	2121      	movs	r1, #33	; 0x21
     136:	430b      	orrs	r3, r1
     138:	6053      	str	r3, [r2, #4]
     13a:	4770      	bx	lr
     13c:	200226c0 	.word	0x200226c0

00000140 <set_multi_bits_method()>:
     140:	4a02      	ldr	r2, [pc, #8]	; (14c <set_multi_bits_method()+0xc>)
     142:	6853      	ldr	r3, [r2, #4]
     144:	2121      	movs	r1, #33	; 0x21
     146:	430b      	orrs	r3, r1
     148:	6053      	str	r3, [r2, #4]
     14a:	4770      	bx	lr
     14c:	200226c0 	.word	0x200226c0

00000150 <ins_multi_mskd_operator()>:
     150:	4904      	ldr	r1, [pc, #16]	; (164 <ins_multi_mskd_operator()+0x14>)
     152:	684b      	ldr	r3, [r1, #4]
     154:	4a04      	ldr	r2, [pc, #16]	; (168 <ins_multi_mskd_operator()+0x18>)
     156:	401a      	ands	r2, r3
     158:	23c1      	movs	r3, #193	; 0xc1
     15a:	005b      	lsls	r3, r3, #1
     15c:	4313      	orrs	r3, r2
     15e:	604b      	str	r3, [r1, #4]
     160:	4770      	bx	lr
     162:	46c0      	nop			; (mov r8, r8)
     164:	200226c0 	.word	0x200226c0
     168:	fffff079 	.word	0xfffff079

0000016c <ins_multi_mskd_method()>:
     16c:	4904      	ldr	r1, [pc, #16]	; (180 <ins_multi_mskd_method()+0x14>)
     16e:	684b      	ldr	r3, [r1, #4]
     170:	4a04      	ldr	r2, [pc, #16]	; (184 <ins_multi_mskd_method()+0x18>)
     172:	401a      	ands	r2, r3
     174:	23c1      	movs	r3, #193	; 0xc1
     176:	005b      	lsls	r3, r3, #1
     178:	4313      	orrs	r3, r2
     17a:	604b      	str	r3, [r1, #4]
     17c:	4770      	bx	lr
     17e:	46c0      	nop			; (mov r8, r8)
     180:	200226c0 	.word	0x200226c0
     184:	fffff079 	.word	0xfffff079

00000188 <equ_multi_bits_operator()>:
     188:	4b01      	ldr	r3, [pc, #4]	; (190 <equ_multi_bits_operator()+0x8>)
     18a:	2260      	movs	r2, #96	; 0x60
     18c:	605a      	str	r2, [r3, #4]
     18e:	4770      	bx	lr
     190:	200226c0 	.word	0x200226c0

00000194 <equ_multi_bits_method()>:
     194:	4b01      	ldr	r3, [pc, #4]	; (19c <equ_multi_bits_method()+0x8>)
     196:	2260      	movs	r2, #96	; 0x60
     198:	605a      	str	r2, [r3, #4]
     19a:	4770      	bx	lr
     19c:	200226c0 	.word	0x200226c0

000001a0 <equ_multi_mskd_operator()>:
     1a0:	4b02      	ldr	r3, [pc, #8]	; (1ac <equ_multi_mskd_operator()+0xc>)
     1a2:	22c2      	movs	r2, #194	; 0xc2
     1a4:	0092      	lsls	r2, r2, #2
     1a6:	605a      	str	r2, [r3, #4]
     1a8:	4770      	bx	lr
     1aa:	46c0      	nop			; (mov r8, r8)
     1ac:	200226c0 	.word	0x200226c0

000001b0 <equ_multi_mskd_method()>:
     1b0:	4b02      	ldr	r3, [pc, #8]	; (1bc <equ_multi_mskd_method()+0xc>)
     1b2:	22c2      	movs	r2, #194	; 0xc2
     1b4:	0092      	lsls	r2, r2, #2
     1b6:	605a      	str	r2, [r3, #4]
     1b8:	4770      	bx	lr
     1ba:	46c0      	nop			; (mov r8, r8)
     1bc:	200226c0 	.word	0x200226c0

000001c0 <equ_bits_mskd_operator()>:
     1c0:	4b01      	ldr	r3, [pc, #4]	; (1c8 <equ_bits_mskd_operator()+0x8>)
     1c2:	2222      	movs	r2, #34	; 0x22
     1c4:	605a      	str	r2, [r3, #4]
     1c6:	4770      	bx	lr
     1c8:	200226c0 	.word	0x200226c0

000001cc <equ_bits_mskd_method()>:
     1cc:	4b01      	ldr	r3, [pc, #4]	; (1d4 <equ_bits_mskd_method()+0x8>)
     1ce:	2222      	movs	r2, #34	; 0x22
     1d0:	605a      	str	r2, [r3, #4]
     1d2:	4770      	bx	lr
     1d4:	200226c0 	.word	0x200226c0

000001d8 <equ_mskd_bits_operator()>:
     1d8:	4b01      	ldr	r3, [pc, #4]	; (1e0 <equ_mskd_bits_operator()+0x8>)
     1da:	2244      	movs	r2, #68	; 0x44
     1dc:	605a      	str	r2, [r3, #4]
     1de:	4770      	bx	lr
     1e0:	200226c0 	.word	0x200226c0

000001e4 <equ_mskd_bits_method()>:
     1e4:	4b01      	ldr	r3, [pc, #4]	; (1ec <equ_mskd_bits_method()+0x8>)
     1e6:	2244      	movs	r2, #68	; 0x44
     1e8:	605a      	str	r2, [r3, #4]
     1ea:	4770      	bx	lr
     1ec:	200226c0 	.word	0x200226c0

000001f0 <equ_bits_var()>:
     1f0:	4b02      	ldr	r3, [pc, #8]	; (1fc <equ_bits_var()+0xc>)
     1f2:	2240      	movs	r2, #64	; 0x40
     1f4:	605a      	str	r2, [r3, #4]
     1f6:	3a3f      	subs	r2, #63	; 0x3f
     1f8:	605a      	str	r2, [r3, #4]
     1fa:	4770      	bx	lr
     1fc:	200226c0 	.word	0x200226c0

00000200 <equ_mskd_var()>:
     200:	4b03      	ldr	r3, [pc, #12]	; (210 <equ_mskd_var()+0x10>)
     202:	2202      	movs	r2, #2
     204:	605a      	str	r2, [r3, #4]
     206:	327f      	adds	r2, #127	; 0x7f
     208:	32ff      	adds	r2, #255	; 0xff
     20a:	605a      	str	r2, [r3, #4]
     20c:	4770      	bx	lr
     20e:	46c0      	nop			; (mov r8, r8)
     210:	200226c0 	.word	0x200226c0

00000214 <cmp_equ_zero()>:
     214:	4b07      	ldr	r3, [pc, #28]	; (234 <cmp_equ_zero()+0x20>)
     216:	2200      	movs	r2, #0
     218:	605a      	str	r2, [r3, #4]
     21a:	685b      	ldr	r3, [r3, #4]
     21c:	2b00      	cmp	r3, #0
     21e:	d104      	bne.n	22a <cmp_equ_zero()+0x16>
     220:	4b05      	ldr	r3, [pc, #20]	; (238 <cmp_equ_zero()+0x24>)
     222:	22e8      	movs	r2, #232	; 0xe8
     224:	0592      	lsls	r2, r2, #22
     226:	605a      	str	r2, [r3, #4]
     228:	4770      	bx	lr
     22a:	4b03      	ldr	r3, [pc, #12]	; (238 <cmp_equ_zero()+0x24>)
     22c:	2288      	movs	r2, #136	; 0x88
     22e:	0592      	lsls	r2, r2, #22
     230:	605a      	str	r2, [r3, #4]
     232:	e7f9      	b.n	228 <cmp_equ_zero()+0x14>
     234:	200226c0 	.word	0x200226c0
     238:	20022620 	.word	0x20022620

0000023c <cmp_neq_zero()>:
     23c:	4b06      	ldr	r3, [pc, #24]	; (258 <cmp_neq_zero()+0x1c>)
     23e:	2200      	movs	r2, #0
     240:	605a      	str	r2, [r3, #4]
     242:	685b      	ldr	r3, [r3, #4]
     244:	2b00      	cmp	r3, #0
     246:	d003      	beq.n	250 <cmp_neq_zero()+0x14>
     248:	4b03      	ldr	r3, [pc, #12]	; (258 <cmp_neq_zero()+0x1c>)
     24a:	3204      	adds	r2, #4
     24c:	605a      	str	r2, [r3, #4]
     24e:	4770      	bx	lr
     250:	4b01      	ldr	r3, [pc, #4]	; (258 <cmp_neq_zero()+0x1c>)
     252:	2220      	movs	r2, #32
     254:	605a      	str	r2, [r3, #4]
     256:	e7fa      	b.n	24e <cmp_neq_zero()+0x12>
     258:	200226c0 	.word	0x200226c0

0000025c <cmp_equ_bits()>:
     25c:	4a07      	ldr	r2, [pc, #28]	; (27c <cmp_equ_bits()+0x20>)
     25e:	2340      	movs	r3, #64	; 0x40
     260:	6053      	str	r3, [r2, #4]
     262:	6852      	ldr	r2, [r2, #4]
     264:	4213      	tst	r3, r2
     266:	d104      	bne.n	272 <cmp_equ_bits()+0x16>
     268:	4b05      	ldr	r3, [pc, #20]	; (280 <cmp_equ_bits()+0x24>)
     26a:	22d0      	movs	r2, #208	; 0xd0
     26c:	0552      	lsls	r2, r2, #21
     26e:	605a      	str	r2, [r3, #4]
     270:	4770      	bx	lr
     272:	4b03      	ldr	r3, [pc, #12]	; (280 <cmp_equ_bits()+0x24>)
     274:	22b0      	movs	r2, #176	; 0xb0
     276:	0552      	lsls	r2, r2, #21
     278:	605a      	str	r2, [r3, #4]
     27a:	e7f9      	b.n	270 <cmp_equ_bits()+0x14>
     27c:	200226c0 	.word	0x200226c0
     280:	20022620 	.word	0x20022620

00000284 <cmp_neq_bits()>:
     284:	4a06      	ldr	r2, [pc, #24]	; (2a0 <cmp_neq_bits()+0x1c>)
     286:	2340      	movs	r3, #64	; 0x40
     288:	6053      	str	r3, [r2, #4]
     28a:	6852      	ldr	r2, [r2, #4]
     28c:	4213      	tst	r3, r2
     28e:	d103      	bne.n	298 <cmp_neq_bits()+0x14>
     290:	4b03      	ldr	r3, [pc, #12]	; (2a0 <cmp_neq_bits()+0x1c>)
     292:	2202      	movs	r2, #2
     294:	605a      	str	r2, [r3, #4]
     296:	4770      	bx	lr
     298:	4b01      	ldr	r3, [pc, #4]	; (2a0 <cmp_neq_bits()+0x1c>)
     29a:	2220      	movs	r2, #32
     29c:	605a      	str	r2, [r3, #4]
     29e:	e7fa      	b.n	296 <cmp_neq_bits()+0x12>
     2a0:	200226c0 	.word	0x200226c0

000002a4 <cmp_equ_multi_bits()>:
     2a4:	4a08      	ldr	r2, [pc, #32]	; (2c8 <cmp_equ_multi_bits()+0x24>)
     2a6:	2360      	movs	r3, #96	; 0x60
     2a8:	6053      	str	r3, [r2, #4]
     2aa:	6852      	ldr	r2, [r2, #4]
     2ac:	4013      	ands	r3, r2
     2ae:	2b60      	cmp	r3, #96	; 0x60
     2b0:	d004      	beq.n	2bc <cmp_equ_multi_bits()+0x18>
     2b2:	4b06      	ldr	r3, [pc, #24]	; (2cc <cmp_equ_multi_bits()+0x28>)
     2b4:	22b8      	movs	r2, #184	; 0xb8
     2b6:	0592      	lsls	r2, r2, #22
     2b8:	605a      	str	r2, [r3, #4]
     2ba:	4770      	bx	lr
     2bc:	4b03      	ldr	r3, [pc, #12]	; (2cc <cmp_equ_multi_bits()+0x28>)
     2be:	2288      	movs	r2, #136	; 0x88
     2c0:	0592      	lsls	r2, r2, #22
     2c2:	605a      	str	r2, [r3, #4]
     2c4:	e7f9      	b.n	2ba <cmp_equ_multi_bits()+0x16>
     2c6:	46c0      	nop			; (mov r8, r8)
     2c8:	200226c0 	.word	0x200226c0
     2cc:	20022620 	.word	0x20022620

000002d0 <cmp_neq_multi_bits()>:
     2d0:	4a08      	ldr	r2, [pc, #32]	; (2f4 <cmp_neq_multi_bits()+0x24>)
     2d2:	2360      	movs	r3, #96	; 0x60
     2d4:	6053      	str	r3, [r2, #4]
     2d6:	6852      	ldr	r2, [r2, #4]
     2d8:	4013      	ands	r3, r2
     2da:	2b60      	cmp	r3, #96	; 0x60
     2dc:	d004      	beq.n	2e8 <cmp_neq_multi_bits()+0x18>
     2de:	4b06      	ldr	r3, [pc, #24]	; (2f8 <cmp_neq_multi_bits()+0x28>)
     2e0:	22e8      	movs	r2, #232	; 0xe8
     2e2:	0592      	lsls	r2, r2, #22
     2e4:	605a      	str	r2, [r3, #4]
     2e6:	4770      	bx	lr
     2e8:	4b03      	ldr	r3, [pc, #12]	; (2f8 <cmp_neq_multi_bits()+0x28>)
     2ea:	22f8      	movs	r2, #248	; 0xf8
     2ec:	0592      	lsls	r2, r2, #22
     2ee:	605a      	str	r2, [r3, #4]
     2f0:	e7f9      	b.n	2e6 <cmp_neq_multi_bits()+0x16>
     2f2:	46c0      	nop			; (mov r8, r8)
     2f4:	200226c0 	.word	0x200226c0
     2f8:	20022620 	.word	0x20022620

000002fc <cmp_equ_mskd()>:
     2fc:	4b0e      	ldr	r3, [pc, #56]	; (338 <cmp_equ_mskd()+0x3c>)
     2fe:	22e8      	movs	r2, #232	; 0xe8
     300:	0252      	lsls	r2, r2, #9
     302:	605a      	str	r2, [r3, #4]
     304:	685b      	ldr	r3, [r3, #4]
     306:	22f8      	movs	r2, #248	; 0xf8
     308:	0252      	lsls	r2, r2, #9
     30a:	4013      	ands	r3, r2
     30c:	2288      	movs	r2, #136	; 0x88
     30e:	0252      	lsls	r2, r2, #9
     310:	4293      	cmp	r3, r2
     312:	d008      	beq.n	326 <cmp_equ_mskd()+0x2a>
     314:	4909      	ldr	r1, [pc, #36]	; (33c <cmp_equ_mskd()+0x40>)
     316:	684b      	ldr	r3, [r1, #4]
     318:	4a09      	ldr	r2, [pc, #36]	; (340 <cmp_equ_mskd()+0x44>)
     31a:	401a      	ands	r2, r3
     31c:	2388      	movs	r3, #136	; 0x88
     31e:	059b      	lsls	r3, r3, #22
     320:	4313      	orrs	r3, r2
     322:	604b      	str	r3, [r1, #4]
     324:	4770      	bx	lr
     326:	4905      	ldr	r1, [pc, #20]	; (33c <cmp_equ_mskd()+0x40>)
     328:	684b      	ldr	r3, [r1, #4]
     32a:	4a05      	ldr	r2, [pc, #20]	; (340 <cmp_equ_mskd()+0x44>)
     32c:	401a      	ands	r2, r3
     32e:	23e0      	movs	r3, #224	; 0xe0
     330:	051b      	lsls	r3, r3, #20
     332:	4313      	orrs	r3, r2
     334:	604b      	str	r3, [r1, #4]
     336:	e7f5      	b.n	324 <cmp_equ_mskd()+0x28>
     338:	200226c0 	.word	0x200226c0
     33c:	20022620 	.word	0x20022620
     340:	c1ffffff 	.word	0xc1ffffff

00000344 <cmp_neq_mskd()>:
     344:	4b0c      	ldr	r3, [pc, #48]	; (378 <cmp_neq_mskd()+0x34>)
     346:	22e8      	movs	r2, #232	; 0xe8
     348:	0252      	lsls	r2, r2, #9
     34a:	605a      	str	r2, [r3, #4]
     34c:	685b      	ldr	r3, [r3, #4]
     34e:	22f8      	movs	r2, #248	; 0xf8
     350:	0252      	lsls	r2, r2, #9
     352:	4013      	ands	r3, r2
     354:	2288      	movs	r2, #136	; 0x88
     356:	0252      	lsls	r2, r2, #9
     358:	4293      	cmp	r3, r2
     35a:	d007      	beq.n	36c <cmp_neq_mskd()+0x28>
     35c:	4a06      	ldr	r2, [pc, #24]	; (378 <cmp_neq_mskd()+0x34>)
     35e:	6853      	ldr	r3, [r2, #4]
     360:	2106      	movs	r1, #6
     362:	438b      	bics	r3, r1
     364:	3902      	subs	r1, #2
     366:	430b      	orrs	r3, r1
     368:	6053      	str	r3, [r2, #4]
     36a:	4770      	bx	lr
     36c:	4a02      	ldr	r2, [pc, #8]	; (378 <cmp_neq_mskd()+0x34>)
     36e:	6853      	ldr	r3, [r2, #4]
     370:	2140      	movs	r1, #64	; 0x40
     372:	430b      	orrs	r3, r1
     374:	6053      	str	r3, [r2, #4]
     376:	e7f8      	b.n	36a <cmp_neq_mskd()+0x26>
     378:	200226c0 	.word	0x200226c0

0000037c <cmp_equ_reg()>:
     37c:	4b07      	ldr	r3, [pc, #28]	; (39c <cmp_equ_reg()+0x20>)
     37e:	2222      	movs	r2, #34	; 0x22
     380:	605a      	str	r2, [r3, #4]
     382:	685b      	ldr	r3, [r3, #4]
     384:	2b22      	cmp	r3, #34	; 0x22
     386:	d004      	beq.n	392 <cmp_equ_reg()+0x16>
     388:	4b05      	ldr	r3, [pc, #20]	; (3a0 <cmp_equ_reg()+0x24>)
     38a:	22b8      	movs	r2, #184	; 0xb8
     38c:	0592      	lsls	r2, r2, #22
     38e:	605a      	str	r2, [r3, #4]
     390:	4770      	bx	lr
     392:	4b03      	ldr	r3, [pc, #12]	; (3a0 <cmp_equ_reg()+0x24>)
     394:	22a8      	movs	r2, #168	; 0xa8
     396:	0592      	lsls	r2, r2, #22
     398:	605a      	str	r2, [r3, #4]
     39a:	e7f9      	b.n	390 <cmp_equ_reg()+0x14>
     39c:	200226c0 	.word	0x200226c0
     3a0:	20022620 	.word	0x20022620

000003a4 <cmp_neq_reg()>:
     3a4:	4b06      	ldr	r3, [pc, #24]	; (3c0 <cmp_neq_reg()+0x1c>)
     3a6:	2222      	movs	r2, #34	; 0x22
     3a8:	605a      	str	r2, [r3, #4]
     3aa:	685b      	ldr	r3, [r3, #4]
     3ac:	2b22      	cmp	r3, #34	; 0x22
     3ae:	d003      	beq.n	3b8 <cmp_neq_reg()+0x14>
     3b0:	4b03      	ldr	r3, [pc, #12]	; (3c0 <cmp_neq_reg()+0x1c>)
     3b2:	3a20      	subs	r2, #32
     3b4:	605a      	str	r2, [r3, #4]
     3b6:	4770      	bx	lr
     3b8:	4b01      	ldr	r3, [pc, #4]	; (3c0 <cmp_neq_reg()+0x1c>)
     3ba:	2220      	movs	r2, #32
     3bc:	605a      	str	r2, [r3, #4]
     3be:	e7fa      	b.n	3b6 <cmp_neq_reg()+0x12>
     3c0:	200226c0 	.word	0x200226c0

000003c4 <constexpr_bits_array()>:
     3c4:	4b03      	ldr	r3, [pc, #12]	; (3d4 <constexpr_bits_array()+0x10>)
     3c6:	2206      	movs	r2, #6
     3c8:	62da      	str	r2, [r3, #44]	; 0x2c
     3ca:	329a      	adds	r2, #154	; 0x9a
     3cc:	2180      	movs	r1, #128	; 0x80
     3ce:	0189      	lsls	r1, r1, #6
     3d0:	5099      	str	r1, [r3, r2]
     3d2:	4770      	bx	lr
     3d4:	20022500 	.word	0x20022500

000003d8 <runtime_bits_array()>:
     3d8:	b081      	sub	sp, #4
     3da:	2303      	movs	r3, #3
     3dc:	9300      	str	r3, [sp, #0]
     3de:	9b00      	ldr	r3, [sp, #0]
     3e0:	009b      	lsls	r3, r3, #2
     3e2:	4a07      	ldr	r2, [pc, #28]	; (400 <runtime_bits_array()+0x28>)
     3e4:	4694      	mov	ip, r2
     3e6:	4463      	add	r3, ip
     3e8:	2221      	movs	r2, #33	; 0x21
     3ea:	621a      	str	r2, [r3, #32]
     3ec:	2307      	movs	r3, #7
     3ee:	9300      	str	r3, [sp, #0]
     3f0:	9a00      	ldr	r2, [sp, #0]
     3f2:	3b06      	subs	r3, #6
     3f4:	4093      	lsls	r3, r2
     3f6:	4661      	mov	r1, ip
     3f8:	22a0      	movs	r2, #160	; 0xa0
     3fa:	508b      	str	r3, [r1, r2]
     3fc:	b001      	add	sp, #4
     3fe:	4770      	bx	lr
     400:	20022500 	.word	0x20022500

00000404 <prescaler_low()>:
     404:	4b04      	ldr	r3, [pc, #16]	; (418 <prescaler_low()+0x14>)
     406:	2277      	movs	r2, #119	; 0x77
     408:	605a      	str	r2, [r3, #4]
     40a:	685a      	ldr	r2, [r3, #4]
     40c:	237f      	movs	r3, #127	; 0x7f
     40e:	4013      	ands	r3, r2
     410:	4a02      	ldr	r2, [pc, #8]	; (41c <prescaler_low()+0x18>)
     412:	62d3      	str	r3, [r2, #44]	; 0x2c
     414:	4770      	bx	lr
     416:	46c0      	nop			; (mov r8, r8)
     418:	20022620 	.word	0x20022620
     41c:	20022500 	.word	0x20022500

00000420 <prescaler_high()>:
     420:	4b04      	ldr	r3, [pc, #16]	; (434 <prescaler_high()+0x14>)
     422:	22e8      	movs	r2, #232	; 0xe8
     424:	0592      	lsls	r2, r2, #22
     426:	605a      	str	r2, [r3, #4]
     428:	685b      	ldr	r3, [r3, #4]
     42a:	009b      	lsls	r3, r3, #2
     42c:	0edb      	lsrs	r3, r3, #27
     42e:	4a02      	ldr	r2, [pc, #8]	; (438 <prescaler_high()+0x18>)
     430:	62d3      	str	r3, [r2, #44]	; 0x2c
     432:	4770      	bx	lr
     434:	20022620 	.word	0x20022620
     438:	20022500 	.word	0x20022500

0000043c <reg_mskd_lss()>:
     43c:	4b09      	ldr	r3, [pc, #36]	; (464 <reg_mskd_lss()+0x28>)
     43e:	22d8      	movs	r2, #216	; 0xd8
     440:	0592      	lsls	r2, r2, #22
     442:	605a      	str	r2, [r3, #4]
     444:	685b      	ldr	r3, [r3, #4]
     446:	22f8      	movs	r2, #248	; 0xf8
     448:	0592      	lsls	r2, r2, #22
     44a:	4013      	ands	r3, r2
     44c:	4a06      	ldr	r2, [pc, #24]	; (468 <reg_mskd_lss()+0x2c>)
     44e:	4293      	cmp	r3, r2
     450:	d803      	bhi.n	45a <reg_mskd_lss()+0x1e>
     452:	4b06      	ldr	r3, [pc, #24]	; (46c <reg_mskd_lss()+0x30>)
     454:	2202      	movs	r2, #2
     456:	605a      	str	r2, [r3, #4]
     458:	4770      	bx	lr
     45a:	4b04      	ldr	r3, [pc, #16]	; (46c <reg_mskd_lss()+0x30>)
     45c:	2204      	movs	r2, #4
     45e:	605a      	str	r2, [r3, #4]
     460:	e7fa      	b.n	458 <reg_mskd_lss()+0x1c>
     462:	46c0      	nop			; (mov r8, r8)
     464:	20022620 	.word	0x20022620
     468:	37ffffff 	.word	0x37ffffff
     46c:	200226c0 	.word	0x200226c0

00000470 <reg_mskd_leq()>:
     470:	4b0c      	ldr	r3, [pc, #48]	; (4a4 <reg_mskd_leq()+0x34>)
     472:	22b8      	movs	r2, #184	; 0xb8
     474:	0592      	lsls	r2, r2, #22
     476:	605a      	str	r2, [r3, #4]
     478:	685b      	ldr	r3, [r3, #4]
     47a:	21f8      	movs	r1, #248	; 0xf8
     47c:	0589      	lsls	r1, r1, #22
     47e:	400b      	ands	r3, r1
     480:	4293      	cmp	r3, r2
     482:	d80a      	bhi.n	49a <reg_mskd_leq()+0x2a>
     484:	4b07      	ldr	r3, [pc, #28]	; (4a4 <reg_mskd_leq()+0x34>)
     486:	685b      	ldr	r3, [r3, #4]
     488:	400b      	ands	r3, r1
     48a:	22c0      	movs	r2, #192	; 0xc0
     48c:	0592      	lsls	r2, r2, #22
     48e:	4293      	cmp	r3, r2
     490:	d803      	bhi.n	49a <reg_mskd_leq()+0x2a>
     492:	4b05      	ldr	r3, [pc, #20]	; (4a8 <reg_mskd_leq()+0x38>)
     494:	2202      	movs	r2, #2
     496:	605a      	str	r2, [r3, #4]
     498:	e002      	b.n	4a0 <reg_mskd_leq()+0x30>
     49a:	4b03      	ldr	r3, [pc, #12]	; (4a8 <reg_mskd_leq()+0x38>)
     49c:	2204      	movs	r2, #4
     49e:	605a      	str	r2, [r3, #4]
     4a0:	4770      	bx	lr
     4a2:	46c0      	nop			; (mov r8, r8)
     4a4:	20022620 	.word	0x20022620
     4a8:	200226c0 	.word	0x200226c0

000004ac <reg_mskd_gtr()>:
     4ac:	4b09      	ldr	r3, [pc, #36]	; (4d4 <reg_mskd_gtr()+0x28>)
     4ae:	2298      	movs	r2, #152	; 0x98
     4b0:	0592      	lsls	r2, r2, #22
     4b2:	605a      	str	r2, [r3, #4]
     4b4:	685b      	ldr	r3, [r3, #4]
     4b6:	22f8      	movs	r2, #248	; 0xf8
     4b8:	0592      	lsls	r2, r2, #22
     4ba:	4013      	ands	r3, r2
     4bc:	2290      	movs	r2, #144	; 0x90
     4be:	0592      	lsls	r2, r2, #22
     4c0:	4293      	cmp	r3, r2
     4c2:	d903      	bls.n	4cc <reg_mskd_gtr()+0x20>
     4c4:	4b04      	ldr	r3, [pc, #16]	; (4d8 <reg_mskd_gtr()+0x2c>)
     4c6:	2202      	movs	r2, #2
     4c8:	605a      	str	r2, [r3, #4]
     4ca:	4770      	bx	lr
     4cc:	4b02      	ldr	r3, [pc, #8]	; (4d8 <reg_mskd_gtr()+0x2c>)
     4ce:	2204      	movs	r2, #4
     4d0:	605a      	str	r2, [r3, #4]
     4d2:	e7fa      	b.n	4ca <reg_mskd_gtr()+0x1e>
     4d4:	20022620 	.word	0x20022620
     4d8:	200226c0 	.word	0x200226c0

000004dc <reg_mskd_geq()>:
     4dc:	4b0d      	ldr	r3, [pc, #52]	; (514 <reg_mskd_geq()+0x38>)
     4de:	2288      	movs	r2, #136	; 0x88
     4e0:	0592      	lsls	r2, r2, #22
     4e2:	605a      	str	r2, [r3, #4]
     4e4:	685b      	ldr	r3, [r3, #4]
     4e6:	22f8      	movs	r2, #248	; 0xf8
     4e8:	0592      	lsls	r2, r2, #22
     4ea:	4013      	ands	r3, r2
     4ec:	4a0a      	ldr	r2, [pc, #40]	; (518 <reg_mskd_geq()+0x3c>)
     4ee:	4293      	cmp	r3, r2
     4f0:	d90b      	bls.n	50a <reg_mskd_geq()+0x2e>
     4f2:	4b08      	ldr	r3, [pc, #32]	; (514 <reg_mskd_geq()+0x38>)
     4f4:	685b      	ldr	r3, [r3, #4]
     4f6:	22f8      	movs	r2, #248	; 0xf8
     4f8:	0592      	lsls	r2, r2, #22
     4fa:	4013      	ands	r3, r2
     4fc:	4a07      	ldr	r2, [pc, #28]	; (51c <reg_mskd_geq()+0x40>)
     4fe:	4293      	cmp	r3, r2
     500:	d903      	bls.n	50a <reg_mskd_geq()+0x2e>
     502:	4b07      	ldr	r3, [pc, #28]	; (520 <reg_mskd_geq()+0x44>)
     504:	2202      	movs	r2, #2
     506:	605a      	str	r2, [r3, #4]
     508:	e002      	b.n	510 <reg_mskd_geq()+0x34>
     50a:	4b05      	ldr	r3, [pc, #20]	; (520 <reg_mskd_geq()+0x44>)
     50c:	2204      	movs	r2, #4
     50e:	605a      	str	r2, [r3, #4]
     510:	4770      	bx	lr
     512:	46c0      	nop			; (mov r8, r8)
     514:	20022620 	.word	0x20022620
     518:	1fffffff 	.word	0x1fffffff
     51c:	21ffffff 	.word	0x21ffffff
     520:	200226c0 	.word	0x200226c0

00000524 <pos_cmp_eq()>:
     524:	4b01      	ldr	r3, [pc, #4]	; (52c <pos_cmp_eq()+0x8>)
     526:	2202      	movs	r2, #2
     528:	605a      	str	r2, [r3, #4]
     52a:	4770      	bx	lr
     52c:	200226c0 	.word	0x200226c0

00000530 <pos_cmp_ne()>:
     530:	4b01      	ldr	r3, [pc, #4]	; (538 <pos_cmp_ne()+0x8>)
     532:	2202      	movs	r2, #2
     534:	605a      	str	r2, [r3, #4]
     536:	4770      	bx	lr
     538:	200226c0 	.word	0x200226c0

0000053c <bits_extract_eq()>:
     53c:	4b06      	ldr	r3, [pc, #24]	; (558 <bits_extract_eq()+0x1c>)
     53e:	2240      	movs	r2, #64	; 0x40
     540:	605a      	str	r2, [r3, #4]
     542:	685b      	ldr	r3, [r3, #4]
     544:	2b40      	cmp	r3, #64	; 0x40
     546:	d003      	beq.n	550 <bits_extract_eq()+0x14>
     548:	4b03      	ldr	r3, [pc, #12]	; (558 <bits_extract_eq()+0x1c>)
     54a:	2204      	movs	r2, #4
     54c:	605a      	str	r2, [r3, #4]
     54e:	4770      	bx	lr
     550:	4b01      	ldr	r3, [pc, #4]	; (558 <bits_extract_eq()+0x1c>)
     552:	3a3e      	subs	r2, #62	; 0x3e
     554:	605a      	str	r2, [r3, #4]
     556:	e7fa      	b.n	54e <bits_extract_eq()+0x12>
     558:	200226c0 	.word	0x200226c0

0000055c <mskd_extract_eq()>:
     55c:	4b06      	ldr	r3, [pc, #24]	; (578 <mskd_extract_eq()+0x1c>)
     55e:	2202      	movs	r2, #2
     560:	605a      	str	r2, [r3, #4]
     562:	685b      	ldr	r3, [r3, #4]
     564:	2b02      	cmp	r3, #2
     566:	d003      	beq.n	570 <mskd_extract_eq()+0x14>
     568:	4b03      	ldr	r3, [pc, #12]	; (578 <mskd_extract_eq()+0x1c>)
     56a:	2240      	movs	r2, #64	; 0x40
     56c:	605a      	str	r2, [r3, #4]
     56e:	4770      	bx	lr
     570:	4b01      	ldr	r3, [pc, #4]	; (578 <mskd_extract_eq()+0x1c>)
     572:	321e      	adds	r2, #30
     574:	605a      	str	r2, [r3, #4]
     576:	e7fa      	b.n	56e <mskd_extract_eq()+0x12>
     578:	200226c0 	.word	0x200226c0

0000057c <mskd_extract_ne()>:
     57c:	4b06      	ldr	r3, [pc, #24]	; (598 <mskd_extract_ne()+0x1c>)
     57e:	2204      	movs	r2, #4
     580:	605a      	str	r2, [r3, #4]
     582:	685b      	ldr	r3, [r3, #4]
     584:	2b04      	cmp	r3, #4
     586:	d003      	beq.n	590 <mskd_extract_ne()+0x14>
     588:	4b03      	ldr	r3, [pc, #12]	; (598 <mskd_extract_ne()+0x1c>)
     58a:	2220      	movs	r2, #32
     58c:	605a      	str	r2, [r3, #4]
     58e:	4770      	bx	lr
     590:	4b01      	ldr	r3, [pc, #4]	; (598 <mskd_extract_ne()+0x1c>)
     592:	323c      	adds	r2, #60	; 0x3c
     594:	605a      	str	r2, [r3, #4]
     596:	e7fa      	b.n	58e <mskd_extract_ne()+0x12>
     598:	200226c0 	.word	0x200226c0

0000059c <mskd_extract_lss()>:
     59c:	4b07      	ldr	r3, [pc, #28]	; (5bc <mskd_extract_lss()+0x20>)
     59e:	22b0      	movs	r2, #176	; 0xb0
     5a0:	0552      	lsls	r2, r2, #21
     5a2:	605a      	str	r2, [r3, #4]
     5a4:	685a      	ldr	r2, [r3, #4]
     5a6:	4b06      	ldr	r3, [pc, #24]	; (5c0 <mskd_extract_lss()+0x24>)
     5a8:	429a      	cmp	r2, r3
     5aa:	d803      	bhi.n	5b4 <mskd_extract_lss()+0x18>
     5ac:	4b05      	ldr	r3, [pc, #20]	; (5c4 <mskd_extract_lss()+0x28>)
     5ae:	2220      	movs	r2, #32
     5b0:	605a      	str	r2, [r3, #4]
     5b2:	4770      	bx	lr
     5b4:	4b03      	ldr	r3, [pc, #12]	; (5c4 <mskd_extract_lss()+0x28>)
     5b6:	2240      	movs	r2, #64	; 0x40
     5b8:	605a      	str	r2, [r3, #4]
     5ba:	e7fa      	b.n	5b2 <mskd_extract_lss()+0x16>
     5bc:	20022620 	.word	0x20022620
     5c0:	17ffffff 	.word	0x17ffffff
     5c4:	200226c0 	.word	0x200226c0

000005c8 <mskd_extract_leq()>:
     5c8:	4a07      	ldr	r2, [pc, #28]	; (5e8 <mskd_extract_leq()+0x20>)
     5ca:	23b8      	movs	r3, #184	; 0xb8
     5cc:	059b      	lsls	r3, r3, #22
     5ce:	6053      	str	r3, [r2, #4]
     5d0:	6852      	ldr	r2, [r2, #4]
     5d2:	429a      	cmp	r2, r3
     5d4:	d903      	bls.n	5de <mskd_extract_leq()+0x16>
     5d6:	4b05      	ldr	r3, [pc, #20]	; (5ec <mskd_extract_leq()+0x24>)
     5d8:	2240      	movs	r2, #64	; 0x40
     5da:	605a      	str	r2, [r3, #4]
     5dc:	4770      	bx	lr
     5de:	4b03      	ldr	r3, [pc, #12]	; (5ec <mskd_extract_leq()+0x24>)
     5e0:	2220      	movs	r2, #32
     5e2:	605a      	str	r2, [r3, #4]
     5e4:	e7fa      	b.n	5dc <mskd_extract_leq()+0x14>
     5e6:	46c0      	nop			; (mov r8, r8)
     5e8:	20022620 	.word	0x20022620
     5ec:	200226c0 	.word	0x200226c0

000005f0 <mskd_extract_gtr()>:
     5f0:	4b08      	ldr	r3, [pc, #32]	; (614 <mskd_extract_gtr()+0x24>)
     5f2:	2298      	movs	r2, #152	; 0x98
     5f4:	0592      	lsls	r2, r2, #22
     5f6:	605a      	str	r2, [r3, #4]
     5f8:	685a      	ldr	r2, [r3, #4]
     5fa:	2390      	movs	r3, #144	; 0x90
     5fc:	059b      	lsls	r3, r3, #22
     5fe:	429a      	cmp	r2, r3
     600:	d903      	bls.n	60a <mskd_extract_gtr()+0x1a>
     602:	4b05      	ldr	r3, [pc, #20]	; (618 <mskd_extract_gtr()+0x28>)
     604:	2220      	movs	r2, #32
     606:	605a      	str	r2, [r3, #4]
     608:	4770      	bx	lr
     60a:	4b03      	ldr	r3, [pc, #12]	; (618 <mskd_extract_gtr()+0x28>)
     60c:	2240      	movs	r2, #64	; 0x40
     60e:	605a      	str	r2, [r3, #4]
     610:	e7fa      	b.n	608 <mskd_extract_gtr()+0x18>
     612:	46c0      	nop			; (mov r8, r8)
     614:	20022620 	.word	0x20022620
     618:	200226c0 	.word	0x200226c0

0000061c <set_bits_global()>:
     61c:	4a02      	ldr	r2, [pc, #8]	; (628 <set_bits_global()+0xc>)
     61e:	6853      	ldr	r3, [r2, #4]
     620:	2140      	movs	r1, #64	; 0x40
     622:	430b      	orrs	r3, r1
     624:	6053      	str	r3, [r2, #4]
     626:	4770      	bx	lr
     628:	200226c0 	.word	0x200226c0

0000062c <ins_mskd_global()>:
     62c:	4a03      	ldr	r2, [pc, #12]	; (63c <ins_mskd_global()+0x10>)
     62e:	6853      	ldr	r3, [r2, #4]
     630:	2106      	movs	r1, #6
     632:	438b      	bics	r3, r1
     634:	3904      	subs	r1, #4
     636:	430b      	orrs	r3, r1
     638:	6053      	str	r3, [r2, #4]
     63a:	4770      	bx	lr
     63c:	200226c0 	.word	0x200226c0

00000640 <assign_array_global()>:
     640:	4b01      	ldr	r3, [pc, #4]	; (648 <assign_array_global()+0x8>)
     642:	22bd      	movs	r2, #189	; 0xbd
     644:	601a      	str	r2, [r3, #0]
     646:	4770      	bx	lr
     648:	2002252c 	.word	0x2002252c

0000064c <shifted_global()>:
     64c:	4b04      	ldr	r3, [pc, #16]	; (660 <shifted_global()+0x14>)
     64e:	22b8      	movs	r2, #184	; 0xb8
     650:	0592      	lsls	r2, r2, #22
     652:	605a      	str	r2, [r3, #4]
     654:	685b      	ldr	r3, [r3, #4]
     656:	009b      	lsls	r3, r3, #2
     658:	0edb      	lsrs	r3, r3, #27
     65a:	4a02      	ldr	r2, [pc, #8]	; (664 <shifted_global()+0x18>)
     65c:	62d3      	str	r3, [r2, #44]	; 0x2c
     65e:	4770      	bx	lr
     660:	20022620 	.word	0x20022620
     664:	20022500 	.word	0x20022500

00000668 <assign_register_global()>:
     668:	4b01      	ldr	r3, [pc, #4]	; (670 <assign_register_global()+0x8>)
     66a:	2204      	movs	r2, #4
     66c:	605a      	str	r2, [r3, #4]
     66e:	4770      	bx	lr
     670:	200226c0 	.word	0x200226c0

00000674 <copy_bits_equ()>:
     674:	4a06      	ldr	r2, [pc, #24]	; (690 <copy_bits_equ()+0x1c>)
     676:	2340      	movs	r3, #64	; 0x40
     678:	6053      	str	r3, [r2, #4]
     67a:	6852      	ldr	r2, [r2, #4]
     67c:	4213      	tst	r3, r2
     67e:	d103      	bne.n	688 <copy_bits_equ()+0x14>
     680:	4b03      	ldr	r3, [pc, #12]	; (690 <copy_bits_equ()+0x1c>)
     682:	2204      	movs	r2, #4
     684:	605a      	str	r2, [r3, #4]
     686:	4770      	bx	lr
     688:	4b01      	ldr	r3, [pc, #4]	; (690 <copy_bits_equ()+0x1c>)
     68a:	2202      	movs	r2, #2
     68c:	605a      	str	r2, [r3, #4]
     68e:	e7fa      	b.n	686 <copy_bits_equ()+0x12>
     690:	200226c0 	.word	0x200226c0

00000694 <copy_bits_neq()>:
     694:	4a06      	ldr	r2, [pc, #24]	; (6b0 <copy_bits_neq()+0x1c>)
     696:	2340      	movs	r3, #64	; 0x40
     698:	6053      	str	r3, [r2, #4]
     69a:	6852      	ldr	r2, [r2, #4]
     69c:	4213      	tst	r3, r2
     69e:	d103      	bne.n	6a8 <copy_bits_neq()+0x14>
     6a0:	4b03      	ldr	r3, [pc, #12]	; (6b0 <copy_bits_neq()+0x1c>)
     6a2:	2202      	movs	r2, #2
     6a4:	605a      	str	r2, [r3, #4]
     6a6:	4770      	bx	lr
     6a8:	4b01      	ldr	r3, [pc, #4]	; (6b0 <copy_bits_neq()+0x1c>)
     6aa:	2204      	movs	r2, #4
     6ac:	605a      	str	r2, [r3, #4]
     6ae:	e7fa      	b.n	6a6 <copy_bits_neq()+0x12>
     6b0:	200226c0 	.word	0x200226c0

000006b4 <copy_mskd_equ()>:
     6b4:	4b08      	ldr	r3, [pc, #32]	; (6d8 <copy_mskd_equ()+0x24>)
     6b6:	22b0      	movs	r2, #176	; 0xb0
     6b8:	0552      	lsls	r2, r2, #21
     6ba:	605a      	str	r2, [r3, #4]
     6bc:	685b      	ldr	r3, [r3, #4]
     6be:	21f8      	movs	r1, #248	; 0xf8
     6c0:	0589      	lsls	r1, r1, #22
     6c2:	400b      	ands	r3, r1
     6c4:	4293      	cmp	r3, r2
     6c6:	d003      	beq.n	6d0 <copy_mskd_equ()+0x1c>
     6c8:	4b04      	ldr	r3, [pc, #16]	; (6dc <copy_mskd_equ()+0x28>)
     6ca:	2204      	movs	r2, #4
     6cc:	605a      	str	r2, [r3, #4]
     6ce:	4770      	bx	lr
     6d0:	4b02      	ldr	r3, [pc, #8]	; (6dc <copy_mskd_equ()+0x28>)
     6d2:	2202      	movs	r2, #2
     6d4:	605a      	str	r2, [r3, #4]
     6d6:	e7fa      	b.n	6ce <copy_mskd_equ()+0x1a>
     6d8:	20022620 	.word	0x20022620
     6dc:	200226c0 	.word	0x200226c0

000006e0 <copy_mskd_neq()>:
     6e0:	4b08      	ldr	r3, [pc, #32]	; (704 <copy_mskd_neq()+0x24>)
     6e2:	22d0      	movs	r2, #208	; 0xd0
     6e4:	0552      	lsls	r2, r2, #21
     6e6:	605a      	str	r2, [r3, #4]
     6e8:	685b      	ldr	r3, [r3, #4]
     6ea:	21f8      	movs	r1, #248	; 0xf8
     6ec:	0589      	lsls	r1, r1, #22
     6ee:	400b      	ands	r3, r1
     6f0:	4293      	cmp	r3, r2
     6f2:	d003      	beq.n	6fc <copy_mskd_neq()+0x1c>
     6f4:	4b04      	ldr	r3, [pc, #16]	; (708 <copy_mskd_neq()+0x28>)
     6f6:	2202      	movs	r2, #2
     6f8:	605a      	str	r2, [r3, #4]
     6fa:	4770      	bx	lr
     6fc:	4b02      	ldr	r3, [pc, #8]	; (708 <copy_mskd_neq()+0x28>)
     6fe:	2204      	movs	r2, #4
     700:	605a      	str	r2, [r3, #4]
     702:	e7fa      	b.n	6fa <copy_mskd_neq()+0x1a>
     704:	20022620 	.word	0x20022620
     708:	200226c0 	.word	0x200226c0

0000070c <copy_mskd_lss()>:
     70c:	4b09      	ldr	r3, [pc, #36]	; (734 <copy_mskd_lss()+0x28>)
     70e:	22d8      	movs	r2, #216	; 0xd8
     710:	0592      	lsls	r2, r2, #22
     712:	605a      	str	r2, [r3, #4]
     714:	685b      	ldr	r3, [r3, #4]
     716:	22f8      	movs	r2, #248	; 0xf8
     718:	0592      	lsls	r2, r2, #22
     71a:	4013      	ands	r3, r2
     71c:	4a06      	ldr	r2, [pc, #24]	; (738 <copy_mskd_lss()+0x2c>)
     71e:	4293      	cmp	r3, r2
     720:	d803      	bhi.n	72a <copy_mskd_lss()+0x1e>
     722:	4b06      	ldr	r3, [pc, #24]	; (73c <copy_mskd_lss()+0x30>)
     724:	2202      	movs	r2, #2
     726:	605a      	str	r2, [r3, #4]
     728:	4770      	bx	lr
     72a:	4b04      	ldr	r3, [pc, #16]	; (73c <copy_mskd_lss()+0x30>)
     72c:	2204      	movs	r2, #4
     72e:	605a      	str	r2, [r3, #4]
     730:	e7fa      	b.n	728 <copy_mskd_lss()+0x1c>
     732:	46c0      	nop			; (mov r8, r8)
     734:	20022620 	.word	0x20022620
     738:	37ffffff 	.word	0x37ffffff
     73c:	200226c0 	.word	0x200226c0

00000740 <copy_mskd_leq()>:
     740:	4b08      	ldr	r3, [pc, #32]	; (764 <copy_mskd_leq()+0x24>)
     742:	22b8      	movs	r2, #184	; 0xb8
     744:	0592      	lsls	r2, r2, #22
     746:	605a      	str	r2, [r3, #4]
     748:	685b      	ldr	r3, [r3, #4]
     74a:	21f8      	movs	r1, #248	; 0xf8
     74c:	0589      	lsls	r1, r1, #22
     74e:	400b      	ands	r3, r1
     750:	4293      	cmp	r3, r2
     752:	d903      	bls.n	75c <copy_mskd_leq()+0x1c>
     754:	4b04      	ldr	r3, [pc, #16]	; (768 <copy_mskd_leq()+0x28>)
     756:	2204      	movs	r2, #4
     758:	605a      	str	r2, [r3, #4]
     75a:	4770      	bx	lr
     75c:	4b02      	ldr	r3, [pc, #8]	; (768 <copy_mskd_leq()+0x28>)
     75e:	2202      	movs	r2, #2
     760:	605a      	str	r2, [r3, #4]
     762:	e7fa      	b.n	75a <copy_mskd_leq()+0x1a>
     764:	20022620 	.word	0x20022620
     768:	200226c0 	.word	0x200226c0

0000076c <copy_mskd_gtr()>:
     76c:	4b09      	ldr	r3, [pc, #36]	; (794 <copy_mskd_gtr()+0x28>)
     76e:	2298      	movs	r2, #152	; 0x98
     770:	0592      	lsls	r2, r2, #22
     772:	605a      	str	r2, [r3, #4]
     774:	685b      	ldr	r3, [r3, #4]
     776:	22f8      	movs	r2, #248	; 0xf8
     778:	0592      	lsls	r2, r2, #22
     77a:	4013      	ands	r3, r2
     77c:	2290      	movs	r2, #144	; 0x90
     77e:	0592      	lsls	r2, r2, #22
     780:	4293      	cmp	r3, r2
     782:	d903      	bls.n	78c <copy_mskd_gtr()+0x20>
     784:	4b04      	ldr	r3, [pc, #16]	; (798 <copy_mskd_gtr()+0x2c>)
     786:	2202      	movs	r2, #2
     788:	605a      	str	r2, [r3, #4]
     78a:	4770      	bx	lr
     78c:	4b02      	ldr	r3, [pc, #8]	; (798 <copy_mskd_gtr()+0x2c>)
     78e:	2204      	movs	r2, #4
     790:	605a      	str	r2, [r3, #4]
     792:	e7fa      	b.n	78a <copy_mskd_gtr()+0x1e>
     794:	20022620 	.word	0x20022620
     798:	200226c0 	.word	0x200226c0

0000079c <copy_mskd_geq()>:
     79c:	4b09      	ldr	r3, [pc, #36]	; (7c4 <copy_mskd_geq()+0x28>)
     79e:	2288      	movs	r2, #136	; 0x88
     7a0:	0592      	lsls	r2, r2, #22
     7a2:	605a      	str	r2, [r3, #4]
     7a4:	685b      	ldr	r3, [r3, #4]
     7a6:	22f8      	movs	r2, #248	; 0xf8
     7a8:	0592      	lsls	r2, r2, #22
     7aa:	4013      	ands	r3, r2
     7ac:	4a06      	ldr	r2, [pc, #24]	; (7c8 <copy_mskd_geq()+0x2c>)
     7ae:	4293      	cmp	r3, r2
     7b0:	d803      	bhi.n	7ba <copy_mskd_geq()+0x1e>
     7b2:	4b06      	ldr	r3, [pc, #24]	; (7cc <copy_mskd_geq()+0x30>)
     7b4:	2204      	movs	r2, #4
     7b6:	605a      	str	r2, [r3, #4]
     7b8:	4770      	bx	lr
     7ba:	4b04      	ldr	r3, [pc, #16]	; (7cc <copy_mskd_geq()+0x30>)
     7bc:	2202      	movs	r2, #2
     7be:	605a      	str	r2, [r3, #4]
     7c0:	e7fa      	b.n	7b8 <copy_mskd_geq()+0x1c>
     7c2:	46c0      	nop			; (mov r8, r8)
     7c4:	20022620 	.word	0x20022620
     7c8:	21ffffff 	.word	0x21ffffff
     7cc:	200226c0 	.word	0x200226c0

000007d0 <copy_shifted()>:
     7d0:	4b08      	ldr	r3, [pc, #32]	; (7f4 <copy_shifted()+0x24>)
     7d2:	22b0      	movs	r2, #176	; 0xb0
     7d4:	0552      	lsls	r2, r2, #21
     7d6:	605a      	str	r2, [r3, #4]
     7d8:	685b      	ldr	r3, [r3, #4]
     7da:	009b      	lsls	r3, r3, #2
     7dc:	0edb      	lsrs	r3, r3, #27
     7de:	2b0b      	cmp	r3, #11
     7e0:	d003      	beq.n	7ea <copy_shifted()+0x1a>
     7e2:	4b05      	ldr	r3, [pc, #20]	; (7f8 <copy_shifted()+0x28>)
     7e4:	2204      	movs	r2, #4
     7e6:	605a      	str	r2, [r3, #4]
     7e8:	4770      	bx	lr
     7ea:	4b03      	ldr	r3, [pc, #12]	; (7f8 <copy_shifted()+0x28>)
     7ec:	2202      	movs	r2, #2
     7ee:	605a      	str	r2, [r3, #4]
     7f0:	e7fa      	b.n	7e8 <copy_shifted()+0x18>
     7f2:	46c0      	nop			; (mov r8, r8)
     7f4:	20022620 	.word	0x20022620
     7f8:	200226c0 	.word	0x200226c0

000007fc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>:
     7fc:	4b02      	ldr	r3, [pc, #8]	; (808 <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)+0xc>)
     7fe:	685a      	ldr	r2, [r3, #4]
     800:	4310      	orrs	r0, r2
     802:	6058      	str	r0, [r3, #4]
     804:	4770      	bx	lr
     806:	46c0      	nop			; (mov r8, r8)
     808:	200226c0 	.word	0x200226c0

0000080c <call_bits_val_var()>:
     80c:	b500      	push	{lr}
     80e:	2040      	movs	r0, #64	; 0x40
     810:	f7ff fffe 	bl	7fc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
     814:	bd00      	pop	{pc}

00000816 <call_bits_val_const()>:
     816:	b500      	push	{lr}
     818:	2040      	movs	r0, #64	; 0x40
     81a:	f7ff fffe 	bl	7fc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
     81e:	bd00      	pop	{pc}

00000820 <call_bits_val_global()>:
     820:	b500      	push	{lr}
     822:	2040      	movs	r0, #64	; 0x40
     824:	f7ff fffe 	bl	7fc <bits_val(regbits::Bits<unsigned long, mcu::Serial::Config>)>
     828:	bd00      	pop	{pc}

0000082a <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
     82a:	4a03      	ldr	r2, [pc, #12]	; (838 <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)+0xe>)
     82c:	6853      	ldr	r3, [r2, #4]
     82e:	6801      	ldr	r1, [r0, #0]
     830:	430b      	orrs	r3, r1
     832:	6053      	str	r3, [r2, #4]
     834:	4770      	bx	lr
     836:	46c0      	nop			; (mov r8, r8)
     838:	200226c0 	.word	0x200226c0

0000083c <call_bits_ref_var()>:
     83c:	b500      	push	{lr}
     83e:	b081      	sub	sp, #4
     840:	2301      	movs	r3, #1
     842:	9300      	str	r3, [sp, #0]
     844:	4668      	mov	r0, sp
     846:	f7ff fffe 	bl	82a <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
     84a:	b001      	add	sp, #4
     84c:	bd00      	pop	{pc}

0000084e <call_bits_ref_const()>:
     84e:	b500      	push	{lr}
     850:	b081      	sub	sp, #4
     852:	2301      	movs	r3, #1
     854:	9300      	str	r3, [sp, #0]
     856:	4668      	mov	r0, sp
     858:	f7ff fffe 	bl	82a <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
     85c:	b001      	add	sp, #4
     85e:	bd00      	pop	{pc}

00000860 <call_bits_ref_global()>:
     860:	b500      	push	{lr}
     862:	b081      	sub	sp, #4
     864:	2340      	movs	r3, #64	; 0x40
     866:	9300      	str	r3, [sp, #0]
     868:	4668      	mov	r0, sp
     86a:	f7ff fffe 	bl	82a <bits_ref(regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
     86e:	b001      	add	sp, #4
     870:	bd00      	pop	{pc}

00000872 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     872:	4a03      	ldr	r2, [pc, #12]	; (880 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
     874:	6853      	ldr	r3, [r2, #4]
     876:	4383      	bics	r3, r0
     878:	430b      	orrs	r3, r1
     87a:	6053      	str	r3, [r2, #4]
     87c:	4770      	bx	lr
     87e:	46c0      	nop			; (mov r8, r8)
     880:	200226c0 	.word	0x200226c0

00000884 <call_mskd_val_var()>:
     884:	b500      	push	{lr}
     886:	2006      	movs	r0, #6
     888:	2102      	movs	r1, #2
     88a:	f7ff fffe 	bl	872 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     88e:	bd00      	pop	{pc}

00000890 <call_mskd_val_const()>:
     890:	b500      	push	{lr}
     892:	2006      	movs	r0, #6
     894:	2102      	movs	r1, #2
     896:	f7ff fffe 	bl	872 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     89a:	bd00      	pop	{pc}

0000089c <call_mskd_val_global()>:
     89c:	b500      	push	{lr}
     89e:	2006      	movs	r0, #6
     8a0:	2102      	movs	r1, #2
     8a2:	f7ff fffe 	bl	872 <mskd_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     8a6:	bd00      	pop	{pc}

000008a8 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>:
     8a8:	4a03      	ldr	r2, [pc, #12]	; (8b8 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)+0x10>)
     8aa:	6853      	ldr	r3, [r2, #4]
     8ac:	6801      	ldr	r1, [r0, #0]
     8ae:	438b      	bics	r3, r1
     8b0:	6841      	ldr	r1, [r0, #4]
     8b2:	430b      	orrs	r3, r1
     8b4:	6053      	str	r3, [r2, #4]
     8b6:	4770      	bx	lr
     8b8:	200226c0 	.word	0x200226c0

000008bc <call_mskd_ref_var()>:
     8bc:	b500      	push	{lr}
     8be:	b082      	sub	sp, #8
     8c0:	4b04      	ldr	r3, [pc, #16]	; (8d4 <call_mskd_ref_var()+0x18>)
     8c2:	681a      	ldr	r2, [r3, #0]
     8c4:	685b      	ldr	r3, [r3, #4]
     8c6:	9200      	str	r2, [sp, #0]
     8c8:	9301      	str	r3, [sp, #4]
     8ca:	4668      	mov	r0, sp
     8cc:	f7ff fffe 	bl	8a8 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
     8d0:	b002      	add	sp, #8
     8d2:	bd00      	pop	{pc}
     8d4:	00000000 	.word	0x00000000

000008d8 <call_mskd_ref_const()>:
     8d8:	b500      	push	{lr}
     8da:	b082      	sub	sp, #8
     8dc:	2306      	movs	r3, #6
     8de:	9300      	str	r3, [sp, #0]
     8e0:	3b02      	subs	r3, #2
     8e2:	9301      	str	r3, [sp, #4]
     8e4:	4668      	mov	r0, sp
     8e6:	f7ff fffe 	bl	8a8 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
     8ea:	b002      	add	sp, #8
     8ec:	bd00      	pop	{pc}

000008ee <call_mskd_ref_global()>:
     8ee:	b500      	push	{lr}
     8f0:	b082      	sub	sp, #8
     8f2:	2306      	movs	r3, #6
     8f4:	9300      	str	r3, [sp, #0]
     8f6:	3b04      	subs	r3, #4
     8f8:	9301      	str	r3, [sp, #4]
     8fa:	4668      	mov	r0, sp
     8fc:	f7ff fffe 	bl	8a8 <mskd_ref(regbits::Mskd<unsigned long, mcu::Serial::Config> const&)>
     900:	b002      	add	sp, #8
     902:	bd00      	pop	{pc}

00000904 <periph_bits(mcu::Serial*)>:
     904:	6843      	ldr	r3, [r0, #4]
     906:	2240      	movs	r2, #64	; 0x40
     908:	4313      	orrs	r3, r2
     90a:	6043      	str	r3, [r0, #4]
     90c:	4770      	bx	lr

0000090e <call_periph_bits()>:
     90e:	b500      	push	{lr}
     910:	4801      	ldr	r0, [pc, #4]	; (918 <call_periph_bits()+0xa>)
     912:	f7ff fffe 	bl	904 <periph_bits(mcu::Serial*)>
     916:	bd00      	pop	{pc}
     918:	200226c0 	.word	0x200226c0

0000091c <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
     91c:	6843      	ldr	r3, [r0, #4]
     91e:	4319      	orrs	r1, r3
     920:	6041      	str	r1, [r0, #4]
     922:	4770      	bx	lr

00000924 <call_periph_bits_val()>:
     924:	b500      	push	{lr}
     926:	2140      	movs	r1, #64	; 0x40
     928:	4801      	ldr	r0, [pc, #4]	; (930 <call_periph_bits_val()+0xc>)
     92a:	f7ff fffe 	bl	91c <periph_bits_val(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config>)>
     92e:	bd00      	pop	{pc}
     930:	200226c0 	.word	0x200226c0

00000934 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)>:
     934:	6803      	ldr	r3, [r0, #0]
     936:	4319      	orrs	r1, r3
     938:	6001      	str	r1, [r0, #0]
     93a:	4770      	bx	lr

0000093c <call_reg_bits_val()>:
     93c:	b500      	push	{lr}
     93e:	2140      	movs	r1, #64	; 0x40
     940:	4801      	ldr	r0, [pc, #4]	; (948 <call_reg_bits_val()+0xc>)
     942:	f7ff fffe 	bl	934 <reg_bits_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config>)>
     946:	bd00      	pop	{pc}
     948:	200226c4 	.word	0x200226c4

0000094c <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
     94c:	6843      	ldr	r3, [r0, #4]
     94e:	680a      	ldr	r2, [r1, #0]
     950:	4313      	orrs	r3, r2
     952:	6043      	str	r3, [r0, #4]
     954:	4770      	bx	lr

00000956 <call_periph_bits_ref()>:
     956:	b500      	push	{lr}
     958:	b081      	sub	sp, #4
     95a:	2340      	movs	r3, #64	; 0x40
     95c:	9300      	str	r3, [sp, #0]
     95e:	4669      	mov	r1, sp
     960:	4802      	ldr	r0, [pc, #8]	; (96c <call_periph_bits_ref()+0x16>)
     962:	f7ff fffe 	bl	94c <periph_bits_ref(mcu::Serial*, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
     966:	b001      	add	sp, #4
     968:	bd00      	pop	{pc}
     96a:	46c0      	nop			; (mov r8, r8)
     96c:	200226c0 	.word	0x200226c0

00000970 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>:
     970:	6803      	ldr	r3, [r0, #0]
     972:	680a      	ldr	r2, [r1, #0]
     974:	4313      	orrs	r3, r2
     976:	6003      	str	r3, [r0, #0]
     978:	4770      	bx	lr

0000097a <call_reg_bits_ref()>:
     97a:	b500      	push	{lr}
     97c:	b081      	sub	sp, #4
     97e:	2340      	movs	r3, #64	; 0x40
     980:	9300      	str	r3, [sp, #0]
     982:	4669      	mov	r1, sp
     984:	4802      	ldr	r0, [pc, #8]	; (990 <call_reg_bits_ref()+0x16>)
     986:	f7ff fffe 	bl	970 <reg_bits_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Bits<unsigned long, mcu::Serial::Config> const&)>
     98a:	b001      	add	sp, #4
     98c:	bd00      	pop	{pc}
     98e:	46c0      	nop			; (mov r8, r8)
     990:	200226c4 	.word	0x200226c4

00000994 <periph_mskd(mcu::Serial*)>:
     994:	6843      	ldr	r3, [r0, #4]
     996:	2206      	movs	r2, #6
     998:	4393      	bics	r3, r2
     99a:	3a04      	subs	r2, #4
     99c:	4313      	orrs	r3, r2
     99e:	6043      	str	r3, [r0, #4]
     9a0:	4770      	bx	lr

000009a2 <call_periph_mskd()>:
     9a2:	b500      	push	{lr}
     9a4:	4801      	ldr	r0, [pc, #4]	; (9ac <call_periph_mskd()+0xa>)
     9a6:	f7ff fffe 	bl	994 <periph_mskd(mcu::Serial*)>
     9aa:	bd00      	pop	{pc}
     9ac:	200226c0 	.word	0x200226c0

000009b0 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     9b0:	6843      	ldr	r3, [r0, #4]
     9b2:	438b      	bics	r3, r1
     9b4:	4313      	orrs	r3, r2
     9b6:	6043      	str	r3, [r0, #4]
     9b8:	4770      	bx	lr

000009ba <call_periph_mskd_val()>:
     9ba:	b500      	push	{lr}
     9bc:	2106      	movs	r1, #6
     9be:	2202      	movs	r2, #2
     9c0:	4801      	ldr	r0, [pc, #4]	; (9c8 <call_periph_mskd_val()+0xe>)
     9c2:	f7ff fffe 	bl	9b0 <periph_mskd_val(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     9c6:	bd00      	pop	{pc}
     9c8:	200226c0 	.word	0x200226c0

000009cc <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     9cc:	6803      	ldr	r3, [r0, #0]
     9ce:	438b      	bics	r3, r1
     9d0:	4313      	orrs	r3, r2
     9d2:	6003      	str	r3, [r0, #0]
     9d4:	4770      	bx	lr

000009d6 <call_reg_mskd_val()>:
     9d6:	b500      	push	{lr}
     9d8:	2106      	movs	r1, #6
     9da:	2202      	movs	r2, #2
     9dc:	4801      	ldr	r0, [pc, #4]	; (9e4 <call_reg_mskd_val()+0xe>)
     9de:	f7ff fffe 	bl	9cc <reg_mskd_val(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     9e2:	bd00      	pop	{pc}
     9e4:	200226c4 	.word	0x200226c4

000009e8 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     9e8:	6843      	ldr	r3, [r0, #4]
     9ea:	438b      	bics	r3, r1
     9ec:	4313      	orrs	r3, r2
     9ee:	6043      	str	r3, [r0, #4]
     9f0:	4770      	bx	lr

000009f2 <call_periph_mskd_ref()>:
     9f2:	b500      	push	{lr}
     9f4:	2106      	movs	r1, #6
     9f6:	2202      	movs	r2, #2
     9f8:	4801      	ldr	r0, [pc, #4]	; (a00 <call_periph_mskd_ref()+0xe>)
     9fa:	f7ff fffe 	bl	9e8 <periph_mskd_ref(mcu::Serial*, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     9fe:	bd00      	pop	{pc}
     a00:	200226c0 	.word	0x200226c0

00000a04 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     a04:	6803      	ldr	r3, [r0, #0]
     a06:	438b      	bics	r3, r1
     a08:	4313      	orrs	r3, r2
     a0a:	6003      	str	r3, [r0, #0]
     a0c:	4770      	bx	lr

00000a0e <call_reg_mskd_ref()>:
     a0e:	b500      	push	{lr}
     a10:	2106      	movs	r1, #6
     a12:	2202      	movs	r2, #2
     a14:	4801      	ldr	r0, [pc, #4]	; (a1c <call_reg_mskd_ref()+0xe>)
     a16:	f7ff fffe 	bl	a04 <reg_mskd_ref(regbits::Reg<unsigned long, mcu::Serial::Config>&, regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     a1a:	bd00      	pop	{pc}
     a1c:	200226c4 	.word	0x200226c4

00000a20 <return_bits()>:
     a20:	2020      	movs	r0, #32
     a22:	4770      	bx	lr

00000a24 <call_return_bits()>:
     a24:	b500      	push	{lr}
     a26:	f7ff fffe 	bl	a20 <return_bits()>
     a2a:	2820      	cmp	r0, #32
     a2c:	d004      	beq.n	a38 <call_return_bits()+0x14>
     a2e:	4b05      	ldr	r3, [pc, #20]	; (a44 <call_return_bits()+0x20>)
     a30:	22c0      	movs	r2, #192	; 0xc0
     a32:	04d2      	lsls	r2, r2, #19
     a34:	605a      	str	r2, [r3, #4]
     a36:	bd00      	pop	{pc}
     a38:	4b02      	ldr	r3, [pc, #8]	; (a44 <call_return_bits()+0x20>)
     a3a:	22a8      	movs	r2, #168	; 0xa8
     a3c:	0592      	lsls	r2, r2, #22
     a3e:	605a      	str	r2, [r3, #4]
     a40:	e7f9      	b.n	a36 <call_return_bits()+0x12>
     a42:	46c0      	nop			; (mov r8, r8)
     a44:	20022620 	.word	0x20022620

00000a48 <return_mskd()>:
     a48:	2318      	movs	r3, #24
     a4a:	6003      	str	r3, [r0, #0]
     a4c:	3b10      	subs	r3, #16
     a4e:	6043      	str	r3, [r0, #4]
     a50:	4770      	bx	lr

00000a52 <call_return_mskd()>:
     a52:	b500      	push	{lr}
     a54:	b082      	sub	sp, #8
     a56:	4668      	mov	r0, sp
     a58:	f7ff fffe 	bl	a48 <return_mskd()>
     a5c:	9b01      	ldr	r3, [sp, #4]
     a5e:	9a00      	ldr	r2, [sp, #0]
     a60:	2a18      	cmp	r2, #24
     a62:	d005      	beq.n	a70 <call_return_mskd()+0x1e>
     a64:	4b06      	ldr	r3, [pc, #24]	; (a80 <call_return_mskd()+0x2e>)
     a66:	2298      	movs	r2, #152	; 0x98
     a68:	0592      	lsls	r2, r2, #22
     a6a:	605a      	str	r2, [r3, #4]
     a6c:	b002      	add	sp, #8
     a6e:	bd00      	pop	{pc}
     a70:	2b08      	cmp	r3, #8
     a72:	d1f7      	bne.n	a64 <call_return_mskd()+0x12>
     a74:	4b02      	ldr	r3, [pc, #8]	; (a80 <call_return_mskd()+0x2e>)
     a76:	2288      	movs	r2, #136	; 0x88
     a78:	0592      	lsls	r2, r2, #22
     a7a:	605a      	str	r2, [r3, #4]
     a7c:	e7f6      	b.n	a6c <call_return_mskd()+0x1a>
     a7e:	46c0      	nop			; (mov r8, r8)
     a80:	20022620 	.word	0x20022620

00000a84 <return_reg()>:
     a84:	4b02      	ldr	r3, [pc, #8]	; (a90 <return_reg()+0xc>)
     a86:	2240      	movs	r2, #64	; 0x40
     a88:	605a      	str	r2, [r3, #4]
     a8a:	4802      	ldr	r0, [pc, #8]	; (a94 <return_reg()+0x10>)
     a8c:	4770      	bx	lr
     a8e:	46c0      	nop			; (mov r8, r8)
     a90:	200226c0 	.word	0x200226c0
     a94:	200226c4 	.word	0x200226c4

00000a98 <call_return_reg()>:
     a98:	b500      	push	{lr}
     a9a:	f7ff fffe 	bl	a84 <return_reg()>
     a9e:	6803      	ldr	r3, [r0, #0]
     aa0:	065b      	lsls	r3, r3, #25
     aa2:	d404      	bmi.n	aae <call_return_reg()+0x16>
     aa4:	4b04      	ldr	r3, [pc, #16]	; (ab8 <call_return_reg()+0x20>)
     aa6:	22b8      	movs	r2, #184	; 0xb8
     aa8:	0592      	lsls	r2, r2, #22
     aaa:	605a      	str	r2, [r3, #4]
     aac:	bd00      	pop	{pc}
     aae:	4b02      	ldr	r3, [pc, #8]	; (ab8 <call_return_reg()+0x20>)
     ab0:	22f0      	movs	r2, #240	; 0xf0
     ab2:	0552      	lsls	r2, r2, #21
     ab4:	605a      	str	r2, [r3, #4]
     ab6:	e7f9      	b.n	aac <call_return_reg()+0x14>
     ab8:	20022620 	.word	0x20022620

00000abc <return_periph()>:
     abc:	4801      	ldr	r0, [pc, #4]	; (ac4 <return_periph()+0x8>)
     abe:	2340      	movs	r3, #64	; 0x40
     ac0:	6043      	str	r3, [r0, #4]
     ac2:	4770      	bx	lr
     ac4:	200226c0 	.word	0x200226c0

00000ac8 <call_return_periph()>:
     ac8:	b500      	push	{lr}
     aca:	f7ff fffe 	bl	abc <return_periph()>
     ace:	6843      	ldr	r3, [r0, #4]
     ad0:	065b      	lsls	r3, r3, #25
     ad2:	d404      	bmi.n	ade <call_return_periph()+0x16>
     ad4:	4b04      	ldr	r3, [pc, #16]	; (ae8 <call_return_periph()+0x20>)
     ad6:	22a8      	movs	r2, #168	; 0xa8
     ad8:	0592      	lsls	r2, r2, #22
     ada:	605a      	str	r2, [r3, #4]
     adc:	bd00      	pop	{pc}
     ade:	4b02      	ldr	r3, [pc, #8]	; (ae8 <call_return_periph()+0x20>)
     ae0:	2298      	movs	r2, #152	; 0x98
     ae2:	0592      	lsls	r2, r2, #22
     ae4:	605a      	str	r2, [r3, #4]
     ae6:	e7f9      	b.n	adc <call_return_periph()+0x14>
     ae8:	20022620 	.word	0x20022620

00000aec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>:
     aec:	2805      	cmp	r0, #5
     aee:	d005      	beq.n	afc <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x10>
     af0:	2806      	cmp	r0, #6
     af2:	d007      	beq.n	b04 <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x18>
     af4:	4b05      	ldr	r3, [pc, #20]	; (b0c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
     af6:	2255      	movs	r2, #85	; 0x55
     af8:	62da      	str	r2, [r3, #44]	; 0x2c
     afa:	4770      	bx	lr
     afc:	4b03      	ldr	r3, [pc, #12]	; (b0c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
     afe:	2233      	movs	r2, #51	; 0x33
     b00:	62da      	str	r2, [r3, #44]	; 0x2c
     b02:	e7fa      	b.n	afa <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
     b04:	4b01      	ldr	r3, [pc, #4]	; (b0c <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0x20>)
     b06:	2244      	movs	r2, #68	; 0x44
     b08:	62da      	str	r2, [r3, #44]	; 0x2c
     b0a:	e7f6      	b.n	afa <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)+0xe>
     b0c:	20022500 	.word	0x20022500

00000b10 <call_pos_val()>:
     b10:	b500      	push	{lr}
     b12:	2005      	movs	r0, #5
     b14:	f7ff fffe 	bl	aec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
     b18:	2006      	movs	r0, #6
     b1a:	f7ff fffe 	bl	aec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
     b1e:	bd00      	pop	{pc}

00000b20 <call_pos_val_global()>:
     b20:	b500      	push	{lr}
     b22:	2006      	movs	r0, #6
     b24:	f7ff fffe 	bl	aec <pos_val(regbits::Pos<unsigned long, mcu::Serial::Config>)>
     b28:	bd00      	pop	{pc}

00000b2a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>:
     b2a:	6803      	ldr	r3, [r0, #0]
     b2c:	2b05      	cmp	r3, #5
     b2e:	d005      	beq.n	b3c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x12>
     b30:	2b06      	cmp	r3, #6
     b32:	d007      	beq.n	b44 <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x1a>
     b34:	4b05      	ldr	r3, [pc, #20]	; (b4c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
     b36:	2288      	movs	r2, #136	; 0x88
     b38:	62da      	str	r2, [r3, #44]	; 0x2c
     b3a:	4770      	bx	lr
     b3c:	4b03      	ldr	r3, [pc, #12]	; (b4c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
     b3e:	2266      	movs	r2, #102	; 0x66
     b40:	62da      	str	r2, [r3, #44]	; 0x2c
     b42:	e7fa      	b.n	b3a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
     b44:	4b01      	ldr	r3, [pc, #4]	; (b4c <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x22>)
     b46:	2277      	movs	r2, #119	; 0x77
     b48:	62da      	str	r2, [r3, #44]	; 0x2c
     b4a:	e7f6      	b.n	b3a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)+0x10>
     b4c:	20022500 	.word	0x20022500

00000b50 <call_pos_ref()>:
     b50:	b510      	push	{r4, lr}
     b52:	b082      	sub	sp, #8
     b54:	2405      	movs	r4, #5
     b56:	9401      	str	r4, [sp, #4]
     b58:	a801      	add	r0, sp, #4
     b5a:	f7ff fffe 	bl	b2a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
     b5e:	9400      	str	r4, [sp, #0]
     b60:	4668      	mov	r0, sp
     b62:	f7ff fffe 	bl	b2a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
     b66:	b002      	add	sp, #8
     b68:	bd10      	pop	{r4, pc}

00000b6a <call_pos_ref_global()>:
     b6a:	b500      	push	{lr}
     b6c:	b081      	sub	sp, #4
     b6e:	2306      	movs	r3, #6
     b70:	9300      	str	r3, [sp, #0]
     b72:	4668      	mov	r0, sp
     b74:	f7ff fffe 	bl	b2a <pos_ref(regbits::Pos<unsigned long, mcu::Serial::Config> const&)>
     b78:	b001      	add	sp, #4
     b7a:	bd00      	pop	{pc}

00000b7c <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     b7c:	4a02      	ldr	r2, [pc, #8]	; (b88 <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xc>)
     b7e:	6853      	ldr	r3, [r2, #4]
     b80:	4383      	bics	r3, r0
     b82:	430b      	orrs	r3, r1
     b84:	6053      	str	r3, [r2, #4]
     b86:	4770      	bx	lr
     b88:	200226c0 	.word	0x200226c0

00000b8c <call_range_val(unsigned int)>:
     b8c:	b500      	push	{lr}
     b8e:	0001      	movs	r1, r0
     b90:	20f8      	movs	r0, #248	; 0xf8
     b92:	0309      	lsls	r1, r1, #12
     b94:	0240      	lsls	r0, r0, #9
     b96:	f7ff fffe 	bl	b7c <runtime_range_val(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     b9a:	bd00      	pop	{pc}

00000b9c <call_range_val_port()>:
     b9c:	b500      	push	{lr}
     b9e:	201f      	movs	r0, #31
     ba0:	f7ff fffe 	bl	b8c <call_range_val(unsigned int)>
     ba4:	bd00      	pop	{pc}

00000ba6 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>:
     ba6:	4a03      	ldr	r2, [pc, #12]	; (bb4 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)+0xe>)
     ba8:	6853      	ldr	r3, [r2, #4]
     baa:	4383      	bics	r3, r0
     bac:	430b      	orrs	r3, r1
     bae:	6053      	str	r3, [r2, #4]
     bb0:	4770      	bx	lr
     bb2:	46c0      	nop			; (mov r8, r8)
     bb4:	200226c0 	.word	0x200226c0

00000bb8 <call_range_ref(unsigned int)>:
     bb8:	b500      	push	{lr}
     bba:	0001      	movs	r1, r0
     bbc:	20f8      	movs	r0, #248	; 0xf8
     bbe:	0309      	lsls	r1, r1, #12
     bc0:	0240      	lsls	r0, r0, #9
     bc2:	f7ff fffe 	bl	ba6 <runtime_range_ref(regbits::Mskd<unsigned long, mcu::Serial::Config>)>
     bc6:	bd00      	pop	{pc}

00000bc8 <call_range_ref_port()>:
     bc8:	b500      	push	{lr}
     bca:	200c      	movs	r0, #12
     bcc:	f7ff fffe 	bl	bb8 <call_range_ref(unsigned int)>
     bd0:	bd00      	pop	{pc}

00000bd2 <check_array_range_pass(unsigned int)>:
     bd2:	2816      	cmp	r0, #22
     bd4:	d803      	bhi.n	bde <check_array_range_pass(unsigned int)+0xc>
     bd6:	4b04      	ldr	r3, [pc, #16]	; (be8 <check_array_range_pass(unsigned int)+0x16>)
     bd8:	227f      	movs	r2, #127	; 0x7f
     bda:	62da      	str	r2, [r3, #44]	; 0x2c
     bdc:	4770      	bx	lr
     bde:	4b02      	ldr	r3, [pc, #8]	; (be8 <check_array_range_pass(unsigned int)+0x16>)
     be0:	2283      	movs	r2, #131	; 0x83
     be2:	62da      	str	r2, [r3, #44]	; 0x2c
     be4:	e7fa      	b.n	bdc <check_array_range_pass(unsigned int)+0xa>
     be6:	46c0      	nop			; (mov r8, r8)
     be8:	20022500 	.word	0x20022500

00000bec <check_array_range_fail(unsigned int)>:
     bec:	2816      	cmp	r0, #22
     bee:	d803      	bhi.n	bf8 <check_array_range_fail(unsigned int)+0xc>
     bf0:	4b03      	ldr	r3, [pc, #12]	; (c00 <check_array_range_fail(unsigned int)+0x14>)
     bf2:	2295      	movs	r2, #149	; 0x95
     bf4:	62da      	str	r2, [r3, #44]	; 0x2c
     bf6:	4770      	bx	lr
     bf8:	4b01      	ldr	r3, [pc, #4]	; (c00 <check_array_range_fail(unsigned int)+0x14>)
     bfa:	2297      	movs	r2, #151	; 0x97
     bfc:	62da      	str	r2, [r3, #44]	; 0x2c
     bfe:	e7fa      	b.n	bf6 <check_array_range_fail(unsigned int)+0xa>
     c00:	20022500 	.word	0x20022500

00000c04 <check_bits_range_pass(unsigned int)>:
     c04:	280f      	cmp	r0, #15
     c06:	d803      	bhi.n	c10 <check_bits_range_pass(unsigned int)+0xc>
     c08:	4b03      	ldr	r3, [pc, #12]	; (c18 <check_bits_range_pass(unsigned int)+0x14>)
     c0a:	229d      	movs	r2, #157	; 0x9d
     c0c:	62da      	str	r2, [r3, #44]	; 0x2c
     c0e:	4770      	bx	lr
     c10:	4b01      	ldr	r3, [pc, #4]	; (c18 <check_bits_range_pass(unsigned int)+0x14>)
     c12:	22a3      	movs	r2, #163	; 0xa3
     c14:	62da      	str	r2, [r3, #44]	; 0x2c
     c16:	e7fa      	b.n	c0e <check_bits_range_pass(unsigned int)+0xa>
     c18:	20022500 	.word	0x20022500

00000c1c <check_bits_range_fail(unsigned int)>:
     c1c:	280f      	cmp	r0, #15
     c1e:	d803      	bhi.n	c28 <check_bits_range_fail(unsigned int)+0xc>
     c20:	4b03      	ldr	r3, [pc, #12]	; (c30 <check_bits_range_fail(unsigned int)+0x14>)
     c22:	22a7      	movs	r2, #167	; 0xa7
     c24:	62da      	str	r2, [r3, #44]	; 0x2c
     c26:	4770      	bx	lr
     c28:	4b01      	ldr	r3, [pc, #4]	; (c30 <check_bits_range_fail(unsigned int)+0x14>)
     c2a:	22ad      	movs	r2, #173	; 0xad
     c2c:	62da      	str	r2, [r3, #44]	; 0x2c
     c2e:	e7fa      	b.n	c26 <check_bits_range_fail(unsigned int)+0xa>
     c30:	20022500 	.word	0x20022500

00000c34 <check_mskd_range_pass(unsigned int)>:
     c34:	281f      	cmp	r0, #31
     c36:	d803      	bhi.n	c40 <check_mskd_range_pass(unsigned int)+0xc>
     c38:	4b03      	ldr	r3, [pc, #12]	; (c48 <check_mskd_range_pass(unsigned int)+0x14>)
     c3a:	22b3      	movs	r2, #179	; 0xb3
     c3c:	62da      	str	r2, [r3, #44]	; 0x2c
     c3e:	4770      	bx	lr
     c40:	4b01      	ldr	r3, [pc, #4]	; (c48 <check_mskd_range_pass(unsigned int)+0x14>)
     c42:	22b5      	movs	r2, #181	; 0xb5
     c44:	62da      	str	r2, [r3, #44]	; 0x2c
     c46:	e7fa      	b.n	c3e <check_mskd_range_pass(unsigned int)+0xa>
     c48:	20022500 	.word	0x20022500

00000c4c <check_mskd_range_fail(unsigned int)>:
     c4c:	281f      	cmp	r0, #31
     c4e:	d803      	bhi.n	c58 <check_mskd_range_fail(unsigned int)+0xc>
     c50:	4b03      	ldr	r3, [pc, #12]	; (c60 <check_mskd_range_fail(unsigned int)+0x14>)
     c52:	22bf      	movs	r2, #191	; 0xbf
     c54:	62da      	str	r2, [r3, #44]	; 0x2c
     c56:	4770      	bx	lr
     c58:	4b01      	ldr	r3, [pc, #4]	; (c60 <check_mskd_range_fail(unsigned int)+0x14>)
     c5a:	22c1      	movs	r2, #193	; 0xc1
     c5c:	62da      	str	r2, [r3, #44]	; 0x2c
     c5e:	e7fa      	b.n	c56 <check_mskd_range_fail(unsigned int)+0xa>
     c60:	20022500 	.word	0x20022500

00000c64 <bits_extract_ne()>:
     c64:	4b06      	ldr	r3, [pc, #24]	; (c80 <bits_extract_ne()+0x1c>)
     c66:	2220      	movs	r2, #32
     c68:	605a      	str	r2, [r3, #4]
     c6a:	685b      	ldr	r3, [r3, #4]
     c6c:	2b20      	cmp	r3, #32
     c6e:	d003      	beq.n	c78 <bits_extract_ne()+0x14>
     c70:	4b03      	ldr	r3, [pc, #12]	; (c80 <bits_extract_ne()+0x1c>)
     c72:	3a1e      	subs	r2, #30
     c74:	605a      	str	r2, [r3, #4]
     c76:	4770      	bx	lr
     c78:	4b01      	ldr	r3, [pc, #4]	; (c80 <bits_extract_ne()+0x1c>)
     c7a:	2204      	movs	r2, #4
     c7c:	605a      	str	r2, [r3, #4]
     c7e:	e7fa      	b.n	c76 <bits_extract_ne()+0x12>
     c80:	200226c0 	.word	0x200226c0

00000c84 <mskd_extract_geq()>:
     c84:	4b07      	ldr	r3, [pc, #28]	; (ca4 <mskd_extract_geq()+0x20>)
     c86:	22b0      	movs	r2, #176	; 0xb0
     c88:	0552      	lsls	r2, r2, #21
     c8a:	605a      	str	r2, [r3, #4]
     c8c:	685a      	ldr	r2, [r3, #4]
     c8e:	4b06      	ldr	r3, [pc, #24]	; (ca8 <mskd_extract_geq()+0x24>)
     c90:	429a      	cmp	r2, r3
     c92:	d803      	bhi.n	c9c <mskd_extract_geq()+0x18>
     c94:	4b05      	ldr	r3, [pc, #20]	; (cac <mskd_extract_geq()+0x28>)
     c96:	2240      	movs	r2, #64	; 0x40
     c98:	605a      	str	r2, [r3, #4]
     c9a:	4770      	bx	lr
     c9c:	4b03      	ldr	r3, [pc, #12]	; (cac <mskd_extract_geq()+0x28>)
     c9e:	2220      	movs	r2, #32
     ca0:	605a      	str	r2, [r3, #4]
     ca2:	e7fa      	b.n	c9a <mskd_extract_geq()+0x16>
     ca4:	20022620 	.word	0x20022620
     ca8:	15ffffff 	.word	0x15ffffff
     cac:	200226c0 	.word	0x200226c0

00000cb0 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>:
     cb0:	4b04      	ldr	r3, [pc, #16]	; (cc4 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x14>)
     cb2:	22b8      	movs	r2, #184	; 0xb8
     cb4:	0592      	lsls	r2, r2, #22
     cb6:	605a      	str	r2, [r3, #4]
     cb8:	685b      	ldr	r3, [r3, #4]
     cba:	4018      	ands	r0, r3
     cbc:	40c8      	lsrs	r0, r1
     cbe:	4b02      	ldr	r3, [pc, #8]	; (cc8 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)+0x18>)
     cc0:	62d8      	str	r0, [r3, #44]	; 0x2c
     cc2:	4770      	bx	lr
     cc4:	20022620 	.word	0x20022620
     cc8:	20022500 	.word	0x20022500

00000ccc <call_shifted_const_val()>:
     ccc:	b500      	push	{lr}
     cce:	20f8      	movs	r0, #248	; 0xf8
     cd0:	0580      	lsls	r0, r0, #22
     cd2:	2119      	movs	r1, #25
     cd4:	f7ff fffe 	bl	cb0 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
     cd8:	bd00      	pop	{pc}

00000cda <call_shifted_var_val()>:
     cda:	b500      	push	{lr}
     cdc:	20f8      	movs	r0, #248	; 0xf8
     cde:	0580      	lsls	r0, r0, #22
     ce0:	2119      	movs	r1, #25
     ce2:	f7ff fffe 	bl	cb0 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
     ce6:	bd00      	pop	{pc}

00000ce8 <call_shifted_global_val()>:
     ce8:	b500      	push	{lr}
     cea:	4b03      	ldr	r3, [pc, #12]	; (cf8 <call_shifted_global_val()+0x10>)
     cec:	6898      	ldr	r0, [r3, #8]
     cee:	68d9      	ldr	r1, [r3, #12]
     cf0:	f7ff fffe 	bl	cb0 <shifted_val(regbits::Shft<unsigned long, mcu::Timer::Prescale>)>
     cf4:	bd00      	pop	{pc}
     cf6:	46c0      	nop			; (mov r8, r8)
     cf8:	00000000 	.word	0x00000000

00000cfc <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>:
     cfc:	4b05      	ldr	r3, [pc, #20]	; (d14 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x18>)
     cfe:	22b8      	movs	r2, #184	; 0xb8
     d00:	0592      	lsls	r2, r2, #22
     d02:	605a      	str	r2, [r3, #4]
     d04:	685b      	ldr	r3, [r3, #4]
     d06:	6802      	ldr	r2, [r0, #0]
     d08:	4013      	ands	r3, r2
     d0a:	6842      	ldr	r2, [r0, #4]
     d0c:	40d3      	lsrs	r3, r2
     d0e:	4a02      	ldr	r2, [pc, #8]	; (d18 <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)+0x1c>)
     d10:	62d3      	str	r3, [r2, #44]	; 0x2c
     d12:	4770      	bx	lr
     d14:	20022620 	.word	0x20022620
     d18:	20022500 	.word	0x20022500

00000d1c <call_shifted_const_ref()>:
     d1c:	b500      	push	{lr}
     d1e:	b082      	sub	sp, #8
     d20:	4b04      	ldr	r3, [pc, #16]	; (d34 <call_shifted_const_ref()+0x18>)
     d22:	691a      	ldr	r2, [r3, #16]
     d24:	695b      	ldr	r3, [r3, #20]
     d26:	9200      	str	r2, [sp, #0]
     d28:	9301      	str	r3, [sp, #4]
     d2a:	4668      	mov	r0, sp
     d2c:	f7ff fffe 	bl	cfc <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
     d30:	b002      	add	sp, #8
     d32:	bd00      	pop	{pc}
     d34:	00000000 	.word	0x00000000

00000d38 <call_shifted_var_ref()>:
     d38:	b500      	push	{lr}
     d3a:	b082      	sub	sp, #8
     d3c:	4b04      	ldr	r3, [pc, #16]	; (d50 <call_shifted_var_ref()+0x18>)
     d3e:	699a      	ldr	r2, [r3, #24]
     d40:	69db      	ldr	r3, [r3, #28]
     d42:	9200      	str	r2, [sp, #0]
     d44:	9301      	str	r3, [sp, #4]
     d46:	4668      	mov	r0, sp
     d48:	f7ff fffe 	bl	cfc <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
     d4c:	b002      	add	sp, #8
     d4e:	bd00      	pop	{pc}
     d50:	00000000 	.word	0x00000000

00000d54 <call_shifted_global_ref()>:
     d54:	b500      	push	{lr}
     d56:	b082      	sub	sp, #8
     d58:	4b04      	ldr	r3, [pc, #16]	; (d6c <call_shifted_global_ref()+0x18>)
     d5a:	689a      	ldr	r2, [r3, #8]
     d5c:	68db      	ldr	r3, [r3, #12]
     d5e:	9200      	str	r2, [sp, #0]
     d60:	9301      	str	r3, [sp, #4]
     d62:	4668      	mov	r0, sp
     d64:	f7ff fffe 	bl	cfc <shifted_ref(regbits::Shft<unsigned long, mcu::Timer::Prescale> const&)>
     d68:	b002      	add	sp, #8
     d6a:	bd00      	pop	{pc}
     d6c:	00000000 	.word	0x00000000

00000d70 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)>:
     d70:	0643      	lsls	r3, r0, #25
     d72:	d403      	bmi.n	d7c <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0xc>
     d74:	4b03      	ldr	r3, [pc, #12]	; (d84 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0x14>)
     d76:	2204      	movs	r2, #4
     d78:	605a      	str	r2, [r3, #4]
     d7a:	4770      	bx	lr
     d7c:	4b01      	ldr	r3, [pc, #4]	; (d84 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0x14>)
     d7e:	2202      	movs	r2, #2
     d80:	605a      	str	r2, [r3, #4]
     d82:	e7fa      	b.n	d7a <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)+0xa>
     d84:	200226c0 	.word	0x200226c0

00000d88 <call_copy_bits_val()>:
     d88:	b500      	push	{lr}
     d8a:	4b03      	ldr	r3, [pc, #12]	; (d98 <call_copy_bits_val()+0x10>)
     d8c:	2240      	movs	r2, #64	; 0x40
     d8e:	605a      	str	r2, [r3, #4]
     d90:	6858      	ldr	r0, [r3, #4]
     d92:	f7ff fffe 	bl	d70 <copy_bits_val(regbits::Copy<unsigned long, mcu::Serial::Config>)>
     d96:	bd00      	pop	{pc}
     d98:	200226c0 	.word	0x200226c0

00000d9c <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)>:
     d9c:	6803      	ldr	r3, [r0, #0]
     d9e:	065b      	lsls	r3, r3, #25
     da0:	d403      	bmi.n	daa <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0xe>
     da2:	4b04      	ldr	r3, [pc, #16]	; (db4 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0x18>)
     da4:	2204      	movs	r2, #4
     da6:	605a      	str	r2, [r3, #4]
     da8:	4770      	bx	lr
     daa:	4b02      	ldr	r3, [pc, #8]	; (db4 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0x18>)
     dac:	2202      	movs	r2, #2
     dae:	605a      	str	r2, [r3, #4]
     db0:	e7fa      	b.n	da8 <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)+0xc>
     db2:	46c0      	nop			; (mov r8, r8)
     db4:	200226c0 	.word	0x200226c0

00000db8 <call_copy_bits_ref()>:
     db8:	b500      	push	{lr}
     dba:	b081      	sub	sp, #4
     dbc:	4b04      	ldr	r3, [pc, #16]	; (dd0 <call_copy_bits_ref()+0x18>)
     dbe:	2240      	movs	r2, #64	; 0x40
     dc0:	605a      	str	r2, [r3, #4]
     dc2:	685b      	ldr	r3, [r3, #4]
     dc4:	9300      	str	r3, [sp, #0]
     dc6:	4668      	mov	r0, sp
     dc8:	f7ff fffe 	bl	d9c <copy_bits_ref(regbits::Copy<unsigned long, mcu::Serial::Config> const&)>
     dcc:	b001      	add	sp, #4
     dce:	bd00      	pop	{pc}
     dd0:	200226c0 	.word	0x200226c0

00000dd4 <run>:
     dd4:	b530      	push	{r4, r5, lr}
     dd6:	4bf9      	ldr	r3, [pc, #996]	; (11bc <run+0x3e8>)
     dd8:	781b      	ldrb	r3, [r3, #0]
     dda:	2b00      	cmp	r3, #0
     ddc:	d104      	bne.n	de8 <run+0x14>
     dde:	4bf7      	ldr	r3, [pc, #988]	; (11bc <run+0x3e8>)
     de0:	4af7      	ldr	r2, [pc, #988]	; (11c0 <run+0x3ec>)
     de2:	609a      	str	r2, [r3, #8]
     de4:	2201      	movs	r2, #1
     de6:	701a      	strb	r2, [r3, #0]
     de8:	4bf4      	ldr	r3, [pc, #976]	; (11bc <run+0x3e8>)
     dea:	7b1b      	ldrb	r3, [r3, #12]
     dec:	2b00      	cmp	r3, #0
     dee:	d104      	bne.n	dfa <run+0x26>
     df0:	4bf2      	ldr	r3, [pc, #968]	; (11bc <run+0x3e8>)
     df2:	4af4      	ldr	r2, [pc, #976]	; (11c4 <run+0x3f0>)
     df4:	615a      	str	r2, [r3, #20]
     df6:	2201      	movs	r2, #1
     df8:	731a      	strb	r2, [r3, #12]
     dfa:	4bf0      	ldr	r3, [pc, #960]	; (11bc <run+0x3e8>)
     dfc:	7e1b      	ldrb	r3, [r3, #24]
     dfe:	2b00      	cmp	r3, #0
     e00:	d104      	bne.n	e0c <run+0x38>
     e02:	4bee      	ldr	r3, [pc, #952]	; (11bc <run+0x3e8>)
     e04:	4af0      	ldr	r2, [pc, #960]	; (11c8 <run+0x3f4>)
     e06:	621a      	str	r2, [r3, #32]
     e08:	2201      	movs	r2, #1
     e0a:	761a      	strb	r2, [r3, #24]
     e0c:	4aeb      	ldr	r2, [pc, #940]	; (11bc <run+0x3e8>)
     e0e:	2324      	movs	r3, #36	; 0x24
     e10:	5cd3      	ldrb	r3, [r2, r3]
     e12:	2b00      	cmp	r3, #0
     e14:	d105      	bne.n	e22 <run+0x4e>
     e16:	0013      	movs	r3, r2
     e18:	4aec      	ldr	r2, [pc, #944]	; (11cc <run+0x3f8>)
     e1a:	62da      	str	r2, [r3, #44]	; 0x2c
     e1c:	2224      	movs	r2, #36	; 0x24
     e1e:	2101      	movs	r1, #1
     e20:	5499      	strb	r1, [r3, r2]
     e22:	4ce6      	ldr	r4, [pc, #920]	; (11bc <run+0x3e8>)
     e24:	2200      	movs	r2, #0
     e26:	68a1      	ldr	r1, [r4, #8]
     e28:	48e9      	ldr	r0, [pc, #932]	; (11d0 <run+0x3fc>)
     e2a:	f7ff fffe 	bl	0 <do_test>
     e2e:	2201      	movs	r2, #1
     e30:	68a1      	ldr	r1, [r4, #8]
     e32:	48e8      	ldr	r0, [pc, #928]	; (11d4 <run+0x400>)
     e34:	f7ff fffe 	bl	0 <do_test>
     e38:	2202      	movs	r2, #2
     e3a:	68a1      	ldr	r1, [r4, #8]
     e3c:	48e6      	ldr	r0, [pc, #920]	; (11d8 <run+0x404>)
     e3e:	f7ff fffe 	bl	0 <do_test>
     e42:	2203      	movs	r2, #3
     e44:	68a1      	ldr	r1, [r4, #8]
     e46:	48e5      	ldr	r0, [pc, #916]	; (11dc <run+0x408>)
     e48:	f7ff fffe 	bl	0 <do_test>
     e4c:	2204      	movs	r2, #4
     e4e:	68a1      	ldr	r1, [r4, #8]
     e50:	48e3      	ldr	r0, [pc, #908]	; (11e0 <run+0x40c>)
     e52:	f7ff fffe 	bl	0 <do_test>
     e56:	2205      	movs	r2, #5
     e58:	68a1      	ldr	r1, [r4, #8]
     e5a:	48e2      	ldr	r0, [pc, #904]	; (11e4 <run+0x410>)
     e5c:	f7ff fffe 	bl	0 <do_test>
     e60:	2206      	movs	r2, #6
     e62:	68a1      	ldr	r1, [r4, #8]
     e64:	48e0      	ldr	r0, [pc, #896]	; (11e8 <run+0x414>)
     e66:	f7ff fffe 	bl	0 <do_test>
     e6a:	2207      	movs	r2, #7
     e6c:	68a1      	ldr	r1, [r4, #8]
     e6e:	48df      	ldr	r0, [pc, #892]	; (11ec <run+0x418>)
     e70:	f7ff fffe 	bl	0 <do_test>
     e74:	2208      	movs	r2, #8
     e76:	68a1      	ldr	r1, [r4, #8]
     e78:	48dd      	ldr	r0, [pc, #884]	; (11f0 <run+0x41c>)
     e7a:	f7ff fffe 	bl	0 <do_test>
     e7e:	2209      	movs	r2, #9
     e80:	68a1      	ldr	r1, [r4, #8]
     e82:	48dc      	ldr	r0, [pc, #880]	; (11f4 <run+0x420>)
     e84:	f7ff fffe 	bl	0 <do_test>
     e88:	220a      	movs	r2, #10
     e8a:	68a1      	ldr	r1, [r4, #8]
     e8c:	48da      	ldr	r0, [pc, #872]	; (11f8 <run+0x424>)
     e8e:	f7ff fffe 	bl	0 <do_test>
     e92:	220b      	movs	r2, #11
     e94:	68a1      	ldr	r1, [r4, #8]
     e96:	48d9      	ldr	r0, [pc, #868]	; (11fc <run+0x428>)
     e98:	f7ff fffe 	bl	0 <do_test>
     e9c:	220c      	movs	r2, #12
     e9e:	68a1      	ldr	r1, [r4, #8]
     ea0:	48d7      	ldr	r0, [pc, #860]	; (1200 <run+0x42c>)
     ea2:	f7ff fffe 	bl	0 <do_test>
     ea6:	220d      	movs	r2, #13
     ea8:	68a1      	ldr	r1, [r4, #8]
     eaa:	48d6      	ldr	r0, [pc, #856]	; (1204 <run+0x430>)
     eac:	f7ff fffe 	bl	0 <do_test>
     eb0:	220e      	movs	r2, #14
     eb2:	68a1      	ldr	r1, [r4, #8]
     eb4:	48d4      	ldr	r0, [pc, #848]	; (1208 <run+0x434>)
     eb6:	f7ff fffe 	bl	0 <do_test>
     eba:	220f      	movs	r2, #15
     ebc:	68a1      	ldr	r1, [r4, #8]
     ebe:	48d3      	ldr	r0, [pc, #844]	; (120c <run+0x438>)
     ec0:	f7ff fffe 	bl	0 <do_test>
     ec4:	2210      	movs	r2, #16
     ec6:	68a1      	ldr	r1, [r4, #8]
     ec8:	48d1      	ldr	r0, [pc, #836]	; (1210 <run+0x43c>)
     eca:	f7ff fffe 	bl	0 <do_test>
     ece:	2211      	movs	r2, #17
     ed0:	68a1      	ldr	r1, [r4, #8]
     ed2:	48d0      	ldr	r0, [pc, #832]	; (1214 <run+0x440>)
     ed4:	f7ff fffe 	bl	0 <do_test>
     ed8:	2212      	movs	r2, #18
     eda:	68a1      	ldr	r1, [r4, #8]
     edc:	48ce      	ldr	r0, [pc, #824]	; (1218 <run+0x444>)
     ede:	f7ff fffe 	bl	0 <do_test>
     ee2:	2213      	movs	r2, #19
     ee4:	68a1      	ldr	r1, [r4, #8]
     ee6:	48cd      	ldr	r0, [pc, #820]	; (121c <run+0x448>)
     ee8:	f7ff fffe 	bl	0 <do_test>
     eec:	2214      	movs	r2, #20
     eee:	68a1      	ldr	r1, [r4, #8]
     ef0:	48cb      	ldr	r0, [pc, #812]	; (1220 <run+0x44c>)
     ef2:	f7ff fffe 	bl	0 <do_test>
     ef6:	2215      	movs	r2, #21
     ef8:	68a1      	ldr	r1, [r4, #8]
     efa:	48ca      	ldr	r0, [pc, #808]	; (1224 <run+0x450>)
     efc:	f7ff fffe 	bl	0 <do_test>
     f00:	2216      	movs	r2, #22
     f02:	68a1      	ldr	r1, [r4, #8]
     f04:	48c8      	ldr	r0, [pc, #800]	; (1228 <run+0x454>)
     f06:	f7ff fffe 	bl	0 <do_test>
     f0a:	2217      	movs	r2, #23
     f0c:	68a1      	ldr	r1, [r4, #8]
     f0e:	48c7      	ldr	r0, [pc, #796]	; (122c <run+0x458>)
     f10:	f7ff fffe 	bl	0 <do_test>
     f14:	2218      	movs	r2, #24
     f16:	68a1      	ldr	r1, [r4, #8]
     f18:	48c5      	ldr	r0, [pc, #788]	; (1230 <run+0x45c>)
     f1a:	f7ff fffe 	bl	0 <do_test>
     f1e:	2219      	movs	r2, #25
     f20:	68a1      	ldr	r1, [r4, #8]
     f22:	48c4      	ldr	r0, [pc, #784]	; (1234 <run+0x460>)
     f24:	f7ff fffe 	bl	0 <do_test>
     f28:	221a      	movs	r2, #26
     f2a:	68a1      	ldr	r1, [r4, #8]
     f2c:	48c2      	ldr	r0, [pc, #776]	; (1238 <run+0x464>)
     f2e:	f7ff fffe 	bl	0 <do_test>
     f32:	221b      	movs	r2, #27
     f34:	68a1      	ldr	r1, [r4, #8]
     f36:	48c1      	ldr	r0, [pc, #772]	; (123c <run+0x468>)
     f38:	f7ff fffe 	bl	0 <do_test>
     f3c:	221c      	movs	r2, #28
     f3e:	68a1      	ldr	r1, [r4, #8]
     f40:	48bf      	ldr	r0, [pc, #764]	; (1240 <run+0x46c>)
     f42:	f7ff fffe 	bl	0 <do_test>
     f46:	221d      	movs	r2, #29
     f48:	68a1      	ldr	r1, [r4, #8]
     f4a:	48be      	ldr	r0, [pc, #760]	; (1244 <run+0x470>)
     f4c:	f7ff fffe 	bl	0 <do_test>
     f50:	221e      	movs	r2, #30
     f52:	68a1      	ldr	r1, [r4, #8]
     f54:	48bc      	ldr	r0, [pc, #752]	; (1248 <run+0x474>)
     f56:	f7ff fffe 	bl	0 <do_test>
     f5a:	221f      	movs	r2, #31
     f5c:	68a1      	ldr	r1, [r4, #8]
     f5e:	48bb      	ldr	r0, [pc, #748]	; (124c <run+0x478>)
     f60:	f7ff fffe 	bl	0 <do_test>
     f64:	2220      	movs	r2, #32
     f66:	68a1      	ldr	r1, [r4, #8]
     f68:	48b9      	ldr	r0, [pc, #740]	; (1250 <run+0x47c>)
     f6a:	f7ff fffe 	bl	0 <do_test>
     f6e:	2221      	movs	r2, #33	; 0x21
     f70:	68a1      	ldr	r1, [r4, #8]
     f72:	48b8      	ldr	r0, [pc, #736]	; (1254 <run+0x480>)
     f74:	f7ff fffe 	bl	0 <do_test>
     f78:	2222      	movs	r2, #34	; 0x22
     f7a:	68a1      	ldr	r1, [r4, #8]
     f7c:	48b6      	ldr	r0, [pc, #728]	; (1258 <run+0x484>)
     f7e:	f7ff fffe 	bl	0 <do_test>
     f82:	2223      	movs	r2, #35	; 0x23
     f84:	68a1      	ldr	r1, [r4, #8]
     f86:	48b5      	ldr	r0, [pc, #724]	; (125c <run+0x488>)
     f88:	f7ff fffe 	bl	0 <do_test>
     f8c:	2224      	movs	r2, #36	; 0x24
     f8e:	68a1      	ldr	r1, [r4, #8]
     f90:	48b3      	ldr	r0, [pc, #716]	; (1260 <run+0x48c>)
     f92:	f7ff fffe 	bl	0 <do_test>
     f96:	2225      	movs	r2, #37	; 0x25
     f98:	6961      	ldr	r1, [r4, #20]
     f9a:	48b2      	ldr	r0, [pc, #712]	; (1264 <run+0x490>)
     f9c:	f7ff fffe 	bl	0 <do_test>
     fa0:	2226      	movs	r2, #38	; 0x26
     fa2:	6961      	ldr	r1, [r4, #20]
     fa4:	48b0      	ldr	r0, [pc, #704]	; (1268 <run+0x494>)
     fa6:	f7ff fffe 	bl	0 <do_test>
     faa:	2227      	movs	r2, #39	; 0x27
     fac:	6961      	ldr	r1, [r4, #20]
     fae:	48af      	ldr	r0, [pc, #700]	; (126c <run+0x498>)
     fb0:	f7ff fffe 	bl	0 <do_test>
     fb4:	2228      	movs	r2, #40	; 0x28
     fb6:	68a1      	ldr	r1, [r4, #8]
     fb8:	48ad      	ldr	r0, [pc, #692]	; (1270 <run+0x49c>)
     fba:	f7ff fffe 	bl	0 <do_test>
     fbe:	2229      	movs	r2, #41	; 0x29
     fc0:	68a1      	ldr	r1, [r4, #8]
     fc2:	48ac      	ldr	r0, [pc, #688]	; (1274 <run+0x4a0>)
     fc4:	f7ff fffe 	bl	0 <do_test>
     fc8:	222a      	movs	r2, #42	; 0x2a
     fca:	68a1      	ldr	r1, [r4, #8]
     fcc:	48aa      	ldr	r0, [pc, #680]	; (1278 <run+0x4a4>)
     fce:	f7ff fffe 	bl	0 <do_test>
     fd2:	222b      	movs	r2, #43	; 0x2b
     fd4:	68a1      	ldr	r1, [r4, #8]
     fd6:	48a9      	ldr	r0, [pc, #676]	; (127c <run+0x4a8>)
     fd8:	f7ff fffe 	bl	0 <do_test>
     fdc:	222c      	movs	r2, #44	; 0x2c
     fde:	68a1      	ldr	r1, [r4, #8]
     fe0:	48a7      	ldr	r0, [pc, #668]	; (1280 <run+0x4ac>)
     fe2:	f7ff fffe 	bl	0 <do_test>
     fe6:	222d      	movs	r2, #45	; 0x2d
     fe8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
     fea:	48a6      	ldr	r0, [pc, #664]	; (1284 <run+0x4b0>)
     fec:	f7ff fffe 	bl	0 <do_test>
     ff0:	222e      	movs	r2, #46	; 0x2e
     ff2:	68a1      	ldr	r1, [r4, #8]
     ff4:	48a4      	ldr	r0, [pc, #656]	; (1288 <run+0x4b4>)
     ff6:	f7ff fffe 	bl	0 <do_test>
     ffa:	222f      	movs	r2, #47	; 0x2f
     ffc:	68a1      	ldr	r1, [r4, #8]
     ffe:	48a3      	ldr	r0, [pc, #652]	; (128c <run+0x4b8>)
    1000:	f7ff fffe 	bl	0 <do_test>
    1004:	2230      	movs	r2, #48	; 0x30
    1006:	68a1      	ldr	r1, [r4, #8]
    1008:	48a1      	ldr	r0, [pc, #644]	; (1290 <run+0x4bc>)
    100a:	f7ff fffe 	bl	0 <do_test>
    100e:	2231      	movs	r2, #49	; 0x31
    1010:	68a1      	ldr	r1, [r4, #8]
    1012:	48a0      	ldr	r0, [pc, #640]	; (1294 <run+0x4c0>)
    1014:	f7ff fffe 	bl	0 <do_test>
    1018:	2232      	movs	r2, #50	; 0x32
    101a:	68a1      	ldr	r1, [r4, #8]
    101c:	489e      	ldr	r0, [pc, #632]	; (1298 <run+0x4c4>)
    101e:	f7ff fffe 	bl	0 <do_test>
    1022:	2233      	movs	r2, #51	; 0x33
    1024:	68a1      	ldr	r1, [r4, #8]
    1026:	489d      	ldr	r0, [pc, #628]	; (129c <run+0x4c8>)
    1028:	f7ff fffe 	bl	0 <do_test>
    102c:	2234      	movs	r2, #52	; 0x34
    102e:	68a1      	ldr	r1, [r4, #8]
    1030:	489b      	ldr	r0, [pc, #620]	; (12a0 <run+0x4cc>)
    1032:	f7ff fffe 	bl	0 <do_test>
    1036:	2235      	movs	r2, #53	; 0x35
    1038:	68a1      	ldr	r1, [r4, #8]
    103a:	489a      	ldr	r0, [pc, #616]	; (12a4 <run+0x4d0>)
    103c:	f7ff fffe 	bl	0 <do_test>
    1040:	2236      	movs	r2, #54	; 0x36
    1042:	68a1      	ldr	r1, [r4, #8]
    1044:	4898      	ldr	r0, [pc, #608]	; (12a8 <run+0x4d4>)
    1046:	f7ff fffe 	bl	0 <do_test>
    104a:	2237      	movs	r2, #55	; 0x37
    104c:	68a1      	ldr	r1, [r4, #8]
    104e:	4897      	ldr	r0, [pc, #604]	; (12ac <run+0x4d8>)
    1050:	f7ff fffe 	bl	0 <do_test>
    1054:	2238      	movs	r2, #56	; 0x38
    1056:	68a1      	ldr	r1, [r4, #8]
    1058:	4895      	ldr	r0, [pc, #596]	; (12b0 <run+0x4dc>)
    105a:	f7ff fffe 	bl	0 <do_test>
    105e:	2239      	movs	r2, #57	; 0x39
    1060:	68a1      	ldr	r1, [r4, #8]
    1062:	4894      	ldr	r0, [pc, #592]	; (12b4 <run+0x4e0>)
    1064:	f7ff fffe 	bl	0 <do_test>
    1068:	223a      	movs	r2, #58	; 0x3a
    106a:	68a1      	ldr	r1, [r4, #8]
    106c:	4892      	ldr	r0, [pc, #584]	; (12b8 <run+0x4e4>)
    106e:	f7ff fffe 	bl	0 <do_test>
    1072:	223b      	movs	r2, #59	; 0x3b
    1074:	68a1      	ldr	r1, [r4, #8]
    1076:	4891      	ldr	r0, [pc, #580]	; (12bc <run+0x4e8>)
    1078:	f7ff fffe 	bl	0 <do_test>
    107c:	223c      	movs	r2, #60	; 0x3c
    107e:	68a1      	ldr	r1, [r4, #8]
    1080:	488f      	ldr	r0, [pc, #572]	; (12c0 <run+0x4ec>)
    1082:	f7ff fffe 	bl	0 <do_test>
    1086:	223d      	movs	r2, #61	; 0x3d
    1088:	68a1      	ldr	r1, [r4, #8]
    108a:	488e      	ldr	r0, [pc, #568]	; (12c4 <run+0x4f0>)
    108c:	f7ff fffe 	bl	0 <do_test>
    1090:	223e      	movs	r2, #62	; 0x3e
    1092:	68a1      	ldr	r1, [r4, #8]
    1094:	488c      	ldr	r0, [pc, #560]	; (12c8 <run+0x4f4>)
    1096:	f7ff fffe 	bl	0 <do_test>
    109a:	223f      	movs	r2, #63	; 0x3f
    109c:	68a1      	ldr	r1, [r4, #8]
    109e:	488b      	ldr	r0, [pc, #556]	; (12cc <run+0x4f8>)
    10a0:	f7ff fffe 	bl	0 <do_test>
    10a4:	2240      	movs	r2, #64	; 0x40
    10a6:	6961      	ldr	r1, [r4, #20]
    10a8:	4889      	ldr	r0, [pc, #548]	; (12d0 <run+0x4fc>)
    10aa:	f7ff fffe 	bl	0 <do_test>
    10ae:	2241      	movs	r2, #65	; 0x41
    10b0:	6961      	ldr	r1, [r4, #20]
    10b2:	4888      	ldr	r0, [pc, #544]	; (12d4 <run+0x500>)
    10b4:	f7ff fffe 	bl	0 <do_test>
    10b8:	2242      	movs	r2, #66	; 0x42
    10ba:	6961      	ldr	r1, [r4, #20]
    10bc:	4886      	ldr	r0, [pc, #536]	; (12d8 <run+0x504>)
    10be:	f7ff fffe 	bl	0 <do_test>
    10c2:	2243      	movs	r2, #67	; 0x43
    10c4:	68a1      	ldr	r1, [r4, #8]
    10c6:	4885      	ldr	r0, [pc, #532]	; (12dc <run+0x508>)
    10c8:	f7ff fffe 	bl	0 <do_test>
    10cc:	2244      	movs	r2, #68	; 0x44
    10ce:	6a21      	ldr	r1, [r4, #32]
    10d0:	4883      	ldr	r0, [pc, #524]	; (12e0 <run+0x50c>)
    10d2:	f7ff fffe 	bl	0 <do_test>
    10d6:	2245      	movs	r2, #69	; 0x45
    10d8:	6a21      	ldr	r1, [r4, #32]
    10da:	4882      	ldr	r0, [pc, #520]	; (12e4 <run+0x510>)
    10dc:	f7ff fffe 	bl	0 <do_test>
    10e0:	2246      	movs	r2, #70	; 0x46
    10e2:	68a1      	ldr	r1, [r4, #8]
    10e4:	4880      	ldr	r0, [pc, #512]	; (12e8 <run+0x514>)
    10e6:	f7ff fffe 	bl	0 <do_test>
    10ea:	2247      	movs	r2, #71	; 0x47
    10ec:	68a1      	ldr	r1, [r4, #8]
    10ee:	487f      	ldr	r0, [pc, #508]	; (12ec <run+0x518>)
    10f0:	f7ff fffe 	bl	0 <do_test>
    10f4:	2248      	movs	r2, #72	; 0x48
    10f6:	6a21      	ldr	r1, [r4, #32]
    10f8:	487d      	ldr	r0, [pc, #500]	; (12f0 <run+0x51c>)
    10fa:	f7ff fffe 	bl	0 <do_test>
    10fe:	2249      	movs	r2, #73	; 0x49
    1100:	6a21      	ldr	r1, [r4, #32]
    1102:	487c      	ldr	r0, [pc, #496]	; (12f4 <run+0x520>)
    1104:	f7ff fffe 	bl	0 <do_test>
    1108:	224a      	movs	r2, #74	; 0x4a
    110a:	68a1      	ldr	r1, [r4, #8]
    110c:	487a      	ldr	r0, [pc, #488]	; (12f8 <run+0x524>)
    110e:	f7ff fffe 	bl	0 <do_test>
    1112:	224b      	movs	r2, #75	; 0x4b
    1114:	68a1      	ldr	r1, [r4, #8]
    1116:	4879      	ldr	r0, [pc, #484]	; (12fc <run+0x528>)
    1118:	f7ff fffe 	bl	0 <do_test>
    111c:	224c      	movs	r2, #76	; 0x4c
    111e:	68a1      	ldr	r1, [r4, #8]
    1120:	4877      	ldr	r0, [pc, #476]	; (1300 <run+0x52c>)
    1122:	f7ff fffe 	bl	0 <do_test>
    1126:	224d      	movs	r2, #77	; 0x4d
    1128:	68a1      	ldr	r1, [r4, #8]
    112a:	4876      	ldr	r0, [pc, #472]	; (1304 <run+0x530>)
    112c:	f7ff fffe 	bl	0 <do_test>
    1130:	224e      	movs	r2, #78	; 0x4e
    1132:	68a1      	ldr	r1, [r4, #8]
    1134:	4874      	ldr	r0, [pc, #464]	; (1308 <run+0x534>)
    1136:	f7ff fffe 	bl	0 <do_test>
    113a:	224f      	movs	r2, #79	; 0x4f
    113c:	68a1      	ldr	r1, [r4, #8]
    113e:	4873      	ldr	r0, [pc, #460]	; (130c <run+0x538>)
    1140:	f7ff fffe 	bl	0 <do_test>
    1144:	4d72      	ldr	r5, [pc, #456]	; (1310 <run+0x53c>)
    1146:	2250      	movs	r2, #80	; 0x50
    1148:	68a1      	ldr	r1, [r4, #8]
    114a:	0028      	movs	r0, r5
    114c:	f7ff fffe 	bl	0 <do_test>
    1150:	2251      	movs	r2, #81	; 0x51
    1152:	68a1      	ldr	r1, [r4, #8]
    1154:	0028      	movs	r0, r5
    1156:	f7ff fffe 	bl	0 <do_test>
    115a:	2252      	movs	r2, #82	; 0x52
    115c:	68a1      	ldr	r1, [r4, #8]
    115e:	486d      	ldr	r0, [pc, #436]	; (1314 <run+0x540>)
    1160:	f7ff fffe 	bl	0 <do_test>
    1164:	2253      	movs	r2, #83	; 0x53
    1166:	68a1      	ldr	r1, [r4, #8]
    1168:	486b      	ldr	r0, [pc, #428]	; (1318 <run+0x544>)
    116a:	f7ff fffe 	bl	0 <do_test>
    116e:	2254      	movs	r2, #84	; 0x54
    1170:	68a1      	ldr	r1, [r4, #8]
    1172:	486a      	ldr	r0, [pc, #424]	; (131c <run+0x548>)
    1174:	f7ff fffe 	bl	0 <do_test>
    1178:	4d69      	ldr	r5, [pc, #420]	; (1320 <run+0x54c>)
    117a:	2255      	movs	r2, #85	; 0x55
    117c:	68a1      	ldr	r1, [r4, #8]
    117e:	0028      	movs	r0, r5
    1180:	f7ff fffe 	bl	0 <do_test>
    1184:	2256      	movs	r2, #86	; 0x56
    1186:	68a1      	ldr	r1, [r4, #8]
    1188:	4866      	ldr	r0, [pc, #408]	; (1324 <run+0x550>)
    118a:	f7ff fffe 	bl	0 <do_test>
    118e:	2257      	movs	r2, #87	; 0x57
    1190:	68a1      	ldr	r1, [r4, #8]
    1192:	0028      	movs	r0, r5
    1194:	f7ff fffe 	bl	0 <do_test>
    1198:	2258      	movs	r2, #88	; 0x58
    119a:	68a1      	ldr	r1, [r4, #8]
    119c:	4862      	ldr	r0, [pc, #392]	; (1328 <run+0x554>)
    119e:	f7ff fffe 	bl	0 <do_test>
    11a2:	2259      	movs	r2, #89	; 0x59
    11a4:	68a1      	ldr	r1, [r4, #8]
    11a6:	4861      	ldr	r0, [pc, #388]	; (132c <run+0x558>)
    11a8:	f7ff fffe 	bl	0 <do_test>
    11ac:	225a      	movs	r2, #90	; 0x5a
    11ae:	6a21      	ldr	r1, [r4, #32]
    11b0:	485f      	ldr	r0, [pc, #380]	; (1330 <run+0x55c>)
    11b2:	f7ff fffe 	bl	0 <do_test>
    11b6:	225b      	movs	r2, #91	; 0x5b
    11b8:	6a21      	ldr	r1, [r4, #32]
    11ba:	e0bb      	b.n	1334 <run+0x560>
    11bc:	00000000 	.word	0x00000000
    11c0:	200226c4 	.word	0x200226c4
    11c4:	20022624 	.word	0x20022624
    11c8:	2002252c 	.word	0x2002252c
    11cc:	200225a0 	.word	0x200225a0
	...
    1334:	483d      	ldr	r0, [pc, #244]	; (f8 <do_test+0xf8>)
    1336:	f7ff fffe 	bl	0 <do_test>
    133a:	225c      	movs	r2, #92	; 0x5c
    133c:	68a1      	ldr	r1, [r4, #8]
    133e:	483c      	ldr	r0, [pc, #240]	; (1430 <run+0x65c>)
    1340:	f7ff fffe 	bl	0 <do_test>
    1344:	225d      	movs	r2, #93	; 0x5d
    1346:	6a21      	ldr	r1, [r4, #32]
    1348:	483a      	ldr	r0, [pc, #232]	; (1434 <run+0x660>)
    134a:	f7ff fffe 	bl	0 <do_test>
    134e:	225e      	movs	r2, #94	; 0x5e
    1350:	6a21      	ldr	r1, [r4, #32]
    1352:	4839      	ldr	r0, [pc, #228]	; (1438 <run+0x664>)
    1354:	f7ff fffe 	bl	0 <do_test>
    1358:	225f      	movs	r2, #95	; 0x5f
    135a:	68a1      	ldr	r1, [r4, #8]
    135c:	4837      	ldr	r0, [pc, #220]	; (143c <run+0x668>)
    135e:	f7ff fffe 	bl	0 <do_test>
    1362:	2260      	movs	r2, #96	; 0x60
    1364:	68a1      	ldr	r1, [r4, #8]
    1366:	4836      	ldr	r0, [pc, #216]	; (1440 <run+0x66c>)
    1368:	f7ff fffe 	bl	0 <do_test>
    136c:	2261      	movs	r2, #97	; 0x61
    136e:	68a1      	ldr	r1, [r4, #8]
    1370:	4834      	ldr	r0, [pc, #208]	; (1444 <run+0x670>)
    1372:	f7ff fffe 	bl	0 <do_test>
    1376:	2262      	movs	r2, #98	; 0x62
    1378:	68a1      	ldr	r1, [r4, #8]
    137a:	4833      	ldr	r0, [pc, #204]	; (1448 <run+0x674>)
    137c:	f7ff fffe 	bl	0 <do_test>
    1380:	2263      	movs	r2, #99	; 0x63
    1382:	6a21      	ldr	r1, [r4, #32]
    1384:	4831      	ldr	r0, [pc, #196]	; (144c <run+0x678>)
    1386:	f7ff fffe 	bl	0 <do_test>
    138a:	2264      	movs	r2, #100	; 0x64
    138c:	6a21      	ldr	r1, [r4, #32]
    138e:	4830      	ldr	r0, [pc, #192]	; (1450 <run+0x67c>)
    1390:	f7ff fffe 	bl	0 <do_test>
    1394:	2265      	movs	r2, #101	; 0x65
    1396:	6a21      	ldr	r1, [r4, #32]
    1398:	482e      	ldr	r0, [pc, #184]	; (1454 <run+0x680>)
    139a:	f7ff fffe 	bl	0 <do_test>
    139e:	2266      	movs	r2, #102	; 0x66
    13a0:	6a21      	ldr	r1, [r4, #32]
    13a2:	482d      	ldr	r0, [pc, #180]	; (1458 <run+0x684>)
    13a4:	f7ff fffe 	bl	0 <do_test>
    13a8:	2267      	movs	r2, #103	; 0x67
    13aa:	6a21      	ldr	r1, [r4, #32]
    13ac:	482b      	ldr	r0, [pc, #172]	; (145c <run+0x688>)
    13ae:	f7ff fffe 	bl	0 <do_test>
    13b2:	2268      	movs	r2, #104	; 0x68
    13b4:	6a21      	ldr	r1, [r4, #32]
    13b6:	482a      	ldr	r0, [pc, #168]	; (1460 <run+0x68c>)
    13b8:	f7ff fffe 	bl	0 <do_test>
    13bc:	2269      	movs	r2, #105	; 0x69
    13be:	68a1      	ldr	r1, [r4, #8]
    13c0:	4828      	ldr	r0, [pc, #160]	; (1464 <run+0x690>)
    13c2:	f7ff fffe 	bl	0 <do_test>
    13c6:	226a      	movs	r2, #106	; 0x6a
    13c8:	68a1      	ldr	r1, [r4, #8]
    13ca:	4827      	ldr	r0, [pc, #156]	; (1468 <run+0x694>)
    13cc:	f7ff fffe 	bl	0 <do_test>
    13d0:	226b      	movs	r2, #107	; 0x6b
    13d2:	68a1      	ldr	r1, [r4, #8]
    13d4:	4825      	ldr	r0, [pc, #148]	; (146c <run+0x698>)
    13d6:	f7ff fffe 	bl	0 <do_test>
    13da:	226c      	movs	r2, #108	; 0x6c
    13dc:	68a1      	ldr	r1, [r4, #8]
    13de:	4824      	ldr	r0, [pc, #144]	; (1470 <run+0x69c>)
    13e0:	f7ff fffe 	bl	0 <do_test>
    13e4:	226d      	movs	r2, #109	; 0x6d
    13e6:	68a1      	ldr	r1, [r4, #8]
    13e8:	4822      	ldr	r0, [pc, #136]	; (1474 <run+0x6a0>)
    13ea:	f7ff fffe 	bl	0 <do_test>
    13ee:	226e      	movs	r2, #110	; 0x6e
    13f0:	68a1      	ldr	r1, [r4, #8]
    13f2:	4821      	ldr	r0, [pc, #132]	; (1478 <run+0x6a4>)
    13f4:	f7ff fffe 	bl	0 <do_test>
    13f8:	226f      	movs	r2, #111	; 0x6f
    13fa:	68a1      	ldr	r1, [r4, #8]
    13fc:	481f      	ldr	r0, [pc, #124]	; (147c <run+0x6a8>)
    13fe:	f7ff fffe 	bl	0 <do_test>
    1402:	2270      	movs	r2, #112	; 0x70
    1404:	68a1      	ldr	r1, [r4, #8]
    1406:	481e      	ldr	r0, [pc, #120]	; (1480 <run+0x6ac>)
    1408:	f7ff fffe 	bl	0 <do_test>
    140c:	2271      	movs	r2, #113	; 0x71
    140e:	68a1      	ldr	r1, [r4, #8]
    1410:	481c      	ldr	r0, [pc, #112]	; (1484 <run+0x6b0>)
    1412:	f7ff fffe 	bl	0 <do_test>
    1416:	2272      	movs	r2, #114	; 0x72
    1418:	68a1      	ldr	r1, [r4, #8]
    141a:	481b      	ldr	r0, [pc, #108]	; (1488 <run+0x6b4>)
    141c:	f7ff fffe 	bl	0 <do_test>
    1420:	68a1      	ldr	r1, [r4, #8]
    1422:	2273      	movs	r2, #115	; 0x73
    1424:	4819      	ldr	r0, [pc, #100]	; (148c <run+0x6b8>)
    1426:	f7ff fffe 	bl	0 <do_test>
    142a:	bd30      	pop	{r4, r5, pc}
	...

Disassembly of section .bss:

00000000 <guard variable for run::serial2_config>:
	...

00000008 <run::serial2_config>:
   8:	0000 0000                                   ....

0000000c <guard variable for run::timer1_prescale>:
	...

00000014 <run::timer1_prescale>:
  14:	0000 0000                                   ....

00000018 <guard variable for run::gpio1_words_3>:
	...

00000020 <run::gpio1_words_3>:
  20:	0000 0000                                   ....

00000024 <guard variable for run::gpio1_set>:
	...

0000002c <run::gpio1_set>:
  2c:	0000 0000                                   ....

Disassembly of section .rodata:

00000000 <app_config::TIMER_PRESCALER_SHIFT-0x8>:
   0:	00000006 	.word	0x00000006
   4:	00000002 	.word	0x00000002

00000008 <app_config::TIMER_PRESCALER_SHIFT>:
   8:	3e000000 00000019 3e000000 00000019     ...>.......>....
  18:	3e000000 00000019                       ...>....
